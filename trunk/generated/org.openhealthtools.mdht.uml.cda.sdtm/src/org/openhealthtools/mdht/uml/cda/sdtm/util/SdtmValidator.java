/**
 */
package org.openhealthtools.mdht.uml.cda.sdtm.util;

import java.util.Map;

import org.eclipse.emf.common.util.DiagnosticChain;
import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.EObjectValidator;

import org.openhealthtools.mdht.uml.cda.sdtm.*;

import org.openhealthtools.mdht.uml.cda.util.CDAValidator;

/**
 * <!-- begin-user-doc -->
 * The <b>Validator</b> for the model.
 * <!-- end-user-doc -->
 * @see org.openhealthtools.mdht.uml.cda.sdtm.SdtmPackage
 * @generated
 */
public class SdtmValidator extends EObjectValidator {
	/**
	 * The cached model package
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final SdtmValidator INSTANCE = new SdtmValidator();

	/**
	 * A constant for the {@link org.eclipse.emf.common.util.Diagnostic#getSource() source} of diagnostic {@link org.eclipse.emf.common.util.Diagnostic#getCode() codes} from this package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.emf.common.util.Diagnostic#getSource()
	 * @see org.eclipse.emf.common.util.Diagnostic#getCode()
	 * @generated
	 */
	public static final String DIAGNOSTIC_SOURCE = "org.openhealthtools.mdht.uml.cda.sdtm";

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Template Id' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_TEMPLATE_ID = 1;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Class Code' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CLASS_CODE = 2;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Mood Code' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_MOOD_CODE = 3;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Code P' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CODE_P = 4;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Code' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CODE = 5;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Confidentiality Code P' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CONFIDENTIALITY_CODE_P = 6;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Confidentiality Code' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CONFIDENTIALITY_CODE = 7;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Effective Time' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_EFFECTIVE_TIME = 8;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Id' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_ID = 9;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Language Code' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_LANGUAGE_CODE = 10;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Realm Code' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_REALM_CODE = 11;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Set Id' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_SET_ID = 12;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Version Number' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_VERSION_NUMBER = 13;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Study Relationship' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_STUDY_RELATIONSHIP = 14;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Subject Participation' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_SUBJECT_PARTICIPATION = 15;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Author' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_AUTHOR = 16;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Custodian' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CUSTODIAN = 17;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Human Clinical Subject Data Document Section' of 'Subject Data Human Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION = 18;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Template Id' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_TEMPLATE_ID = 19;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Class Code' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_CLASS_CODE = 20;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Mood Code' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_MOOD_CODE = 21;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Code' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_CODE = 22;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Code P' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_CODE_P = 23;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Text' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_TEXT = 24;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Human Clinical Subject Demographics' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS = 25;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Human Clinical Visit' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_HUMAN_CLINICAL_VISIT = 26;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Exposure Association' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_EXPOSURE_ASSOCIATION = 27;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Subject Element' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_SUBJECT_ELEMENT = 28;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Disposition' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_DISPOSITION = 29;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Medical History' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_MEDICAL_HISTORY = 30;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Protocol Deviation' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_PROTOCOL_DEVIATION = 31;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Clinical Event' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_CLINICAL_EVENT = 32;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Subject Characteristic' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_SUBJECT_CHARACTERISTIC = 33;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Study Subject Event' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_STUDY_SUBJECT_EVENT = 34;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Study Subject Finding' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_STUDY_SUBJECT_FINDING = 35;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Study Subject Intervention' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_STUDY_SUBJECT_INTERVENTION = 36;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Comment' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_COMMENT = 37;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Adverse Event' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_ADVERSE_EVENT = 38;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Inclusionor Exclusion Criteria Not Met' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET = 39;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Section Finding About' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION_FINDING_ABOUT = 40;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Sectionexposure Association Type Code' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTIONEXPOSURE_ASSOCIATION_TYPE_CODE = 41;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Sectionexposure Association Exposure Substance Administration' of 'Human Clinical Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTIONEXPOSURE_ASSOCIATION_EXPOSURE_SUBSTANCE_ADMINISTRATION = 42;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Template Id' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_TEMPLATE_ID = 43;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Mood Code' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_MOOD_CODE = 44;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Code P' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_CODE_P = 45;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Code' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_CODE = 46;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Data Collection' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_DATA_COLLECTION = 47;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Study Arm' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_STUDY_ARM = 48;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Participant' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_PARTICIPANT = 49;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Comment' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_COMMENT = 50;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Domain Assignment' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_DOMAIN_ASSIGNMENT = 51;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Related Record' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_RELATED_RECORD = 52;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Supplemental Value' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_SUPPLEMENTAL_VALUE = 53;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Reference Period' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_REFERENCE_PERIOD = 54;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Finding About' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_FINDING_ABOUT = 55;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Class Code' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CLASS_CODE = 56;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Mood Code' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_MOOD_CODE = 57;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Code P' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CODE_P = 58;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Code' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CODE = 59;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Value' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_VALUE = 60;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Type Code' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_TYPE_CODE = 61;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE = 62;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Location Participation Study Site Class Code' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_LOCATION_PARTICIPATION_STUDY_SITE_CLASS_CODE = 63;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Location Participation Study Site Addr' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_LOCATION_PARTICIPATION_STUDY_SITE_ADDR = 64;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Location Participation Type Code' of 'Human Clinical Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_LOCATION_PARTICIPATION_TYPE_CODE = 65;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Template Id' of 'Data Collection'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_COLLECTION__DATA_COLLECTION_TEMPLATE_ID = 66;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Class Code' of 'Data Collection'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_COLLECTION__DATA_COLLECTION_CLASS_CODE = 67;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Mood Code' of 'Data Collection'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_COLLECTION__DATA_COLLECTION_MOOD_CODE = 68;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Code P' of 'Data Collection'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_COLLECTION__DATA_COLLECTION_CODE_P = 69;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Code' of 'Data Collection'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_COLLECTION__DATA_COLLECTION_CODE = 70;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Code VS' of 'Data Collection'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_COLLECTION__DATA_COLLECTION_CODE_VS = 71;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Effective Time' of 'Data Collection'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_COLLECTION__DATA_COLLECTION_EFFECTIVE_TIME = 72;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Negation Ind' of 'Data Collection'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_COLLECTION__DATA_COLLECTION_NEGATION_IND = 73;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Event Study Day' of 'Data Collection'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DATA_COLLECTION__DATA_COLLECTION_EVENT_STUDY_DAY = 74;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Template Id' of 'Event Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_TEMPLATE_ID = 75;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Class Code' of 'Event Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_CLASS_CODE = 76;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Mood Code' of 'Event Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_MOOD_CODE = 77;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Code P' of 'Event Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_CODE_P = 78;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Code' of 'Event Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_CODE = 79;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Value' of 'Event Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_VALUE = 80;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Template Id' of 'Study Arm'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_ARM__STUDY_ARM_TEMPLATE_ID = 81;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Class Code' of 'Study Arm'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_ARM__STUDY_ARM_CLASS_CODE = 82;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Mood Code' of 'Study Arm'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_ARM__STUDY_ARM_MOOD_CODE = 83;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Code P' of 'Study Arm'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_ARM__STUDY_ARM_CODE_P = 84;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Code' of 'Study Arm'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_ARM__STUDY_ARM_CODE = 85;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Text' of 'Study Arm'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_ARM__STUDY_ARM_TEXT = 86;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Effective Time' of 'Study Arm'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_ARM__STUDY_ARM_EFFECTIVE_TIME = 87;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Template Id' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_TEMPLATE_ID = 88;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Class Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_CLASS_CODE = 89;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Mood Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_MOOD_CODE = 90;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Id' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_ID = 91;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Code P' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_CODE_P = 92;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Code' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_CODE = 93;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Effective Time' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_EFFECTIVE_TIME = 94;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Value' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_VALUE = 95;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Study Finding Evaluator' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_STUDY_FINDING_EVALUATOR = 96;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Comment Reference Association' of 'Comment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int COMMENT__COMMENT_REFERENCE_ASSOCIATION = 97;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Domain Assignment Template Id' of 'Domain Assignment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOMAIN_ASSIGNMENT__DOMAIN_ASSIGNMENT_TEMPLATE_ID = 98;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Domain Assignment Mood Code' of 'Domain Assignment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOMAIN_ASSIGNMENT__DOMAIN_ASSIGNMENT_MOOD_CODE = 99;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Domain Assignment Class Code' of 'Domain Assignment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOMAIN_ASSIGNMENT__DOMAIN_ASSIGNMENT_CLASS_CODE = 100;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Domain Assignment Code P' of 'Domain Assignment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOMAIN_ASSIGNMENT__DOMAIN_ASSIGNMENT_CODE_P = 101;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Domain Assignment Code' of 'Domain Assignment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOMAIN_ASSIGNMENT__DOMAIN_ASSIGNMENT_CODE = 102;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Domain Assignment Value' of 'Domain Assignment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOMAIN_ASSIGNMENT__DOMAIN_ASSIGNMENT_VALUE = 103;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Record Template Id' of 'Related Record'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RELATED_RECORD__RELATED_RECORD_TEMPLATE_ID = 104;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Record Class Code' of 'Related Record'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RELATED_RECORD__RELATED_RECORD_CLASS_CODE = 105;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Record Mood Code' of 'Related Record'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RELATED_RECORD__RELATED_RECORD_MOOD_CODE = 106;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Record Id' of 'Related Record'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RELATED_RECORD__RELATED_RECORD_ID = 107;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Record Code P' of 'Related Record'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RELATED_RECORD__RELATED_RECORD_CODE_P = 108;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Related Record Code' of 'Related Record'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RELATED_RECORD__RELATED_RECORD_CODE = 109;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Supplemental Value Template Id' of 'Supplemental Value'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPLEMENTAL_VALUE__SUPPLEMENTAL_VALUE_TEMPLATE_ID = 110;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Supplemental Value Class Code' of 'Supplemental Value'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPLEMENTAL_VALUE__SUPPLEMENTAL_VALUE_CLASS_CODE = 111;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Supplemental Value Mood Code' of 'Supplemental Value'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPLEMENTAL_VALUE__SUPPLEMENTAL_VALUE_MOOD_CODE = 112;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Supplemental Value Code P' of 'Supplemental Value'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPLEMENTAL_VALUE__SUPPLEMENTAL_VALUE_CODE_P = 113;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Supplemental Value Code' of 'Supplemental Value'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPLEMENTAL_VALUE__SUPPLEMENTAL_VALUE_CODE = 114;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Supplemental Value Value' of 'Supplemental Value'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPLEMENTAL_VALUE__SUPPLEMENTAL_VALUE_VALUE = 115;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Supplemental Value Origen Association' of 'Supplemental Value'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPLEMENTAL_VALUE__SUPPLEMENTAL_VALUE_ORIGEN_ASSOCIATION = 116;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Supplemental Value Study Finding Evaluator' of 'Supplemental Value'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUPPLEMENTAL_VALUE__SUPPLEMENTAL_VALUE_STUDY_FINDING_EVALUATOR = 117;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Period Template Id' of 'Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_PERIOD__REFERENCE_PERIOD_TEMPLATE_ID = 118;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Period Class Code' of 'Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_PERIOD__REFERENCE_PERIOD_CLASS_CODE = 119;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Period Mood Code' of 'Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_PERIOD__REFERENCE_PERIOD_MOOD_CODE = 120;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Period Code P' of 'Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_PERIOD__REFERENCE_PERIOD_CODE_P = 121;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Period Code' of 'Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_PERIOD__REFERENCE_PERIOD_CODE = 122;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Period Effective Time' of 'Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_PERIOD__REFERENCE_PERIOD_EFFECTIVE_TIME = 123;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Template Id' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_TEMPLATE_ID = 124;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Class Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_CLASS_CODE = 125;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Mood Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_MOOD_CODE = 126;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Effective Time' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_EFFECTIVE_TIME = 127;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Id' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_ID = 128;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Status Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_STATUS_CODE = 129;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Code P' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_CODE_P = 130;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_CODE = 131;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Value' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_VALUE = 132;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Target Site Code P' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_TARGET_SITE_CODE_P = 133;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Target Site Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_TARGET_SITE_CODE = 134;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Interpretation Code P' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_INTERPRETATION_CODE_P = 135;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Interpretation Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_INTERPRETATION_CODE = 136;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Group Identifier' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_GROUP_IDENTIFIER = 137;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Finding Observation Object Association' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_FINDING_OBSERVATION_OBJECT_ASSOCIATION = 138;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Non Performance Reason' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_NON_PERFORMANCE_REASON = 139;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Data Collection' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_DATA_COLLECTION = 140;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Study Finding Evaluator' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_STUDY_FINDING_EVALUATOR = 141;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Category' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_CATEGORY = 142;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Sub Category' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_SUB_CATEGORY = 143;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Domain Assignment' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUT_DOMAIN_ASSIGNMENT = 144;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Class Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CLASS_CODE = 145;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Code P' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CODE_P = 146;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CODE = 147;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Mood Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_MOOD_CODE = 148;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Value' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_VALUE = 149;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Value P' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_VALUE_P = 150;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Association Type Code' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATION_TYPE_CODE = 151;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Association Observation' of 'Finding About'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATION_OBSERVATION = 152;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Template Id' of 'Group Identifier'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_TEMPLATE_ID = 153;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Class Code' of 'Group Identifier'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_CLASS_CODE = 154;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Mood Code' of 'Group Identifier'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_MOOD_CODE = 155;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Id' of 'Group Identifier'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_ID = 156;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Code P' of 'Group Identifier'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_CODE_P = 157;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Code' of 'Group Identifier'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_CODE = 158;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Template Id' of 'Non Performance Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_TEMPLATE_ID = 159;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Class Code' of 'Non Performance Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_CLASS_CODE = 160;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Code P' of 'Non Performance Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_CODE_P = 161;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Code' of 'Non Performance Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_CODE = 162;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Mood Code' of 'Non Performance Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_MOOD_CODE = 163;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Value' of 'Non Performance Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_VALUE = 164;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Value P' of 'Non Performance Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_VALUE_P = 165;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Category Template Id' of 'Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CATEGORY__CATEGORY_TEMPLATE_ID = 166;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Category Class Code' of 'Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CATEGORY__CATEGORY_CLASS_CODE = 167;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Category Mood Code' of 'Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CATEGORY__CATEGORY_MOOD_CODE = 168;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Category Code P' of 'Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CATEGORY__CATEGORY_CODE_P = 169;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Category Code' of 'Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CATEGORY__CATEGORY_CODE = 170;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Category Value' of 'Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CATEGORY__CATEGORY_VALUE = 171;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Sub Category Template Id' of 'Sub Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUB_CATEGORY__SUB_CATEGORY_TEMPLATE_ID = 172;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Sub Category Class Code' of 'Sub Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUB_CATEGORY__SUB_CATEGORY_CLASS_CODE = 173;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Sub Category Mood Code' of 'Sub Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUB_CATEGORY__SUB_CATEGORY_MOOD_CODE = 174;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Sub Category Code P' of 'Sub Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUB_CATEGORY__SUB_CATEGORY_CODE_P = 175;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Sub Category Code' of 'Sub Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUB_CATEGORY__SUB_CATEGORY_CODE = 176;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Sub Category Value' of 'Sub Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUB_CATEGORY__SUB_CATEGORY_VALUE = 177;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Template Id' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_TEMPLATE_ID = 178;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Class Code' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_CLASS_CODE = 179;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Mood Code' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_MOOD_CODE = 180;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Code' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_CODE = 181;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Code P' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_CODE_P = 182;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Id' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_ID = 183;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Text' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_TEXT = 184;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Effective Time' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_EFFECTIVE_TIME = 185;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Human Clinical Vital Sign' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_HUMAN_CLINICAL_VITAL_SIGN = 186;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Planned Study Day' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_PLANNED_STUDY_DAY = 187;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit ECG Test Result' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_ECG_TEST_RESULT = 188;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Physical Examination' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_PHYSICAL_EXAMINATION = 189;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Microbiology Specimen' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_MICROBIOLOGY_SPECIMEN = 190;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Microbiology Susceptibility' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_MICROBIOLOGY_SUSCEPTIBILITY = 191;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Pharmacokinetic Concentration Finding' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_PHARMACOKINETIC_CONCENTRATION_FINDING = 192;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Finding About' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_FINDING_ABOUT = 193;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Drug Accountability' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_DRUG_ACCOUNTABILITY = 194;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Study Day Period' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_STUDY_DAY_PERIOD = 195;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Comment' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_COMMENT = 196;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Domain Assignment' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_DOMAIN_ASSIGNMENT = 197;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Related Record' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_RELATED_RECORD = 198;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Supplemental Value' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_SUPPLEMENTAL_VALUE = 199;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Human Clinical Laboratory Test Result' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_HUMAN_CLINICAL_LABORATORY_TEST_RESULT = 200;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Questionnaire Finding' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_QUESTIONNAIRE_FINDING = 201;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Pharmacokinetic Parameter Finding' of 'Visit'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VISIT__VISIT_PHARMACOKINETIC_PARAMETER_FINDING = 202;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Template Id' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_TEMPLATE_ID = 203;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Class Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_CLASS_CODE = 204;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Mood Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_MOOD_CODE = 205;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Id' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_ID = 206;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_CODE = 207;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Status Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_STATUS_CODE = 208;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Effective Time' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_EFFECTIVE_TIME = 209;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Value' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_VALUE = 210;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Interpretation Code P' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_INTERPRETATION_CODE_P = 211;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Interpretation Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_INTERPRETATION_CODE = 212;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Target Site Code P' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_TARGET_SITE_CODE_P = 213;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Target Site Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_TARGET_SITE_CODE = 214;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Event Study Day' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_EVENT_STUDY_DAY = 215;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Timing Reference' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_TIMING_REFERENCE = 216;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Non Performance Reason' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_NON_PERFORMANCE_REASON = 217;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Consciousness State' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_CONSCIOUSNESS_STATE = 218;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Planned Study Day' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_PLANNED_STUDY_DAY = 219;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Study Day Period' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_STUDY_DAY_PERIOD = 220;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Exclusion Reason' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_EXCLUSION_REASON = 221;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Group Identifier' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_GROUP_IDENTIFIER = 222;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Comment' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_COMMENT = 223;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Domain Assignment' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_DOMAIN_ASSIGNMENT = 224;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Related Record' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_RELATED_RECORD = 225;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Supplemental Value' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_SUPPLEMENTAL_VALUE = 226;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Category' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_CATEGORY = 227;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Sub Category' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_SUB_CATEGORY = 228;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Positionof Subject' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_POSITIONOF_SUBJECT = 229;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Finding About' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGN_FINDING_ABOUT = 230;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Consciousnessconsciousness State Class Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_CLASS_CODE = 231;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Consciousnessconsciousness State Code P' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_CODE_P = 232;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Consciousnessconsciousness State Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_CODE = 233;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Consciousnessconsciousness State Mood Code' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_MOOD_CODE = 234;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Consciousnessconsciousness State Value' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_VALUE = 235;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Consciousnessconsciousness State Value P' of 'Vital Sign'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_VALUE_P = 236;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Template Id' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_TEMPLATE_ID = 237;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Class Code' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_CLASS_CODE = 238;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Mood Code' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_MOOD_CODE = 239;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Id' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_ID = 240;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Code P' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_CODE_P = 241;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Code' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_CODE = 242;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Effective Time' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_EFFECTIVE_TIME = 243;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Text' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_TEXT = 244;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION = 245;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point Class Code' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT_CLASS_CODE = 246;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point Mood Code' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT_MOOD_CODE = 247;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point Code P' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT_CODE_P = 248;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point Code' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT_CODE = 249;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point Effective Time' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT_EFFECTIVE_TIME = 250;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Type Code' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_TYPE_CODE = 251;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point' of 'Timing Reference'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT = 252;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Template Id' of 'Planned Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_TEMPLATE_ID = 253;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Class Code' of 'Planned Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_CLASS_CODE = 254;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Mood Code' of 'Planned Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_MOOD_CODE = 255;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Code P' of 'Planned Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_CODE_P = 256;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Code' of 'Planned Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_CODE = 257;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Value' of 'Planned Study Day'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_VALUE = 258;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Template Id' of 'Study Day Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_TEMPLATE_ID = 259;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Class Code' of 'Study Day Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_CLASS_CODE = 260;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Mood Code' of 'Study Day Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_MOOD_CODE = 261;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Code P' of 'Study Day Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_CODE_P = 262;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Code' of 'Study Day Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_CODE = 263;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Value' of 'Study Day Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_VALUE = 264;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Exclusion Reason Template Id' of 'Exclusion Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXCLUSION_REASON__EXCLUSION_REASON_TEMPLATE_ID = 265;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Exclusion Reason Mood Code' of 'Exclusion Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXCLUSION_REASON__EXCLUSION_REASON_MOOD_CODE = 266;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Exclusion Reason Code P' of 'Exclusion Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXCLUSION_REASON__EXCLUSION_REASON_CODE_P = 267;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Exclusion Reason Code' of 'Exclusion Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXCLUSION_REASON__EXCLUSION_REASON_CODE = 268;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Exclusion Reason Value' of 'Exclusion Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXCLUSION_REASON__EXCLUSION_REASON_VALUE = 269;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Exclusion Reason Value P' of 'Exclusion Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EXCLUSION_REASON__EXCLUSION_REASON_VALUE_P = 270;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Positionof Subject Template Id' of 'Positionof Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POSITIONOF_SUBJECT__POSITIONOF_SUBJECT_TEMPLATE_ID = 271;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Positionof Subject Class Code' of 'Positionof Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POSITIONOF_SUBJECT__POSITIONOF_SUBJECT_CLASS_CODE = 272;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Positionof Subject Mood Code' of 'Positionof Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POSITIONOF_SUBJECT__POSITIONOF_SUBJECT_MOOD_CODE = 273;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Positionof Subject Code P' of 'Positionof Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POSITIONOF_SUBJECT__POSITIONOF_SUBJECT_CODE_P = 274;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Positionof Subject Code' of 'Positionof Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POSITIONOF_SUBJECT__POSITIONOF_SUBJECT_CODE = 275;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Positionof Subject Value' of 'Positionof Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POSITIONOF_SUBJECT__POSITIONOF_SUBJECT_VALUE = 276;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Positionof Subject Value P' of 'Positionof Subject'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int POSITIONOF_SUBJECT__POSITIONOF_SUBJECT_VALUE_P = 277;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Template Id' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_TEMPLATE_ID = 278;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Class Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_CLASS_CODE = 279;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Mood Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_MOOD_CODE = 280;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Id' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_ID = 281;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Code P' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_CODE_P = 282;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_CODE = 283;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Text' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_TEXT = 284;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Status Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_STATUS_CODE = 285;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Effective Time' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_EFFECTIVE_TIME = 286;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Value' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_VALUE = 287;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Method Code P' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_METHOD_CODE_P = 288;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Method Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_METHOD_CODE = 289;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Interpretation Code P' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_INTERPRETATION_CODE_P = 290;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Interpretation Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_INTERPRETATION_CODE = 291;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Group Identifier' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_GROUP_IDENTIFIER = 292;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Non Performance Reason' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_NON_PERFORMANCE_REASON = 293;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Lead Location Association' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_LEAD_LOCATION_ASSOCIATION = 294;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Timing Reference' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_TIMING_REFERENCE = 295;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Study Test Performer' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_STUDY_TEST_PERFORMER = 296;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Study Finding Evaluator' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_STUDY_FINDING_EVALUATOR = 297;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Associated Consciousness' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_ASSOCIATED_CONSCIOUSNESS = 298;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Planned Study Day' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_PLANNED_STUDY_DAY = 299;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Study Day Period' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_STUDY_DAY_PERIOD = 300;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Comment' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_COMMENT = 301;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Domain Assignment' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_DOMAIN_ASSIGNMENT = 302;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Related Record' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_RELATED_RECORD = 303;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Supplemental Value' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_SUPPLEMENTAL_VALUE = 304;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Category' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_CATEGORY = 305;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Sub Category' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_SUB_CATEGORY = 306;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Positionof Subject' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_POSITIONOF_SUBJECT = 307;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Finding About' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_FINDING_ABOUT = 308;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultlead Location Associationecg Lead Location Class Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTLEAD_LOCATION_ASSOCIATIONECG_LEAD_LOCATION_CLASS_CODE = 309;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultlead Location Associationecg Lead Location Code P' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTLEAD_LOCATION_ASSOCIATIONECG_LEAD_LOCATION_CODE_P = 310;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultlead Location Associationecg Lead Location Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTLEAD_LOCATION_ASSOCIATIONECG_LEAD_LOCATION_CODE = 311;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultlead Location Associationecg Lead Location Mood Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTLEAD_LOCATION_ASSOCIATIONECG_LEAD_LOCATION_MOOD_CODE = 312;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultlead Location Associationecg Lead Location Value' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTLEAD_LOCATION_ASSOCIATIONECG_LEAD_LOCATION_VALUE = 313;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultlead Location Associationecg Lead Location Value P' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTLEAD_LOCATION_ASSOCIATIONECG_LEAD_LOCATION_VALUE_P = 314;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultlead Location Association Type Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTLEAD_LOCATION_ASSOCIATION_TYPE_CODE = 315;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultlead Location Association Ecg Lead Location' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTLEAD_LOCATION_ASSOCIATION_ECG_LEAD_LOCATION = 316;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultassociated Consciousnessconsciousness State Class Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_CLASS_CODE = 317;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultassociated Consciousnessconsciousness State Code P' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_CODE_P = 318;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultassociated Consciousnessconsciousness State Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_CODE = 319;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultassociated Consciousnessconsciousness State Mood Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_MOOD_CODE = 320;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultassociated Consciousnessconsciousness State Value' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_VALUE = 321;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultassociated Consciousnessconsciousness State Value P' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTASSOCIATED_CONSCIOUSNESSCONSCIOUSNESS_STATE_VALUE_P = 322;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultassociated Consciousness Type Code' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTASSOCIATED_CONSCIOUSNESS_TYPE_CODE = 323;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultassociated Consciousness Consciousness State' of 'ECG Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ECG_TEST_RESULT__ECG_TEST_RESULTASSOCIATED_CONSCIOUSNESS_CONSCIOUSNESS_STATE = 324;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Template Id' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_TEMPLATE_ID = 325;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Class Code' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_CLASS_CODE = 326;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Mood Code' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_MOOD_CODE = 327;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Id' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_ID = 328;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Code P' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_CODE_P = 329;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Code' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_CODE = 330;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Status Code' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_STATUS_CODE = 331;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Value' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_VALUE = 332;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Method Code P' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_METHOD_CODE_P = 333;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Method Code' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_METHOD_CODE = 334;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Target Site Code P' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_TARGET_SITE_CODE_P = 335;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Target Site Code' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_TARGET_SITE_CODE = 336;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Group Identifier' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_GROUP_IDENTIFIER = 337;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Body Systemor Organ Class' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_BODY_SYSTEMOR_ORGAN_CLASS = 338;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Non Performance Reason' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_NON_PERFORMANCE_REASON = 339;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Study Finding Evaluator' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_STUDY_FINDING_EVALUATOR = 340;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Data Collection' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_DATA_COLLECTION = 341;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Comment' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_COMMENT = 342;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Domain Assignment' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_DOMAIN_ASSIGNMENT = 343;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Related Record' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_RELATED_RECORD = 344;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Supplemental Value' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_SUPPLEMENTAL_VALUE = 345;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Category' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_CATEGORY = 346;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Sub Category' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_SUB_CATEGORY = 347;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Finding About' of 'Physical Examination Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_FINDING_ABOUT = 348;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Template Id' of 'Body Systemor Organ Class'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_TEMPLATE_ID = 349;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Class Code' of 'Body Systemor Organ Class'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_CLASS_CODE = 350;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Mood Code' of 'Body Systemor Organ Class'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_MOOD_CODE = 351;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Code P' of 'Body Systemor Organ Class'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_CODE_P = 352;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Code' of 'Body Systemor Organ Class'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_CODE = 353;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Value' of 'Body Systemor Organ Class'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_VALUE = 354;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Value P' of 'Body Systemor Organ Class'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_VALUE_P = 355;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Template Id' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_TEMPLATE_ID = 356;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Class Code' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_CLASS_CODE = 357;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Mood Code' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_MOOD_CODE = 358;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Id' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_ID = 359;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Code P' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_CODE_P = 360;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Code' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_CODE = 361;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Status Code' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_STATUS_CODE = 362;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Value' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_VALUE = 363;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Method Code P' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_METHOD_CODE_P = 364;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Method Code' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_METHOD_CODE = 365;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Interpretation Code P' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_INTERPRETATION_CODE_P = 366;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Interpretation Code' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_INTERPRETATION_CODE = 367;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Group Identifier' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_GROUP_IDENTIFIER = 368;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Study Test Performer' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_STUDY_TEST_PERFORMER = 369;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Non Performance Reason' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_NON_PERFORMANCE_REASON = 370;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Specimen Information' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_SPECIMEN_INFORMATION = 371;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Comment' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_COMMENT = 372;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Domain Assignment' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_DOMAIN_ASSIGNMENT = 373;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Related Record' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_RELATED_RECORD = 374;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Supplemental Value' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_SUPPLEMENTAL_VALUE = 375;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Category' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_CATEGORY = 376;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Sub Category' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_SUB_CATEGORY = 377;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Result Category' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_RESULT_CATEGORY = 378;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Finding About' of 'Microbiology Specimen Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_FINDING_ABOUT = 379;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Template Id' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_TEMPLATE_ID = 380;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Class Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_CLASS_CODE = 381;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Mood Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_MOOD_CODE = 382;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_CODE = 383;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Code P' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_CODE_P = 384;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Effective Time' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_EFFECTIVE_TIME = 385;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Target Site Code P' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_TARGET_SITE_CODE_P = 386;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Target Site Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_TARGET_SITE_CODE = 387;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Participating Specimen' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_PARTICIPATING_SPECIMEN = 388;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Event Study Day' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_EVENT_STUDY_DAY = 389;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Timing Reference' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_TIMING_REFERENCE = 390;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Portion Association' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_PORTION_ASSOCIATION = 391;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Usability Association' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_USABILITY_ASSOCIATION = 392;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Condition Association' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_CONDITION_ASSOCIATION = 393;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimenspecimen Entity Class Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMENSPECIMEN_ENTITY_CLASS_CODE = 394;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimenspecimen Entity Determiner Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMENSPECIMEN_ENTITY_DETERMINER_CODE = 395;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimenspecimen Entity Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMENSPECIMEN_ENTITY_CODE = 396;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimenspecimen Entity Code P' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMENSPECIMEN_ENTITY_CODE_P = 397;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimen Class Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMEN_CLASS_CODE = 398;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimen Id' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMEN_ID = 399;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimen Template Id' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMEN_TEMPLATE_ID = 400;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimen Type Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMEN_TYPE_CODE = 401;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimen Role Of Specimen' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMEN_ROLE_OF_SPECIMEN = 402;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationportion Associationportion Or Totality Mood Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPORTION_ASSOCIATIONPORTION_OR_TOTALITY_MOOD_CODE = 403;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationportion Associationportion Or Totality Code P' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPORTION_ASSOCIATIONPORTION_OR_TOTALITY_CODE_P = 404;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationportion Associationportion Or Totality Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPORTION_ASSOCIATIONPORTION_OR_TOTALITY_CODE = 405;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationportion Associationportion Or Totality Value' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPORTION_ASSOCIATIONPORTION_OR_TOTALITY_VALUE = 406;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationportion Associationportion Or Totality Value P' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPORTION_ASSOCIATIONPORTION_OR_TOTALITY_VALUE_P = 407;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationportion Association Type Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPORTION_ASSOCIATION_TYPE_CODE = 408;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationportion Association Specimen Condition' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPORTION_ASSOCIATION_SPECIMEN_CONDITION = 409;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationusability Associationspecimen Usability Mood Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONUSABILITY_ASSOCIATIONSPECIMEN_USABILITY_MOOD_CODE = 410;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationusability Associationspecimen Usability Code P' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONUSABILITY_ASSOCIATIONSPECIMEN_USABILITY_CODE_P = 411;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationusability Associationspecimen Usability Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONUSABILITY_ASSOCIATIONSPECIMEN_USABILITY_CODE = 412;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationusability Associationspecimen Usability Value' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONUSABILITY_ASSOCIATIONSPECIMEN_USABILITY_VALUE = 413;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationusability Association Type Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONUSABILITY_ASSOCIATION_TYPE_CODE = 414;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationusability Association Specimen Usability' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONUSABILITY_ASSOCIATION_SPECIMEN_USABILITY = 415;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Mood Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_MOOD_CODE = 416;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Code P' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_CODE_P = 417;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_CODE = 418;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Value' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_VALUE = 419;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Value P' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_VALUE_P = 420;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Association Type Code' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATION_TYPE_CODE = 421;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Association Specimen Condition' of 'Specimen Information'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATION_SPECIMEN_CONDITION = 422;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Category Template Id' of 'Result Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_CATEGORY__RESULT_CATEGORY_TEMPLATE_ID = 423;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Category Class Code' of 'Result Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_CATEGORY__RESULT_CATEGORY_CLASS_CODE = 424;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Category Mood Code' of 'Result Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_CATEGORY__RESULT_CATEGORY_MOOD_CODE = 425;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Category Code P' of 'Result Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_CATEGORY__RESULT_CATEGORY_CODE_P = 426;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Category Code' of 'Result Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_CATEGORY__RESULT_CATEGORY_CODE = 427;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Result Category Value' of 'Result Category'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int RESULT_CATEGORY__RESULT_CATEGORY_VALUE = 428;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Template Id' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_TEMPLATE_ID = 429;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Class Code' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_CLASS_CODE = 430;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Mood Code' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_MOOD_CODE = 431;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Id' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_ID = 432;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Code P' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_CODE_P = 433;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Code' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_CODE = 434;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Status Code' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_STATUS_CODE = 435;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Effective Time' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_EFFECTIVE_TIME = 436;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Value' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_VALUE = 437;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Method Code P' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_METHOD_CODE_P = 438;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Method Code' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_METHOD_CODE = 439;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Interpretation Code P' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_INTERPRETATION_CODE_P = 440;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Interpretation Code' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_INTERPRETATION_CODE = 441;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Event Study Day' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_EVENT_STUDY_DAY = 442;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Timing Reference' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_TIMING_REFERENCE = 443;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Group Identifier' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_GROUP_IDENTIFIER = 444;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Study Test Performer' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_STUDY_TEST_PERFORMER = 445;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Non Performance Reason' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_NON_PERFORMANCE_REASON = 446;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Comment' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_COMMENT = 447;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Domain Assignment' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_DOMAIN_ASSIGNMENT = 448;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Related Record' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_RELATED_RECORD = 449;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Supplemental Value' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_SUPPLEMENTAL_VALUE = 450;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Category' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_CATEGORY = 451;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Sub Category' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_SUB_CATEGORY = 452;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Result Category' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_RESULT_CATEGORY = 453;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Finding About' of 'Microbiology Susceptibility'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_FINDING_ABOUT = 454;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Template Id' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_TEMPLATE_ID = 455;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Class Code' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_CLASS_CODE = 456;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Mood Code' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_MOOD_CODE = 457;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Id' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_ID = 458;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Code P' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_CODE_P = 459;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Code' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_CODE = 460;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Status Code' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_STATUS_CODE = 461;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Value' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_VALUE = 462;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Method Code P' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_METHOD_CODE_P = 463;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Method Code' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_METHOD_CODE = 464;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Interpretation Code P' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_INTERPRETATION_CODE_P = 465;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Interpretation Code' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_INTERPRETATION_CODE = 466;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Group Identifier' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_GROUP_IDENTIFIER = 467;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Specimen Information' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_SPECIMEN_INFORMATION = 468;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Non Performance Reason' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_NON_PERFORMANCE_REASON = 469;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Study Test Performer' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_STUDY_TEST_PERFORMER = 470;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Planned Study Day' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_PLANNED_STUDY_DAY = 471;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Exclusion Reason' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_EXCLUSION_REASON = 472;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Comment' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_COMMENT = 473;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Domain Assignment' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_DOMAIN_ASSIGNMENT = 474;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Related Record' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_RELATED_RECORD = 475;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Supplemental Value' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_SUPPLEMENTAL_VALUE = 476;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Category' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_CATEGORY = 477;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Sub Category' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_SUB_CATEGORY = 478;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Fasting Status' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_FASTING_STATUS = 479;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Assay Quantitation' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_ASSAY_QUANTITATION = 480;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Finding About' of 'Pharmacokinetic Concentration Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_FINDING_ABOUT = 481;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Fasting Status Template Id' of 'Fasting Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FASTING_STATUS__FASTING_STATUS_TEMPLATE_ID = 482;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Fasting Status Class Code' of 'Fasting Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FASTING_STATUS__FASTING_STATUS_CLASS_CODE = 483;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Fasting Status Mood Code' of 'Fasting Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FASTING_STATUS__FASTING_STATUS_MOOD_CODE = 484;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Fasting Status Code P' of 'Fasting Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FASTING_STATUS__FASTING_STATUS_CODE_P = 485;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Fasting Status Code' of 'Fasting Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FASTING_STATUS__FASTING_STATUS_CODE = 486;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Fasting Status Value' of 'Fasting Status'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FASTING_STATUS__FASTING_STATUS_VALUE = 487;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assay Quantitation Template Id' of 'Assay Quantitation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSAY_QUANTITATION__ASSAY_QUANTITATION_TEMPLATE_ID = 488;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assay Quantitation Class Code' of 'Assay Quantitation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSAY_QUANTITATION__ASSAY_QUANTITATION_CLASS_CODE = 489;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assay Quantitation Mood Code' of 'Assay Quantitation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSAY_QUANTITATION__ASSAY_QUANTITATION_MOOD_CODE = 490;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assay Quantitation Code P' of 'Assay Quantitation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSAY_QUANTITATION__ASSAY_QUANTITATION_CODE_P = 491;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assay Quantitation Code' of 'Assay Quantitation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSAY_QUANTITATION__ASSAY_QUANTITATION_CODE = 492;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Assay Quantitation Value' of 'Assay Quantitation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ASSAY_QUANTITATION__ASSAY_QUANTITATION_VALUE = 493;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Template Id' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_TEMPLATE_ID = 494;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Class Code' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_CLASS_CODE = 495;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Mood Code' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_MOOD_CODE = 496;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Id' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_ID = 497;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Code P' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_CODE_P = 498;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Code' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_CODE = 499;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Status Code' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_STATUS_CODE = 500;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Effective Time' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_EFFECTIVE_TIME = 501;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Value' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_VALUE = 502;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Group Identifier' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_GROUP_IDENTIFIER = 503;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Non Performance Reason' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_NON_PERFORMANCE_REASON = 504;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Event Study Day' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_EVENT_STUDY_DAY = 505;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Category' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_CATEGORY = 506;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Sub Category' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_SUB_CATEGORY = 507;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Comment' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_COMMENT = 508;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Domain Assignment' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_DOMAIN_ASSIGNMENT = 509;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Related Record' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_RELATED_RECORD = 510;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Supplemental Value' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_SUPPLEMENTAL_VALUE = 511;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Finding About' of 'Drug Accountability'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_FINDING_ABOUT = 512;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Template Id' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_TEMPLATE_ID = 513;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Class Code' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_CLASS_CODE = 514;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Mood Code' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_MOOD_CODE = 515;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Id' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_ID = 516;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Code P' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_CODE_P = 517;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Code' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_CODE = 518;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Status Code' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_STATUS_CODE = 519;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Value' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_VALUE = 520;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Method Code P' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_METHOD_CODE_P = 521;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Method Code' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_METHOD_CODE = 522;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Interpretation Code P' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_INTERPRETATION_CODE_P = 523;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Interpretation Code' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_INTERPRETATION_CODE = 524;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Group Identifier' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_GROUP_IDENTIFIER = 525;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Specimen Information' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_SPECIMEN_INFORMATION = 526;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Non Performance Reason' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_NON_PERFORMANCE_REASON = 527;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Study Test Organization' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_STUDY_TEST_ORGANIZATION = 528;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Timing Reference' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_TIMING_REFERENCE = 529;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Comment' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_COMMENT = 530;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Domain Assignment' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_DOMAIN_ASSIGNMENT = 531;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Related Record' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_RELATED_RECORD = 532;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Supplemental Value' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_SUPPLEMENTAL_VALUE = 533;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Toxicity' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_TOXICITY = 534;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Category' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_CATEGORY = 535;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Sub Category' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_SUB_CATEGORY = 536;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Fasting Status' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_FASTING_STATUS = 537;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Finding About' of 'Human Clinical Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_FINDING_ABOUT = 538;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Toxicity Template Id' of 'Toxicity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TOXICITY__TOXICITY_TEMPLATE_ID = 539;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Toxicity Class Code' of 'Toxicity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TOXICITY__TOXICITY_CLASS_CODE = 540;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Toxicity Mood Code' of 'Toxicity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TOXICITY__TOXICITY_MOOD_CODE = 541;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Toxicity Code P' of 'Toxicity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TOXICITY__TOXICITY_CODE_P = 542;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Toxicity Code' of 'Toxicity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TOXICITY__TOXICITY_CODE = 543;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Toxicity Value' of 'Toxicity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TOXICITY__TOXICITY_VALUE = 544;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Toxicity Value P' of 'Toxicity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TOXICITY__TOXICITY_VALUE_P = 545;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Template Id' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_TEMPLATE_ID = 546;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Class Code' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_CLASS_CODE = 547;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Mood Code' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_MOOD_CODE = 548;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Id' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_ID = 549;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Code P' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_CODE_P = 550;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Code' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_CODE = 551;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Status Code' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_STATUS_CODE = 552;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Effective Time' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_EFFECTIVE_TIME = 553;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Value' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_VALUE = 554;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Interpretation Code P' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_INTERPRETATION_CODE_P = 555;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Interpretation Code' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_INTERPRETATION_CODE = 556;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Group Identifier' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_GROUP_IDENTIFIER = 557;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Non Performance Reason' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_NON_PERFORMANCE_REASON = 558;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Timing Reference' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_TIMING_REFERENCE = 559;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Data Collection' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_DATA_COLLECTION = 560;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Comment' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_COMMENT = 561;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Domain Assignment' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_DOMAIN_ASSIGNMENT = 562;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Related Record' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_RELATED_RECORD = 563;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Supplemental Value' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_SUPPLEMENTAL_VALUE = 564;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Category' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_CATEGORY = 565;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Sub Category' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_SUB_CATEGORY = 566;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Finding About' of 'Questionnaire Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_FINDING_ABOUT = 567;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Template Id' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_TEMPLATE_ID = 568;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Class Code' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_CLASS_CODE = 569;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Mood Code' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_MOOD_CODE = 570;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Id' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_ID = 571;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Code P' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_CODE_P = 572;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Code' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_CODE = 573;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Status Code' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_STATUS_CODE = 574;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Value' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_VALUE = 575;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Group Identifier' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_GROUP_IDENTIFIER = 576;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Specimen Information' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_SPECIMEN_INFORMATION = 577;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Non Performance Reason' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_NON_PERFORMANCE_REASON = 578;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Timing Reference' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_TIMING_REFERENCE = 579;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Comment' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_COMMENT = 580;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Domain Assignment' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_DOMAIN_ASSIGNMENT = 581;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Related Record' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_RELATED_RECORD = 582;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Supplemental Value' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_SUPPLEMENTAL_VALUE = 583;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Category' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_CATEGORY = 584;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Sub Category' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_SUB_CATEGORY = 585;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Finding About' of 'Pharmacokinetic Parameter Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_FINDING_ABOUT = 586;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Template Id' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_TEMPLATE_ID = 587;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Class Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_CLASS_CODE = 588;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Mood Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_MOOD_CODE = 589;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Id' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_ID = 590;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Code P' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_CODE_P = 591;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_CODE = 592;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Effective Time' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_EFFECTIVE_TIME = 593;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Study Epoch' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_STUDY_EPOCH = 594;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Element Order Association' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_ELEMENT_ORDER_ASSOCIATION = 595;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Comment' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_COMMENT = 596;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Domain Assignment' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_DOMAIN_ASSIGNMENT = 597;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Related Record' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_RELATED_RECORD = 598;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Supplemental Value' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_SUPPLEMENTAL_VALUE = 599;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Finding About' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_FINDING_ABOUT = 600;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Class Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CLASS_CODE = 601;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Code P' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE_P = 602;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE = 603;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Mood Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_MOOD_CODE = 604;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Value' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_VALUE = 605;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Human Clinical Exposureelement Order Association Type Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATION_TYPE_CODE = 606;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Human Clinical Exposureelement Order Association Element Order' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATION_ELEMENT_ORDER = 607;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Human Clinical Exposureelement Order Associationelement Order Class Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CLASS_CODE = 608;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Human Clinical Exposureelement Order Associationelement Order Code P' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE_P = 609;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Human Clinical Exposureelement Order Associationelement Order Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE = 610;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Human Clinical Exposureelement Order Associationelement Order Mood Code' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_MOOD_CODE = 611;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Human Clinical Exposureelement Order Associationelement Order Value' of 'Subject Element'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_VALUE = 612;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Template Id' of 'Study Epoch'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_EPOCH__STUDY_EPOCH_TEMPLATE_ID = 613;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Class Code' of 'Study Epoch'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_EPOCH__STUDY_EPOCH_CLASS_CODE = 614;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Mood Code' of 'Study Epoch'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_EPOCH__STUDY_EPOCH_MOOD_CODE = 615;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Code P' of 'Study Epoch'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_EPOCH__STUDY_EPOCH_CODE_P = 616;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Code' of 'Study Epoch'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_EPOCH__STUDY_EPOCH_CODE = 617;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Text' of 'Study Epoch'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_EPOCH__STUDY_EPOCH_TEXT = 618;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Template Id' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_TEMPLATE_ID = 619;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Class Code' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_CLASS_CODE = 620;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Code' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_CODE = 621;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Effective Time' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_EFFECTIVE_TIME = 622;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Id' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_ID = 623;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Mood Code' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_MOOD_CODE = 624;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Study Epoch' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_STUDY_EPOCH = 625;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Group Identifier' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_GROUP_IDENTIFIER = 626;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Study Day Period' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_STUDY_DAY_PERIOD = 627;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Comment' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_COMMENT = 628;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Domain Assignment' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_DOMAIN_ASSIGNMENT = 629;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Related Record' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_RELATED_RECORD = 630;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Supplemental Value' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_SUPPLEMENTAL_VALUE = 631;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Category' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_CATEGORY = 632;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Sub Category' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_SUB_CATEGORY = 633;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Finding About' of 'Human Clinical Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_FINDING_ABOUT = 634;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Template Id' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_TEMPLATE_ID = 635;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Class Code' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_CLASS_CODE = 636;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Mood Code' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_MOOD_CODE = 637;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Id' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_ID = 638;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Code P' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_CODE_P = 639;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Code' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_CODE = 640;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Status Code' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_STATUS_CODE = 641;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Effective Time' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_EFFECTIVE_TIME = 642;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Value' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_VALUE = 643;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Value P' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_VALUE_P = 644;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Group Identifier' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_GROUP_IDENTIFIER = 645;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Pre Specified Event' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_PRE_SPECIFIED_EVENT = 646;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Non Performance Reason' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_NON_PERFORMANCE_REASON = 647;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Body Systemor Organ Class' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_BODY_SYSTEMOR_ORGAN_CLASS = 648;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Data Collection' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_DATA_COLLECTION = 649;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Comment' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_COMMENT = 650;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Domain Assignment' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_DOMAIN_ASSIGNMENT = 651;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Related Record' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_RELATED_RECORD = 652;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Supplemental Value' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_SUPPLEMENTAL_VALUE = 653;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Start Relativeto Reference Period' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_START_RELATIVETO_REFERENCE_PERIOD = 654;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Stop Relativeto Reference Period' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_STOP_RELATIVETO_REFERENCE_PERIOD = 655;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Category' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_CATEGORY = 656;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Sub Category' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_SUB_CATEGORY = 657;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Finding About' of 'Medical History Item'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_FINDING_ABOUT = 658;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Template Id' of 'Pre Specified Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_TEMPLATE_ID = 659;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Class Code' of 'Pre Specified Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_CLASS_CODE = 660;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Mood Code' of 'Pre Specified Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_MOOD_CODE = 661;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Code P' of 'Pre Specified Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_CODE_P = 662;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Code' of 'Pre Specified Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_CODE = 663;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Value' of 'Pre Specified Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_VALUE = 664;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Start Relativeto Reference Period Template Id' of 'Start Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int START_RELATIVETO_REFERENCE_PERIOD__START_RELATIVETO_REFERENCE_PERIOD_TEMPLATE_ID = 665;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Start Relativeto Reference Period Class Code' of 'Start Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int START_RELATIVETO_REFERENCE_PERIOD__START_RELATIVETO_REFERENCE_PERIOD_CLASS_CODE = 666;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Start Relativeto Reference Period Mood Code' of 'Start Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int START_RELATIVETO_REFERENCE_PERIOD__START_RELATIVETO_REFERENCE_PERIOD_MOOD_CODE = 667;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Start Relativeto Reference Period Code P' of 'Start Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int START_RELATIVETO_REFERENCE_PERIOD__START_RELATIVETO_REFERENCE_PERIOD_CODE_P = 668;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Start Relativeto Reference Period Code' of 'Start Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int START_RELATIVETO_REFERENCE_PERIOD__START_RELATIVETO_REFERENCE_PERIOD_CODE = 669;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Start Relativeto Reference Period Value' of 'Start Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int START_RELATIVETO_REFERENCE_PERIOD__START_RELATIVETO_REFERENCE_PERIOD_VALUE = 670;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Start Relativeto Reference Period Value P' of 'Start Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int START_RELATIVETO_REFERENCE_PERIOD__START_RELATIVETO_REFERENCE_PERIOD_VALUE_P = 671;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Stop Relativeto Reference Period Template Id' of 'Stop Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STOP_RELATIVETO_REFERENCE_PERIOD__STOP_RELATIVETO_REFERENCE_PERIOD_TEMPLATE_ID = 672;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Stop Relativeto Reference Period Class Code' of 'Stop Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STOP_RELATIVETO_REFERENCE_PERIOD__STOP_RELATIVETO_REFERENCE_PERIOD_CLASS_CODE = 673;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Stop Relativeto Reference Period Mood Code' of 'Stop Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STOP_RELATIVETO_REFERENCE_PERIOD__STOP_RELATIVETO_REFERENCE_PERIOD_MOOD_CODE = 674;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Stop Relativeto Reference Period Code P' of 'Stop Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STOP_RELATIVETO_REFERENCE_PERIOD__STOP_RELATIVETO_REFERENCE_PERIOD_CODE_P = 675;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Stop Relativeto Reference Period Code' of 'Stop Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STOP_RELATIVETO_REFERENCE_PERIOD__STOP_RELATIVETO_REFERENCE_PERIOD_CODE = 676;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Stop Relativeto Reference Period Value' of 'Stop Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STOP_RELATIVETO_REFERENCE_PERIOD__STOP_RELATIVETO_REFERENCE_PERIOD_VALUE = 677;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Stop Relativeto Reference Period Value P' of 'Stop Relativeto Reference Period'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STOP_RELATIVETO_REFERENCE_PERIOD__STOP_RELATIVETO_REFERENCE_PERIOD_VALUE_P = 678;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Template Id' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_TEMPLATE_ID = 679;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Class Code' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_CLASS_CODE = 680;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Mood Code' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_MOOD_CODE = 681;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Id' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_ID = 682;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Code P' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_CODE_P = 683;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Code' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_CODE = 684;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Effective Time' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_EFFECTIVE_TIME = 685;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Value' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_VALUE = 686;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Study Epoch' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_STUDY_EPOCH = 687;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Comment' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_COMMENT = 688;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Domain Assignment' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_DOMAIN_ASSIGNMENT = 689;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Related Record' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_RELATED_RECORD = 690;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Supplemental Value' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_SUPPLEMENTAL_VALUE = 691;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Category' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_CATEGORY = 692;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Sub Category' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_SUB_CATEGORY = 693;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Finding About' of 'Protocol Deviation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_FINDING_ABOUT = 694;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Template Id' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_TEMPLATE_ID = 695;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Class Code' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_CLASS_CODE = 696;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Mood Code' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_MOOD_CODE = 697;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Code P' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_CODE_P = 698;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Code' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_CODE = 699;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Code VS' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_CODE_VS = 700;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Effective Time' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_EFFECTIVE_TIME = 701;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Id' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_ID = 702;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Status Code' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_STATUS_CODE = 703;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Value' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_VALUE = 704;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Value P' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_VALUE_P = 705;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Pre Specified Event' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_PRE_SPECIFIED_EVENT = 706;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Non Performance Reason' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_NON_PERFORMANCE_REASON = 707;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Body Systemor Organ Class' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_BODY_SYSTEMOR_ORGAN_CLASS = 708;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Data Collection' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_DATA_COLLECTION = 709;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Event Severity' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_EVENT_SEVERITY = 710;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Comment' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_COMMENT = 711;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Domain Assignment' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_DOMAIN_ASSIGNMENT = 712;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Related Record' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_RELATED_RECORD = 713;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Supplemental Value' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_SUPPLEMENTAL_VALUE = 714;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Start Relativeto Reference Period' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_START_RELATIVETO_REFERENCE_PERIOD = 715;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Stop Relativeto Reference Period' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_STOP_RELATIVETO_REFERENCE_PERIOD = 716;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Category' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_CATEGORY = 717;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Finding About' of 'Clinical Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_EVENT__CLINICAL_EVENT_FINDING_ABOUT = 718;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eventor Finding Severity Template Id' of 'Eventor Finding Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENTOR_FINDING_SEVERITY__EVENTOR_FINDING_SEVERITY_TEMPLATE_ID = 719;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eventor Finding Severity Class Code' of 'Eventor Finding Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENTOR_FINDING_SEVERITY__EVENTOR_FINDING_SEVERITY_CLASS_CODE = 720;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eventor Finding Severity Mood Code' of 'Eventor Finding Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENTOR_FINDING_SEVERITY__EVENTOR_FINDING_SEVERITY_MOOD_CODE = 721;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eventor Finding Severity Code P' of 'Eventor Finding Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENTOR_FINDING_SEVERITY__EVENTOR_FINDING_SEVERITY_CODE_P = 722;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eventor Finding Severity Code' of 'Eventor Finding Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENTOR_FINDING_SEVERITY__EVENTOR_FINDING_SEVERITY_CODE = 723;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eventor Finding Severity Value' of 'Eventor Finding Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENTOR_FINDING_SEVERITY__EVENTOR_FINDING_SEVERITY_VALUE = 724;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Eventor Finding Severity Value P' of 'Eventor Finding Severity'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENTOR_FINDING_SEVERITY__EVENTOR_FINDING_SEVERITY_VALUE_P = 725;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Template Id' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_TEMPLATE_ID = 726;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Class Code' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_CLASS_CODE = 727;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Mood Code' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_MOOD_CODE = 728;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Id' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_ID = 729;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Code P' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_CODE_P = 730;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Code' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_CODE = 731;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Status Code' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_STATUS_CODE = 732;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Value' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_VALUE = 733;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Data Collection' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_DATA_COLLECTION = 734;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Non Performance Reason' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_NON_PERFORMANCE_REASON = 735;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Group Identifier' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_GROUP_IDENTIFIER = 736;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Comment' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_COMMENT = 737;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Domain Assignment' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_DOMAIN_ASSIGNMENT = 738;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Related Record' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_RELATED_RECORD = 739;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Supplemental Value' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_SUPPLEMENTAL_VALUE = 740;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Category' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_CATEGORY = 741;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Sub Category' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_SUB_CATEGORY = 742;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Finding About' of 'Subject Characteristic'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_FINDING_ABOUT = 743;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Template Id' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_TEMPLATE_ID = 744;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Mood Code' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_MOOD_CODE = 745;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Id' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_ID = 746;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Code P' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_CODE_P = 747;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Code' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_CODE = 748;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Effective Time' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_EFFECTIVE_TIME = 749;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Status Code' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_STATUS_CODE = 750;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Value' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_VALUE = 751;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Target Site Code P' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_TARGET_SITE_CODE_P = 752;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Target Site Code' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_TARGET_SITE_CODE = 753;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Group Identifier' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_GROUP_IDENTIFIER = 754;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Event Severity' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_EVENT_SEVERITY = 755;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Pre Specified Event' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_PRE_SPECIFIED_EVENT = 756;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Study Day Period' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_STUDY_DAY_PERIOD = 757;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Body Systemor Organ Class' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_BODY_SYSTEMOR_ORGAN_CLASS = 758;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Comment' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_COMMENT = 759;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Domain Assignment' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_DOMAIN_ASSIGNMENT = 760;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Related Record' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_RELATED_RECORD = 761;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Supplemental Value' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_SUPPLEMENTAL_VALUE = 762;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Data Collection' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_DATA_COLLECTION = 763;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Non Performance Reason' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_NON_PERFORMANCE_REASON = 764;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Serious Event' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_SERIOUS_EVENT = 765;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Study Treatment Action Taken' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_STUDY_TREATMENT_ACTION_TAKEN = 766;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Other Treatment Action Taken' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_OTHER_TREATMENT_ACTION_TAKEN = 767;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Study Treatment Causality' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_STUDY_TREATMENT_CAUSALITY = 768;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Non Study Treatment Relationship' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_NON_STUDY_TREATMENT_RELATIONSHIP = 769;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Event Pattern' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_EVENT_PATTERN = 770;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Event Outcome' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_EVENT_OUTCOME = 771;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Concomitant Treatment' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_CONCOMITANT_TREATMENT = 772;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Toxicity' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_TOXICITY = 773;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Category' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_CATEGORY = 774;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Sub Category' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_SUB_CATEGORY = 775;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Finding About' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_FINDING_ABOUT = 776;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Event Event Duration' of 'Study Subject Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_EVENT__STUDY_SUBJECT_EVENT_EVENT_DURATION = 777;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Template Id' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_TEMPLATE_ID = 778;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Class Code' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_CLASS_CODE = 779;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Mood Code' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_MOOD_CODE = 780;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Code P' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_CODE_P = 781;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Code' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_CODE = 782;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Value' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_VALUE = 783;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Serious Event Type Association' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION = 784;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Serious Event Type Association Serious Event Type Class Code' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_CLASS_CODE = 785;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Serious Event Type Association Serious Event Type Mood Code' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_MOOD_CODE = 786;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Serious Event Type Association Serious Event Type Code P' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_CODE_P = 787;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Serious Event Type Association Serious Event Type Code' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_CODE = 788;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Serious Event Type Association Serious Event Type Value' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_VALUE = 789;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Serious Event Type Association Serious Event Type Value P' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_VALUE_P = 790;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Serious Event Type Association Type Code' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_TYPE_CODE = 791;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Serious Event Serious Event Type Association Serious Event Type' of 'Serious Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SERIOUS_EVENT__SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE = 792;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Action Taken Template Id' of 'Study Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_ACTION_TAKEN__STUDY_TREATMENT_ACTION_TAKEN_TEMPLATE_ID = 793;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Action Taken Class Code' of 'Study Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_ACTION_TAKEN__STUDY_TREATMENT_ACTION_TAKEN_CLASS_CODE = 794;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Action Taken Mood Code' of 'Study Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_ACTION_TAKEN__STUDY_TREATMENT_ACTION_TAKEN_MOOD_CODE = 795;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Action Taken Code P' of 'Study Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_ACTION_TAKEN__STUDY_TREATMENT_ACTION_TAKEN_CODE_P = 796;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Action Taken Code' of 'Study Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_ACTION_TAKEN__STUDY_TREATMENT_ACTION_TAKEN_CODE = 797;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Action Taken Value' of 'Study Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_ACTION_TAKEN__STUDY_TREATMENT_ACTION_TAKEN_VALUE = 798;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Action Taken Value P' of 'Study Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_ACTION_TAKEN__STUDY_TREATMENT_ACTION_TAKEN_VALUE_P = 799;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Other Treatment Action Taken Template Id' of 'Other Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OTHER_TREATMENT_ACTION_TAKEN__OTHER_TREATMENT_ACTION_TAKEN_TEMPLATE_ID = 800;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Other Treatment Action Taken Class Code' of 'Other Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OTHER_TREATMENT_ACTION_TAKEN__OTHER_TREATMENT_ACTION_TAKEN_CLASS_CODE = 801;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Other Treatment Action Taken Mood Code' of 'Other Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OTHER_TREATMENT_ACTION_TAKEN__OTHER_TREATMENT_ACTION_TAKEN_MOOD_CODE = 802;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Other Treatment Action Taken Code P' of 'Other Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OTHER_TREATMENT_ACTION_TAKEN__OTHER_TREATMENT_ACTION_TAKEN_CODE_P = 803;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Other Treatment Action Taken Code' of 'Other Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OTHER_TREATMENT_ACTION_TAKEN__OTHER_TREATMENT_ACTION_TAKEN_CODE = 804;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Other Treatment Action Taken Value' of 'Other Treatment Action Taken'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int OTHER_TREATMENT_ACTION_TAKEN__OTHER_TREATMENT_ACTION_TAKEN_VALUE = 805;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Causality Template Id' of 'Study Treatment Causality'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_CAUSALITY__STUDY_TREATMENT_CAUSALITY_TEMPLATE_ID = 806;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Causality Class Code' of 'Study Treatment Causality'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_CAUSALITY__STUDY_TREATMENT_CAUSALITY_CLASS_CODE = 807;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Causality Mood Code' of 'Study Treatment Causality'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_CAUSALITY__STUDY_TREATMENT_CAUSALITY_MOOD_CODE = 808;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Causality Code P' of 'Study Treatment Causality'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_CAUSALITY__STUDY_TREATMENT_CAUSALITY_CODE_P = 809;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Causality Code' of 'Study Treatment Causality'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_CAUSALITY__STUDY_TREATMENT_CAUSALITY_CODE = 810;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Causality Value' of 'Study Treatment Causality'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_CAUSALITY__STUDY_TREATMENT_CAUSALITY_VALUE = 811;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Treatment Causality Value P' of 'Study Treatment Causality'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TREATMENT_CAUSALITY__STUDY_TREATMENT_CAUSALITY_VALUE_P = 812;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Study Treatment Relationship Template Id' of 'Non Study Treatment Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_STUDY_TREATMENT_RELATIONSHIP__NON_STUDY_TREATMENT_RELATIONSHIP_TEMPLATE_ID = 813;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Study Treatment Relationship Class Code' of 'Non Study Treatment Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_STUDY_TREATMENT_RELATIONSHIP__NON_STUDY_TREATMENT_RELATIONSHIP_CLASS_CODE = 814;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Study Treatment Relationship Code P' of 'Non Study Treatment Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_STUDY_TREATMENT_RELATIONSHIP__NON_STUDY_TREATMENT_RELATIONSHIP_CODE_P = 815;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Study Treatment Relationship Code' of 'Non Study Treatment Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_STUDY_TREATMENT_RELATIONSHIP__NON_STUDY_TREATMENT_RELATIONSHIP_CODE = 816;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Study Treatment Relationship Mood Code' of 'Non Study Treatment Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_STUDY_TREATMENT_RELATIONSHIP__NON_STUDY_TREATMENT_RELATIONSHIP_MOOD_CODE = 817;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Study Treatment Relationship Value' of 'Non Study Treatment Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NON_STUDY_TREATMENT_RELATIONSHIP__NON_STUDY_TREATMENT_RELATIONSHIP_VALUE = 818;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Pattern Template Id' of 'Event Pattern'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_PATTERN__EVENT_PATTERN_TEMPLATE_ID = 819;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Pattern Class Code' of 'Event Pattern'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_PATTERN__EVENT_PATTERN_CLASS_CODE = 820;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Pattern Mood Code' of 'Event Pattern'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_PATTERN__EVENT_PATTERN_MOOD_CODE = 821;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Pattern Code P' of 'Event Pattern'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_PATTERN__EVENT_PATTERN_CODE_P = 822;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Pattern Code' of 'Event Pattern'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_PATTERN__EVENT_PATTERN_CODE = 823;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Pattern Value' of 'Event Pattern'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_PATTERN__EVENT_PATTERN_VALUE = 824;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Pattern Value P' of 'Event Pattern'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_PATTERN__EVENT_PATTERN_VALUE_P = 825;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Outcome Template Id' of 'Event Outcome'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_OUTCOME__EVENT_OUTCOME_TEMPLATE_ID = 826;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Outcome Class Code' of 'Event Outcome'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_OUTCOME__EVENT_OUTCOME_CLASS_CODE = 827;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Outcome Mood Code' of 'Event Outcome'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_OUTCOME__EVENT_OUTCOME_MOOD_CODE = 828;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Outcome Code P' of 'Event Outcome'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_OUTCOME__EVENT_OUTCOME_CODE_P = 829;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Outcome Code' of 'Event Outcome'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_OUTCOME__EVENT_OUTCOME_CODE = 830;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Outcome Value' of 'Event Outcome'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_OUTCOME__EVENT_OUTCOME_VALUE = 831;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Outcome Value P' of 'Event Outcome'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_OUTCOME__EVENT_OUTCOME_VALUE_P = 832;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Treatment Template Id' of 'Concomitant Treatment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_TREATMENT__CONCOMITANT_TREATMENT_TEMPLATE_ID = 833;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Treatment Class Code' of 'Concomitant Treatment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_TREATMENT__CONCOMITANT_TREATMENT_CLASS_CODE = 834;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Treatment Mood Code' of 'Concomitant Treatment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_TREATMENT__CONCOMITANT_TREATMENT_MOOD_CODE = 835;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Treatment Code P' of 'Concomitant Treatment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_TREATMENT__CONCOMITANT_TREATMENT_CODE_P = 836;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Treatment Code' of 'Concomitant Treatment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_TREATMENT__CONCOMITANT_TREATMENT_CODE = 837;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Treatment Value' of 'Concomitant Treatment'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_TREATMENT__CONCOMITANT_TREATMENT_VALUE = 838;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Duration Template Id' of 'Event Duration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_DURATION__EVENT_DURATION_TEMPLATE_ID = 839;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Duration Class Code' of 'Event Duration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_DURATION__EVENT_DURATION_CLASS_CODE = 840;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Duration Mood Code' of 'Event Duration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_DURATION__EVENT_DURATION_MOOD_CODE = 841;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Duration Code P' of 'Event Duration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_DURATION__EVENT_DURATION_CODE_P = 842;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Duration Code' of 'Event Duration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_DURATION__EVENT_DURATION_CODE = 843;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Duration Value' of 'Event Duration'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int EVENT_DURATION__EVENT_DURATION_VALUE = 844;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Template Id' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_TEMPLATE_ID = 845;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Class Code' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_CLASS_CODE = 846;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Mood Code' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_MOOD_CODE = 847;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Id' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_ID = 848;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Code' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_CODE = 849;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Text' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_TEXT = 850;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Status Code' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_STATUS_CODE = 851;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Value' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_VALUE = 852;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Method Code P' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_METHOD_CODE_P = 853;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Method Code' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_METHOD_CODE = 854;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Interpretation Code P' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_INTERPRETATION_CODE_P = 855;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Interpretation Code' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_INTERPRETATION_CODE = 856;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Target Site Code P' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_TARGET_SITE_CODE_P = 857;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Target Site Code' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_TARGET_SITE_CODE = 858;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Non Performance Reason' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_NON_PERFORMANCE_REASON = 859;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Study Test Organization' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_STUDY_TEST_ORGANIZATION = 860;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Group Identifier' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_GROUP_IDENTIFIER = 861;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Specimen Information' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_SPECIMEN_INFORMATION = 862;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Comment' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_COMMENT = 863;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Domain Assignment' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_DOMAIN_ASSIGNMENT = 864;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Related Record' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_RELATED_RECORD = 865;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Supplemental Value' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_SUPPLEMENTAL_VALUE = 866;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Toxicity' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_TOXICITY = 867;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Category' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_CATEGORY = 868;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Sub Category' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_SUB_CATEGORY = 869;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Positionof Subject' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_POSITIONOF_SUBJECT = 870;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Body Systemor Organ Class' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_BODY_SYSTEMOR_ORGAN_CLASS = 871;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Fasting Status' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_FASTING_STATUS = 872;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Study Finding Evaluator' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_STUDY_FINDING_EVALUATOR = 873;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Eventor Finding Severity' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_EVENTOR_FINDING_SEVERITY = 874;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Death Relationship' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_DEATH_RELATIONSHIP = 875;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Assay Quantitation' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_ASSAY_QUANTITATION = 876;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Finding Finding About' of 'Study Subject Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_FINDING__STUDY_SUBJECT_FINDING_FINDING_ABOUT = 877;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Relationship Template Id' of 'Death Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_RELATIONSHIP__DEATH_RELATIONSHIP_TEMPLATE_ID = 878;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Relationship Class Code' of 'Death Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_RELATIONSHIP__DEATH_RELATIONSHIP_CLASS_CODE = 879;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Relationship Mood Code' of 'Death Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_RELATIONSHIP__DEATH_RELATIONSHIP_MOOD_CODE = 880;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Relationship Code P' of 'Death Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_RELATIONSHIP__DEATH_RELATIONSHIP_CODE_P = 881;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Relationship Code' of 'Death Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_RELATIONSHIP__DEATH_RELATIONSHIP_CODE = 882;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Relationship Value' of 'Death Relationship'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_RELATIONSHIP__DEATH_RELATIONSHIP_VALUE = 883;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Template Id' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_TEMPLATE_ID = 884;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Class Code' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_CLASS_CODE = 885;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Mood Code' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_MOOD_CODE = 886;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Id' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_ID = 887;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Status Code' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_STATUS_CODE = 888;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Text' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_TEXT = 889;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Effective Time' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_EFFECTIVE_TIME = 890;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Dose Quantity' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_DOSE_QUANTITY = 891;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Route Code P' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_ROUTE_CODE_P = 892;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Route Code' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_ROUTE_CODE = 893;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Max Dose Quantity' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_MAX_DOSE_QUANTITY = 894;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Approach Site Code' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_APPROACH_SITE_CODE = 895;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Approach Site Code P' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_APPROACH_SITE_CODE_P = 896;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Group Identifier' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_GROUP_IDENTIFIER = 897;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Study Epoch' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_STUDY_EPOCH = 898;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Element Order Association' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_ELEMENT_ORDER_ASSOCIATION = 899;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Timing Reference' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_TIMING_REFERENCE = 900;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Study Day Period' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_STUDY_DAY_PERIOD = 901;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Pre Specified Event' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_PRE_SPECIFIED_EVENT = 902;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Data Collection' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_DATA_COLLECTION = 903;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Non Performance Reason' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_NON_PERFORMANCE_REASON = 904;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Comment' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_COMMENT = 905;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Domain Assignment' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_DOMAIN_ASSIGNMENT = 906;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Related Record' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_RELATED_RECORD = 907;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Supplemental Value' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_SUPPLEMENTAL_VALUE = 908;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Indication' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_INDICATION = 909;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Intended Regimen' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_INTENDED_REGIMEN = 910;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Dose Adjustment Reason' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_DOSE_ADJUSTMENT_REASON = 911;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Category' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_CATEGORY = 912;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Sub Category' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_SUB_CATEGORY = 913;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Finding About' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_FINDING_ABOUT = 914;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Event Duration' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_EVENT_DURATION = 915;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Intervention Consumable Material' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTION_CONSUMABLE_MATERIAL = 916;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Interventionelement Order Associationelement Order Class Code' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTIONELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CLASS_CODE = 917;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Interventionelement Order Associationelement Order Code P' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTIONELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE_P = 918;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Interventionelement Order Associationelement Order Code' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTIONELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE = 919;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Interventionelement Order Associationelement Order Mood Code' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTIONELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_MOOD_CODE = 920;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Interventionelement Order Associationelement Order Value' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTIONELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_VALUE = 921;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Interventionelement Order Association Type Code' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTIONELEMENT_ORDER_ASSOCIATION_TYPE_CODE = 922;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Subject Interventionelement Order Association Element Order' of 'Study Subject Intervention'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_SUBJECT_INTERVENTION__STUDY_SUBJECT_INTERVENTIONELEMENT_ORDER_ASSOCIATION_ELEMENT_ORDER = 923;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Template Id' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_TEMPLATE_ID = 924;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Class Code' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_CLASS_CODE = 925;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Mood Code' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_MOOD_CODE = 926;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Code P' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_CODE_P = 927;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Code' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_CODE = 928;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Value' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_VALUE = 929;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Indication Value P' of 'Indication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INDICATION__INDICATION_VALUE_P = 930;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Intended Regimen Template Id' of 'Intended Regimen'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTENDED_REGIMEN__INTENDED_REGIMEN_TEMPLATE_ID = 931;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Intended Regimen Class Code' of 'Intended Regimen'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTENDED_REGIMEN__INTENDED_REGIMEN_CLASS_CODE = 932;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Intended Regimen Mood Code' of 'Intended Regimen'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTENDED_REGIMEN__INTENDED_REGIMEN_MOOD_CODE = 933;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Intended Regimen Code P' of 'Intended Regimen'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTENDED_REGIMEN__INTENDED_REGIMEN_CODE_P = 934;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Intended Regimen Code' of 'Intended Regimen'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTENDED_REGIMEN__INTENDED_REGIMEN_CODE = 935;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Intended Regimen Value' of 'Intended Regimen'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INTENDED_REGIMEN__INTENDED_REGIMEN_VALUE = 936;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Dose Adjustment Reason Template Id' of 'Dose Adjustment Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOSE_ADJUSTMENT_REASON__DOSE_ADJUSTMENT_REASON_TEMPLATE_ID = 937;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Dose Adjustment Reason Class Code' of 'Dose Adjustment Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOSE_ADJUSTMENT_REASON__DOSE_ADJUSTMENT_REASON_CLASS_CODE = 938;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Dose Adjustment Reason Code P' of 'Dose Adjustment Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOSE_ADJUSTMENT_REASON__DOSE_ADJUSTMENT_REASON_CODE_P = 939;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Dose Adjustment Reason Code' of 'Dose Adjustment Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOSE_ADJUSTMENT_REASON__DOSE_ADJUSTMENT_REASON_CODE = 940;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Dose Adjustment Reason Value' of 'Dose Adjustment Reason'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DOSE_ADJUSTMENT_REASON__DOSE_ADJUSTMENT_REASON_VALUE = 941;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Template Id' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_TEMPLATE_ID = 942;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Class Code' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_CLASS_CODE = 943;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Mood Code' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_MOOD_CODE = 944;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Id' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_ID = 945;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Code P' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_CODE_P = 946;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Code' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_CODE = 947;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Effective Time' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_EFFECTIVE_TIME = 948;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Value' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_VALUE = 949;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Value P' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_VALUE_P = 950;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Target Site Code P' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_TARGET_SITE_CODE_P = 951;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Target Site Code' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_TARGET_SITE_CODE = 952;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Group Identifier' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_GROUP_IDENTIFIER = 953;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Body Systemor Organ Class' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_BODY_SYSTEMOR_ORGAN_CLASS = 954;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Event Severity' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_EVENT_SEVERITY = 955;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Pre Specified Event' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_PRE_SPECIFIED_EVENT = 956;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Study Day Period' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_STUDY_DAY_PERIOD = 957;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Domain Assignment' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_DOMAIN_ASSIGNMENT = 958;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Comment' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_COMMENT = 959;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Related Record' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_RELATED_RECORD = 960;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Supplemental Value' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_SUPPLEMENTAL_VALUE = 961;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Start Relativeto Reference Period' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_START_RELATIVETO_REFERENCE_PERIOD = 962;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Stop Relativeto Reference Period' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_STOP_RELATIVETO_REFERENCE_PERIOD = 963;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Serious Event' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_SERIOUS_EVENT = 964;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Study Treatment Action Taken' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_STUDY_TREATMENT_ACTION_TAKEN = 965;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Other Treatment Action Taken' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_OTHER_TREATMENT_ACTION_TAKEN = 966;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Study Treatment Causality' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_STUDY_TREATMENT_CAUSALITY = 967;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Non Study Treatment Relationship' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_NON_STUDY_TREATMENT_RELATIONSHIP = 968;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Event Pattern' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_EVENT_PATTERN = 969;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Event Outcome' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_EVENT_OUTCOME = 970;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Concomitant Treatment' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_CONCOMITANT_TREATMENT = 971;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Toxicity' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_TOXICITY = 972;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Category' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_CATEGORY = 973;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Sub Category' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_SUB_CATEGORY = 974;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Finding About' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_FINDING_ABOUT = 975;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Event Duration' of 'Adverse Event'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ADVERSE_EVENT__ADVERSE_EVENT_EVENT_DURATION = 976;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Template Id' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_TEMPLATE_ID = 977;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Class Code' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_CLASS_CODE = 978;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Mood Code' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_MOOD_CODE = 979;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Id' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_ID = 980;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Code P' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_CODE_P = 981;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Code' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_CODE = 982;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Value' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_VALUE = 983;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Data Collection' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_DATA_COLLECTION = 984;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Comment' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_COMMENT = 985;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Domain Assignment' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_DOMAIN_ASSIGNMENT = 986;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Related Record' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_RELATED_RECORD = 987;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Supplemental Value' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_SUPPLEMENTAL_VALUE = 988;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Category' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_CATEGORY = 989;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Sub Category' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_SUB_CATEGORY = 990;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Finding About' of 'Inclusionor Exclusion Criteria Not Met'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_FINDING_ABOUT = 991;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Template Id' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_TEMPLATE_ID = 992;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Class Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_CLASS_CODE = 993;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Mood Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_MOOD_CODE = 994;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Id' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_ID = 995;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Status Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_STATUS_CODE = 996;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Text' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_TEXT = 997;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Effective Time' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_EFFECTIVE_TIME = 998;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Dose Quantity' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_DOSE_QUANTITY = 999;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Max Dose Quantity' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_MAX_DOSE_QUANTITY = 1000;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Route Code P' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_ROUTE_CODE_P = 1001;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Route Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_ROUTE_CODE = 1002;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Group Identifier' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_GROUP_IDENTIFIER = 1003;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Non Performance Reason' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_NON_PERFORMANCE_REASON = 1004;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Consumable Material' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_CONSUMABLE_MATERIAL = 1005;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Pre Specified Event' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_PRE_SPECIFIED_EVENT = 1006;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Data Collection' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_DATA_COLLECTION = 1007;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Study Day Period' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_STUDY_DAY_PERIOD = 1008;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Timing Reference' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_TIMING_REFERENCE = 1009;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Comment' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_COMMENT = 1010;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Domain Assignment' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_DOMAIN_ASSIGNMENT = 1011;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Related Record' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_RELATED_RECORD = 1012;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Supplemental Value' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_SUPPLEMENTAL_VALUE = 1013;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Start Relativeto Reference Period' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_START_RELATIVETO_REFERENCE_PERIOD = 1014;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Stop Relativeto Reference Period' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_STOP_RELATIVETO_REFERENCE_PERIOD = 1015;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Indication' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INDICATION = 1016;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Intended Regimen' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INTENDED_REGIMEN = 1017;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Category' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_CATEGORY = 1018;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Sub Category' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_SUB_CATEGORY = 1019;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Finding About' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_FINDING_ABOUT = 1020;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Event Duration' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_EVENT_DURATION = 1021;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Class Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CLASS_CODE = 1022;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Mood Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_MOOD_CODE = 1023;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Code P' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CODE_P = 1024;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CODE = 1025;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Value' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_VALUE = 1026;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Human Clinical Subject Demographics Age Association Type Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_TYPE_CODE = 1027;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Human Clinical Subject Demographics Age Association Subject Age' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE = 1028;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Human Clinical Subject Demographics Age Association Subject Age Class Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CLASS_CODE = 1029;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Human Clinical Subject Demographics Age Association Subject Age Mood Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_MOOD_CODE = 1030;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Human Clinical Subject Demographics Age Association Subject Age Code P' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CODE_P = 1031;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Human Clinical Subject Demographics Age Association Subject Age Code' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CODE = 1032;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Human Clinical Subject Demographics Age Association Subject Age Value' of 'Concomitant Medication'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_VALUE = 1033;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Template Id' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_TEMPLATE_ID = 1034;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Type Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_TYPE_CODE = 1035;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION = 1036;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialas Specialized Kindsubstance Class Class Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALAS_SPECIALIZED_KINDSUBSTANCE_CLASS_CLASS_CODE = 1037;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialas Specialized Kindsubstance Class Determiner Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALAS_SPECIALIZED_KINDSUBSTANCE_CLASS_DETERMINER_CODE = 1038;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialas Specialized Kind Class Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALAS_SPECIALIZED_KIND_CLASS_CODE = 1039;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialas Specialized Kind Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALAS_SPECIALIZED_KIND_CODE = 1040;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialas Specialized Kind Code P' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALAS_SPECIALIZED_KIND_CODE_P = 1041;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialas Specialized Kind Represented Organization' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALAS_SPECIALIZED_KIND_REPRESENTED_ORGANIZATION = 1042;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialingredient Roleingredient Substance Class Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALINGREDIENT_ROLEINGREDIENT_SUBSTANCE_CLASS_CODE = 1043;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialingredient Roleingredient Substance Determiner Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALINGREDIENT_ROLEINGREDIENT_SUBSTANCE_DETERMINER_CODE = 1044;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialingredient Roleingredient Substance Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALINGREDIENT_ROLEINGREDIENT_SUBSTANCE_CODE = 1045;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialingredient Roleingredient Substance Code P' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALINGREDIENT_ROLEINGREDIENT_SUBSTANCE_CODE_P = 1046;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialingredient Role Class Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALINGREDIENT_ROLE_CLASS_CODE = 1047;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Materialingredient Role Assigned Person' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIALINGREDIENT_ROLE_ASSIGNED_PERSON = 1048;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Class Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_CLASS_CODE = 1049;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_CODE = 1050;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Code P' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_CODE_P = 1051;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Lot Number Text' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_LOT_NUMBER_TEXT = 1052;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Class Code' of 'Consumable Material'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_CLASS_CODE = 1053;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Template Id' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_TEMPLATE_ID = 1054;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Class Code' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_CLASS_CODE = 1055;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Dose Quantity' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_DOSE_QUANTITY = 1056;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Effective Time' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_EFFECTIVE_TIME = 1057;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Id' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_ID = 1058;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Mood Code' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_MOOD_CODE = 1059;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Route Code P' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_ROUTE_CODE_P = 1060;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Route Code' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_ROUTE_CODE = 1061;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Max Dose Quantity' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_MAX_DOSE_QUANTITY = 1062;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Text' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_TEXT = 1063;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Approach Site Code' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_APPROACH_SITE_CODE = 1064;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Approach Site Code P' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_APPROACH_SITE_CODE_P = 1065;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Group Identifier' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_GROUP_IDENTIFIER = 1066;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Consumable Material' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_CONSUMABLE_MATERIAL = 1067;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Study Epoch' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_STUDY_EPOCH = 1068;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Element Order Association' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_ELEMENT_ORDER_ASSOCIATION = 1069;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Timing Reference' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_TIMING_REFERENCE = 1070;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Study Day Period' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_STUDY_DAY_PERIOD = 1071;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Comment' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_COMMENT = 1072;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Domain Assignment' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_DOMAIN_ASSIGNMENT = 1073;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Related Record' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_RELATED_RECORD = 1074;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Supplemental Value' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_SUPPLEMENTAL_VALUE = 1075;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Intended Regimen' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_INTENDED_REGIMEN = 1076;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Dose Adjustment Reason' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_DOSE_ADJUSTMENT_REASON = 1077;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Category' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_CATEGORY = 1078;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Sub Category' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_SUB_CATEGORY = 1079;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Finding About' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_FINDING_ABOUT = 1080;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Event Duration' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_EVENT_DURATION = 1081;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Class Code' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CLASS_CODE = 1082;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Code P' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE_P = 1083;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Code' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE = 1084;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Mood Code' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_MOOD_CODE = 1085;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Value' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_VALUE = 1086;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Association Type Code' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATION_TYPE_CODE = 1087;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Association Element Order' of 'Human Clinical Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATION_ELEMENT_ORDER = 1088;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Template Id' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_TEMPLATE_ID = 1089;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Class Code' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_CLASS_CODE = 1090;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Mood Code' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_MOOD_CODE = 1091;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Id' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_ID = 1092;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Status Code' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_STATUS_CODE = 1093;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Text' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_TEXT = 1094;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Effective Time' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_EFFECTIVE_TIME = 1095;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Dose Quantity' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_DOSE_QUANTITY = 1096;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Max Dose Quantity' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_MAX_DOSE_QUANTITY = 1097;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Route Code P' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_ROUTE_CODE_P = 1098;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Route Code' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_ROUTE_CODE = 1099;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Consumable Material' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_CONSUMABLE_MATERIAL = 1100;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Pre Specified Event' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_PRE_SPECIFIED_EVENT = 1101;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Non Performance Reason' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_NON_PERFORMANCE_REASON = 1102;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Data Collection' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_DATA_COLLECTION = 1103;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Study Day Period' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_STUDY_DAY_PERIOD = 1104;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Comment' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_COMMENT = 1105;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Domain Assignment' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_DOMAIN_ASSIGNMENT = 1106;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Related Record' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_RELATED_RECORD = 1107;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Supplemental Value' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_SUPPLEMENTAL_VALUE = 1108;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Start Relativeto Reference Period' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_START_RELATIVETO_REFERENCE_PERIOD = 1109;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Stop Relativeto Reference Period' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_STOP_RELATIVETO_REFERENCE_PERIOD = 1110;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Category' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_CATEGORY = 1111;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Sub Category' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_SUB_CATEGORY = 1112;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Finding About' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_FINDING_ABOUT = 1113;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Event Duration' of 'Substance Use'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBSTANCE_USE__SUBSTANCE_USE_EVENT_DURATION = 1114;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Template Id' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_TEMPLATE_ID = 1115;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Class Code' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_CLASS_CODE = 1116;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Code P' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_CODE_P = 1117;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Code' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_CODE = 1118;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Id' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_ID = 1119;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Mood Code' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_MOOD_CODE = 1120;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Status Code' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_STATUS_CODE = 1121;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Value' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_VALUE = 1122;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Method Code P' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_METHOD_CODE_P = 1123;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Method Code' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_METHOD_CODE = 1124;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Interpretation Code P' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_INTERPRETATION_CODE_P = 1125;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Interpretation Code' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_INTERPRETATION_CODE = 1126;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Group Identifier' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_GROUP_IDENTIFIER = 1127;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Specimen Information' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_SPECIMEN_INFORMATION = 1128;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Non Performance Reason' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_NON_PERFORMANCE_REASON = 1129;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Study Test Performer' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_STUDY_TEST_PERFORMER = 1130;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Exclusion Indicator' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_EXCLUSION_INDICATOR = 1131;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Planned Study Day' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_PLANNED_STUDY_DAY = 1132;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Study Day Period' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_STUDY_DAY_PERIOD = 1133;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Timing Reference' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_TIMING_REFERENCE = 1134;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Comment' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_COMMENT = 1135;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Domain Assignment' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_DOMAIN_ASSIGNMENT = 1136;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Related Record' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_RELATED_RECORD = 1137;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Supplemental Value' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_SUPPLEMENTAL_VALUE = 1138;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Toxicity' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_TOXICITY = 1139;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Category' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_CATEGORY = 1140;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Sub Category' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_SUB_CATEGORY = 1141;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Laboratory Test Result Fasting Status' of 'Nonhuman Laboratory Test Result'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_LABORATORY_TEST_RESULT__NONHUMAN_LABORATORY_TEST_RESULT_FASTING_STATUS = 1142;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Test Organization Template Id' of 'Study Test Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TEST_ORGANIZATION__STUDY_TEST_ORGANIZATION_TEMPLATE_ID = 1143;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Test Organization Type Code' of 'Study Test Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TEST_ORGANIZATION__STUDY_TEST_ORGANIZATION_TYPE_CODE = 1144;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Test Organization Role Of Performer' of 'Study Test Organization'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_TEST_ORGANIZATION__STUDY_TEST_ORGANIZATION_ROLE_OF_PERFORMER = 1145;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Finding Evaluator Template Id' of 'Study Finding Evaluator'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_FINDING_EVALUATOR__STUDY_FINDING_EVALUATOR_TEMPLATE_ID = 1146;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Finding Evaluator Type Code' of 'Study Finding Evaluator'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_FINDING_EVALUATOR__STUDY_FINDING_EVALUATOR_TYPE_CODE = 1147;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Finding Evaluator Role Of Evaluator' of 'Study Finding Evaluator'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int STUDY_FINDING_EVALUATOR__STUDY_FINDING_EVALUATOR_ROLE_OF_EVALUATOR = 1148;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Template Id' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_TEMPLATE_ID = 1149;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Class Code' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CLASS_CODE = 1150;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Mood Code' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_MOOD_CODE = 1151;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Code P' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CODE_P = 1152;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Code' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CODE = 1153;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Confidentiality Code P' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CONFIDENTIALITY_CODE_P = 1154;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Confidentiality Code' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CONFIDENTIALITY_CODE = 1155;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Effective Time' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_EFFECTIVE_TIME = 1156;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Id' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_ID = 1157;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Language Code' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_LANGUAGE_CODE = 1158;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Realm Code' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_REALM_CODE = 1159;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Set Id' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_SET_ID = 1160;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Version Number' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_VERSION_NUMBER = 1161;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Nonhuman Subject Data Document Body' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_NONHUMAN_SUBJECT_DATA_DOCUMENT_BODY = 1162;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Study Relationship2' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_STUDY_RELATIONSHIP2 = 1163;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Subject Participation2' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_SUBJECT_PARTICIPATION2 = 1164;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Custodian' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CUSTODIAN = 1165;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Author' of 'Subject Data Non Clinical Trials'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_AUTHOR = 1166;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Template Id' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_TEMPLATE_ID = 1167;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Class Code' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_CLASS_CODE = 1168;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Mood Code' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_MOOD_CODE = 1169;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Code P' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_CODE_P = 1170;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Code' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_CODE = 1171;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Text' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_TEXT = 1172;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Title' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_TITLE = 1173;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Nonhuman Subject Demographics' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_NONHUMAN_SUBJECT_DEMOGRAPHICS = 1174;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Nonhuman Disposition' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_NONHUMAN_DISPOSITION = 1175;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Subject Element' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_SUBJECT_ELEMENT = 1176;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Nonhuman Exposure' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_NONHUMAN_EXPOSURE = 1177;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Body Weight' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_BODY_WEIGHT = 1178;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Body Weight Gain' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_BODY_WEIGHT_GAIN = 1179;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Clinical Observation' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_CLINICAL_OBSERVATION = 1180;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Death Diagnosis' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_DEATH_DIAGNOSIS = 1181;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Foodand Water Consumption' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_FOODAND_WATER_CONSUMPTION = 1182;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Nonhuman Laboratory Test Result' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_NONHUMAN_LABORATORY_TEST_RESULT = 1183;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Macroscopic Finding' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_MACROSCOPIC_FINDING = 1184;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Microscopic Findings' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_MICROSCOPIC_FINDINGS = 1185;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Organ Measurement' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_ORGAN_MEASUREMENT = 1186;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Palpable Mass' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_PALPABLE_MASS = 1187;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Pharmacokinetic Concentration Finding' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_PHARMACOKINETIC_CONCENTRATION_FINDING = 1188;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Subject Characteristic' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_SUBJECT_CHARACTERISTIC = 1189;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Tumor Finding' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_TUMOR_FINDING = 1190;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Vital Sign' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_VITAL_SIGN = 1191;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section ECG Test Result' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_ECG_TEST_RESULT = 1192;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Study Subject Event' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_STUDY_SUBJECT_EVENT = 1193;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Study Subject Finding' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_STUDY_SUBJECT_FINDING = 1194;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Study Subject Intervention' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_STUDY_SUBJECT_INTERVENTION = 1195;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Comment' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_COMMENT = 1196;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Data Document Section Pharmacokinetic Parameter Finding' of 'Nonhuman Subject Data Document Section'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION__NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION_PHARMACOKINETIC_PARAMETER_FINDING = 1197;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Template Id' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_TEMPLATE_ID = 1198;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Class Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_CLASS_CODE = 1199;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Mood Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_MOOD_CODE = 1200;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Code P' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_CODE_P = 1201;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_CODE = 1202;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Study Arm' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_STUDY_ARM = 1203;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Comment' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_COMMENT = 1204;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Domain Assignment' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_DOMAIN_ASSIGNMENT = 1205;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Related Record' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_RELATED_RECORD = 1206;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Supplemental Value' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_SUPPLEMENTAL_VALUE = 1207;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographics Reference Period' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICS_REFERENCE_PERIOD = 1208;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsstrain Associationsubject Strain Class Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSTRAIN_ASSOCIATIONSUBJECT_STRAIN_CLASS_CODE = 1209;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsstrain Associationsubject Strain Code P' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSTRAIN_ASSOCIATIONSUBJECT_STRAIN_CODE_P = 1210;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsstrain Associationsubject Strain Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSTRAIN_ASSOCIATIONSUBJECT_STRAIN_CODE = 1211;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsstrain Associationsubject Strain Mood Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSTRAIN_ASSOCIATIONSUBJECT_STRAIN_MOOD_CODE = 1212;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsstrain Associationsubject Strain Value' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSTRAIN_ASSOCIATIONSUBJECT_STRAIN_VALUE = 1213;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsstrain Associationsubject Strain Value P' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSTRAIN_ASSOCIATIONSUBJECT_STRAIN_VALUE_P = 1214;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsstrain Associationsubject Strain Text' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSTRAIN_ASSOCIATIONSUBJECT_STRAIN_TEXT = 1215;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsstrain Association Type Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSTRAIN_ASSOCIATION_TYPE_CODE = 1216;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsstrain Association Subject Strain' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSTRAIN_ASSOCIATION_SUBJECT_STRAIN = 1217;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsage Association Subject Age Class Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSAGE_ASSOCIATION_SUBJECT_AGE_CLASS_CODE = 1218;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsage Association Subject Age Code P' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSAGE_ASSOCIATION_SUBJECT_AGE_CODE_P = 1219;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsage Association Subject Age Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSAGE_ASSOCIATION_SUBJECT_AGE_CODE = 1220;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsage Association Subject Age Mood Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSAGE_ASSOCIATION_SUBJECT_AGE_MOOD_CODE = 1221;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsage Association Subject Age Value' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSAGE_ASSOCIATION_SUBJECT_AGE_VALUE = 1222;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsage Association Type Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSAGE_ASSOCIATION_TYPE_CODE = 1223;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsage Association Subject Age' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSAGE_ASSOCIATION_SUBJECT_AGE = 1224;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsspecies Associationsubject Species Class Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSPECIES_ASSOCIATIONSUBJECT_SPECIES_CLASS_CODE = 1225;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsspecies Associationsubject Species Mood Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSPECIES_ASSOCIATIONSUBJECT_SPECIES_MOOD_CODE = 1226;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsspecies Associationsubject Species Code P' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSPECIES_ASSOCIATIONSUBJECT_SPECIES_CODE_P = 1227;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsspecies Associationsubject Species Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSPECIES_ASSOCIATIONSUBJECT_SPECIES_CODE = 1228;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsspecies Associationsubject Species Value' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSPECIES_ASSOCIATIONSUBJECT_SPECIES_VALUE = 1229;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsspecies Associationsubject Species Value P' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSPECIES_ASSOCIATIONSUBJECT_SPECIES_VALUE_P = 1230;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsspecies Association Type Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSPECIES_ASSOCIATION_TYPE_CODE = 1231;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsspecies Association Subject Species' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSPECIES_ASSOCIATION_SUBJECT_SPECIES = 1232;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsset Membership Associationset Membership Class Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSET_MEMBERSHIP_ASSOCIATIONSET_MEMBERSHIP_CLASS_CODE = 1233;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsset Membership Associationset Membership Code P' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSET_MEMBERSHIP_ASSOCIATIONSET_MEMBERSHIP_CODE_P = 1234;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsset Membership Associationset Membership Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSET_MEMBERSHIP_ASSOCIATIONSET_MEMBERSHIP_CODE = 1235;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsset Membership Associationset Membership Mood Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSET_MEMBERSHIP_ASSOCIATIONSET_MEMBERSHIP_MOOD_CODE = 1236;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsset Membership Associationset Membership Value' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSET_MEMBERSHIP_ASSOCIATIONSET_MEMBERSHIP_VALUE = 1237;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsset Membership Association Type Code' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSET_MEMBERSHIP_ASSOCIATION_TYPE_CODE = 1238;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Subject Demographicsset Membership Association Set Membership' of 'Nonhuman Subject Demographics'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_SUBJECT_DEMOGRAPHICS__NONHUMAN_SUBJECT_DEMOGRAPHICSSET_MEMBERSHIP_ASSOCIATION_SET_MEMBERSHIP = 1239;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Template Id' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_TEMPLATE_ID = 1240;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Class Code' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_CLASS_CODE = 1241;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Mood Code' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_MOOD_CODE = 1242;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Id' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_ID = 1243;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Code' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_CODE = 1244;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Effective Time' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_EFFECTIVE_TIME = 1245;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Study Day Period' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_STUDY_DAY_PERIOD = 1246;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Planned Study Day' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_PLANNED_STUDY_DAY = 1247;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Comment' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_COMMENT = 1248;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Domain Assignment' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_DOMAIN_ASSIGNMENT = 1249;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Related Record' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_RELATED_RECORD = 1250;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Disposition Supplemental Value' of 'Nonhuman Disposition'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_DISPOSITION__NONHUMAN_DISPOSITION_SUPPLEMENTAL_VALUE = 1251;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Template Id' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_TEMPLATE_ID = 1252;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Class Code' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_CLASS_CODE = 1253;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Mood Code' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_MOOD_CODE = 1254;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Dose Quantity' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_DOSE_QUANTITY = 1255;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Effective Time' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_EFFECTIVE_TIME = 1256;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Id' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_ID = 1257;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Route Code' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_ROUTE_CODE = 1258;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Route Code P' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_ROUTE_CODE_P = 1259;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Max Dose Quantity' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_MAX_DOSE_QUANTITY = 1260;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Text' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_TEXT = 1261;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Approach Site Code' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_APPROACH_SITE_CODE = 1262;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Approach Site Code P' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_APPROACH_SITE_CODE_P = 1263;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Consumable Material' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_CONSUMABLE_MATERIAL = 1264;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Timing Reference' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_TIMING_REFERENCE = 1265;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Study Day Period' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_STUDY_DAY_PERIOD = 1266;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Comment' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_COMMENT = 1267;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Domain Assignment' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_DOMAIN_ASSIGNMENT = 1268;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Related Record' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_RELATED_RECORD = 1269;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Supplemental Value' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_SUPPLEMENTAL_VALUE = 1270;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Dose Adjustment Reason' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_DOSE_ADJUSTMENT_REASON = 1271;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Category' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_CATEGORY = 1272;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Sub Category' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_SUB_CATEGORY = 1273;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Nonhuman Exposure Event Duration' of 'Nonhuman Exposure'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int NONHUMAN_EXPOSURE__NONHUMAN_EXPOSURE_EVENT_DURATION = 1274;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Template Id' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_TEMPLATE_ID = 1275;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Class Code' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_CLASS_CODE = 1276;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Mood Code' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_MOOD_CODE = 1277;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Id' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_ID = 1278;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Code P' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_CODE_P = 1279;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Code' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_CODE = 1280;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Status Code' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_STATUS_CODE = 1281;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Value' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_VALUE = 1282;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Interpretation Code P' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_INTERPRETATION_CODE_P = 1283;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Interpretation Code' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_INTERPRETATION_CODE = 1284;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Non Performance Reason' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_NON_PERFORMANCE_REASON = 1285;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Data Collection' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_DATA_COLLECTION = 1286;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Exclusion Reason' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_EXCLUSION_REASON = 1287;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Comment' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_COMMENT = 1288;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Domain Assignment' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_DOMAIN_ASSIGNMENT = 1289;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Related Record' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_RELATED_RECORD = 1290;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Supplemental Value' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_SUPPLEMENTAL_VALUE = 1291;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Fasting Status' of 'Body Weight'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT__BODY_WEIGHT_FASTING_STATUS = 1292;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Template Id' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_TEMPLATE_ID = 1293;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Class Code' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_CLASS_CODE = 1294;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Mood Code' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_MOOD_CODE = 1295;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Id' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_ID = 1296;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Code P' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_CODE_P = 1297;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Code' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_CODE = 1298;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Status Code' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_STATUS_CODE = 1299;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Effective Time' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_EFFECTIVE_TIME = 1300;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Value' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_VALUE = 1301;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Interpretation Code P' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_INTERPRETATION_CODE_P = 1302;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Interpretation Code' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_INTERPRETATION_CODE = 1303;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Non Performance Reason' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_NON_PERFORMANCE_REASON = 1304;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Study Day Period' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_STUDY_DAY_PERIOD = 1305;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Timing Reference' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_TIMING_REFERENCE = 1306;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Exclusion Reason' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_EXCLUSION_REASON = 1307;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Comment' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_COMMENT = 1308;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Domain Assignment' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_DOMAIN_ASSIGNMENT = 1309;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Related Record' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_RELATED_RECORD = 1310;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Supplemental Value' of 'Body Weight Gain'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_SUPPLEMENTAL_VALUE = 1311;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Template Id' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_TEMPLATE_ID = 1312;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Class Code' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_CLASS_CODE = 1313;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Mood Code' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_MOOD_CODE = 1314;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Code P' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_CODE_P = 1315;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Code' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_CODE = 1316;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Id' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_ID = 1317;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Value' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_VALUE = 1318;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Status Code' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_STATUS_CODE = 1319;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Target Site Code P' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_TARGET_SITE_CODE_P = 1320;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Target Site Code' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_TARGET_SITE_CODE = 1321;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Interpretation Code P' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_INTERPRETATION_CODE_P = 1322;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Interpretation Code' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_INTERPRETATION_CODE = 1323;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Group Identifier' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_GROUP_IDENTIFIER = 1324;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Body Systemor Organ Class' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_BODY_SYSTEMOR_ORGAN_CLASS = 1325;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Non Performance Reason' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_NON_PERFORMANCE_REASON = 1326;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Study Finding Evaluator' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_STUDY_FINDING_EVALUATOR = 1327;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Event Severity' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_EVENT_SEVERITY = 1328;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Planned Study Day' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_PLANNED_STUDY_DAY = 1329;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Data Collection' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_DATA_COLLECTION = 1330;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Timing Reference' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_TIMING_REFERENCE = 1331;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Mass Identification' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_MASS_IDENTIFICATION = 1332;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Exclusion Reason' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_EXCLUSION_REASON = 1333;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Comment' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_COMMENT = 1334;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Domain Assignment' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_DOMAIN_ASSIGNMENT = 1335;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Related Record' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_RELATED_RECORD = 1336;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Supplemental Value' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_SUPPLEMENTAL_VALUE = 1337;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Category' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_CATEGORY = 1338;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Sub Category' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_SUB_CATEGORY = 1339;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Result Category' of 'Clinical Observation'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_RESULT_CATEGORY = 1340;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Template Id' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_TEMPLATE_ID = 1341;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Class Code' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_CLASS_CODE = 1342;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Mood Code' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_MOOD_CODE = 1343;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Id' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_ID = 1344;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Code P' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_CODE_P = 1345;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Code' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_CODE = 1346;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Value' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_VALUE = 1347;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Value P' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_VALUE_P = 1348;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Study Finding Evaluator' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_STUDY_FINDING_EVALUATOR = 1349;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Data Collection' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_DATA_COLLECTION = 1350;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Comment' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_COMMENT = 1351;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Domain Assignment' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_DOMAIN_ASSIGNMENT = 1352;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Related Record' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_RELATED_RECORD = 1353;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Supplemental Value' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_SUPPLEMENTAL_VALUE = 1354;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Result Category' of 'Death Diagnosis'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_RESULT_CATEGORY = 1355;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Template Id' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_TEMPLATE_ID = 1356;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Class Code' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_CLASS_CODE = 1357;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Mood Code' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_MOOD_CODE = 1358;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Id' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_ID = 1359;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Code P' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_CODE_P = 1360;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Code' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_CODE = 1361;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Status Code' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_STATUS_CODE = 1362;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Effective Time' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_EFFECTIVE_TIME = 1363;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Value' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_VALUE = 1364;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Interpretation Code P' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_INTERPRETATION_CODE_P = 1365;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Interpretation Code' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_INTERPRETATION_CODE = 1366;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Non Performance Reason' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_NON_PERFORMANCE_REASON = 1367;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Study Day Period' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_STUDY_DAY_PERIOD = 1368;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Exclusion Reason' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_EXCLUSION_REASON = 1369;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Group Identifier' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_GROUP_IDENTIFIER = 1370;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Comment' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_COMMENT = 1371;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Domain Assignment' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_DOMAIN_ASSIGNMENT = 1372;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Related Record' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_RELATED_RECORD = 1373;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Supplemental Value' of 'Foodand Water Consumption'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_SUPPLEMENTAL_VALUE = 1374;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Template Id' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_TEMPLATE_ID = 1375;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Class Code' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_CLASS_CODE = 1376;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Mood Code' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_MOOD_CODE = 1377;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Code P' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_CODE_P = 1378;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Code' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_CODE = 1379;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Id' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_ID = 1380;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Value' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_VALUE = 1381;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Status Code' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_STATUS_CODE = 1382;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Mass Identification' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_MASS_IDENTIFICATION = 1383;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Group Identifier' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_GROUP_IDENTIFIER = 1384;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Specimen Information' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_SPECIMEN_INFORMATION = 1385;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Body Systemor Organ Class' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_BODY_SYSTEMOR_ORGAN_CLASS = 1386;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Non Performance Reason' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_NON_PERFORMANCE_REASON = 1387;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Study Test Performer' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_STUDY_TEST_PERFORMER = 1388;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Study Finding Evaluator' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_STUDY_FINDING_EVALUATOR = 1389;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Event Severity' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_EVENT_SEVERITY = 1390;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Data Collection' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_DATA_COLLECTION = 1391;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Comment' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_COMMENT = 1392;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Domain Assignment' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_DOMAIN_ASSIGNMENT = 1393;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Related Record' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_RELATED_RECORD = 1394;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Supplemental Value' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_SUPPLEMENTAL_VALUE = 1395;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Death Relationship' of 'Macroscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_DEATH_RELATIONSHIP = 1396;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Template Id' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_TEMPLATE_ID = 1397;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Class Code' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_CLASS_CODE = 1398;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Mood Code' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_MOOD_CODE = 1399;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Id' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_ID = 1400;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Code P' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_CODE_P = 1401;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Code' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_CODE = 1402;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Status Code' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_STATUS_CODE = 1403;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Value' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_VALUE = 1404;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Method Code P' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_METHOD_CODE_P = 1405;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Method Code' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_METHOD_CODE = 1406;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Non Performance Reason' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_NON_PERFORMANCE_REASON = 1407;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Study Test Performer' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_STUDY_TEST_PERFORMER = 1408;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Specimen Information' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_SPECIMEN_INFORMATION = 1409;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Study Finding Evaluator' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_STUDY_FINDING_EVALUATOR = 1410;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Event Severity' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_EVENT_SEVERITY = 1411;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Data Collection' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_DATA_COLLECTION = 1412;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Group Identifier' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_GROUP_IDENTIFIER = 1413;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Mass Identification' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_MASS_IDENTIFICATION = 1414;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Body Systemor Organ Class' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_BODY_SYSTEMOR_ORGAN_CLASS = 1415;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Comment' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_COMMENT = 1416;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Domain Assignment' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_DOMAIN_ASSIGNMENT = 1417;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Related Record' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_RELATED_RECORD = 1418;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Supplemental Value' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_SUPPLEMENTAL_VALUE = 1419;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Result Category' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_RESULT_CATEGORY = 1420;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Finding Death Relationship' of 'Microscopic Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MICROSCOPIC_FINDING__MICROSCOPIC_FINDING_DEATH_RELATIONSHIP = 1421;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Template Id' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_TEMPLATE_ID = 1422;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Class Code' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_CLASS_CODE = 1423;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Mood Code' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_MOOD_CODE = 1424;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Id' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_ID = 1425;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Code P' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_CODE_P = 1426;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Code' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_CODE = 1427;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Status Code' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_STATUS_CODE = 1428;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Value' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_VALUE = 1429;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Interpretation Code P' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_INTERPRETATION_CODE_P = 1430;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Interpretation Code' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_INTERPRETATION_CODE = 1431;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Non Performance Reason' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_NON_PERFORMANCE_REASON = 1432;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Specimen Information' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_SPECIMEN_INFORMATION = 1433;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Data Collection' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_DATA_COLLECTION = 1434;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Comment' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_COMMENT = 1435;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Exclusion Reason' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_EXCLUSION_REASON = 1436;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Related Record' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_RELATED_RECORD = 1437;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Supplemental Value' of 'Organ Measurement'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_SUPPLEMENTAL_VALUE = 1438;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Template Id' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_TEMPLATE_ID = 1439;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Class Code' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_CLASS_CODE = 1440;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Mood Code' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_MOOD_CODE = 1441;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Id' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_ID = 1442;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Code P' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_CODE_P = 1443;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Code' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_CODE = 1444;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Status Code' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_STATUS_CODE = 1445;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Value' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_VALUE = 1446;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Target Site Code P' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_TARGET_SITE_CODE_P = 1447;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Target Site Code' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_TARGET_SITE_CODE = 1448;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Non Performance Reason' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_NON_PERFORMANCE_REASON = 1449;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Study Finding Evaluator' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_STUDY_FINDING_EVALUATOR = 1450;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Planned Study Day' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_PLANNED_STUDY_DAY = 1451;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Data Collection' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_DATA_COLLECTION = 1452;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Mass Identification' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_MASS_IDENTIFICATION = 1453;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Comment' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_COMMENT = 1454;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Domain Assignment' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_DOMAIN_ASSIGNMENT = 1455;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Related Record' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_RELATED_RECORD = 1456;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Supplemental Value' of 'Palpable Mass'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int PALPABLE_MASS__PALPABLE_MASS_SUPPLEMENTAL_VALUE = 1457;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Template Id' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_TEMPLATE_ID = 1458;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Id' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_ID = 1459;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Code P' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_CODE_P = 1460;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Code' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_CODE = 1461;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Status Code' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_STATUS_CODE = 1462;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Value' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_VALUE = 1463;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Method Code P' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_METHOD_CODE_P = 1464;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Method Code' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_METHOD_CODE = 1465;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Group Identifier' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_GROUP_IDENTIFIER = 1466;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Specimen Information' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_SPECIMEN_INFORMATION = 1467;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Mass Identification' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_MASS_IDENTIFICATION = 1468;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Non Performance Reason' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_NON_PERFORMANCE_REASON = 1469;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Study Test Performer' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_STUDY_TEST_PERFORMER = 1470;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Detection Delay Association' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_DETECTION_DELAY_ASSOCIATION = 1471;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Comment' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_COMMENT = 1472;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Domain Assignment' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_DOMAIN_ASSIGNMENT = 1473;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Related Record' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_RELATED_RECORD = 1474;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Supplemental Value' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_SUPPLEMENTAL_VALUE = 1475;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Result Category' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_RESULT_CATEGORY = 1476;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Death Relationship' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDING_DEATH_RELATIONSHIP = 1477;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Findingdetection Delay Associationdetection Delay Class Code' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDINGDETECTION_DELAY_ASSOCIATIONDETECTION_DELAY_CLASS_CODE = 1478;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Findingdetection Delay Associationdetection Delay Code' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDINGDETECTION_DELAY_ASSOCIATIONDETECTION_DELAY_CODE = 1479;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Findingdetection Delay Associationdetection Delay Mood Code' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDINGDETECTION_DELAY_ASSOCIATIONDETECTION_DELAY_MOOD_CODE = 1480;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Findingdetection Delay Associationdetection Delay Value' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDINGDETECTION_DELAY_ASSOCIATIONDETECTION_DELAY_VALUE = 1481;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Findingdetection Delay Association Type Code' of 'Tumor Finding'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int TUMOR_FINDING__TUMOR_FINDINGDETECTION_DELAY_ASSOCIATION_TYPE_CODE = 1482;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Template Id' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_TEMPLATE_ID = 1483;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Mood Code' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_MOOD_CODE = 1484;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Code P' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_CODE_P = 1485;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Code' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_CODE = 1486;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Id' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_ID = 1487;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Participant' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_PARTICIPANT = 1488;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Pool Participant Subject Member Class Code' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_POOL_PARTICIPANT_SUBJECT_MEMBER_CLASS_CODE = 1489;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Pool Participant Subject Member Id' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_POOL_PARTICIPANT_SUBJECT_MEMBER_ID = 1490;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Pool Participant Type Code' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_POOL_PARTICIPANT_TYPE_CODE = 1491;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Pool Participant Participant Role' of 'Subject Pool'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int SUBJECT_POOL__SUBJECT_POOL_POOL_PARTICIPANT_PARTICIPANT_ROLE = 1492;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Mass Identification Template Id' of 'Mass Identification'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MASS_IDENTIFICATION__MASS_IDENTIFICATION_TEMPLATE_ID = 1493;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Mass Identification Type Code' of 'Mass Identification'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MASS_IDENTIFICATION__MASS_IDENTIFICATION_TYPE_CODE = 1494;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Mass Identification Participant Role' of 'Mass Identification'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int MASS_IDENTIFICATION__MASS_IDENTIFICATION_PARTICIPANT_ROLE = 1495;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Range Template Id' of 'Reference Range'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_RANGE__REFERENCE_RANGE_TEMPLATE_ID = 1496;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Range Class Code' of 'Reference Range'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_RANGE__REFERENCE_RANGE_CLASS_CODE = 1497;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Range Mood Code' of 'Reference Range'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_RANGE__REFERENCE_RANGE_MOOD_CODE = 1498;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Range Code' of 'Reference Range'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_RANGE__REFERENCE_RANGE_CODE = 1499;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Range Code P' of 'Reference Range'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_RANGE__REFERENCE_RANGE_CODE_P = 1500;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Range Value' of 'Reference Range'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_RANGE__REFERENCE_RANGE_VALUE = 1501;

	/**
	 * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Reference Range Interpretation Code' of 'Reference Range'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static final int REFERENCE_RANGE__REFERENCE_RANGE_INTERPRETATION_CODE = 1502;

	/**
	 * A constant with a fixed name that can be used as the base value for additional hand written constants.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	private static final int GENERATED_DIAGNOSTIC_CODE_COUNT = 1502;

	/**
	 * A constant with a fixed name that can be used as the base value for additional hand written constants in a derived class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected static final int DIAGNOSTIC_CODE_COUNT = GENERATED_DIAGNOSTIC_CODE_COUNT;

	/**
	 * The cached base package validator.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CDAValidator cdaValidator;

	/**
	 * Creates an instance of the switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public SdtmValidator() {
		super();
		cdaValidator = CDAValidator.INSTANCE;
	}

	/**
	 * Returns the package of this validator switch.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EPackage getEPackage() {
	  return SdtmPackage.eINSTANCE;
	}

	/**
	 * Calls <code>validateXXX</code> for the corresponding classifier of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected boolean validate(int classifierID, Object value, DiagnosticChain diagnostics, Map<Object, Object> context) {
		switch (classifierID) {
			case SdtmPackage.SUBJECT_DATA_HUMAN_CLINICAL_TRIALS:
				return validateSubjectDataHumanClinicalTrials((SubjectDataHumanClinicalTrials)value, diagnostics, context);
			case SdtmPackage.HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_SECTION:
				return validateHumanClinicalSubjectDataDocumentSection((HumanClinicalSubjectDataDocumentSection)value, diagnostics, context);
			case SdtmPackage.HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS:
				return validateHumanClinicalSubjectDemographics((HumanClinicalSubjectDemographics)value, diagnostics, context);
			case SdtmPackage.DATA_COLLECTION:
				return validateDataCollection((DataCollection)value, diagnostics, context);
			case SdtmPackage.EVENT_STUDY_DAY:
				return validateEventStudyDay((EventStudyDay)value, diagnostics, context);
			case SdtmPackage.STUDY_ARM:
				return validateStudyArm((StudyArm)value, diagnostics, context);
			case SdtmPackage.COMMENT:
				return validateComment((Comment)value, diagnostics, context);
			case SdtmPackage.DOMAIN_ASSIGNMENT:
				return validateDomainAssignment((DomainAssignment)value, diagnostics, context);
			case SdtmPackage.RELATED_RECORD:
				return validateRelatedRecord((RelatedRecord)value, diagnostics, context);
			case SdtmPackage.SUPPLEMENTAL_VALUE:
				return validateSupplementalValue((SupplementalValue)value, diagnostics, context);
			case SdtmPackage.REFERENCE_PERIOD:
				return validateReferencePeriod((ReferencePeriod)value, diagnostics, context);
			case SdtmPackage.FINDING_ABOUT:
				return validateFindingAbout((FindingAbout)value, diagnostics, context);
			case SdtmPackage.GROUP_IDENTIFIER:
				return validateGroupIdentifier((GroupIdentifier)value, diagnostics, context);
			case SdtmPackage.NON_PERFORMANCE_REASON:
				return validateNonPerformanceReason((NonPerformanceReason)value, diagnostics, context);
			case SdtmPackage.CATEGORY:
				return validateCategory((Category)value, diagnostics, context);
			case SdtmPackage.SUB_CATEGORY:
				return validateSubCategory((SubCategory)value, diagnostics, context);
			case SdtmPackage.VISIT:
				return validateVisit((Visit)value, diagnostics, context);
			case SdtmPackage.VITAL_SIGN:
				return validateVitalSign((VitalSign)value, diagnostics, context);
			case SdtmPackage.TIMING_REFERENCE:
				return validateTimingReference((TimingReference)value, diagnostics, context);
			case SdtmPackage.PLANNED_STUDY_DAY:
				return validatePlannedStudyDay((PlannedStudyDay)value, diagnostics, context);
			case SdtmPackage.STUDY_DAY_PERIOD:
				return validateStudyDayPeriod((StudyDayPeriod)value, diagnostics, context);
			case SdtmPackage.EXCLUSION_REASON:
				return validateExclusionReason((ExclusionReason)value, diagnostics, context);
			case SdtmPackage.POSITIONOF_SUBJECT:
				return validatePositionofSubject((PositionofSubject)value, diagnostics, context);
			case SdtmPackage.ECG_TEST_RESULT:
				return validateECGTestResult((ECGTestResult)value, diagnostics, context);
			case SdtmPackage.PHYSICAL_EXAMINATION_FINDING:
				return validatePhysicalExaminationFinding((PhysicalExaminationFinding)value, diagnostics, context);
			case SdtmPackage.BODY_SYSTEMOR_ORGAN_CLASS:
				return validateBodySystemorOrganClass((BodySystemorOrganClass)value, diagnostics, context);
			case SdtmPackage.MICROBIOLOGY_SPECIMEN_FINDING:
				return validateMicrobiologySpecimenFinding((MicrobiologySpecimenFinding)value, diagnostics, context);
			case SdtmPackage.SPECIMEN_INFORMATION:
				return validateSpecimenInformation((SpecimenInformation)value, diagnostics, context);
			case SdtmPackage.RESULT_CATEGORY:
				return validateResultCategory((ResultCategory)value, diagnostics, context);
			case SdtmPackage.MICROBIOLOGY_SUSCEPTIBILITY:
				return validateMicrobiologySusceptibility((MicrobiologySusceptibility)value, diagnostics, context);
			case SdtmPackage.PHARMACOKINETIC_CONCENTRATION_FINDING:
				return validatePharmacokineticConcentrationFinding((PharmacokineticConcentrationFinding)value, diagnostics, context);
			case SdtmPackage.FASTING_STATUS:
				return validateFastingStatus((FastingStatus)value, diagnostics, context);
			case SdtmPackage.ASSAY_QUANTITATION:
				return validateAssayQuantitation((AssayQuantitation)value, diagnostics, context);
			case SdtmPackage.DRUG_ACCOUNTABILITY:
				return validateDrugAccountability((DrugAccountability)value, diagnostics, context);
			case SdtmPackage.HUMAN_CLINICAL_LABORATORY_TEST_RESULT:
				return validateHumanClinicalLaboratoryTestResult((HumanClinicalLaboratoryTestResult)value, diagnostics, context);
			case SdtmPackage.TOXICITY:
				return validateToxicity((Toxicity)value, diagnostics, context);
			case SdtmPackage.QUESTIONNAIRE_FINDING:
				return validateQuestionnaireFinding((QuestionnaireFinding)value, diagnostics, context);
			case SdtmPackage.PHARMACOKINETIC_PARAMETER_FINDING:
				return validatePharmacokineticParameterFinding((PharmacokineticParameterFinding)value, diagnostics, context);
			case SdtmPackage.SUBJECT_ELEMENT:
				return validateSubjectElement((SubjectElement)value, diagnostics, context);
			case SdtmPackage.STUDY_EPOCH:
				return validateStudyEpoch((StudyEpoch)value, diagnostics, context);
			case SdtmPackage.HUMAN_CLINICAL_DISPOSITION:
				return validateHumanClinicalDisposition((HumanClinicalDisposition)value, diagnostics, context);
			case SdtmPackage.MEDICAL_HISTORY_ITEM:
				return validateMedicalHistoryItem((MedicalHistoryItem)value, diagnostics, context);
			case SdtmPackage.PRE_SPECIFIED_EVENT:
				return validatePreSpecifiedEvent((PreSpecifiedEvent)value, diagnostics, context);
			case SdtmPackage.START_RELATIVETO_REFERENCE_PERIOD:
				return validateStartRelativetoReferencePeriod((StartRelativetoReferencePeriod)value, diagnostics, context);
			case SdtmPackage.STOP_RELATIVETO_REFERENCE_PERIOD:
				return validateStopRelativetoReferencePeriod((StopRelativetoReferencePeriod)value, diagnostics, context);
			case SdtmPackage.PROTOCOL_DEVIATION:
				return validateProtocolDeviation((ProtocolDeviation)value, diagnostics, context);
			case SdtmPackage.CLINICAL_EVENT:
				return validateClinicalEvent((ClinicalEvent)value, diagnostics, context);
			case SdtmPackage.EVENTOR_FINDING_SEVERITY:
				return validateEventorFindingSeverity((EventorFindingSeverity)value, diagnostics, context);
			case SdtmPackage.SUBJECT_CHARACTERISTIC:
				return validateSubjectCharacteristic((SubjectCharacteristic)value, diagnostics, context);
			case SdtmPackage.STUDY_SUBJECT_EVENT:
				return validateStudySubjectEvent((StudySubjectEvent)value, diagnostics, context);
			case SdtmPackage.SERIOUS_EVENT:
				return validateSeriousEvent((SeriousEvent)value, diagnostics, context);
			case SdtmPackage.STUDY_TREATMENT_ACTION_TAKEN:
				return validateStudyTreatmentActionTaken((StudyTreatmentActionTaken)value, diagnostics, context);
			case SdtmPackage.OTHER_TREATMENT_ACTION_TAKEN:
				return validateOtherTreatmentActionTaken((OtherTreatmentActionTaken)value, diagnostics, context);
			case SdtmPackage.STUDY_TREATMENT_CAUSALITY:
				return validateStudyTreatmentCausality((StudyTreatmentCausality)value, diagnostics, context);
			case SdtmPackage.NON_STUDY_TREATMENT_RELATIONSHIP:
				return validateNonStudyTreatmentRelationship((NonStudyTreatmentRelationship)value, diagnostics, context);
			case SdtmPackage.EVENT_PATTERN:
				return validateEventPattern((EventPattern)value, diagnostics, context);
			case SdtmPackage.EVENT_OUTCOME:
				return validateEventOutcome((EventOutcome)value, diagnostics, context);
			case SdtmPackage.CONCOMITANT_TREATMENT:
				return validateConcomitantTreatment((ConcomitantTreatment)value, diagnostics, context);
			case SdtmPackage.EVENT_DURATION:
				return validateEventDuration((EventDuration)value, diagnostics, context);
			case SdtmPackage.STUDY_SUBJECT_FINDING:
				return validateStudySubjectFinding((StudySubjectFinding)value, diagnostics, context);
			case SdtmPackage.DEATH_RELATIONSHIP:
				return validateDeathRelationship((DeathRelationship)value, diagnostics, context);
			case SdtmPackage.STUDY_SUBJECT_INTERVENTION:
				return validateStudySubjectIntervention((StudySubjectIntervention)value, diagnostics, context);
			case SdtmPackage.INDICATION:
				return validateIndication((Indication)value, diagnostics, context);
			case SdtmPackage.INTENDED_REGIMEN:
				return validateIntendedRegimen((IntendedRegimen)value, diagnostics, context);
			case SdtmPackage.DOSE_ADJUSTMENT_REASON:
				return validateDoseAdjustmentReason((DoseAdjustmentReason)value, diagnostics, context);
			case SdtmPackage.ADVERSE_EVENT:
				return validateAdverseEvent((AdverseEvent)value, diagnostics, context);
			case SdtmPackage.INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET:
				return validateInclusionorExclusionCriteriaNotMet((InclusionorExclusionCriteriaNotMet)value, diagnostics, context);
			case SdtmPackage.CONCOMITANT_MEDICATION:
				return validateConcomitantMedication((ConcomitantMedication)value, diagnostics, context);
			case SdtmPackage.CONSUMABLE_MATERIAL:
				return validateConsumableMaterial((ConsumableMaterial)value, diagnostics, context);
			case SdtmPackage.HUMAN_CLINICAL_EXPOSURE:
				return validateHumanClinicalExposure((HumanClinicalExposure)value, diagnostics, context);
			case SdtmPackage.SUBSTANCE_USE:
				return validateSubstanceUse((SubstanceUse)value, diagnostics, context);
			case SdtmPackage.NONHUMAN_LABORATORY_TEST_RESULT:
				return validateNonhumanLaboratoryTestResult((NonhumanLaboratoryTestResult)value, diagnostics, context);
			case SdtmPackage.STUDY_TEST_ORGANIZATION:
				return validateStudyTestOrganization((StudyTestOrganization)value, diagnostics, context);
			case SdtmPackage.STUDY_FINDING_EVALUATOR:
				return validateStudyFindingEvaluator((StudyFindingEvaluator)value, diagnostics, context);
			case SdtmPackage.SUBJECT_DATA_NON_CLINICAL_TRIALS:
				return validateSubjectDataNonClinicalTrials((SubjectDataNonClinicalTrials)value, diagnostics, context);
			case SdtmPackage.NONHUMAN_SUBJECT_DATA_DOCUMENT_SECTION:
				return validateNonhumanSubjectDataDocumentSection((NonhumanSubjectDataDocumentSection)value, diagnostics, context);
			case SdtmPackage.NONHUMAN_SUBJECT_DEMOGRAPHICS:
				return validateNonhumanSubjectDemographics((NonhumanSubjectDemographics)value, diagnostics, context);
			case SdtmPackage.NONHUMAN_DISPOSITION:
				return validateNonhumanDisposition((NonhumanDisposition)value, diagnostics, context);
			case SdtmPackage.NONHUMAN_EXPOSURE:
				return validateNonhumanExposure((NonhumanExposure)value, diagnostics, context);
			case SdtmPackage.BODY_WEIGHT:
				return validateBodyWeight((BodyWeight)value, diagnostics, context);
			case SdtmPackage.BODY_WEIGHT_GAIN:
				return validateBodyWeightGain((BodyWeightGain)value, diagnostics, context);
			case SdtmPackage.CLINICAL_OBSERVATION:
				return validateClinicalObservation((ClinicalObservation)value, diagnostics, context);
			case SdtmPackage.DEATH_DIAGNOSIS:
				return validateDeathDiagnosis((DeathDiagnosis)value, diagnostics, context);
			case SdtmPackage.FOODAND_WATER_CONSUMPTION:
				return validateFoodandWaterConsumption((FoodandWaterConsumption)value, diagnostics, context);
			case SdtmPackage.MACROSCOPIC_FINDING:
				return validateMacroscopicFinding((MacroscopicFinding)value, diagnostics, context);
			case SdtmPackage.MICROSCOPIC_FINDING:
				return validateMicroscopicFinding((MicroscopicFinding)value, diagnostics, context);
			case SdtmPackage.ORGAN_MEASUREMENT:
				return validateOrganMeasurement((OrganMeasurement)value, diagnostics, context);
			case SdtmPackage.PALPABLE_MASS:
				return validatePalpableMass((PalpableMass)value, diagnostics, context);
			case SdtmPackage.TUMOR_FINDING:
				return validateTumorFinding((TumorFinding)value, diagnostics, context);
			case SdtmPackage.SUBJECT_POOL:
				return validateSubjectPool((SubjectPool)value, diagnostics, context);
			case SdtmPackage.MASS_IDENTIFICATION:
				return validateMassIdentification((MassIdentification)value, diagnostics, context);
			case SdtmPackage.REFERENCE_RANGE:
				return validateReferenceRange((ReferenceRange)value, diagnostics, context);
			default:
				return true;
		}
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(subjectDataHumanClinicalTrials, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateClinicalDocument_validateClassCode(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateClinicalDocument_validateMoodCode(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsTemplateId(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsClassCode(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsMoodCode(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCodeP(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCode(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsConfidentialityCodeP(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsConfidentialityCode(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsEffectiveTime(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsId(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsLanguageCode(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsRealmCode(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsSetId(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsVersionNumber(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsStudyRelationship(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsSubjectParticipation(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsAuthor(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCustodian(subjectDataHumanClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsHumanClinicalSubjectDataDocumentSection(subjectDataHumanClinicalTrials, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsTemplateId constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsTemplateId(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsClassCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsClassCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsMoodCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsMoodCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsCodeP constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCodeP(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsConfidentialityCodeP constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsConfidentialityCodeP(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsConfidentialityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsConfidentialityCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsConfidentialityCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsConfidentialityCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsEffectiveTime constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsEffectiveTime(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsId constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsId(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsLanguageCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsLanguageCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsRealmCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsRealmCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsSetId constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsSetId(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsSetId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsVersionNumber constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsVersionNumber(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsStudyRelationship constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsStudyRelationship(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsStudyRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsSubjectParticipation constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsSubjectParticipation(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsSubjectParticipation(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsAuthor constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsAuthor(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsAuthor(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsCustodian constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCustodian(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsCustodian(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataHumanClinicalTrialsHumanClinicalSubjectDataDocumentSection constraint of '<em>Subject Data Human Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsHumanClinicalSubjectDataDocumentSection(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsHumanClinicalSubjectDataDocumentSection(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(humanClinicalSubjectDataDocumentSection, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateSection_validateClassCode(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateSection_validateMoodCode(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionTemplateId(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionClassCode(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionMoodCode(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionCode(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionCodeP(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionText(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionHumanClinicalSubjectDemographics(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionHumanClinicalVisit(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionExposureAssociation(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionSubjectElement(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionDisposition(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionMedicalHistory(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionProtocolDeviation(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionClinicalEvent(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionSubjectCharacteristic(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionStudySubjectEvent(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionStudySubjectFinding(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionStudySubjectIntervention(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionComment(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionAdverseEvent(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionInclusionorExclusionCriteriaNotMet(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionFindingAbout(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionexposureAssociationTypeCode(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionexposureAssociationExposureSubstanceAdministration(humanClinicalSubjectDataDocumentSection, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionTemplateId constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionTemplateId(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionClassCode constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionClassCode(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionMoodCode constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionMoodCode(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionCode constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionCode(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionCodeP constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionCodeP(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionText constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionText(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionHumanClinicalSubjectDemographics constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionHumanClinicalSubjectDemographics(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionHumanClinicalSubjectDemographics(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionHumanClinicalVisit constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionHumanClinicalVisit(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionHumanClinicalVisit(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionExposureAssociation constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionExposureAssociation(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionExposureAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionSubjectElement constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionSubjectElement(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionSubjectElement(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionDisposition constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionDisposition(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionDisposition(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionMedicalHistory constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionMedicalHistory(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionMedicalHistory(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionProtocolDeviation constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionProtocolDeviation(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionProtocolDeviation(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionClinicalEvent constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionClinicalEvent(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionClinicalEvent(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionSubjectCharacteristic constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionSubjectCharacteristic(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionSubjectCharacteristic(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionStudySubjectEvent constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionStudySubjectEvent(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionStudySubjectEvent(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionStudySubjectFinding constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionStudySubjectFinding(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionStudySubjectFinding(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionStudySubjectIntervention constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionStudySubjectIntervention(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionStudySubjectIntervention(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionComment constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionComment(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionComment(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionAdverseEvent constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionAdverseEvent(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionAdverseEvent(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionInclusionorExclusionCriteriaNotMet constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionInclusionorExclusionCriteriaNotMet(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionInclusionorExclusionCriteriaNotMet(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionFindingAbout constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionFindingAbout(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionexposureAssociationTypeCode constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionexposureAssociationTypeCode(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionexposureAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDataDocumentSectionexposureAssociationExposureSubstanceAdministration constraint of '<em>Human Clinical Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDataDocumentSection_validateHumanClinicalSubjectDataDocumentSectionexposureAssociationExposureSubstanceAdministration(HumanClinicalSubjectDataDocumentSection humanClinicalSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDataDocumentSection.validateHumanClinicalSubjectDataDocumentSectionexposureAssociationExposureSubstanceAdministration(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(humanClinicalSubjectDemographics, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsTemplateId(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsMoodCode(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsCodeP(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsCode(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsDataCollection(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsStudyArm(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsParticipant(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsComment(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsDomainAssignment(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsRelatedRecord(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsSupplementalValue(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsReferencePeriod(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsFindingAbout(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationTypeCode(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAge(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsLocationParticipationStudySiteClassCode(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsLocationParticipationStudySiteAddr(humanClinicalSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsLocationParticipationTypeCode(humanClinicalSubjectDemographics, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsTemplateId constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsTemplateId(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsMoodCode constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsMoodCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsCodeP constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsCodeP(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsCode constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsDataCollection constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsDataCollection(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsStudyArm constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsStudyArm(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsStudyArm(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsParticipant constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsParticipant(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsParticipant(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsComment constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsComment(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsComment(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsDomainAssignment constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsDomainAssignment(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsRelatedRecord constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsRelatedRecord(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsSupplementalValue constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsSupplementalValue(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsReferencePeriod constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsReferencePeriod(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsFindingAbout constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsFindingAbout(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationTypeCode constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationTypeCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAge constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAge(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAge(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsLocationParticipationStudySiteClassCode constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsLocationParticipationStudySiteClassCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsLocationParticipationStudySiteClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsLocationParticipationStudySiteAddr constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsLocationParticipationStudySiteAddr(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsLocationParticipationStudySiteAddr(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsLocationParticipationTypeCode constraint of '<em>Human Clinical Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsLocationParticipationTypeCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsLocationParticipationTypeCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(dataCollection, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionTemplateId(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionClassCode(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionMoodCode(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionCodeP(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionCode(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionCodeVS(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionEffectiveTime(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionNegationInd(dataCollection, diagnostics, context);
		if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionEventStudyDay(dataCollection, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateDataCollectionTemplateId constraint of '<em>Data Collection</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection_validateDataCollectionTemplateId(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dataCollection.validateDataCollectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDataCollectionClassCode constraint of '<em>Data Collection</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection_validateDataCollectionClassCode(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dataCollection.validateDataCollectionClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateDataCollectionMoodCode constraint of '<em>Data Collection</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection_validateDataCollectionMoodCode(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dataCollection.validateDataCollectionMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateDataCollectionCodeP constraint of '<em>Data Collection</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection_validateDataCollectionCodeP(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dataCollection.validateDataCollectionCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateDataCollectionCode constraint of '<em>Data Collection</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection_validateDataCollectionCode(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dataCollection.validateDataCollectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateDataCollectionCodeVS constraint of '<em>Data Collection</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection_validateDataCollectionCodeVS(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dataCollection.validateDataCollectionCodeVS(diagnostics, context);
	}

	/**
	 * Validates the validateDataCollectionEffectiveTime constraint of '<em>Data Collection</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection_validateDataCollectionEffectiveTime(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dataCollection.validateDataCollectionEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateDataCollectionNegationInd constraint of '<em>Data Collection</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection_validateDataCollectionNegationInd(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dataCollection.validateDataCollectionNegationInd(diagnostics, context);
	}

	/**
	 * Validates the validateDataCollectionEventStudyDay constraint of '<em>Data Collection</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDataCollection_validateDataCollectionEventStudyDay(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return dataCollection.validateDataCollectionEventStudyDay(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventStudyDay(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(eventStudyDay, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayTemplateId(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayClassCode(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayMoodCode(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayCodeP(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayCode(eventStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayValue(eventStudyDay, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateEventStudyDayTemplateId constraint of '<em>Event Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventStudyDay_validateEventStudyDayTemplateId(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventStudyDay.validateEventStudyDayTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEventStudyDayClassCode constraint of '<em>Event Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventStudyDay_validateEventStudyDayClassCode(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventStudyDay.validateEventStudyDayClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventStudyDayMoodCode constraint of '<em>Event Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventStudyDay_validateEventStudyDayMoodCode(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventStudyDay.validateEventStudyDayMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventStudyDayCodeP constraint of '<em>Event Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventStudyDay_validateEventStudyDayCodeP(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventStudyDay.validateEventStudyDayCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateEventStudyDayCode constraint of '<em>Event Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventStudyDay_validateEventStudyDayCode(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventStudyDay.validateEventStudyDayCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventStudyDayValue constraint of '<em>Event Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventStudyDay_validateEventStudyDayValue(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventStudyDay.validateEventStudyDayValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyArm(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studyArm, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmTemplateId(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmClassCode(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmMoodCode(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmCodeP(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmCode(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmText(studyArm, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmEffectiveTime(studyArm, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudyArmTemplateId constraint of '<em>Study Arm</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyArm_validateStudyArmTemplateId(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyArm.validateStudyArmTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudyArmClassCode constraint of '<em>Study Arm</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyArm_validateStudyArmClassCode(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyArm.validateStudyArmClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyArmMoodCode constraint of '<em>Study Arm</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyArm_validateStudyArmMoodCode(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyArm.validateStudyArmMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyArmCodeP constraint of '<em>Study Arm</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyArm_validateStudyArmCodeP(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyArm.validateStudyArmCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudyArmCode constraint of '<em>Study Arm</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyArm_validateStudyArmCode(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyArm.validateStudyArmCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyArmText constraint of '<em>Study Arm</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyArm_validateStudyArmText(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyArm.validateStudyArmText(diagnostics, context);
	}

	/**
	 * Validates the validateStudyArmEffectiveTime constraint of '<em>Study Arm</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyArm_validateStudyArmEffectiveTime(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyArm.validateStudyArmEffectiveTime(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(comment, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentTemplateId(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentClassCode(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentMoodCode(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentId(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentCodeP(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentCode(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentEffectiveTime(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentValue(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentStudyFindingEvaluator(comment, diagnostics, context);
		if (result || diagnostics != null) result &= validateComment_validateCommentReferenceAssociation(comment, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateCommentTemplateId constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentTemplateId(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateCommentClassCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentClassCode(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentMoodCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentMoodCode(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentId constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentId(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentId(diagnostics, context);
	}

	/**
	 * Validates the validateCommentCodeP constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentCodeP(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateCommentCode constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentCode(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentCode(diagnostics, context);
	}

	/**
	 * Validates the validateCommentEffectiveTime constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentEffectiveTime(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateCommentValue constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentValue(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentValue(diagnostics, context);
	}

	/**
	 * Validates the validateCommentStudyFindingEvaluator constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentStudyFindingEvaluator(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validateCommentReferenceAssociation constraint of '<em>Comment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateComment_validateCommentReferenceAssociation(Comment comment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return comment.validateCommentReferenceAssociation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDomainAssignment(DomainAssignment domainAssignment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(domainAssignment, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validateDomainAssignment_validateDomainAssignmentTemplateId(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validateDomainAssignment_validateDomainAssignmentMoodCode(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validateDomainAssignment_validateDomainAssignmentClassCode(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validateDomainAssignment_validateDomainAssignmentCodeP(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validateDomainAssignment_validateDomainAssignmentCode(domainAssignment, diagnostics, context);
		if (result || diagnostics != null) result &= validateDomainAssignment_validateDomainAssignmentValue(domainAssignment, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateDomainAssignmentTemplateId constraint of '<em>Domain Assignment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDomainAssignment_validateDomainAssignmentTemplateId(DomainAssignment domainAssignment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return domainAssignment.validateDomainAssignmentTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDomainAssignmentMoodCode constraint of '<em>Domain Assignment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDomainAssignment_validateDomainAssignmentMoodCode(DomainAssignment domainAssignment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return domainAssignment.validateDomainAssignmentMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateDomainAssignmentClassCode constraint of '<em>Domain Assignment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDomainAssignment_validateDomainAssignmentClassCode(DomainAssignment domainAssignment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return domainAssignment.validateDomainAssignmentClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateDomainAssignmentCodeP constraint of '<em>Domain Assignment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDomainAssignment_validateDomainAssignmentCodeP(DomainAssignment domainAssignment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return domainAssignment.validateDomainAssignmentCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateDomainAssignmentCode constraint of '<em>Domain Assignment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDomainAssignment_validateDomainAssignmentCode(DomainAssignment domainAssignment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return domainAssignment.validateDomainAssignmentCode(diagnostics, context);
	}

	/**
	 * Validates the validateDomainAssignmentValue constraint of '<em>Domain Assignment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDomainAssignment_validateDomainAssignmentValue(DomainAssignment domainAssignment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return domainAssignment.validateDomainAssignmentValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedRecord(RelatedRecord relatedRecord, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(relatedRecord, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validateRelatedRecord_validateRelatedRecordTemplateId(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validateRelatedRecord_validateRelatedRecordClassCode(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validateRelatedRecord_validateRelatedRecordMoodCode(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validateRelatedRecord_validateRelatedRecordId(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validateRelatedRecord_validateRelatedRecordCodeP(relatedRecord, diagnostics, context);
		if (result || diagnostics != null) result &= validateRelatedRecord_validateRelatedRecordCode(relatedRecord, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateRelatedRecordTemplateId constraint of '<em>Related Record</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedRecord_validateRelatedRecordTemplateId(RelatedRecord relatedRecord, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return relatedRecord.validateRelatedRecordTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateRelatedRecordClassCode constraint of '<em>Related Record</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedRecord_validateRelatedRecordClassCode(RelatedRecord relatedRecord, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return relatedRecord.validateRelatedRecordClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateRelatedRecordMoodCode constraint of '<em>Related Record</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedRecord_validateRelatedRecordMoodCode(RelatedRecord relatedRecord, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return relatedRecord.validateRelatedRecordMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateRelatedRecordId constraint of '<em>Related Record</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedRecord_validateRelatedRecordId(RelatedRecord relatedRecord, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return relatedRecord.validateRelatedRecordId(diagnostics, context);
	}

	/**
	 * Validates the validateRelatedRecordCodeP constraint of '<em>Related Record</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedRecord_validateRelatedRecordCodeP(RelatedRecord relatedRecord, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return relatedRecord.validateRelatedRecordCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateRelatedRecordCode constraint of '<em>Related Record</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateRelatedRecord_validateRelatedRecordCode(RelatedRecord relatedRecord, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return relatedRecord.validateRelatedRecordCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupplementalValue(SupplementalValue supplementalValue, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(supplementalValue, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validateSupplementalValue_validateSupplementalValueTemplateId(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validateSupplementalValue_validateSupplementalValueClassCode(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validateSupplementalValue_validateSupplementalValueMoodCode(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validateSupplementalValue_validateSupplementalValueCodeP(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validateSupplementalValue_validateSupplementalValueCode(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validateSupplementalValue_validateSupplementalValueValue(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validateSupplementalValue_validateSupplementalValueOrigenAssociation(supplementalValue, diagnostics, context);
		if (result || diagnostics != null) result &= validateSupplementalValue_validateSupplementalValueStudyFindingEvaluator(supplementalValue, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSupplementalValueTemplateId constraint of '<em>Supplemental Value</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupplementalValue_validateSupplementalValueTemplateId(SupplementalValue supplementalValue, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supplementalValue.validateSupplementalValueTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSupplementalValueClassCode constraint of '<em>Supplemental Value</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupplementalValue_validateSupplementalValueClassCode(SupplementalValue supplementalValue, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supplementalValue.validateSupplementalValueClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSupplementalValueMoodCode constraint of '<em>Supplemental Value</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupplementalValue_validateSupplementalValueMoodCode(SupplementalValue supplementalValue, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supplementalValue.validateSupplementalValueMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSupplementalValueCodeP constraint of '<em>Supplemental Value</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupplementalValue_validateSupplementalValueCodeP(SupplementalValue supplementalValue, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supplementalValue.validateSupplementalValueCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSupplementalValueCode constraint of '<em>Supplemental Value</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupplementalValue_validateSupplementalValueCode(SupplementalValue supplementalValue, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supplementalValue.validateSupplementalValueCode(diagnostics, context);
	}

	/**
	 * Validates the validateSupplementalValueValue constraint of '<em>Supplemental Value</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupplementalValue_validateSupplementalValueValue(SupplementalValue supplementalValue, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supplementalValue.validateSupplementalValueValue(diagnostics, context);
	}

	/**
	 * Validates the validateSupplementalValueOrigenAssociation constraint of '<em>Supplemental Value</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupplementalValue_validateSupplementalValueOrigenAssociation(SupplementalValue supplementalValue, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supplementalValue.validateSupplementalValueOrigenAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateSupplementalValueStudyFindingEvaluator constraint of '<em>Supplemental Value</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSupplementalValue_validateSupplementalValueStudyFindingEvaluator(SupplementalValue supplementalValue, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return supplementalValue.validateSupplementalValueStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferencePeriod(ReferencePeriod referencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(referencePeriod, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferencePeriod_validateReferencePeriodTemplateId(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferencePeriod_validateReferencePeriodClassCode(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferencePeriod_validateReferencePeriodMoodCode(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferencePeriod_validateReferencePeriodCodeP(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferencePeriod_validateReferencePeriodCode(referencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferencePeriod_validateReferencePeriodEffectiveTime(referencePeriod, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateReferencePeriodTemplateId constraint of '<em>Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferencePeriod_validateReferencePeriodTemplateId(ReferencePeriod referencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referencePeriod.validateReferencePeriodTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReferencePeriodClassCode constraint of '<em>Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferencePeriod_validateReferencePeriodClassCode(ReferencePeriod referencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referencePeriod.validateReferencePeriodClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateReferencePeriodMoodCode constraint of '<em>Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferencePeriod_validateReferencePeriodMoodCode(ReferencePeriod referencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referencePeriod.validateReferencePeriodMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateReferencePeriodCodeP constraint of '<em>Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferencePeriod_validateReferencePeriodCodeP(ReferencePeriod referencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referencePeriod.validateReferencePeriodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateReferencePeriodCode constraint of '<em>Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferencePeriod_validateReferencePeriodCode(ReferencePeriod referencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referencePeriod.validateReferencePeriodCode(diagnostics, context);
	}

	/**
	 * Validates the validateReferencePeriodEffectiveTime constraint of '<em>Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferencePeriod_validateReferencePeriodEffectiveTime(ReferencePeriod referencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referencePeriod.validateReferencePeriodEffectiveTime(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(findingAbout, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutTemplateId(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutClassCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutMoodCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutEffectiveTime(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutId(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutStatusCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutCodeP(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutValue(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutTargetSiteCodeP(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutTargetSiteCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutInterpretationCodeP(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutInterpretationCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutGroupIdentifier(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutFindingObservationObjectAssociation(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutNonPerformanceReason(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutDataCollection(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutStudyFindingEvaluator(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutCategory(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutSubCategory(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutDomainAssignment(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValueP(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationTypeCode(findingAbout, diagnostics, context);
		if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationObservation(findingAbout, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateFindingAboutTemplateId constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutTemplateId(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutClassCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutClassCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutMoodCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutMoodCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutEffectiveTime constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutEffectiveTime(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutId constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutId(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutId(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutStatusCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutStatusCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutCodeP constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutCodeP(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutValue constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutValue(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutValue(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutTargetSiteCodeP constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutTargetSiteCodeP(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutTargetSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutTargetSiteCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutTargetSiteCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutInterpretationCodeP constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutInterpretationCodeP(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutInterpretationCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutInterpretationCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutGroupIdentifier constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutGroupIdentifier(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutFindingObservationObjectAssociation constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutFindingObservationObjectAssociation(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutFindingObservationObjectAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutNonPerformanceReason constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutNonPerformanceReason(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutDataCollection constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutDataCollection(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutStudyFindingEvaluator constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutStudyFindingEvaluator(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutCategory constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutCategory(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutCategory(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutSubCategory constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutSubCategory(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutDomainAssignment constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutDomainAssignment(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValueP constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValueP(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValueP(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutfindingObservationObjectAssociationTypeCode constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationTypeCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutfindingObservationObjectAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateFindingAboutfindingObservationObjectAssociationObservation constraint of '<em>Finding About</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationObservation(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return findingAbout.validateFindingAboutfindingObservationObjectAssociationObservation(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGroupIdentifier(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(groupIdentifier, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierTemplateId(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierClassCode(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierMoodCode(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierId(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierCodeP(groupIdentifier, diagnostics, context);
		if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierCode(groupIdentifier, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateGroupIdentifierTemplateId constraint of '<em>Group Identifier</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGroupIdentifier_validateGroupIdentifierTemplateId(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return groupIdentifier.validateGroupIdentifierTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateGroupIdentifierClassCode constraint of '<em>Group Identifier</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGroupIdentifier_validateGroupIdentifierClassCode(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return groupIdentifier.validateGroupIdentifierClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateGroupIdentifierMoodCode constraint of '<em>Group Identifier</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGroupIdentifier_validateGroupIdentifierMoodCode(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return groupIdentifier.validateGroupIdentifierMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateGroupIdentifierId constraint of '<em>Group Identifier</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGroupIdentifier_validateGroupIdentifierId(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return groupIdentifier.validateGroupIdentifierId(diagnostics, context);
	}

	/**
	 * Validates the validateGroupIdentifierCodeP constraint of '<em>Group Identifier</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGroupIdentifier_validateGroupIdentifierCodeP(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return groupIdentifier.validateGroupIdentifierCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateGroupIdentifierCode constraint of '<em>Group Identifier</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateGroupIdentifier_validateGroupIdentifierCode(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return groupIdentifier.validateGroupIdentifierCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonPerformanceReason(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(nonPerformanceReason, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonTemplateId(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonClassCode(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonCodeP(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonCode(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonMoodCode(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonValue(nonPerformanceReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonValueP(nonPerformanceReason, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateNonPerformanceReasonTemplateId constraint of '<em>Non Performance Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonPerformanceReason_validateNonPerformanceReasonTemplateId(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonPerformanceReason.validateNonPerformanceReasonTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNonPerformanceReasonClassCode constraint of '<em>Non Performance Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonPerformanceReason_validateNonPerformanceReasonClassCode(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonPerformanceReason.validateNonPerformanceReasonClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonPerformanceReasonCodeP constraint of '<em>Non Performance Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonPerformanceReason_validateNonPerformanceReasonCodeP(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonPerformanceReason.validateNonPerformanceReasonCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonPerformanceReasonCode constraint of '<em>Non Performance Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonPerformanceReason_validateNonPerformanceReasonCode(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonPerformanceReason.validateNonPerformanceReasonCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonPerformanceReasonMoodCode constraint of '<em>Non Performance Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonPerformanceReason_validateNonPerformanceReasonMoodCode(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonPerformanceReason.validateNonPerformanceReasonMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonPerformanceReasonValue constraint of '<em>Non Performance Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonPerformanceReason_validateNonPerformanceReasonValue(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonPerformanceReason.validateNonPerformanceReasonValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonPerformanceReasonValueP constraint of '<em>Non Performance Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonPerformanceReason_validateNonPerformanceReasonValueP(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonPerformanceReason.validateNonPerformanceReasonValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCategory(Category category, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(category, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(category, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(category, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(category, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(category, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(category, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(category, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(category, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(category, diagnostics, context);
		if (result || diagnostics != null) result &= validateCategory_validateCategoryTemplateId(category, diagnostics, context);
		if (result || diagnostics != null) result &= validateCategory_validateCategoryClassCode(category, diagnostics, context);
		if (result || diagnostics != null) result &= validateCategory_validateCategoryMoodCode(category, diagnostics, context);
		if (result || diagnostics != null) result &= validateCategory_validateCategoryCodeP(category, diagnostics, context);
		if (result || diagnostics != null) result &= validateCategory_validateCategoryCode(category, diagnostics, context);
		if (result || diagnostics != null) result &= validateCategory_validateCategoryValue(category, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateCategoryTemplateId constraint of '<em>Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCategory_validateCategoryTemplateId(Category category, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return category.validateCategoryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateCategoryClassCode constraint of '<em>Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCategory_validateCategoryClassCode(Category category, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return category.validateCategoryClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateCategoryMoodCode constraint of '<em>Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCategory_validateCategoryMoodCode(Category category, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return category.validateCategoryMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateCategoryCodeP constraint of '<em>Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCategory_validateCategoryCodeP(Category category, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return category.validateCategoryCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateCategoryCode constraint of '<em>Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCategory_validateCategoryCode(Category category, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return category.validateCategoryCode(diagnostics, context);
	}

	/**
	 * Validates the validateCategoryValue constraint of '<em>Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateCategory_validateCategoryValue(Category category, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return category.validateCategoryValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubCategory(SubCategory subCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(subCategory, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubCategory_validateSubCategoryTemplateId(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubCategory_validateSubCategoryClassCode(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubCategory_validateSubCategoryMoodCode(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubCategory_validateSubCategoryCodeP(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubCategory_validateSubCategoryCode(subCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubCategory_validateSubCategoryValue(subCategory, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSubCategoryTemplateId constraint of '<em>Sub Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubCategory_validateSubCategoryTemplateId(SubCategory subCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subCategory.validateSubCategoryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSubCategoryClassCode constraint of '<em>Sub Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubCategory_validateSubCategoryClassCode(SubCategory subCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subCategory.validateSubCategoryClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubCategoryMoodCode constraint of '<em>Sub Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubCategory_validateSubCategoryMoodCode(SubCategory subCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subCategory.validateSubCategoryMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubCategoryCodeP constraint of '<em>Sub Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubCategory_validateSubCategoryCodeP(SubCategory subCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subCategory.validateSubCategoryCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubCategoryCode constraint of '<em>Sub Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubCategory_validateSubCategoryCode(SubCategory subCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subCategory.validateSubCategoryCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubCategoryValue constraint of '<em>Sub Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubCategory_validateSubCategoryValue(SubCategory subCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subCategory.validateSubCategoryValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(visit, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitTemplateId(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitClassCode(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitMoodCode(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitCode(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitCodeP(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitId(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitText(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitEffectiveTime(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitHumanClinicalVitalSign(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitPlannedStudyDay(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitECGTestResult(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitPhysicalExamination(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitMicrobiologySpecimen(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitMicrobiologySusceptibility(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitPharmacokineticConcentrationFinding(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitFindingAbout(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitDrugAccountability(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitStudyDayPeriod(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitComment(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitDomainAssignment(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitRelatedRecord(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitSupplementalValue(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitHumanClinicalLaboratoryTestResult(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitQuestionnaireFinding(visit, diagnostics, context);
		if (result || diagnostics != null) result &= validateVisit_validateVisitPharmacokineticParameterFinding(visit, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateVisitTemplateId constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitTemplateId(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateVisitClassCode constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitClassCode(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateVisitMoodCode constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitMoodCode(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateVisitCode constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitCode(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitCode(diagnostics, context);
	}

	/**
	 * Validates the validateVisitCodeP constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitCodeP(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateVisitId constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitId(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitId(diagnostics, context);
	}

	/**
	 * Validates the validateVisitText constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitText(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitText(diagnostics, context);
	}

	/**
	 * Validates the validateVisitEffectiveTime constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitEffectiveTime(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateVisitHumanClinicalVitalSign constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitHumanClinicalVitalSign(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitHumanClinicalVitalSign(diagnostics, context);
	}

	/**
	 * Validates the validateVisitPlannedStudyDay constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitPlannedStudyDay(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitPlannedStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateVisitECGTestResult constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitECGTestResult(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitECGTestResult(diagnostics, context);
	}

	/**
	 * Validates the validateVisitPhysicalExamination constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitPhysicalExamination(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitPhysicalExamination(diagnostics, context);
	}

	/**
	 * Validates the validateVisitMicrobiologySpecimen constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitMicrobiologySpecimen(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitMicrobiologySpecimen(diagnostics, context);
	}

	/**
	 * Validates the validateVisitMicrobiologySusceptibility constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitMicrobiologySusceptibility(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitMicrobiologySusceptibility(diagnostics, context);
	}

	/**
	 * Validates the validateVisitPharmacokineticConcentrationFinding constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitPharmacokineticConcentrationFinding(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitPharmacokineticConcentrationFinding(diagnostics, context);
	}

	/**
	 * Validates the validateVisitFindingAbout constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitFindingAbout(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateVisitDrugAccountability constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitDrugAccountability(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitDrugAccountability(diagnostics, context);
	}

	/**
	 * Validates the validateVisitStudyDayPeriod constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitStudyDayPeriod(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateVisitComment constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitComment(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitComment(diagnostics, context);
	}

	/**
	 * Validates the validateVisitDomainAssignment constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitDomainAssignment(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateVisitRelatedRecord constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitRelatedRecord(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateVisitSupplementalValue constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitSupplementalValue(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateVisitHumanClinicalLaboratoryTestResult constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitHumanClinicalLaboratoryTestResult(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitHumanClinicalLaboratoryTestResult(diagnostics, context);
	}

	/**
	 * Validates the validateVisitQuestionnaireFinding constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitQuestionnaireFinding(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitQuestionnaireFinding(diagnostics, context);
	}

	/**
	 * Validates the validateVisitPharmacokineticParameterFinding constraint of '<em>Visit</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVisit_validateVisitPharmacokineticParameterFinding(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return visit.validateVisitPharmacokineticParameterFinding(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(vitalSign, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignTemplateId(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignClassCode(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignMoodCode(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignId(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignCode(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignStatusCode(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignEffectiveTime(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignValue(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignInterpretationCodeP(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignInterpretationCode(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignTargetSiteCodeP(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignTargetSiteCode(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignEventStudyDay(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignTimingReference(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignNonPerformanceReason(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignConsciousnessState(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignPlannedStudyDay(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignStudyDayPeriod(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignExclusionReason(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignGroupIdentifier(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignComment(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignDomainAssignment(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignRelatedRecord(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignSupplementalValue(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignCategory(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignSubCategory(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignPositionofSubject(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignFindingAbout(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateClassCode(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateCodeP(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateCode(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateMoodCode(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateValue(vitalSign, diagnostics, context);
		if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateValueP(vitalSign, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateVitalSignTemplateId constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignTemplateId(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignClassCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignClassCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignMoodCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignMoodCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignId constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignId(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignId(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignStatusCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignStatusCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignEffectiveTime constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignEffectiveTime(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignValue constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignValue(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignValue(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignInterpretationCodeP constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignInterpretationCodeP(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignInterpretationCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignInterpretationCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignTargetSiteCodeP constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignTargetSiteCodeP(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignTargetSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignTargetSiteCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignTargetSiteCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignEventStudyDay constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignEventStudyDay(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignEventStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignTimingReference constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignTimingReference(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignNonPerformanceReason constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignNonPerformanceReason(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignConsciousnessState constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignConsciousnessState(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignConsciousnessState(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignPlannedStudyDay constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignPlannedStudyDay(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignPlannedStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignStudyDayPeriod constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignStudyDayPeriod(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignExclusionReason constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignExclusionReason(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignExclusionReason(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignGroupIdentifier constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignGroupIdentifier(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignComment constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignComment(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignComment(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignDomainAssignment constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignDomainAssignment(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignRelatedRecord constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignRelatedRecord(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignSupplementalValue constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignSupplementalValue(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignCategory constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignCategory(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignCategory(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignSubCategory constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignSubCategory(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignPositionofSubject constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignPositionofSubject(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignPositionofSubject(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignFindingAbout constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignFindingAbout(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignassociatedConsciousnessconsciousnessStateClassCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateClassCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignassociatedConsciousnessconsciousnessStateClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignassociatedConsciousnessconsciousnessStateCodeP constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateCodeP(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignassociatedConsciousnessconsciousnessStateCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignassociatedConsciousnessconsciousnessStateCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignassociatedConsciousnessconsciousnessStateCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignassociatedConsciousnessconsciousnessStateMoodCode constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateMoodCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignassociatedConsciousnessconsciousnessStateMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignassociatedConsciousnessconsciousnessStateValue constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateValue(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignassociatedConsciousnessconsciousnessStateValue(diagnostics, context);
	}

	/**
	 * Validates the validateVitalSignassociatedConsciousnessconsciousnessStateValueP constraint of '<em>Vital Sign</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateVitalSign_validateVitalSignassociatedConsciousnessconsciousnessStateValueP(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return vitalSign.validateVitalSignassociatedConsciousnessconsciousnessStateValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(timingReference, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceTemplateId(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceClassCode(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceMoodCode(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceId(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceCodeP(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceCode(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceEffectiveTime(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceText(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociation(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointClassCode(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointMoodCode(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointCodeP(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointCode(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointEffectiveTime(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationTypeCode(timingReference, diagnostics, context);
		if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePoint(timingReference, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateTimingReferenceTemplateId constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceTemplateId(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceClassCode constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceClassCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceMoodCode constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceMoodCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceId constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceId(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceId(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceCodeP constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceCodeP(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceCode constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceCode(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceEffectiveTime constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceEffectiveTime(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceText constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceText(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceText(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceAnchorAssociation constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceAnchorAssociation(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceAnchorAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceAnchorAssociationAnchorTimePointClassCode constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointClassCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePointClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceAnchorAssociationAnchorTimePointMoodCode constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointMoodCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePointMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceAnchorAssociationAnchorTimePointCodeP constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointCodeP(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePointCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceAnchorAssociationAnchorTimePointCode constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePointCode(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceAnchorAssociationAnchorTimePointEffectiveTime constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointEffectiveTime(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePointEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceAnchorAssociationTypeCode constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceAnchorAssociationTypeCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceAnchorAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateTimingReferenceAnchorAssociationAnchorTimePoint constraint of '<em>Timing Reference</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePoint(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePoint(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlannedStudyDay(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(plannedStudyDay, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayTemplateId(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayClassCode(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayMoodCode(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayCodeP(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayCode(plannedStudyDay, diagnostics, context);
		if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayValue(plannedStudyDay, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validatePlannedStudyDayTemplateId constraint of '<em>Planned Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlannedStudyDay_validatePlannedStudyDayTemplateId(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return plannedStudyDay.validatePlannedStudyDayTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePlannedStudyDayClassCode constraint of '<em>Planned Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlannedStudyDay_validatePlannedStudyDayClassCode(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return plannedStudyDay.validatePlannedStudyDayClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlannedStudyDayMoodCode constraint of '<em>Planned Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlannedStudyDay_validatePlannedStudyDayMoodCode(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return plannedStudyDay.validatePlannedStudyDayMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlannedStudyDayCodeP constraint of '<em>Planned Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlannedStudyDay_validatePlannedStudyDayCodeP(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return plannedStudyDay.validatePlannedStudyDayCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePlannedStudyDayCode constraint of '<em>Planned Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlannedStudyDay_validatePlannedStudyDayCode(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return plannedStudyDay.validatePlannedStudyDayCode(diagnostics, context);
	}

	/**
	 * Validates the validatePlannedStudyDayValue constraint of '<em>Planned Study Day</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePlannedStudyDay_validatePlannedStudyDayValue(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return plannedStudyDay.validatePlannedStudyDayValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyDayPeriod(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studyDayPeriod, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodTemplateId(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodClassCode(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodMoodCode(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodCodeP(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodCode(studyDayPeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodValue(studyDayPeriod, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudyDayPeriodTemplateId constraint of '<em>Study Day Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyDayPeriod_validateStudyDayPeriodTemplateId(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyDayPeriod.validateStudyDayPeriodTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudyDayPeriodClassCode constraint of '<em>Study Day Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyDayPeriod_validateStudyDayPeriodClassCode(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyDayPeriod.validateStudyDayPeriodClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyDayPeriodMoodCode constraint of '<em>Study Day Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyDayPeriod_validateStudyDayPeriodMoodCode(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyDayPeriod.validateStudyDayPeriodMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyDayPeriodCodeP constraint of '<em>Study Day Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyDayPeriod_validateStudyDayPeriodCodeP(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyDayPeriod.validateStudyDayPeriodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudyDayPeriodCode constraint of '<em>Study Day Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyDayPeriod_validateStudyDayPeriodCode(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyDayPeriod.validateStudyDayPeriodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyDayPeriodValue constraint of '<em>Study Day Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyDayPeriod_validateStudyDayPeriodValue(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyDayPeriod.validateStudyDayPeriodValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExclusionReason(ExclusionReason exclusionReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(exclusionReason, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateExclusionReason_validateExclusionReasonTemplateId(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateExclusionReason_validateExclusionReasonMoodCode(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateExclusionReason_validateExclusionReasonCodeP(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateExclusionReason_validateExclusionReasonCode(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateExclusionReason_validateExclusionReasonValue(exclusionReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateExclusionReason_validateExclusionReasonValueP(exclusionReason, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateExclusionReasonTemplateId constraint of '<em>Exclusion Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExclusionReason_validateExclusionReasonTemplateId(ExclusionReason exclusionReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return exclusionReason.validateExclusionReasonTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateExclusionReasonMoodCode constraint of '<em>Exclusion Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExclusionReason_validateExclusionReasonMoodCode(ExclusionReason exclusionReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return exclusionReason.validateExclusionReasonMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateExclusionReasonCodeP constraint of '<em>Exclusion Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExclusionReason_validateExclusionReasonCodeP(ExclusionReason exclusionReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return exclusionReason.validateExclusionReasonCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateExclusionReasonCode constraint of '<em>Exclusion Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExclusionReason_validateExclusionReasonCode(ExclusionReason exclusionReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return exclusionReason.validateExclusionReasonCode(diagnostics, context);
	}

	/**
	 * Validates the validateExclusionReasonValue constraint of '<em>Exclusion Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExclusionReason_validateExclusionReasonValue(ExclusionReason exclusionReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return exclusionReason.validateExclusionReasonValue(diagnostics, context);
	}

	/**
	 * Validates the validateExclusionReasonValueP constraint of '<em>Exclusion Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateExclusionReason_validateExclusionReasonValueP(ExclusionReason exclusionReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return exclusionReason.validateExclusionReasonValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePositionofSubject(PositionofSubject positionofSubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(positionofSubject, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validatePositionofSubject_validatePositionofSubjectTemplateId(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validatePositionofSubject_validatePositionofSubjectClassCode(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validatePositionofSubject_validatePositionofSubjectMoodCode(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validatePositionofSubject_validatePositionofSubjectCodeP(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validatePositionofSubject_validatePositionofSubjectCode(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validatePositionofSubject_validatePositionofSubjectValue(positionofSubject, diagnostics, context);
		if (result || diagnostics != null) result &= validatePositionofSubject_validatePositionofSubjectValueP(positionofSubject, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validatePositionofSubjectTemplateId constraint of '<em>Positionof Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePositionofSubject_validatePositionofSubjectTemplateId(PositionofSubject positionofSubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return positionofSubject.validatePositionofSubjectTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePositionofSubjectClassCode constraint of '<em>Positionof Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePositionofSubject_validatePositionofSubjectClassCode(PositionofSubject positionofSubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return positionofSubject.validatePositionofSubjectClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePositionofSubjectMoodCode constraint of '<em>Positionof Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePositionofSubject_validatePositionofSubjectMoodCode(PositionofSubject positionofSubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return positionofSubject.validatePositionofSubjectMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePositionofSubjectCodeP constraint of '<em>Positionof Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePositionofSubject_validatePositionofSubjectCodeP(PositionofSubject positionofSubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return positionofSubject.validatePositionofSubjectCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePositionofSubjectCode constraint of '<em>Positionof Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePositionofSubject_validatePositionofSubjectCode(PositionofSubject positionofSubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return positionofSubject.validatePositionofSubjectCode(diagnostics, context);
	}

	/**
	 * Validates the validatePositionofSubjectValue constraint of '<em>Positionof Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePositionofSubject_validatePositionofSubjectValue(PositionofSubject positionofSubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return positionofSubject.validatePositionofSubjectValue(diagnostics, context);
	}

	/**
	 * Validates the validatePositionofSubjectValueP constraint of '<em>Positionof Subject</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePositionofSubject_validatePositionofSubjectValueP(PositionofSubject positionofSubject, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return positionofSubject.validatePositionofSubjectValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(ecgTestResult, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultTemplateId(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultClassCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultMoodCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultId(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultCodeP(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultText(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultStatusCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultEffectiveTime(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultValue(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultMethodCodeP(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultMethodCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultInterpretationCodeP(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultInterpretationCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultGroupIdentifier(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultNonPerformanceReason(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultLeadLocationAssociation(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultTimingReference(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultStudyTestPerformer(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultStudyFindingEvaluator(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultAssociatedConsciousness(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultPlannedStudyDay(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultStudyDayPeriod(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultComment(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultDomainAssignment(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultRelatedRecord(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultSupplementalValue(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultCategory(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultSubCategory(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultPositionofSubject(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultFindingAbout(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationClassCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationCodeP(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationMoodCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationValue(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationValueP(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultleadLocationAssociationTypeCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultleadLocationAssociationEcgLeadLocation(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateClassCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateCodeP(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateMoodCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateValue(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateValueP(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultassociatedConsciousnessTypeCode(ecgTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultassociatedConsciousnessConsciousnessState(ecgTestResult, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateECGTestResultTemplateId constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultTemplateId(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultClassCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultClassCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultMoodCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultMoodCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultId constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultId(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultId(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultCodeP constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultCodeP(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultText constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultText(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultText(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultStatusCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultStatusCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultEffectiveTime constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultEffectiveTime(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultValue constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultValue(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultValue(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultMethodCodeP constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultMethodCodeP(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultMethodCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultMethodCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultInterpretationCodeP constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultInterpretationCodeP(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultInterpretationCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultInterpretationCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultGroupIdentifier constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultGroupIdentifier(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultNonPerformanceReason constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultNonPerformanceReason(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultLeadLocationAssociation constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultLeadLocationAssociation(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultLeadLocationAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultTimingReference constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultTimingReference(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultStudyTestPerformer constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultStudyTestPerformer(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultStudyTestPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultStudyFindingEvaluator constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultStudyFindingEvaluator(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultAssociatedConsciousness constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultAssociatedConsciousness(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultAssociatedConsciousness(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultPlannedStudyDay constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultPlannedStudyDay(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultPlannedStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultStudyDayPeriod constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultStudyDayPeriod(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultComment constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultComment(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultComment(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultDomainAssignment constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultDomainAssignment(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultRelatedRecord constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultRelatedRecord(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultSupplementalValue constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultSupplementalValue(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultCategory constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultCategory(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultCategory(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultSubCategory constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultSubCategory(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultPositionofSubject constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultPositionofSubject(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultPositionofSubject(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultFindingAbout constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultFindingAbout(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultleadLocationAssociationecgLeadLocationClassCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationClassCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultleadLocationAssociationecgLeadLocationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultleadLocationAssociationecgLeadLocationCodeP constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationCodeP(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultleadLocationAssociationecgLeadLocationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultleadLocationAssociationecgLeadLocationCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultleadLocationAssociationecgLeadLocationCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultleadLocationAssociationecgLeadLocationMoodCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationMoodCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultleadLocationAssociationecgLeadLocationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultleadLocationAssociationecgLeadLocationValue constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationValue(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultleadLocationAssociationecgLeadLocationValue(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultleadLocationAssociationecgLeadLocationValueP constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultleadLocationAssociationecgLeadLocationValueP(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultleadLocationAssociationecgLeadLocationValueP(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultleadLocationAssociationTypeCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultleadLocationAssociationTypeCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultleadLocationAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultleadLocationAssociationEcgLeadLocation constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultleadLocationAssociationEcgLeadLocation(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultleadLocationAssociationEcgLeadLocation(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultassociatedConsciousnessconsciousnessStateClassCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateClassCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultassociatedConsciousnessconsciousnessStateClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultassociatedConsciousnessconsciousnessStateCodeP constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateCodeP(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultassociatedConsciousnessconsciousnessStateCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultassociatedConsciousnessconsciousnessStateCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultassociatedConsciousnessconsciousnessStateCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultassociatedConsciousnessconsciousnessStateMoodCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateMoodCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultassociatedConsciousnessconsciousnessStateMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultassociatedConsciousnessconsciousnessStateValue constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateValue(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultassociatedConsciousnessconsciousnessStateValue(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultassociatedConsciousnessconsciousnessStateValueP constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultassociatedConsciousnessconsciousnessStateValueP(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultassociatedConsciousnessconsciousnessStateValueP(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultassociatedConsciousnessTypeCode constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultassociatedConsciousnessTypeCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultassociatedConsciousnessTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateECGTestResultassociatedConsciousnessConsciousnessState constraint of '<em>ECG Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateECGTestResult_validateECGTestResultassociatedConsciousnessConsciousnessState(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return ecgTestResult.validateECGTestResultassociatedConsciousnessConsciousnessState(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(physicalExaminationFinding, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTemplateId(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingClassCode(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMoodCode(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingId(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingCodeP(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingCode(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingStatusCode(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingValue(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMethodCodeP(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMethodCode(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTargetSiteCodeP(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTargetSiteCode(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingGroupIdentifier(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingBodySystemorOrganClass(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingNonPerformanceReason(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingStudyFindingEvaluator(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingDataCollection(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingComment(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingDomainAssignment(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingRelatedRecord(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingSupplementalValue(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingCategory(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingSubCategory(physicalExaminationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingFindingAbout(physicalExaminationFinding, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validatePhysicalExaminationFindingTemplateId constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTemplateId(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingClassCode constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingClassCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingMoodCode constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMoodCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingId constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingId(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingId(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingCodeP constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingCodeP(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingCode constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingCode(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingStatusCode constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingStatusCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingValue constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingValue(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingValue(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingMethodCodeP constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMethodCodeP(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingMethodCode constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMethodCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingTargetSiteCodeP constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTargetSiteCodeP(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingTargetSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingTargetSiteCode constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTargetSiteCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingGroupIdentifier constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingGroupIdentifier(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingBodySystemorOrganClass constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingBodySystemorOrganClass(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingBodySystemorOrganClass(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingNonPerformanceReason constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingNonPerformanceReason(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingStudyFindingEvaluator constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingStudyFindingEvaluator(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingDataCollection constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingDataCollection(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingComment constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingComment(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingComment(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingDomainAssignment constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingDomainAssignment(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingRelatedRecord constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingRelatedRecord(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingSupplementalValue constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingSupplementalValue(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingCategory constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingCategory(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingCategory(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingSubCategory constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingSubCategory(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validatePhysicalExaminationFindingFindingAbout constraint of '<em>Physical Examination Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingFindingAbout(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return physicalExaminationFinding.validatePhysicalExaminationFindingFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodySystemorOrganClass(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(bodySystemorOrganClass, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassTemplateId(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassClassCode(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassMoodCode(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassCodeP(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassCode(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassValue(bodySystemorOrganClass, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassValueP(bodySystemorOrganClass, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateBodySystemorOrganClassTemplateId constraint of '<em>Body Systemor Organ Class</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassTemplateId(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodySystemorOrganClass.validateBodySystemorOrganClassTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateBodySystemorOrganClassClassCode constraint of '<em>Body Systemor Organ Class</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassClassCode(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodySystemorOrganClass.validateBodySystemorOrganClassClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodySystemorOrganClassMoodCode constraint of '<em>Body Systemor Organ Class</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassMoodCode(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodySystemorOrganClass.validateBodySystemorOrganClassMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodySystemorOrganClassCodeP constraint of '<em>Body Systemor Organ Class</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassCodeP(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodySystemorOrganClass.validateBodySystemorOrganClassCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateBodySystemorOrganClassCode constraint of '<em>Body Systemor Organ Class</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassCode(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodySystemorOrganClass.validateBodySystemorOrganClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodySystemorOrganClassValue constraint of '<em>Body Systemor Organ Class</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassValue(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodySystemorOrganClass.validateBodySystemorOrganClassValue(diagnostics, context);
	}

	/**
	 * Validates the validateBodySystemorOrganClassValueP constraint of '<em>Body Systemor Organ Class</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassValueP(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodySystemorOrganClass.validateBodySystemorOrganClassValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(microbiologySpecimenFinding, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingTemplateId(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingClassCode(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMoodCode(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingId(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingCodeP(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingCode(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingStatusCode(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingValue(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMethodCodeP(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMethodCode(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingInterpretationCodeP(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingInterpretationCode(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingGroupIdentifier(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingStudyTestPerformer(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingNonPerformanceReason(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingSpecimenInformation(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingComment(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingDomainAssignment(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingRelatedRecord(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingSupplementalValue(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingCategory(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingSubCategory(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingResultCategory(microbiologySpecimenFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingFindingAbout(microbiologySpecimenFinding, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingTemplateId constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingTemplateId(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingClassCode constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingClassCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingMoodCode constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMoodCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingId constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingId(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingId(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingCodeP constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingCodeP(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingCode constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingStatusCode constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingStatusCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingValue constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingValue(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingValue(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingMethodCodeP constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMethodCodeP(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingMethodCode constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMethodCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingInterpretationCodeP constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingInterpretationCodeP(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingInterpretationCode constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingInterpretationCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingGroupIdentifier constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingGroupIdentifier(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingStudyTestPerformer constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingStudyTestPerformer(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingStudyTestPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingNonPerformanceReason constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingNonPerformanceReason(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingSpecimenInformation constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingSpecimenInformation(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingComment constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingComment(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingComment(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingDomainAssignment constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingDomainAssignment(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingRelatedRecord constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingRelatedRecord(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingSupplementalValue constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingSupplementalValue(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingCategory constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingCategory(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingCategory(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingSubCategory constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingSubCategory(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingResultCategory constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingResultCategory(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingResultCategory(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySpecimenFindingFindingAbout constraint of '<em>Microbiology Specimen Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingFindingAbout(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(specimenInformation, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationTemplateId(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationClassCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationMoodCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationCodeP(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationEffectiveTime(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationTargetSiteCodeP(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationTargetSiteCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationParticipatingSpecimen(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationEventStudyDay(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationTimingReference(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationPortionAssociation(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationUsabilityAssociation(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationConditionAssociation(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenClassCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenId(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenTemplateId(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenTypeCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenRoleOfSpecimen(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityMoodCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityCodeP(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityValue(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityValueP(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationportionAssociationTypeCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationportionAssociationSpecimenCondition(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationusabilityAssociationspecimenUsabilityMoodCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationusabilityAssociationspecimenUsabilityCodeP(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationusabilityAssociationspecimenUsabilityCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationusabilityAssociationspecimenUsabilityValue(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationusabilityAssociationTypeCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationusabilityAssociationSpecimenUsability(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionMoodCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCodeP(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionValue(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionValueP(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationTypeCode(specimenInformation, diagnostics, context);
		if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationSpecimenCondition(specimenInformation, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSpecimenInformationTemplateId constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationTemplateId(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationClassCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationClassCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationMoodCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationMoodCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationCodeP constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationCodeP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationEffectiveTime constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationEffectiveTime(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationTargetSiteCodeP constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationTargetSiteCodeP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationTargetSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationTargetSiteCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationTargetSiteCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationParticipatingSpecimen constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationParticipatingSpecimen(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationParticipatingSpecimen(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationEventStudyDay constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationEventStudyDay(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationEventStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationTimingReference constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationTimingReference(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationPortionAssociation constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationPortionAssociation(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationPortionAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationUsabilityAssociation constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationUsabilityAssociation(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationUsabilityAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationConditionAssociation constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationConditionAssociation(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationConditionAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenClassCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenClassCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenId constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenId(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenId(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationparticipatingSpecimenTemplateId constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenTemplateId(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationparticipatingSpecimenTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationparticipatingSpecimenTypeCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenTypeCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationparticipatingSpecimenTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationparticipatingSpecimenRoleOfSpecimen constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenRoleOfSpecimen(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationparticipatingSpecimenRoleOfSpecimen(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationportionAssociationportionOrTotalityMoodCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityMoodCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationportionAssociationportionOrTotalityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationportionAssociationportionOrTotalityCodeP constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityCodeP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationportionAssociationportionOrTotalityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationportionAssociationportionOrTotalityCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationportionAssociationportionOrTotalityCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationportionAssociationportionOrTotalityValue constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityValue(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationportionAssociationportionOrTotalityValue(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationportionAssociationportionOrTotalityValueP constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationportionAssociationportionOrTotalityValueP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationportionAssociationportionOrTotalityValueP(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationportionAssociationTypeCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationportionAssociationTypeCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationportionAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationportionAssociationSpecimenCondition constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationportionAssociationSpecimenCondition(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationportionAssociationSpecimenCondition(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationusabilityAssociationspecimenUsabilityMoodCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationusabilityAssociationspecimenUsabilityMoodCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationusabilityAssociationspecimenUsabilityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationusabilityAssociationspecimenUsabilityCodeP constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationusabilityAssociationspecimenUsabilityCodeP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationusabilityAssociationspecimenUsabilityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationusabilityAssociationspecimenUsabilityCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationusabilityAssociationspecimenUsabilityCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationusabilityAssociationspecimenUsabilityCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationusabilityAssociationspecimenUsabilityValue constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationusabilityAssociationspecimenUsabilityValue(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationusabilityAssociationspecimenUsabilityValue(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationusabilityAssociationTypeCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationusabilityAssociationTypeCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationusabilityAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationusabilityAssociationSpecimenUsability constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationusabilityAssociationSpecimenUsability(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationusabilityAssociationSpecimenUsability(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationconditionAssociationspecimenConditionMoodCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionMoodCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationconditionAssociationspecimenConditionCodeP constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCodeP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationconditionAssociationspecimenConditionCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationconditionAssociationspecimenConditionValue constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionValue(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionValue(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationconditionAssociationspecimenConditionValueP constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionValueP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionValueP(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationconditionAssociationTypeCode constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationTypeCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationconditionAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateSpecimenInformationconditionAssociationSpecimenCondition constraint of '<em>Specimen Information</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationSpecimenCondition(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return specimenInformation.validateSpecimenInformationconditionAssociationSpecimenCondition(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultCategory(ResultCategory resultCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(resultCategory, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateResultCategory_validateResultCategoryTemplateId(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateResultCategory_validateResultCategoryClassCode(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateResultCategory_validateResultCategoryMoodCode(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateResultCategory_validateResultCategoryCodeP(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateResultCategory_validateResultCategoryCode(resultCategory, diagnostics, context);
		if (result || diagnostics != null) result &= validateResultCategory_validateResultCategoryValue(resultCategory, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateResultCategoryTemplateId constraint of '<em>Result Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultCategory_validateResultCategoryTemplateId(ResultCategory resultCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultCategory.validateResultCategoryTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateResultCategoryClassCode constraint of '<em>Result Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultCategory_validateResultCategoryClassCode(ResultCategory resultCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultCategory.validateResultCategoryClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultCategoryMoodCode constraint of '<em>Result Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultCategory_validateResultCategoryMoodCode(ResultCategory resultCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultCategory.validateResultCategoryMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultCategoryCodeP constraint of '<em>Result Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultCategory_validateResultCategoryCodeP(ResultCategory resultCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultCategory.validateResultCategoryCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateResultCategoryCode constraint of '<em>Result Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultCategory_validateResultCategoryCode(ResultCategory resultCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultCategory.validateResultCategoryCode(diagnostics, context);
	}

	/**
	 * Validates the validateResultCategoryValue constraint of '<em>Result Category</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateResultCategory_validateResultCategoryValue(ResultCategory resultCategory, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return resultCategory.validateResultCategoryValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(microbiologySusceptibility, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityTemplateId(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityClassCode(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMoodCode(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityId(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityCodeP(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityCode(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityStatusCode(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityEffectiveTime(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityValue(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMethodCodeP(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMethodCode(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityInterpretationCodeP(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityInterpretationCode(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityEventStudyDay(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityTimingReference(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityGroupIdentifier(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityStudyTestPerformer(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityNonPerformanceReason(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityComment(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityDomainAssignment(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityRelatedRecord(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilitySupplementalValue(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityCategory(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilitySubCategory(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityResultCategory(microbiologySusceptibility, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityFindingAbout(microbiologySusceptibility, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityTemplateId constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityTemplateId(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityClassCode constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityClassCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityMoodCode constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMoodCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityId constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityId(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityId(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityCodeP constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityCodeP(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityCode constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityStatusCode constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityStatusCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityEffectiveTime constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityEffectiveTime(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityValue constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityValue(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityValue(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityMethodCodeP constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMethodCodeP(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityMethodCode constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMethodCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityInterpretationCodeP constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityInterpretationCodeP(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityInterpretationCode constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityInterpretationCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityEventStudyDay constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityEventStudyDay(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityEventStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityTimingReference constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityTimingReference(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityGroupIdentifier constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityGroupIdentifier(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityStudyTestPerformer constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityStudyTestPerformer(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityStudyTestPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityNonPerformanceReason constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityNonPerformanceReason(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityComment constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityComment(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityComment(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityDomainAssignment constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityDomainAssignment(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityRelatedRecord constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityRelatedRecord(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilitySupplementalValue constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilitySupplementalValue(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilitySupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityCategory constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityCategory(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityCategory(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilitySubCategory constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilitySubCategory(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilitySubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityResultCategory constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityResultCategory(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityResultCategory(diagnostics, context);
	}

	/**
	 * Validates the validateMicrobiologySusceptibilityFindingAbout constraint of '<em>Microbiology Susceptibility</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityFindingAbout(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microbiologySusceptibility.validateMicrobiologySusceptibilityFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(pharmacokineticConcentrationFinding, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingTemplateId(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingClassCode(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMoodCode(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingId(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingCodeP(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingCode(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingStatusCode(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingValue(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMethodCodeP(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMethodCode(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingInterpretationCodeP(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingInterpretationCode(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingGroupIdentifier(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingSpecimenInformation(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingNonPerformanceReason(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingStudyTestPerformer(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingPlannedStudyDay(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingExclusionReason(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingComment(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingDomainAssignment(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingRelatedRecord(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingSupplementalValue(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingCategory(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingSubCategory(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingFastingStatus(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingAssayQuantitation(pharmacokineticConcentrationFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingFindingAbout(pharmacokineticConcentrationFinding, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingTemplateId constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingTemplateId(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingClassCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingClassCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingMoodCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMoodCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingId constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingId(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingId(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingCodeP constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingCodeP(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingStatusCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingStatusCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingValue constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingValue(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingValue(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingMethodCodeP constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMethodCodeP(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingMethodCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMethodCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingInterpretationCodeP constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingInterpretationCodeP(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingInterpretationCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingInterpretationCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingGroupIdentifier constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingGroupIdentifier(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingSpecimenInformation constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingSpecimenInformation(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingNonPerformanceReason constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingNonPerformanceReason(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingStudyTestPerformer constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingStudyTestPerformer(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingStudyTestPerformer(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingPlannedStudyDay constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingPlannedStudyDay(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingPlannedStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingExclusionReason constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingExclusionReason(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingExclusionReason(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingComment constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingComment(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingComment(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingDomainAssignment constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingDomainAssignment(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingRelatedRecord constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingRelatedRecord(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingSupplementalValue constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingSupplementalValue(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingCategory constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingCategory(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingCategory(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingSubCategory constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingSubCategory(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingFastingStatus constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingFastingStatus(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingFastingStatus(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingAssayQuantitation constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingAssayQuantitation(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingAssayQuantitation(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticConcentrationFindingFindingAbout constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingFindingAbout(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFastingStatus(FastingStatus fastingStatus, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(fastingStatus, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validateFastingStatus_validateFastingStatusTemplateId(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validateFastingStatus_validateFastingStatusClassCode(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validateFastingStatus_validateFastingStatusMoodCode(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validateFastingStatus_validateFastingStatusCodeP(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validateFastingStatus_validateFastingStatusCode(fastingStatus, diagnostics, context);
		if (result || diagnostics != null) result &= validateFastingStatus_validateFastingStatusValue(fastingStatus, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateFastingStatusTemplateId constraint of '<em>Fasting Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFastingStatus_validateFastingStatusTemplateId(FastingStatus fastingStatus, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return fastingStatus.validateFastingStatusTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFastingStatusClassCode constraint of '<em>Fasting Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFastingStatus_validateFastingStatusClassCode(FastingStatus fastingStatus, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return fastingStatus.validateFastingStatusClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateFastingStatusMoodCode constraint of '<em>Fasting Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFastingStatus_validateFastingStatusMoodCode(FastingStatus fastingStatus, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return fastingStatus.validateFastingStatusMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateFastingStatusCodeP constraint of '<em>Fasting Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFastingStatus_validateFastingStatusCodeP(FastingStatus fastingStatus, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return fastingStatus.validateFastingStatusCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateFastingStatusCode constraint of '<em>Fasting Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFastingStatus_validateFastingStatusCode(FastingStatus fastingStatus, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return fastingStatus.validateFastingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateFastingStatusValue constraint of '<em>Fasting Status</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFastingStatus_validateFastingStatusValue(FastingStatus fastingStatus, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return fastingStatus.validateFastingStatusValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssayQuantitation(AssayQuantitation assayQuantitation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(assayQuantitation, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validateAssayQuantitation_validateAssayQuantitationTemplateId(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validateAssayQuantitation_validateAssayQuantitationClassCode(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validateAssayQuantitation_validateAssayQuantitationMoodCode(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validateAssayQuantitation_validateAssayQuantitationCodeP(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validateAssayQuantitation_validateAssayQuantitationCode(assayQuantitation, diagnostics, context);
		if (result || diagnostics != null) result &= validateAssayQuantitation_validateAssayQuantitationValue(assayQuantitation, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateAssayQuantitationTemplateId constraint of '<em>Assay Quantitation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssayQuantitation_validateAssayQuantitationTemplateId(AssayQuantitation assayQuantitation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assayQuantitation.validateAssayQuantitationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAssayQuantitationClassCode constraint of '<em>Assay Quantitation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssayQuantitation_validateAssayQuantitationClassCode(AssayQuantitation assayQuantitation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assayQuantitation.validateAssayQuantitationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssayQuantitationMoodCode constraint of '<em>Assay Quantitation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssayQuantitation_validateAssayQuantitationMoodCode(AssayQuantitation assayQuantitation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assayQuantitation.validateAssayQuantitationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssayQuantitationCodeP constraint of '<em>Assay Quantitation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssayQuantitation_validateAssayQuantitationCodeP(AssayQuantitation assayQuantitation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assayQuantitation.validateAssayQuantitationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateAssayQuantitationCode constraint of '<em>Assay Quantitation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssayQuantitation_validateAssayQuantitationCode(AssayQuantitation assayQuantitation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assayQuantitation.validateAssayQuantitationCode(diagnostics, context);
	}

	/**
	 * Validates the validateAssayQuantitationValue constraint of '<em>Assay Quantitation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAssayQuantitation_validateAssayQuantitationValue(AssayQuantitation assayQuantitation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return assayQuantitation.validateAssayQuantitationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(drugAccountability, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityTemplateId(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityClassCode(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityMoodCode(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityId(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityCodeP(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityCode(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityStatusCode(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityEffectiveTime(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityValue(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityGroupIdentifier(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityNonPerformanceReason(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityEventStudyDay(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityCategory(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilitySubCategory(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityComment(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityDomainAssignment(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityRelatedRecord(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilitySupplementalValue(drugAccountability, diagnostics, context);
		if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityFindingAbout(drugAccountability, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateDrugAccountabilityTemplateId constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityTemplateId(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityClassCode constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityClassCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityMoodCode constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityMoodCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityId constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityId(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityId(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityCodeP constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityCodeP(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityCode constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityCode(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityStatusCode constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityStatusCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityEffectiveTime constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityEffectiveTime(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityValue constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityValue(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityValue(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityGroupIdentifier constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityGroupIdentifier(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityNonPerformanceReason constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityNonPerformanceReason(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityEventStudyDay constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityEventStudyDay(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityEventStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityCategory constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityCategory(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityCategory(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilitySubCategory constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilitySubCategory(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilitySubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityComment constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityComment(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityComment(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityDomainAssignment constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityDomainAssignment(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityRelatedRecord constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityRelatedRecord(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilitySupplementalValue constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilitySupplementalValue(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilitySupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateDrugAccountabilityFindingAbout constraint of '<em>Drug Accountability</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDrugAccountability_validateDrugAccountabilityFindingAbout(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return drugAccountability.validateDrugAccountabilityFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(humanClinicalLaboratoryTestResult, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultTemplateId(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultClassCode(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMoodCode(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultId(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultCodeP(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultCode(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultStatusCode(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultValue(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMethodCodeP(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMethodCode(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultInterpretationCodeP(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultInterpretationCode(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultGroupIdentifier(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultSpecimenInformation(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultNonPerformanceReason(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultStudyTestOrganization(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultTimingReference(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultComment(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultDomainAssignment(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultRelatedRecord(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultSupplementalValue(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultToxicity(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultCategory(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultSubCategory(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultFastingStatus(humanClinicalLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultFindingAbout(humanClinicalLaboratoryTestResult, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultTemplateId constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultTemplateId(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultClassCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultClassCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultMoodCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMoodCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultId constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultId(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultId(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultCodeP constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultCodeP(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultStatusCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultStatusCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultValue constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultValue(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultValue(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultMethodCodeP constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMethodCodeP(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultMethodCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMethodCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultInterpretationCodeP constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultInterpretationCodeP(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultInterpretationCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultInterpretationCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultGroupIdentifier constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultGroupIdentifier(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultSpecimenInformation constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultSpecimenInformation(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultNonPerformanceReason constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultNonPerformanceReason(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultStudyTestOrganization constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultStudyTestOrganization(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultStudyTestOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultTimingReference constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultTimingReference(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultComment constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultComment(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultComment(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultDomainAssignment constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultDomainAssignment(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultRelatedRecord constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultRelatedRecord(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultSupplementalValue constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultSupplementalValue(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultToxicity constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultToxicity(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultToxicity(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultCategory constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultCategory(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultCategory(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultSubCategory constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultSubCategory(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultFastingStatus constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultFastingStatus(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultFastingStatus(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalLaboratoryTestResultFindingAbout constraint of '<em>Human Clinical Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultFindingAbout(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateToxicity(Toxicity toxicity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(toxicity, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validateToxicity_validateToxicityTemplateId(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validateToxicity_validateToxicityClassCode(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validateToxicity_validateToxicityMoodCode(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validateToxicity_validateToxicityCodeP(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validateToxicity_validateToxicityCode(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validateToxicity_validateToxicityValue(toxicity, diagnostics, context);
		if (result || diagnostics != null) result &= validateToxicity_validateToxicityValueP(toxicity, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateToxicityTemplateId constraint of '<em>Toxicity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateToxicity_validateToxicityTemplateId(Toxicity toxicity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return toxicity.validateToxicityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateToxicityClassCode constraint of '<em>Toxicity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateToxicity_validateToxicityClassCode(Toxicity toxicity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return toxicity.validateToxicityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateToxicityMoodCode constraint of '<em>Toxicity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateToxicity_validateToxicityMoodCode(Toxicity toxicity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return toxicity.validateToxicityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateToxicityCodeP constraint of '<em>Toxicity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateToxicity_validateToxicityCodeP(Toxicity toxicity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return toxicity.validateToxicityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateToxicityCode constraint of '<em>Toxicity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateToxicity_validateToxicityCode(Toxicity toxicity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return toxicity.validateToxicityCode(diagnostics, context);
	}

	/**
	 * Validates the validateToxicityValue constraint of '<em>Toxicity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateToxicity_validateToxicityValue(Toxicity toxicity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return toxicity.validateToxicityValue(diagnostics, context);
	}

	/**
	 * Validates the validateToxicityValueP constraint of '<em>Toxicity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateToxicity_validateToxicityValueP(Toxicity toxicity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return toxicity.validateToxicityValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(questionnaireFinding, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingTemplateId(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingClassCode(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingMoodCode(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingId(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingCodeP(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingCode(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingStatusCode(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingEffectiveTime(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingValue(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingInterpretationCodeP(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingInterpretationCode(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingGroupIdentifier(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingNonPerformanceReason(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingTimingReference(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingDataCollection(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingComment(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingDomainAssignment(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingRelatedRecord(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingSupplementalValue(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingCategory(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingSubCategory(questionnaireFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingFindingAbout(questionnaireFinding, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateQuestionnaireFindingTemplateId constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingTemplateId(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingClassCode constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingClassCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingMoodCode constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingMoodCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingId constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingId(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingId(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingCodeP constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingCodeP(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingCode constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingCode(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingStatusCode constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingStatusCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingEffectiveTime constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingEffectiveTime(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingValue constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingValue(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingValue(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingInterpretationCodeP constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingInterpretationCodeP(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingInterpretationCode constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingInterpretationCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingGroupIdentifier constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingGroupIdentifier(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingNonPerformanceReason constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingNonPerformanceReason(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingTimingReference constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingTimingReference(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingDataCollection constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingDataCollection(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingComment constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingComment(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingComment(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingDomainAssignment constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingDomainAssignment(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingRelatedRecord constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingRelatedRecord(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingSupplementalValue constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingSupplementalValue(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingCategory constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingCategory(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingCategory(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingSubCategory constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingSubCategory(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateQuestionnaireFindingFindingAbout constraint of '<em>Questionnaire Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateQuestionnaireFinding_validateQuestionnaireFindingFindingAbout(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return questionnaireFinding.validateQuestionnaireFindingFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(pharmacokineticParameterFinding, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingTemplateId(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingClassCode(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingMoodCode(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingId(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingCodeP(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingCode(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingStatusCode(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingValue(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingGroupIdentifier(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingSpecimenInformation(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingNonPerformanceReason(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingTimingReference(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingComment(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingDomainAssignment(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingRelatedRecord(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingSupplementalValue(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingCategory(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingSubCategory(pharmacokineticParameterFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingFindingAbout(pharmacokineticParameterFinding, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingTemplateId constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingTemplateId(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingClassCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingClassCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingMoodCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingMoodCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingId constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingId(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingId(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingCodeP constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingCodeP(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingStatusCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingStatusCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingValue constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingValue(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingValue(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingGroupIdentifier constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingGroupIdentifier(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingSpecimenInformation constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingSpecimenInformation(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingNonPerformanceReason constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingNonPerformanceReason(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingTimingReference constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingTimingReference(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingComment constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingComment(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingComment(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingDomainAssignment constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingDomainAssignment(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingRelatedRecord constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingRelatedRecord(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingSupplementalValue constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingSupplementalValue(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingCategory constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingCategory(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingCategory(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingSubCategory constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingSubCategory(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validatePharmacokineticParameterFindingFindingAbout constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingFindingAbout(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(subjectElement, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementTemplateId(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementClassCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementMoodCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementId(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementCodeP(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementEffectiveTime(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementStudyEpoch(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementElementOrderAssociation(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementComment(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementDomainAssignment(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementRelatedRecord(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementSupplementalValue(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementFindingAbout(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderValue(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationTypeCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationElementOrder(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderClassCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderCodeP(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(subjectElement, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderValue(subjectElement, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSubjectElementTemplateId constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementTemplateId(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementClassCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementClassCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementMoodCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementMoodCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementId constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementId(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementCodeP constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementCodeP(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementEffectiveTime constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementEffectiveTime(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementStudyEpoch constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementStudyEpoch(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementStudyEpoch(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementElementOrderAssociation constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementElementOrderAssociation(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementElementOrderAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementComment constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementComment(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementComment(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementDomainAssignment constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementDomainAssignment(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementRelatedRecord constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementRelatedRecord(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementSupplementalValue constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementSupplementalValue(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementFindingAbout constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementFindingAbout(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateHumanClinicalExposureelementOrderAssociationelementOrderCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderValue constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateHumanClinicalExposureelementOrderAssociationelementOrderValue(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateHumanClinicalExposureelementOrderAssociationelementOrderValue(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementHumanClinicalExposureelementOrderAssociationTypeCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationTypeCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementHumanClinicalExposureelementOrderAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementHumanClinicalExposureelementOrderAssociationElementOrder constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationElementOrder(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementHumanClinicalExposureelementOrderAssociationElementOrder(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderClassCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderClassCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderCodeP constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderCodeP(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderMoodCode constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderValue constraint of '<em>Subject Element</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectElement_validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderValue(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectElement.validateSubjectElementHumanClinicalExposureelementOrderAssociationelementOrderValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyEpoch(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studyEpoch, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochTemplateId(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochClassCode(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochMoodCode(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochCodeP(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochCode(studyEpoch, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochText(studyEpoch, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudyEpochTemplateId constraint of '<em>Study Epoch</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyEpoch_validateStudyEpochTemplateId(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyEpoch.validateStudyEpochTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudyEpochClassCode constraint of '<em>Study Epoch</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyEpoch_validateStudyEpochClassCode(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyEpoch.validateStudyEpochClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyEpochMoodCode constraint of '<em>Study Epoch</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyEpoch_validateStudyEpochMoodCode(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyEpoch.validateStudyEpochMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyEpochCodeP constraint of '<em>Study Epoch</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyEpoch_validateStudyEpochCodeP(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyEpoch.validateStudyEpochCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudyEpochCode constraint of '<em>Study Epoch</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyEpoch_validateStudyEpochCode(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyEpoch.validateStudyEpochCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyEpochText constraint of '<em>Study Epoch</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyEpoch_validateStudyEpochText(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyEpoch.validateStudyEpochText(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(humanClinicalDisposition, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionTemplateId(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionClassCode(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionCode(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionEffectiveTime(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionId(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionMoodCode(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionStudyEpoch(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionGroupIdentifier(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionStudyDayPeriod(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionComment(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionDomainAssignment(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionRelatedRecord(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionSupplementalValue(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionCategory(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionSubCategory(humanClinicalDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionFindingAbout(humanClinicalDisposition, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateHumanClinicalDispositionTemplateId constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionTemplateId(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionClassCode constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionClassCode(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionCode constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionCode(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionEffectiveTime constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionEffectiveTime(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionId constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionId(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionId(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionMoodCode constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionMoodCode(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionStudyEpoch constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionStudyEpoch(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionStudyEpoch(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionGroupIdentifier constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionGroupIdentifier(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionStudyDayPeriod constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionStudyDayPeriod(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionComment constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionComment(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionComment(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionDomainAssignment constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionDomainAssignment(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionRelatedRecord constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionRelatedRecord(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionSupplementalValue constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionSupplementalValue(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionCategory constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionCategory(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionCategory(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionSubCategory constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionSubCategory(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalDispositionFindingAbout constraint of '<em>Human Clinical Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionFindingAbout(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalDisposition.validateHumanClinicalDispositionFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(medicalHistoryItem, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemTemplateId(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemClassCode(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemMoodCode(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemId(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemCodeP(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemCode(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemStatusCode(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemEffectiveTime(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemValue(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemValueP(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemGroupIdentifier(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemPreSpecifiedEvent(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemNonPerformanceReason(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemBodySystemorOrganClass(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemDataCollection(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemComment(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemDomainAssignment(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemRelatedRecord(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemSupplementalValue(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemStartRelativetoReferencePeriod(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemStopRelativetoReferencePeriod(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemCategory(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemSubCategory(medicalHistoryItem, diagnostics, context);
		if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemFindingAbout(medicalHistoryItem, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateMedicalHistoryItemTemplateId constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemTemplateId(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemClassCode constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemClassCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemMoodCode constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemMoodCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemId constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemId(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemId(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemCodeP constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemCodeP(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemCode constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemStatusCode constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemStatusCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemEffectiveTime constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemEffectiveTime(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemValue constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemValue(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemValue(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemValueP constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemValueP(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemValueP(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemGroupIdentifier constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemGroupIdentifier(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemPreSpecifiedEvent constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemPreSpecifiedEvent(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemPreSpecifiedEvent(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemNonPerformanceReason constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemNonPerformanceReason(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemBodySystemorOrganClass constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemBodySystemorOrganClass(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemBodySystemorOrganClass(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemDataCollection constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemDataCollection(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemComment constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemComment(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemComment(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemDomainAssignment constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemDomainAssignment(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemRelatedRecord constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemRelatedRecord(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemSupplementalValue constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemSupplementalValue(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemStartRelativetoReferencePeriod constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemStartRelativetoReferencePeriod(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemStartRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemStopRelativetoReferencePeriod constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemStopRelativetoReferencePeriod(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemStopRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemCategory constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemCategory(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemCategory(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemSubCategory constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemSubCategory(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateMedicalHistoryItemFindingAbout constraint of '<em>Medical History Item</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMedicalHistoryItem_validateMedicalHistoryItemFindingAbout(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return medicalHistoryItem.validateMedicalHistoryItemFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreSpecifiedEvent(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(preSpecifiedEvent, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventTemplateId(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventClassCode(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventMoodCode(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventCodeP(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventCode(preSpecifiedEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventValue(preSpecifiedEvent, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validatePreSpecifiedEventTemplateId constraint of '<em>Pre Specified Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventTemplateId(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return preSpecifiedEvent.validatePreSpecifiedEventTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePreSpecifiedEventClassCode constraint of '<em>Pre Specified Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventClassCode(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return preSpecifiedEvent.validatePreSpecifiedEventClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePreSpecifiedEventMoodCode constraint of '<em>Pre Specified Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventMoodCode(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return preSpecifiedEvent.validatePreSpecifiedEventMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePreSpecifiedEventCodeP constraint of '<em>Pre Specified Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventCodeP(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return preSpecifiedEvent.validatePreSpecifiedEventCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePreSpecifiedEventCode constraint of '<em>Pre Specified Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventCode(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return preSpecifiedEvent.validatePreSpecifiedEventCode(diagnostics, context);
	}

	/**
	 * Validates the validatePreSpecifiedEventValue constraint of '<em>Pre Specified Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventValue(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return preSpecifiedEvent.validatePreSpecifiedEventValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStartRelativetoReferencePeriod(StartRelativetoReferencePeriod startRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(startRelativetoReferencePeriod, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodTemplateId(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodClassCode(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodMoodCode(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodCodeP(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodCode(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodValue(startRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodValueP(startRelativetoReferencePeriod, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStartRelativetoReferencePeriodTemplateId constraint of '<em>Start Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodTemplateId(StartRelativetoReferencePeriod startRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return startRelativetoReferencePeriod.validateStartRelativetoReferencePeriodTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStartRelativetoReferencePeriodClassCode constraint of '<em>Start Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodClassCode(StartRelativetoReferencePeriod startRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return startRelativetoReferencePeriod.validateStartRelativetoReferencePeriodClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStartRelativetoReferencePeriodMoodCode constraint of '<em>Start Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodMoodCode(StartRelativetoReferencePeriod startRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return startRelativetoReferencePeriod.validateStartRelativetoReferencePeriodMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStartRelativetoReferencePeriodCodeP constraint of '<em>Start Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodCodeP(StartRelativetoReferencePeriod startRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return startRelativetoReferencePeriod.validateStartRelativetoReferencePeriodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStartRelativetoReferencePeriodCode constraint of '<em>Start Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodCode(StartRelativetoReferencePeriod startRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return startRelativetoReferencePeriod.validateStartRelativetoReferencePeriodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStartRelativetoReferencePeriodValue constraint of '<em>Start Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodValue(StartRelativetoReferencePeriod startRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return startRelativetoReferencePeriod.validateStartRelativetoReferencePeriodValue(diagnostics, context);
	}

	/**
	 * Validates the validateStartRelativetoReferencePeriodValueP constraint of '<em>Start Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStartRelativetoReferencePeriod_validateStartRelativetoReferencePeriodValueP(StartRelativetoReferencePeriod startRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return startRelativetoReferencePeriod.validateStartRelativetoReferencePeriodValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStopRelativetoReferencePeriod(StopRelativetoReferencePeriod stopRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(stopRelativetoReferencePeriod, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodTemplateId(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodClassCode(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodMoodCode(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodCodeP(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodCode(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodValue(stopRelativetoReferencePeriod, diagnostics, context);
		if (result || diagnostics != null) result &= validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodValueP(stopRelativetoReferencePeriod, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStopRelativetoReferencePeriodTemplateId constraint of '<em>Stop Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodTemplateId(StopRelativetoReferencePeriod stopRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return stopRelativetoReferencePeriod.validateStopRelativetoReferencePeriodTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStopRelativetoReferencePeriodClassCode constraint of '<em>Stop Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodClassCode(StopRelativetoReferencePeriod stopRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return stopRelativetoReferencePeriod.validateStopRelativetoReferencePeriodClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStopRelativetoReferencePeriodMoodCode constraint of '<em>Stop Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodMoodCode(StopRelativetoReferencePeriod stopRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return stopRelativetoReferencePeriod.validateStopRelativetoReferencePeriodMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStopRelativetoReferencePeriodCodeP constraint of '<em>Stop Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodCodeP(StopRelativetoReferencePeriod stopRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return stopRelativetoReferencePeriod.validateStopRelativetoReferencePeriodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStopRelativetoReferencePeriodCode constraint of '<em>Stop Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodCode(StopRelativetoReferencePeriod stopRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return stopRelativetoReferencePeriod.validateStopRelativetoReferencePeriodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStopRelativetoReferencePeriodValue constraint of '<em>Stop Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodValue(StopRelativetoReferencePeriod stopRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return stopRelativetoReferencePeriod.validateStopRelativetoReferencePeriodValue(diagnostics, context);
	}

	/**
	 * Validates the validateStopRelativetoReferencePeriodValueP constraint of '<em>Stop Relativeto Reference Period</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStopRelativetoReferencePeriod_validateStopRelativetoReferencePeriodValueP(StopRelativetoReferencePeriod stopRelativetoReferencePeriod, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return stopRelativetoReferencePeriod.validateStopRelativetoReferencePeriodValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(protocolDeviation, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationTemplateId(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationClassCode(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationMoodCode(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationId(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationCodeP(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationCode(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationEffectiveTime(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationValue(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationStudyEpoch(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationComment(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationDomainAssignment(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationRelatedRecord(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationSupplementalValue(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationCategory(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationSubCategory(protocolDeviation, diagnostics, context);
		if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationFindingAbout(protocolDeviation, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateProtocolDeviationTemplateId constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationTemplateId(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationClassCode constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationClassCode(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationMoodCode constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationMoodCode(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationId constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationId(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationId(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationCodeP constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationCodeP(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationCode constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationCode(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationCode(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationEffectiveTime constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationEffectiveTime(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationValue constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationValue(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationValue(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationStudyEpoch constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationStudyEpoch(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationStudyEpoch(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationComment constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationComment(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationComment(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationDomainAssignment constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationDomainAssignment(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationRelatedRecord constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationRelatedRecord(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationSupplementalValue constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationSupplementalValue(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationCategory constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationCategory(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationCategory(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationSubCategory constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationSubCategory(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateProtocolDeviationFindingAbout constraint of '<em>Protocol Deviation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateProtocolDeviation_validateProtocolDeviationFindingAbout(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return protocolDeviation.validateProtocolDeviationFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(clinicalEvent, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventTemplateId(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventClassCode(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventMoodCode(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventCodeP(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventCode(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventCodeVS(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventEffectiveTime(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventId(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventStatusCode(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventValue(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventValueP(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventPreSpecifiedEvent(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventNonPerformanceReason(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventBodySystemorOrganClass(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventDataCollection(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventEventSeverity(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventComment(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventDomainAssignment(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventRelatedRecord(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventSupplementalValue(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventStartRelativetoReferencePeriod(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventStopRelativetoReferencePeriod(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventCategory(clinicalEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventFindingAbout(clinicalEvent, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateClinicalEventTemplateId constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventTemplateId(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventClassCode constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventClassCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventMoodCode constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventMoodCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventCodeP constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventCodeP(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventCode constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventCodeVS constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventCodeVS(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventCodeVS(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventEffectiveTime constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventEffectiveTime(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventId constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventId(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventId(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventStatusCode constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventStatusCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventValue constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventValue(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventValue(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventValueP constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventValueP(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventValueP(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventPreSpecifiedEvent constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventPreSpecifiedEvent(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventPreSpecifiedEvent(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventNonPerformanceReason constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventNonPerformanceReason(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventBodySystemorOrganClass constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventBodySystemorOrganClass(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventBodySystemorOrganClass(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventDataCollection constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventDataCollection(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventEventSeverity constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventEventSeverity(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventEventSeverity(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventComment constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventComment(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventComment(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventDomainAssignment constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventDomainAssignment(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventRelatedRecord constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventRelatedRecord(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventSupplementalValue constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventSupplementalValue(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventStartRelativetoReferencePeriod constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventStartRelativetoReferencePeriod(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventStartRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventStopRelativetoReferencePeriod constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventStopRelativetoReferencePeriod(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventStopRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventCategory constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventCategory(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventCategory(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalEventFindingAbout constraint of '<em>Clinical Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalEvent_validateClinicalEventFindingAbout(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalEvent.validateClinicalEventFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventorFindingSeverity(EventorFindingSeverity eventorFindingSeverity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(eventorFindingSeverity, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventorFindingSeverity_validateEventorFindingSeverityTemplateId(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventorFindingSeverity_validateEventorFindingSeverityClassCode(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventorFindingSeverity_validateEventorFindingSeverityMoodCode(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventorFindingSeverity_validateEventorFindingSeverityCodeP(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventorFindingSeverity_validateEventorFindingSeverityCode(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventorFindingSeverity_validateEventorFindingSeverityValue(eventorFindingSeverity, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventorFindingSeverity_validateEventorFindingSeverityValueP(eventorFindingSeverity, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateEventorFindingSeverityTemplateId constraint of '<em>Eventor Finding Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventorFindingSeverity_validateEventorFindingSeverityTemplateId(EventorFindingSeverity eventorFindingSeverity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventorFindingSeverity.validateEventorFindingSeverityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEventorFindingSeverityClassCode constraint of '<em>Eventor Finding Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventorFindingSeverity_validateEventorFindingSeverityClassCode(EventorFindingSeverity eventorFindingSeverity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventorFindingSeverity.validateEventorFindingSeverityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventorFindingSeverityMoodCode constraint of '<em>Eventor Finding Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventorFindingSeverity_validateEventorFindingSeverityMoodCode(EventorFindingSeverity eventorFindingSeverity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventorFindingSeverity.validateEventorFindingSeverityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventorFindingSeverityCodeP constraint of '<em>Eventor Finding Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventorFindingSeverity_validateEventorFindingSeverityCodeP(EventorFindingSeverity eventorFindingSeverity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventorFindingSeverity.validateEventorFindingSeverityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateEventorFindingSeverityCode constraint of '<em>Eventor Finding Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventorFindingSeverity_validateEventorFindingSeverityCode(EventorFindingSeverity eventorFindingSeverity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventorFindingSeverity.validateEventorFindingSeverityCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventorFindingSeverityValue constraint of '<em>Eventor Finding Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventorFindingSeverity_validateEventorFindingSeverityValue(EventorFindingSeverity eventorFindingSeverity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventorFindingSeverity.validateEventorFindingSeverityValue(diagnostics, context);
	}

	/**
	 * Validates the validateEventorFindingSeverityValueP constraint of '<em>Eventor Finding Severity</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventorFindingSeverity_validateEventorFindingSeverityValueP(EventorFindingSeverity eventorFindingSeverity, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventorFindingSeverity.validateEventorFindingSeverityValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(subjectCharacteristic, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicTemplateId(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicClassCode(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicMoodCode(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicId(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicCodeP(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicCode(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicStatusCode(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicValue(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicDataCollection(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicNonPerformanceReason(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicGroupIdentifier(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicComment(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicDomainAssignment(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicRelatedRecord(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicSupplementalValue(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicCategory(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicSubCategory(subjectCharacteristic, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicFindingAbout(subjectCharacteristic, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSubjectCharacteristicTemplateId constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicTemplateId(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicClassCode constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicClassCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicMoodCode constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicMoodCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicId constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicId(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicCodeP constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicCodeP(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicCode constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicStatusCode constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicStatusCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicValue constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicValue(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicValue(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicDataCollection constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicDataCollection(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicNonPerformanceReason constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicNonPerformanceReason(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicGroupIdentifier constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicGroupIdentifier(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicComment constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicComment(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicComment(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicDomainAssignment constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicDomainAssignment(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicRelatedRecord constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicRelatedRecord(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicSupplementalValue constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicSupplementalValue(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicCategory constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicCategory(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicCategory(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicSubCategory constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicSubCategory(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectCharacteristicFindingAbout constraint of '<em>Subject Characteristic</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectCharacteristic_validateSubjectCharacteristicFindingAbout(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectCharacteristic.validateSubjectCharacteristicFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studySubjectEvent, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventTemplateId(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventMoodCode(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventId(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventCodeP(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventCode(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventEffectiveTime(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventStatusCode(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventValue(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventTargetSiteCodeP(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventTargetSiteCode(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventGroupIdentifier(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventEventSeverity(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventPreSpecifiedEvent(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventStudyDayPeriod(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventBodySystemorOrganClass(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventComment(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventDomainAssignment(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventRelatedRecord(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventSupplementalValue(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventDataCollection(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventNonPerformanceReason(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventSeriousEvent(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventStudyTreatmentActionTaken(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventOtherTreatmentActionTaken(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventStudyTreatmentCausality(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventNonStudyTreatmentRelationship(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventEventPattern(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventEventOutcome(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventConcomitantTreatment(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventToxicity(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventCategory(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventSubCategory(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventFindingAbout(studySubjectEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectEvent_validateStudySubjectEventEventDuration(studySubjectEvent, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudySubjectEventTemplateId constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventTemplateId(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventMoodCode constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventMoodCode(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventId constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventId(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventId(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventCodeP constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventCodeP(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventCode constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventCode(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventEffectiveTime constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventEffectiveTime(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventStatusCode constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventStatusCode(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventValue constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventValue(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventValue(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventTargetSiteCodeP constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventTargetSiteCodeP(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventTargetSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventTargetSiteCode constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventTargetSiteCode(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventGroupIdentifier constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventGroupIdentifier(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventEventSeverity constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventEventSeverity(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventEventSeverity(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventPreSpecifiedEvent constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventPreSpecifiedEvent(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventPreSpecifiedEvent(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventStudyDayPeriod constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventStudyDayPeriod(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventBodySystemorOrganClass constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventBodySystemorOrganClass(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventBodySystemorOrganClass(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventComment constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventComment(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventComment(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventDomainAssignment constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventDomainAssignment(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventRelatedRecord constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventRelatedRecord(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventSupplementalValue constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventSupplementalValue(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventDataCollection constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventDataCollection(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventNonPerformanceReason constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventNonPerformanceReason(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventSeriousEvent constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventSeriousEvent(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventSeriousEvent(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventStudyTreatmentActionTaken constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventStudyTreatmentActionTaken(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventStudyTreatmentActionTaken(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventOtherTreatmentActionTaken constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventOtherTreatmentActionTaken(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventOtherTreatmentActionTaken(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventStudyTreatmentCausality constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventStudyTreatmentCausality(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventStudyTreatmentCausality(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventNonStudyTreatmentRelationship constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventNonStudyTreatmentRelationship(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventNonStudyTreatmentRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventEventPattern constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventEventPattern(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventEventPattern(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventEventOutcome constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventEventOutcome(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventEventOutcome(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventConcomitantTreatment constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventConcomitantTreatment(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventConcomitantTreatment(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventToxicity constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventToxicity(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventToxicity(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventCategory constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventCategory(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventCategory(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventSubCategory constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventSubCategory(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventFindingAbout constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventFindingAbout(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectEventEventDuration constraint of '<em>Study Subject Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectEvent_validateStudySubjectEventEventDuration(StudySubjectEvent studySubjectEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectEvent.validateStudySubjectEventEventDuration(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(seriousEvent, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventTemplateId(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventClassCode(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventMoodCode(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventCodeP(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventCode(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventValue(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociation(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeClassCode(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeMoodCode(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeCodeP(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeCode(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeValue(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeValueP(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationTypeCode(seriousEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventType(seriousEvent, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSeriousEventTemplateId constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventTemplateId(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventClassCode constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventClassCode(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventMoodCode constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventMoodCode(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventCodeP constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventCodeP(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventCode constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventCode(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventValue constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventValue(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventValue(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventSeriousEventTypeAssociation constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociation(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventSeriousEventTypeAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeClassCode constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeClassCode(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeMoodCode constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeMoodCode(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeCodeP constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeCodeP(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeCode constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeCode(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeValue constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeValue(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeValue(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeValueP constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeValueP(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventSeriousEventTypeAssociationSeriousEventTypeValueP(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventSeriousEventTypeAssociationTypeCode constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationTypeCode(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventSeriousEventTypeAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateSeriousEventSeriousEventTypeAssociationSeriousEventType constraint of '<em>Serious Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSeriousEvent_validateSeriousEventSeriousEventTypeAssociationSeriousEventType(SeriousEvent seriousEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return seriousEvent.validateSeriousEventSeriousEventTypeAssociationSeriousEventType(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentActionTaken(StudyTreatmentActionTaken studyTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studyTreatmentActionTaken, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenTemplateId(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenClassCode(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenMoodCode(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenCodeP(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenCode(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenValue(studyTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenValueP(studyTreatmentActionTaken, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudyTreatmentActionTakenTemplateId constraint of '<em>Study Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenTemplateId(StudyTreatmentActionTaken studyTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentActionTaken.validateStudyTreatmentActionTakenTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentActionTakenClassCode constraint of '<em>Study Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenClassCode(StudyTreatmentActionTaken studyTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentActionTaken.validateStudyTreatmentActionTakenClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentActionTakenMoodCode constraint of '<em>Study Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenMoodCode(StudyTreatmentActionTaken studyTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentActionTaken.validateStudyTreatmentActionTakenMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentActionTakenCodeP constraint of '<em>Study Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenCodeP(StudyTreatmentActionTaken studyTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentActionTaken.validateStudyTreatmentActionTakenCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentActionTakenCode constraint of '<em>Study Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenCode(StudyTreatmentActionTaken studyTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentActionTaken.validateStudyTreatmentActionTakenCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentActionTakenValue constraint of '<em>Study Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenValue(StudyTreatmentActionTaken studyTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentActionTaken.validateStudyTreatmentActionTakenValue(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentActionTakenValueP constraint of '<em>Study Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentActionTaken_validateStudyTreatmentActionTakenValueP(StudyTreatmentActionTaken studyTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentActionTaken.validateStudyTreatmentActionTakenValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOtherTreatmentActionTaken(OtherTreatmentActionTaken otherTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(otherTreatmentActionTaken, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenTemplateId(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenClassCode(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenMoodCode(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenCodeP(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenCode(otherTreatmentActionTaken, diagnostics, context);
		if (result || diagnostics != null) result &= validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenValue(otherTreatmentActionTaken, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateOtherTreatmentActionTakenTemplateId constraint of '<em>Other Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenTemplateId(OtherTreatmentActionTaken otherTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return otherTreatmentActionTaken.validateOtherTreatmentActionTakenTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateOtherTreatmentActionTakenClassCode constraint of '<em>Other Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenClassCode(OtherTreatmentActionTaken otherTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return otherTreatmentActionTaken.validateOtherTreatmentActionTakenClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateOtherTreatmentActionTakenMoodCode constraint of '<em>Other Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenMoodCode(OtherTreatmentActionTaken otherTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return otherTreatmentActionTaken.validateOtherTreatmentActionTakenMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateOtherTreatmentActionTakenCodeP constraint of '<em>Other Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenCodeP(OtherTreatmentActionTaken otherTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return otherTreatmentActionTaken.validateOtherTreatmentActionTakenCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateOtherTreatmentActionTakenCode constraint of '<em>Other Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenCode(OtherTreatmentActionTaken otherTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return otherTreatmentActionTaken.validateOtherTreatmentActionTakenCode(diagnostics, context);
	}

	/**
	 * Validates the validateOtherTreatmentActionTakenValue constraint of '<em>Other Treatment Action Taken</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOtherTreatmentActionTaken_validateOtherTreatmentActionTakenValue(OtherTreatmentActionTaken otherTreatmentActionTaken, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return otherTreatmentActionTaken.validateOtherTreatmentActionTakenValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentCausality(StudyTreatmentCausality studyTreatmentCausality, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studyTreatmentCausality, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentCausality_validateStudyTreatmentCausalityTemplateId(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentCausality_validateStudyTreatmentCausalityClassCode(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentCausality_validateStudyTreatmentCausalityMoodCode(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentCausality_validateStudyTreatmentCausalityCodeP(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentCausality_validateStudyTreatmentCausalityCode(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentCausality_validateStudyTreatmentCausalityValue(studyTreatmentCausality, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTreatmentCausality_validateStudyTreatmentCausalityValueP(studyTreatmentCausality, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudyTreatmentCausalityTemplateId constraint of '<em>Study Treatment Causality</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentCausality_validateStudyTreatmentCausalityTemplateId(StudyTreatmentCausality studyTreatmentCausality, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentCausality.validateStudyTreatmentCausalityTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentCausalityClassCode constraint of '<em>Study Treatment Causality</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentCausality_validateStudyTreatmentCausalityClassCode(StudyTreatmentCausality studyTreatmentCausality, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentCausality.validateStudyTreatmentCausalityClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentCausalityMoodCode constraint of '<em>Study Treatment Causality</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentCausality_validateStudyTreatmentCausalityMoodCode(StudyTreatmentCausality studyTreatmentCausality, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentCausality.validateStudyTreatmentCausalityMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentCausalityCodeP constraint of '<em>Study Treatment Causality</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentCausality_validateStudyTreatmentCausalityCodeP(StudyTreatmentCausality studyTreatmentCausality, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentCausality.validateStudyTreatmentCausalityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentCausalityCode constraint of '<em>Study Treatment Causality</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentCausality_validateStudyTreatmentCausalityCode(StudyTreatmentCausality studyTreatmentCausality, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentCausality.validateStudyTreatmentCausalityCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentCausalityValue constraint of '<em>Study Treatment Causality</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentCausality_validateStudyTreatmentCausalityValue(StudyTreatmentCausality studyTreatmentCausality, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentCausality.validateStudyTreatmentCausalityValue(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTreatmentCausalityValueP constraint of '<em>Study Treatment Causality</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTreatmentCausality_validateStudyTreatmentCausalityValueP(StudyTreatmentCausality studyTreatmentCausality, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTreatmentCausality.validateStudyTreatmentCausalityValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonStudyTreatmentRelationship(NonStudyTreatmentRelationship nonStudyTreatmentRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(nonStudyTreatmentRelationship, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipTemplateId(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipClassCode(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipCodeP(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipCode(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipMoodCode(nonStudyTreatmentRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipValue(nonStudyTreatmentRelationship, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateNonStudyTreatmentRelationshipTemplateId constraint of '<em>Non Study Treatment Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipTemplateId(NonStudyTreatmentRelationship nonStudyTreatmentRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonStudyTreatmentRelationship.validateNonStudyTreatmentRelationshipTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNonStudyTreatmentRelationshipClassCode constraint of '<em>Non Study Treatment Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipClassCode(NonStudyTreatmentRelationship nonStudyTreatmentRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonStudyTreatmentRelationship.validateNonStudyTreatmentRelationshipClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonStudyTreatmentRelationshipCodeP constraint of '<em>Non Study Treatment Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipCodeP(NonStudyTreatmentRelationship nonStudyTreatmentRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonStudyTreatmentRelationship.validateNonStudyTreatmentRelationshipCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonStudyTreatmentRelationshipCode constraint of '<em>Non Study Treatment Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipCode(NonStudyTreatmentRelationship nonStudyTreatmentRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonStudyTreatmentRelationship.validateNonStudyTreatmentRelationshipCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonStudyTreatmentRelationshipMoodCode constraint of '<em>Non Study Treatment Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipMoodCode(NonStudyTreatmentRelationship nonStudyTreatmentRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonStudyTreatmentRelationship.validateNonStudyTreatmentRelationshipMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonStudyTreatmentRelationshipValue constraint of '<em>Non Study Treatment Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonStudyTreatmentRelationship_validateNonStudyTreatmentRelationshipValue(NonStudyTreatmentRelationship nonStudyTreatmentRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonStudyTreatmentRelationship.validateNonStudyTreatmentRelationshipValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventPattern(EventPattern eventPattern, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(eventPattern, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventPattern_validateEventPatternTemplateId(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventPattern_validateEventPatternClassCode(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventPattern_validateEventPatternMoodCode(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventPattern_validateEventPatternCodeP(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventPattern_validateEventPatternCode(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventPattern_validateEventPatternValue(eventPattern, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventPattern_validateEventPatternValueP(eventPattern, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateEventPatternTemplateId constraint of '<em>Event Pattern</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventPattern_validateEventPatternTemplateId(EventPattern eventPattern, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventPattern.validateEventPatternTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEventPatternClassCode constraint of '<em>Event Pattern</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventPattern_validateEventPatternClassCode(EventPattern eventPattern, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventPattern.validateEventPatternClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventPatternMoodCode constraint of '<em>Event Pattern</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventPattern_validateEventPatternMoodCode(EventPattern eventPattern, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventPattern.validateEventPatternMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventPatternCodeP constraint of '<em>Event Pattern</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventPattern_validateEventPatternCodeP(EventPattern eventPattern, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventPattern.validateEventPatternCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateEventPatternCode constraint of '<em>Event Pattern</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventPattern_validateEventPatternCode(EventPattern eventPattern, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventPattern.validateEventPatternCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventPatternValue constraint of '<em>Event Pattern</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventPattern_validateEventPatternValue(EventPattern eventPattern, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventPattern.validateEventPatternValue(diagnostics, context);
	}

	/**
	 * Validates the validateEventPatternValueP constraint of '<em>Event Pattern</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventPattern_validateEventPatternValueP(EventPattern eventPattern, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventPattern.validateEventPatternValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventOutcome(EventOutcome eventOutcome, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(eventOutcome, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventOutcome_validateEventOutcomeTemplateId(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventOutcome_validateEventOutcomeClassCode(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventOutcome_validateEventOutcomeMoodCode(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventOutcome_validateEventOutcomeCodeP(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventOutcome_validateEventOutcomeCode(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventOutcome_validateEventOutcomeValue(eventOutcome, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventOutcome_validateEventOutcomeValueP(eventOutcome, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateEventOutcomeTemplateId constraint of '<em>Event Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventOutcome_validateEventOutcomeTemplateId(EventOutcome eventOutcome, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventOutcome.validateEventOutcomeTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEventOutcomeClassCode constraint of '<em>Event Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventOutcome_validateEventOutcomeClassCode(EventOutcome eventOutcome, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventOutcome.validateEventOutcomeClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventOutcomeMoodCode constraint of '<em>Event Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventOutcome_validateEventOutcomeMoodCode(EventOutcome eventOutcome, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventOutcome.validateEventOutcomeMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventOutcomeCodeP constraint of '<em>Event Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventOutcome_validateEventOutcomeCodeP(EventOutcome eventOutcome, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventOutcome.validateEventOutcomeCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateEventOutcomeCode constraint of '<em>Event Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventOutcome_validateEventOutcomeCode(EventOutcome eventOutcome, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventOutcome.validateEventOutcomeCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventOutcomeValue constraint of '<em>Event Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventOutcome_validateEventOutcomeValue(EventOutcome eventOutcome, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventOutcome.validateEventOutcomeValue(diagnostics, context);
	}

	/**
	 * Validates the validateEventOutcomeValueP constraint of '<em>Event Outcome</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventOutcome_validateEventOutcomeValueP(EventOutcome eventOutcome, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventOutcome.validateEventOutcomeValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantTreatment(ConcomitantTreatment concomitantTreatment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(concomitantTreatment, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantTreatment_validateConcomitantTreatmentTemplateId(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantTreatment_validateConcomitantTreatmentClassCode(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantTreatment_validateConcomitantTreatmentMoodCode(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantTreatment_validateConcomitantTreatmentCodeP(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantTreatment_validateConcomitantTreatmentCode(concomitantTreatment, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantTreatment_validateConcomitantTreatmentValue(concomitantTreatment, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateConcomitantTreatmentTemplateId constraint of '<em>Concomitant Treatment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantTreatment_validateConcomitantTreatmentTemplateId(ConcomitantTreatment concomitantTreatment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantTreatment.validateConcomitantTreatmentTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantTreatmentClassCode constraint of '<em>Concomitant Treatment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantTreatment_validateConcomitantTreatmentClassCode(ConcomitantTreatment concomitantTreatment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantTreatment.validateConcomitantTreatmentClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantTreatmentMoodCode constraint of '<em>Concomitant Treatment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantTreatment_validateConcomitantTreatmentMoodCode(ConcomitantTreatment concomitantTreatment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantTreatment.validateConcomitantTreatmentMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantTreatmentCodeP constraint of '<em>Concomitant Treatment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantTreatment_validateConcomitantTreatmentCodeP(ConcomitantTreatment concomitantTreatment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantTreatment.validateConcomitantTreatmentCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantTreatmentCode constraint of '<em>Concomitant Treatment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantTreatment_validateConcomitantTreatmentCode(ConcomitantTreatment concomitantTreatment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantTreatment.validateConcomitantTreatmentCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantTreatmentValue constraint of '<em>Concomitant Treatment</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantTreatment_validateConcomitantTreatmentValue(ConcomitantTreatment concomitantTreatment, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantTreatment.validateConcomitantTreatmentValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventDuration(EventDuration eventDuration, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(eventDuration, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventDuration_validateEventDurationTemplateId(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventDuration_validateEventDurationClassCode(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventDuration_validateEventDurationMoodCode(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventDuration_validateEventDurationCodeP(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventDuration_validateEventDurationCode(eventDuration, diagnostics, context);
		if (result || diagnostics != null) result &= validateEventDuration_validateEventDurationValue(eventDuration, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateEventDurationTemplateId constraint of '<em>Event Duration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventDuration_validateEventDurationTemplateId(EventDuration eventDuration, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventDuration.validateEventDurationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateEventDurationClassCode constraint of '<em>Event Duration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventDuration_validateEventDurationClassCode(EventDuration eventDuration, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventDuration.validateEventDurationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventDurationMoodCode constraint of '<em>Event Duration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventDuration_validateEventDurationMoodCode(EventDuration eventDuration, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventDuration.validateEventDurationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventDurationCodeP constraint of '<em>Event Duration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventDuration_validateEventDurationCodeP(EventDuration eventDuration, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventDuration.validateEventDurationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateEventDurationCode constraint of '<em>Event Duration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventDuration_validateEventDurationCode(EventDuration eventDuration, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventDuration.validateEventDurationCode(diagnostics, context);
	}

	/**
	 * Validates the validateEventDurationValue constraint of '<em>Event Duration</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateEventDuration_validateEventDurationValue(EventDuration eventDuration, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return eventDuration.validateEventDurationValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studySubjectFinding, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingTemplateId(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingClassCode(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingMoodCode(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingId(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingCode(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingText(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingStatusCode(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingValue(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingMethodCodeP(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingMethodCode(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingInterpretationCodeP(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingInterpretationCode(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingTargetSiteCodeP(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingTargetSiteCode(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingNonPerformanceReason(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingStudyTestOrganization(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingGroupIdentifier(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingSpecimenInformation(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingComment(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingDomainAssignment(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingRelatedRecord(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingSupplementalValue(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingToxicity(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingCategory(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingSubCategory(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingPositionofSubject(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingBodySystemorOrganClass(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingFastingStatus(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingStudyFindingEvaluator(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingEventorFindingSeverity(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingDeathRelationship(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingAssayQuantitation(studySubjectFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectFinding_validateStudySubjectFindingFindingAbout(studySubjectFinding, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudySubjectFindingTemplateId constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingTemplateId(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingClassCode constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingClassCode(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingMoodCode constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingMoodCode(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingId constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingId(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingId(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingCode constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingCode(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingText constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingText(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingText(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingStatusCode constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingStatusCode(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingValue constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingValue(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingValue(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingMethodCodeP constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingMethodCodeP(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingMethodCode constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingMethodCode(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingInterpretationCodeP constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingInterpretationCodeP(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingInterpretationCode constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingInterpretationCode(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingTargetSiteCodeP constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingTargetSiteCodeP(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingTargetSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingTargetSiteCode constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingTargetSiteCode(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingNonPerformanceReason constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingNonPerformanceReason(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingStudyTestOrganization constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingStudyTestOrganization(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingStudyTestOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingGroupIdentifier constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingGroupIdentifier(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingSpecimenInformation constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingSpecimenInformation(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingComment constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingComment(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingComment(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingDomainAssignment constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingDomainAssignment(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingRelatedRecord constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingRelatedRecord(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingSupplementalValue constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingSupplementalValue(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingToxicity constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingToxicity(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingToxicity(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingCategory constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingCategory(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingCategory(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingSubCategory constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingSubCategory(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingPositionofSubject constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingPositionofSubject(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingPositionofSubject(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingBodySystemorOrganClass constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingBodySystemorOrganClass(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingBodySystemorOrganClass(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingFastingStatus constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingFastingStatus(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingFastingStatus(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingStudyFindingEvaluator constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingStudyFindingEvaluator(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingEventorFindingSeverity constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingEventorFindingSeverity(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingEventorFindingSeverity(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingDeathRelationship constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingDeathRelationship(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingDeathRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingAssayQuantitation constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingAssayQuantitation(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingAssayQuantitation(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectFindingFindingAbout constraint of '<em>Study Subject Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectFinding_validateStudySubjectFindingFindingAbout(StudySubjectFinding studySubjectFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectFinding.validateStudySubjectFindingFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathRelationship(DeathRelationship deathRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(deathRelationship, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathRelationship_validateDeathRelationshipTemplateId(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathRelationship_validateDeathRelationshipClassCode(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathRelationship_validateDeathRelationshipMoodCode(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathRelationship_validateDeathRelationshipCodeP(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathRelationship_validateDeathRelationshipCode(deathRelationship, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathRelationship_validateDeathRelationshipValue(deathRelationship, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateDeathRelationshipTemplateId constraint of '<em>Death Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathRelationship_validateDeathRelationshipTemplateId(DeathRelationship deathRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathRelationship.validateDeathRelationshipTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDeathRelationshipClassCode constraint of '<em>Death Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathRelationship_validateDeathRelationshipClassCode(DeathRelationship deathRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathRelationship.validateDeathRelationshipClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateDeathRelationshipMoodCode constraint of '<em>Death Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathRelationship_validateDeathRelationshipMoodCode(DeathRelationship deathRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathRelationship.validateDeathRelationshipMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateDeathRelationshipCodeP constraint of '<em>Death Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathRelationship_validateDeathRelationshipCodeP(DeathRelationship deathRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathRelationship.validateDeathRelationshipCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateDeathRelationshipCode constraint of '<em>Death Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathRelationship_validateDeathRelationshipCode(DeathRelationship deathRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathRelationship.validateDeathRelationshipCode(diagnostics, context);
	}

	/**
	 * Validates the validateDeathRelationshipValue constraint of '<em>Death Relationship</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathRelationship_validateDeathRelationshipValue(DeathRelationship deathRelationship, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathRelationship.validateDeathRelationshipValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studySubjectIntervention, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateSubstanceAdministration_validateClassCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionTemplateId(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionClassCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionMoodCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionId(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionStatusCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionText(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionEffectiveTime(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionDoseQuantity(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionRouteCodeP(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionRouteCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionMaxDoseQuantity(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionApproachSiteCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionApproachSiteCodeP(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionGroupIdentifier(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionStudyEpoch(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionElementOrderAssociation(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionTimingReference(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionStudyDayPeriod(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionPreSpecifiedEvent(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionDataCollection(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionNonPerformanceReason(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionComment(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionDomainAssignment(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionRelatedRecord(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionSupplementalValue(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionIndication(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionIntendedRegimen(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionDoseAdjustmentReason(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionCategory(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionSubCategory(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionFindingAbout(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionEventDuration(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionConsumableMaterial(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderClassCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderCodeP(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderMoodCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderValue(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationTypeCode(studySubjectIntervention, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationElementOrder(studySubjectIntervention, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudySubjectInterventionTemplateId constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionTemplateId(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionClassCode constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionClassCode(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionMoodCode constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionMoodCode(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionId constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionId(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionId(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionStatusCode constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionStatusCode(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionText constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionText(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionText(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionEffectiveTime constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionEffectiveTime(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionDoseQuantity constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionDoseQuantity(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionRouteCodeP constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionRouteCodeP(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionRouteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionRouteCode constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionRouteCode(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionMaxDoseQuantity constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionMaxDoseQuantity(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionApproachSiteCode constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionApproachSiteCode(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionApproachSiteCodeP constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionApproachSiteCodeP(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionApproachSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionGroupIdentifier constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionGroupIdentifier(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionStudyEpoch constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionStudyEpoch(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionStudyEpoch(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionElementOrderAssociation constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionElementOrderAssociation(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionElementOrderAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionTimingReference constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionTimingReference(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionStudyDayPeriod constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionStudyDayPeriod(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionPreSpecifiedEvent constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionPreSpecifiedEvent(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionPreSpecifiedEvent(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionDataCollection constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionDataCollection(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionNonPerformanceReason constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionNonPerformanceReason(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionComment constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionComment(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionComment(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionDomainAssignment constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionDomainAssignment(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionRelatedRecord constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionRelatedRecord(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionSupplementalValue constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionSupplementalValue(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionIndication constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionIndication(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionIndication(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionIntendedRegimen constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionIntendedRegimen(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionIntendedRegimen(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionDoseAdjustmentReason constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionDoseAdjustmentReason(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionDoseAdjustmentReason(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionCategory constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionCategory(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionCategory(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionSubCategory constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionSubCategory(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionFindingAbout constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionFindingAbout(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionEventDuration constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionEventDuration(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionEventDuration(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionConsumableMaterial constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionConsumableMaterial(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionConsumableMaterial(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionelementOrderAssociationelementOrderClassCode constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderClassCode(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionelementOrderAssociationelementOrderClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionelementOrderAssociationelementOrderCodeP constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderCodeP(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionelementOrderAssociationelementOrderCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionelementOrderAssociationelementOrderCode constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderCode(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionelementOrderAssociationelementOrderCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionelementOrderAssociationelementOrderMoodCode constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderMoodCode(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionelementOrderAssociationelementOrderMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionelementOrderAssociationelementOrderValue constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationelementOrderValue(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionelementOrderAssociationelementOrderValue(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionelementOrderAssociationTypeCode constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationTypeCode(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionelementOrderAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudySubjectInterventionelementOrderAssociationElementOrder constraint of '<em>Study Subject Intervention</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudySubjectIntervention_validateStudySubjectInterventionelementOrderAssociationElementOrder(StudySubjectIntervention studySubjectIntervention, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studySubjectIntervention.validateStudySubjectInterventionelementOrderAssociationElementOrder(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication(Indication indication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(indication, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validateIndication_validateIndicationTemplateId(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validateIndication_validateIndicationClassCode(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validateIndication_validateIndicationMoodCode(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validateIndication_validateIndicationCodeP(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validateIndication_validateIndicationCode(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validateIndication_validateIndicationValue(indication, diagnostics, context);
		if (result || diagnostics != null) result &= validateIndication_validateIndicationValueP(indication, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateIndicationTemplateId constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationTemplateId(Indication indication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return indication.validateIndicationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationClassCode constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationClassCode(Indication indication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return indication.validateIndicationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationMoodCode constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationMoodCode(Indication indication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return indication.validateIndicationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationCodeP constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationCodeP(Indication indication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return indication.validateIndicationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationCode constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationCode(Indication indication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return indication.validateIndicationCode(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationValue constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationValue(Indication indication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return indication.validateIndicationValue(diagnostics, context);
	}

	/**
	 * Validates the validateIndicationValueP constraint of '<em>Indication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIndication_validateIndicationValueP(Indication indication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return indication.validateIndicationValueP(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntendedRegimen(IntendedRegimen intendedRegimen, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(intendedRegimen, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validateIntendedRegimen_validateIntendedRegimenTemplateId(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validateIntendedRegimen_validateIntendedRegimenClassCode(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validateIntendedRegimen_validateIntendedRegimenMoodCode(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validateIntendedRegimen_validateIntendedRegimenCodeP(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validateIntendedRegimen_validateIntendedRegimenCode(intendedRegimen, diagnostics, context);
		if (result || diagnostics != null) result &= validateIntendedRegimen_validateIntendedRegimenValue(intendedRegimen, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateIntendedRegimenTemplateId constraint of '<em>Intended Regimen</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntendedRegimen_validateIntendedRegimenTemplateId(IntendedRegimen intendedRegimen, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return intendedRegimen.validateIntendedRegimenTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateIntendedRegimenClassCode constraint of '<em>Intended Regimen</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntendedRegimen_validateIntendedRegimenClassCode(IntendedRegimen intendedRegimen, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return intendedRegimen.validateIntendedRegimenClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateIntendedRegimenMoodCode constraint of '<em>Intended Regimen</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntendedRegimen_validateIntendedRegimenMoodCode(IntendedRegimen intendedRegimen, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return intendedRegimen.validateIntendedRegimenMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateIntendedRegimenCodeP constraint of '<em>Intended Regimen</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntendedRegimen_validateIntendedRegimenCodeP(IntendedRegimen intendedRegimen, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return intendedRegimen.validateIntendedRegimenCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateIntendedRegimenCode constraint of '<em>Intended Regimen</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntendedRegimen_validateIntendedRegimenCode(IntendedRegimen intendedRegimen, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return intendedRegimen.validateIntendedRegimenCode(diagnostics, context);
	}

	/**
	 * Validates the validateIntendedRegimenValue constraint of '<em>Intended Regimen</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateIntendedRegimen_validateIntendedRegimenValue(IntendedRegimen intendedRegimen, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return intendedRegimen.validateIntendedRegimenValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDoseAdjustmentReason(DoseAdjustmentReason doseAdjustmentReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(doseAdjustmentReason, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateDoseAdjustmentReason_validateDoseAdjustmentReasonTemplateId(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateDoseAdjustmentReason_validateDoseAdjustmentReasonClassCode(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateDoseAdjustmentReason_validateDoseAdjustmentReasonCodeP(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateDoseAdjustmentReason_validateDoseAdjustmentReasonCode(doseAdjustmentReason, diagnostics, context);
		if (result || diagnostics != null) result &= validateDoseAdjustmentReason_validateDoseAdjustmentReasonValue(doseAdjustmentReason, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateDoseAdjustmentReasonTemplateId constraint of '<em>Dose Adjustment Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDoseAdjustmentReason_validateDoseAdjustmentReasonTemplateId(DoseAdjustmentReason doseAdjustmentReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return doseAdjustmentReason.validateDoseAdjustmentReasonTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDoseAdjustmentReasonClassCode constraint of '<em>Dose Adjustment Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDoseAdjustmentReason_validateDoseAdjustmentReasonClassCode(DoseAdjustmentReason doseAdjustmentReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return doseAdjustmentReason.validateDoseAdjustmentReasonClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateDoseAdjustmentReasonCodeP constraint of '<em>Dose Adjustment Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDoseAdjustmentReason_validateDoseAdjustmentReasonCodeP(DoseAdjustmentReason doseAdjustmentReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return doseAdjustmentReason.validateDoseAdjustmentReasonCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateDoseAdjustmentReasonCode constraint of '<em>Dose Adjustment Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDoseAdjustmentReason_validateDoseAdjustmentReasonCode(DoseAdjustmentReason doseAdjustmentReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return doseAdjustmentReason.validateDoseAdjustmentReasonCode(diagnostics, context);
	}

	/**
	 * Validates the validateDoseAdjustmentReasonValue constraint of '<em>Dose Adjustment Reason</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDoseAdjustmentReason_validateDoseAdjustmentReasonValue(DoseAdjustmentReason doseAdjustmentReason, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return doseAdjustmentReason.validateDoseAdjustmentReasonValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(adverseEvent, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventTemplateId(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventClassCode(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventMoodCode(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventId(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventCodeP(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventCode(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventEffectiveTime(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventValue(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventValueP(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventTargetSiteCodeP(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventTargetSiteCode(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventGroupIdentifier(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventBodySystemorOrganClass(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventEventSeverity(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventPreSpecifiedEvent(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventStudyDayPeriod(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventDomainAssignment(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventComment(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventRelatedRecord(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventSupplementalValue(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventStartRelativetoReferencePeriod(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventStopRelativetoReferencePeriod(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventSeriousEvent(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventStudyTreatmentActionTaken(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventOtherTreatmentActionTaken(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventStudyTreatmentCausality(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventNonStudyTreatmentRelationship(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventEventPattern(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventEventOutcome(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventConcomitantTreatment(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventToxicity(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventCategory(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventSubCategory(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventFindingAbout(adverseEvent, diagnostics, context);
		if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventEventDuration(adverseEvent, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateAdverseEventTemplateId constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventTemplateId(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventClassCode constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventMoodCode constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventId constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventId(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventId(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventCodeP constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventCode constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventEffectiveTime constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventEffectiveTime(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventValue constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventValue(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventValueP constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventValueP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventValueP(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventTargetSiteCodeP constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventTargetSiteCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventTargetSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventTargetSiteCode constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventTargetSiteCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventGroupIdentifier constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventGroupIdentifier(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventBodySystemorOrganClass constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventBodySystemorOrganClass(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventBodySystemorOrganClass(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventEventSeverity constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventEventSeverity(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventEventSeverity(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventPreSpecifiedEvent constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventPreSpecifiedEvent(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventPreSpecifiedEvent(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventStudyDayPeriod constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventStudyDayPeriod(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventDomainAssignment constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventDomainAssignment(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventComment constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventComment(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventComment(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventRelatedRecord constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventRelatedRecord(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventSupplementalValue constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventSupplementalValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventStartRelativetoReferencePeriod constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventStartRelativetoReferencePeriod(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventStartRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventStopRelativetoReferencePeriod constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventStopRelativetoReferencePeriod(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventStopRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventSeriousEvent constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventSeriousEvent(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventSeriousEvent(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventStudyTreatmentActionTaken constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventStudyTreatmentActionTaken(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventStudyTreatmentActionTaken(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventOtherTreatmentActionTaken constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventOtherTreatmentActionTaken(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventOtherTreatmentActionTaken(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventStudyTreatmentCausality constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventStudyTreatmentCausality(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventStudyTreatmentCausality(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventNonStudyTreatmentRelationship constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventNonStudyTreatmentRelationship(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventNonStudyTreatmentRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventEventPattern constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventEventPattern(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventEventPattern(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventEventOutcome constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventEventOutcome(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventEventOutcome(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventConcomitantTreatment constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventConcomitantTreatment(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventConcomitantTreatment(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventToxicity constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventToxicity(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventToxicity(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventCategory constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventCategory(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventCategory(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventSubCategory constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventSubCategory(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventFindingAbout constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventFindingAbout(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateAdverseEventEventDuration constraint of '<em>Adverse Event</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateAdverseEvent_validateAdverseEventEventDuration(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return adverseEvent.validateAdverseEventEventDuration(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(inclusionorExclusionCriteriaNotMet, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetTemplateId(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetClassCode(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetMoodCode(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetId(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCodeP(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCode(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetValue(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetDataCollection(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetComment(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetDomainAssignment(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetRelatedRecord(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetSupplementalValue(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCategory(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetSubCategory(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetFindingAbout(inclusionorExclusionCriteriaNotMet, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetTemplateId constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetTemplateId(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetClassCode constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetClassCode(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetMoodCode constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetMoodCode(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetId constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetId(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetId(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetCodeP constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCodeP(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetCode constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCode(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetCode(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetValue constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetValue(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetValue(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetDataCollection constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetDataCollection(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetComment constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetComment(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetComment(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetDomainAssignment constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetDomainAssignment(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetRelatedRecord constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetRelatedRecord(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetSupplementalValue constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetSupplementalValue(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetCategory constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCategory(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetCategory(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetSubCategory constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetSubCategory(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateInclusionorExclusionCriteriaNotMetFindingAbout constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetFindingAbout(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetFindingAbout(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(concomitantMedication, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateSubstanceAdministration_validateClassCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationTemplateId(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationClassCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationMoodCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationId(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationStatusCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationText(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationEffectiveTime(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationDoseQuantity(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationMaxDoseQuantity(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationRouteCodeP(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationRouteCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationGroupIdentifier(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationNonPerformanceReason(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationConsumableMaterial(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationPreSpecifiedEvent(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationDataCollection(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationStudyDayPeriod(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationTimingReference(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationComment(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationDomainAssignment(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationRelatedRecord(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationSupplementalValue(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationStartRelativetoReferencePeriod(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationStopRelativetoReferencePeriod(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIndication(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIntendedRegimen(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationCategory(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationSubCategory(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationFindingAbout(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationEventDuration(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationTypeCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAge(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(concomitantMedication, diagnostics, context);
		if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(concomitantMedication, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateConcomitantMedicationTemplateId constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationTemplateId(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationClassCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationClassCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationMoodCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationMoodCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationId constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationId(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationId(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationStatusCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationStatusCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationText constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationText(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationText(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationEffectiveTime constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationEffectiveTime(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationDoseQuantity constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationDoseQuantity(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationMaxDoseQuantity constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationMaxDoseQuantity(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationRouteCodeP constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationRouteCodeP(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationRouteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationRouteCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationRouteCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationGroupIdentifier constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationGroupIdentifier(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationNonPerformanceReason constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationNonPerformanceReason(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationConsumableMaterial constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationConsumableMaterial(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationConsumableMaterial(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationPreSpecifiedEvent constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationPreSpecifiedEvent(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationPreSpecifiedEvent(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationDataCollection constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationDataCollection(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationStudyDayPeriod constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationStudyDayPeriod(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationTimingReference constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationTimingReference(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationComment constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationComment(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationComment(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationDomainAssignment constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationDomainAssignment(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationRelatedRecord constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationRelatedRecord(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationSupplementalValue constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationSupplementalValue(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationStartRelativetoReferencePeriod constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationStartRelativetoReferencePeriod(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationStartRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationStopRelativetoReferencePeriod constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationStopRelativetoReferencePeriod(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationStopRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationIndication constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationIndication(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationIndication(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationIntendedRegimen constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationIntendedRegimen(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationIntendedRegimen(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationCategory constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationCategory(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationCategory(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationSubCategory constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationSubCategory(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationFindingAbout constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationFindingAbout(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationEventDuration constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationEventDuration(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationEventDuration(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationTypeCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationTypeCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAge constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAge(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAge(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(diagnostics, context);
	}

	/**
	 * Validates the validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue constraint of '<em>Concomitant Medication</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConcomitantMedication_validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return concomitantMedication.validateConcomitantMedicationHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(consumableMaterial, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateConsumable_validateTypeCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialTemplateId(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialTypeCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedication(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindClassCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindCodeP(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleClassCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleAssignedPerson(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialClassCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialCode(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialCodeP(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialLotNumberText(consumableMaterial, diagnostics, context);
		if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationClassCode(consumableMaterial, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateConsumableMaterialTemplateId constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialTemplateId(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialTypeCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialTypeCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedication constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedication(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedication(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindClassCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindClassCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindCodeP constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindCodeP(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialingredientRoleClassCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleClassCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialingredientRoleClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialingredientRoleAssignedPerson constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialingredientRoleAssignedPerson(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialingredientRoleAssignedPerson(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialClassCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialClassCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialCode(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialCodeP constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialCodeP(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationMedicationMaterialLotNumberText constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialLotNumberText(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialLotNumberText(diagnostics, context);
	}

	/**
	 * Validates the validateConsumableMaterialMedicationClassCode constraint of '<em>Consumable Material</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateConsumableMaterial_validateConsumableMaterialMedicationClassCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return consumableMaterial.validateConsumableMaterialMedicationClassCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(humanClinicalExposure, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateSubstanceAdministration_validateClassCode(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureTemplateId(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureClassCode(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureDoseQuantity(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureEffectiveTime(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureId(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureMoodCode(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureRouteCodeP(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureRouteCode(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureMaxDoseQuantity(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureText(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureApproachSiteCode(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureApproachSiteCodeP(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureGroupIdentifier(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureConsumableMaterial(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureStudyEpoch(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureElementOrderAssociation(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureTimingReference(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureStudyDayPeriod(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureComment(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureDomainAssignment(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureRelatedRecord(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureSupplementalValue(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureIntendedRegimen(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureDoseAdjustmentReason(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureCategory(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureSubCategory(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureFindingAbout(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureEventDuration(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderCode(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderValue(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationTypeCode(humanClinicalExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationElementOrder(humanClinicalExposure, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateHumanClinicalExposureTemplateId constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureTemplateId(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureClassCode constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureClassCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureDoseQuantity constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureDoseQuantity(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureEffectiveTime constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureEffectiveTime(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureId constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureId(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureId(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureMoodCode constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureMoodCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureRouteCodeP constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureRouteCodeP(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureRouteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureRouteCode constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureRouteCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureMaxDoseQuantity constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureMaxDoseQuantity(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureText constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureText(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureText(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureApproachSiteCode constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureApproachSiteCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureApproachSiteCodeP constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureApproachSiteCodeP(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureApproachSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureGroupIdentifier constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureGroupIdentifier(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureConsumableMaterial constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureConsumableMaterial(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureConsumableMaterial(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureStudyEpoch constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureStudyEpoch(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureStudyEpoch(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureElementOrderAssociation constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureElementOrderAssociation(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureElementOrderAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureTimingReference constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureTimingReference(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureStudyDayPeriod constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureStudyDayPeriod(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureComment constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureComment(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureComment(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureDomainAssignment constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureDomainAssignment(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureRelatedRecord constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureRelatedRecord(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureSupplementalValue constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureSupplementalValue(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureIntendedRegimen constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureIntendedRegimen(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureIntendedRegimen(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureDoseAdjustmentReason constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureDoseAdjustmentReason(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureDoseAdjustmentReason(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureCategory constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureCategory(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureCategory(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureSubCategory constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureSubCategory(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureFindingAbout constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureFindingAbout(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureEventDuration constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureEventDuration(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureEventDuration(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderCode constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderValue constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderValue(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderValue(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationTypeCode constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationTypeCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateHumanClinicalExposureelementOrderAssociationElementOrder constraint of '<em>Human Clinical Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationElementOrder(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationElementOrder(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(substanceUse, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateSubstanceAdministration_validateClassCode(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseTemplateId(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseClassCode(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseMoodCode(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseId(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseStatusCode(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseText(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseEffectiveTime(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseDoseQuantity(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseMaxDoseQuantity(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseRouteCodeP(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseRouteCode(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseConsumableMaterial(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUsePreSpecifiedEvent(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseNonPerformanceReason(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseDataCollection(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseStudyDayPeriod(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseComment(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseDomainAssignment(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseRelatedRecord(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseSupplementalValue(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseStartRelativetoReferencePeriod(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseStopRelativetoReferencePeriod(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseCategory(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseSubCategory(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseFindingAbout(substanceUse, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseEventDuration(substanceUse, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSubstanceUseTemplateId constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseTemplateId(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseClassCode constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseClassCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseMoodCode constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseMoodCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseId constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseId(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseId(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseStatusCode constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseStatusCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseText constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseText(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseText(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseEffectiveTime constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseEffectiveTime(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseDoseQuantity constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseDoseQuantity(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseMaxDoseQuantity constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseMaxDoseQuantity(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseRouteCodeP constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseRouteCodeP(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseRouteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseRouteCode constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseRouteCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseConsumableMaterial constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseConsumableMaterial(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseConsumableMaterial(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUsePreSpecifiedEvent constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUsePreSpecifiedEvent(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUsePreSpecifiedEvent(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseNonPerformanceReason constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseNonPerformanceReason(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseDataCollection constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseDataCollection(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseStudyDayPeriod constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseStudyDayPeriod(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseComment constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseComment(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseComment(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseDomainAssignment constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseDomainAssignment(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseRelatedRecord constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseRelatedRecord(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseSupplementalValue constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseSupplementalValue(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseStartRelativetoReferencePeriod constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseStartRelativetoReferencePeriod(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseStartRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseStopRelativetoReferencePeriod constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseStopRelativetoReferencePeriod(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseStopRelativetoReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseCategory constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseCategory(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseCategory(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseSubCategory constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseSubCategory(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseFindingAbout constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseFindingAbout(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseFindingAbout(diagnostics, context);
	}

	/**
	 * Validates the validateSubstanceUseEventDuration constraint of '<em>Substance Use</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubstanceUse_validateSubstanceUseEventDuration(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return substanceUse.validateSubstanceUseEventDuration(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(nonhumanLaboratoryTestResult, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultTemplateId(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultClassCode(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultCodeP(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultCode(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultId(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultMoodCode(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultStatusCode(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultValue(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultMethodCodeP(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultMethodCode(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultInterpretationCodeP(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultInterpretationCode(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultGroupIdentifier(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultSpecimenInformation(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultNonPerformanceReason(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultStudyTestPerformer(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultExclusionIndicator(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultPlannedStudyDay(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultStudyDayPeriod(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultTimingReference(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultComment(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultDomainAssignment(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultRelatedRecord(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultSupplementalValue(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultToxicity(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultCategory(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultSubCategory(nonhumanLaboratoryTestResult, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultFastingStatus(nonhumanLaboratoryTestResult, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultTemplateId constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultTemplateId(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultClassCode constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultClassCode(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultCodeP constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultCodeP(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultCode constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultCode(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultId constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultId(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultId(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultMoodCode constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultMoodCode(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultStatusCode constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultStatusCode(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultValue constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultValue(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultMethodCodeP constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultMethodCodeP(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultMethodCode constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultMethodCode(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultInterpretationCodeP constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultInterpretationCodeP(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultInterpretationCode constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultInterpretationCode(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultGroupIdentifier constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultGroupIdentifier(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultSpecimenInformation constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultSpecimenInformation(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultNonPerformanceReason constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultNonPerformanceReason(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultStudyTestPerformer constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultStudyTestPerformer(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultStudyTestPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultExclusionIndicator constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultExclusionIndicator(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultExclusionIndicator(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultPlannedStudyDay constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultPlannedStudyDay(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultPlannedStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultStudyDayPeriod constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultStudyDayPeriod(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultTimingReference constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultTimingReference(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultComment constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultComment(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultComment(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultDomainAssignment constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultDomainAssignment(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultRelatedRecord constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultRelatedRecord(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultSupplementalValue constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultSupplementalValue(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultToxicity constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultToxicity(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultToxicity(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultCategory constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultCategory(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultCategory(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultSubCategory constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultSubCategory(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanLaboratoryTestResultFastingStatus constraint of '<em>Nonhuman Laboratory Test Result</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanLaboratoryTestResult_validateNonhumanLaboratoryTestResultFastingStatus(NonhumanLaboratoryTestResult nonhumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanLaboratoryTestResult.validateNonhumanLaboratoryTestResultFastingStatus(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTestOrganization(StudyTestOrganization studyTestOrganization, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studyTestOrganization, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateParticipant2_validateContextControlCode(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTestOrganization_validateStudyTestOrganizationTemplateId(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTestOrganization_validateStudyTestOrganizationTypeCode(studyTestOrganization, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyTestOrganization_validateStudyTestOrganizationRoleOfPerformer(studyTestOrganization, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudyTestOrganizationTemplateId constraint of '<em>Study Test Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTestOrganization_validateStudyTestOrganizationTemplateId(StudyTestOrganization studyTestOrganization, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTestOrganization.validateStudyTestOrganizationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTestOrganizationTypeCode constraint of '<em>Study Test Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTestOrganization_validateStudyTestOrganizationTypeCode(StudyTestOrganization studyTestOrganization, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTestOrganization.validateStudyTestOrganizationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyTestOrganizationRoleOfPerformer constraint of '<em>Study Test Organization</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyTestOrganization_validateStudyTestOrganizationRoleOfPerformer(StudyTestOrganization studyTestOrganization, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyTestOrganization.validateStudyTestOrganizationRoleOfPerformer(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyFindingEvaluator(StudyFindingEvaluator studyFindingEvaluator, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(studyFindingEvaluator, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateParticipant2_validateContextControlCode(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyFindingEvaluator_validateStudyFindingEvaluatorTemplateId(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyFindingEvaluator_validateStudyFindingEvaluatorTypeCode(studyFindingEvaluator, diagnostics, context);
		if (result || diagnostics != null) result &= validateStudyFindingEvaluator_validateStudyFindingEvaluatorRoleOfEvaluator(studyFindingEvaluator, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateStudyFindingEvaluatorTemplateId constraint of '<em>Study Finding Evaluator</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyFindingEvaluator_validateStudyFindingEvaluatorTemplateId(StudyFindingEvaluator studyFindingEvaluator, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyFindingEvaluator.validateStudyFindingEvaluatorTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateStudyFindingEvaluatorTypeCode constraint of '<em>Study Finding Evaluator</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyFindingEvaluator_validateStudyFindingEvaluatorTypeCode(StudyFindingEvaluator studyFindingEvaluator, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyFindingEvaluator.validateStudyFindingEvaluatorTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateStudyFindingEvaluatorRoleOfEvaluator constraint of '<em>Study Finding Evaluator</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateStudyFindingEvaluator_validateStudyFindingEvaluatorRoleOfEvaluator(StudyFindingEvaluator studyFindingEvaluator, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return studyFindingEvaluator.validateStudyFindingEvaluatorRoleOfEvaluator(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(subjectDataNonClinicalTrials, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateClinicalDocument_validateClassCode(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateClinicalDocument_validateMoodCode(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsTemplateId(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsClassCode(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsMoodCode(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCodeP(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCode(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsConfidentialityCodeP(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsConfidentialityCode(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsEffectiveTime(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsId(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsLanguageCode(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsRealmCode(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsSetId(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsVersionNumber(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsNonhumanSubjectDataDocumentBody(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsStudyRelationship2(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsSubjectParticipation2(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCustodian(subjectDataNonClinicalTrials, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsAuthor(subjectDataNonClinicalTrials, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsTemplateId constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsTemplateId(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsClassCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsClassCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsMoodCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsMoodCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsCodeP constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCodeP(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsConfidentialityCodeP constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsConfidentialityCodeP(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsConfidentialityCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsConfidentialityCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsConfidentialityCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsConfidentialityCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsEffectiveTime constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsEffectiveTime(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsId constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsId(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsLanguageCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsLanguageCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsLanguageCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsRealmCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsRealmCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsRealmCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsSetId constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsSetId(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsSetId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsVersionNumber constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsVersionNumber(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsVersionNumber(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsNonhumanSubjectDataDocumentBody constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsNonhumanSubjectDataDocumentBody(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsNonhumanSubjectDataDocumentBody(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsStudyRelationship2 constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsStudyRelationship2(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsStudyRelationship2(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsSubjectParticipation2 constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsSubjectParticipation2(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsSubjectParticipation2(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsCustodian constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCustodian(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsCustodian(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectDataNonClinicalTrialsAuthor constraint of '<em>Subject Data Non Clinical Trials</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsAuthor(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsAuthor(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(nonhumanSubjectDataDocumentSection, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateSection_validateClassCode(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateSection_validateMoodCode(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionTemplateId(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionClassCode(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionMoodCode(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionCodeP(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionCode(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionText(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionTitle(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionNonhumanSubjectDemographics(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionNonhumanDisposition(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionSubjectElement(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionNonhumanExposure(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionBodyWeight(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionBodyWeightGain(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionClinicalObservation(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionDeathDiagnosis(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionFoodandWaterConsumption(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionNonhumanLaboratoryTestResult(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionMacroscopicFinding(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionMicroscopicFindings(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionOrganMeasurement(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionPalpableMass(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionPharmacokineticConcentrationFinding(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionSubjectCharacteristic(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionTumorFinding(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionVitalSign(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionECGTestResult(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionStudySubjectEvent(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionStudySubjectFinding(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionStudySubjectIntervention(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionComment(nonhumanSubjectDataDocumentSection, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionPharmacokineticParameterFinding(nonhumanSubjectDataDocumentSection, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionTemplateId constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionTemplateId(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionClassCode constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionClassCode(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionMoodCode constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionMoodCode(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionCodeP constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionCodeP(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionCode constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionCode(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionText constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionText(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionText(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionTitle constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionTitle(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionTitle(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionNonhumanSubjectDemographics constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionNonhumanSubjectDemographics(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionNonhumanSubjectDemographics(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionNonhumanDisposition constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionNonhumanDisposition(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionNonhumanDisposition(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionSubjectElement constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionSubjectElement(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionSubjectElement(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionNonhumanExposure constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionNonhumanExposure(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionNonhumanExposure(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionBodyWeight constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionBodyWeight(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionBodyWeight(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionBodyWeightGain constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionBodyWeightGain(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionBodyWeightGain(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionClinicalObservation constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionClinicalObservation(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionClinicalObservation(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionDeathDiagnosis constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionDeathDiagnosis(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionDeathDiagnosis(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionFoodandWaterConsumption constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionFoodandWaterConsumption(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionFoodandWaterConsumption(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionNonhumanLaboratoryTestResult constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionNonhumanLaboratoryTestResult(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionNonhumanLaboratoryTestResult(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionMacroscopicFinding constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionMacroscopicFinding(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionMacroscopicFinding(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionMicroscopicFindings constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionMicroscopicFindings(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionMicroscopicFindings(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionOrganMeasurement constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionOrganMeasurement(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionOrganMeasurement(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionPalpableMass constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionPalpableMass(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionPalpableMass(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionPharmacokineticConcentrationFinding constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionPharmacokineticConcentrationFinding(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionPharmacokineticConcentrationFinding(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionSubjectCharacteristic constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionSubjectCharacteristic(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionSubjectCharacteristic(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionTumorFinding constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionTumorFinding(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionTumorFinding(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionVitalSign constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionVitalSign(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionVitalSign(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionECGTestResult constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionECGTestResult(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionECGTestResult(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionStudySubjectEvent constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionStudySubjectEvent(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionStudySubjectEvent(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionStudySubjectFinding constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionStudySubjectFinding(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionStudySubjectFinding(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionStudySubjectIntervention constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionStudySubjectIntervention(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionStudySubjectIntervention(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionComment constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionComment(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionComment(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDataDocumentSectionPharmacokineticParameterFinding constraint of '<em>Nonhuman Subject Data Document Section</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDataDocumentSection_validateNonhumanSubjectDataDocumentSectionPharmacokineticParameterFinding(NonhumanSubjectDataDocumentSection nonhumanSubjectDataDocumentSection, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDataDocumentSection.validateNonhumanSubjectDataDocumentSectionPharmacokineticParameterFinding(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(nonhumanSubjectDemographics, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsTemplateId(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsClassCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsMoodCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsCodeP(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsStudyArm(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsComment(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsDomainAssignment(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsRelatedRecord(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsSupplementalValue(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsReferencePeriod(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainClassCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainCodeP(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainMoodCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainValue(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainValueP(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainText(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationTypeCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationSubjectStrain(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeClassCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeCodeP(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeMoodCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeValue(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationTypeCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAge(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesClassCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesMoodCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesCodeP(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesValue(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesValueP(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationTypeCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationSubjectSpecies(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipClassCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipCodeP(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipMoodCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipValue(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationTypeCode(nonhumanSubjectDemographics, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationSetMembership(nonhumanSubjectDemographics, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsTemplateId constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsTemplateId(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsClassCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsClassCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsMoodCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsMoodCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsCodeP constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsCodeP(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsStudyArm constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsStudyArm(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsStudyArm(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsComment constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsComment(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsComment(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsDomainAssignment constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsDomainAssignment(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsRelatedRecord constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsRelatedRecord(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsSupplementalValue constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsSupplementalValue(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsReferencePeriod constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsReferencePeriod(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsReferencePeriod(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainClassCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainClassCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainCodeP constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainCodeP(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainMoodCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainMoodCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainValue constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainValue(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainValueP constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainValueP(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainValueP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainText constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainText(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsstrainAssociationsubjectStrainText(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsstrainAssociationTypeCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationTypeCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsstrainAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsstrainAssociationSubjectStrain constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsstrainAssociationSubjectStrain(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsstrainAssociationSubjectStrain(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsageAssociationSubjectAgeClassCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeClassCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsageAssociationSubjectAgeClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsageAssociationSubjectAgeCodeP constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeCodeP(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsageAssociationSubjectAgeCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsageAssociationSubjectAgeCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsageAssociationSubjectAgeCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsageAssociationSubjectAgeMoodCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeMoodCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsageAssociationSubjectAgeMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsageAssociationSubjectAgeValue constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAgeValue(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsageAssociationSubjectAgeValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsageAssociationTypeCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationTypeCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsageAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsageAssociationSubjectAge constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsageAssociationSubjectAge(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsageAssociationSubjectAge(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesClassCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesClassCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesMoodCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesMoodCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesCodeP constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesCodeP(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesValue constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesValue(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesValueP constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesValueP(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsspeciesAssociationsubjectSpeciesValueP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsspeciesAssociationTypeCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationTypeCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsspeciesAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicsspeciesAssociationSubjectSpecies constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicsspeciesAssociationSubjectSpecies(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicsspeciesAssociationSubjectSpecies(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipClassCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipClassCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipCodeP constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipCodeP(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipMoodCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipMoodCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipValue constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipValue(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicssetMembershipAssociationsetMembershipValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicssetMembershipAssociationTypeCode constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationTypeCode(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicssetMembershipAssociationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanSubjectDemographicssetMembershipAssociationSetMembership constraint of '<em>Nonhuman Subject Demographics</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanSubjectDemographics_validateNonhumanSubjectDemographicssetMembershipAssociationSetMembership(NonhumanSubjectDemographics nonhumanSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanSubjectDemographics.validateNonhumanSubjectDemographicssetMembershipAssociationSetMembership(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(nonhumanDisposition, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionTemplateId(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionClassCode(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionMoodCode(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionId(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionCode(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionEffectiveTime(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionStudyDayPeriod(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionPlannedStudyDay(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionComment(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionDomainAssignment(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionRelatedRecord(nonhumanDisposition, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanDisposition_validateNonhumanDispositionSupplementalValue(nonhumanDisposition, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateNonhumanDispositionTemplateId constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionTemplateId(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionClassCode constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionClassCode(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionMoodCode constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionMoodCode(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionId constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionId(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionId(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionCode constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionCode(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionEffectiveTime constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionEffectiveTime(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionStudyDayPeriod constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionStudyDayPeriod(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionPlannedStudyDay constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionPlannedStudyDay(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionPlannedStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionComment constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionComment(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionComment(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionDomainAssignment constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionDomainAssignment(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionRelatedRecord constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionRelatedRecord(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanDispositionSupplementalValue constraint of '<em>Nonhuman Disposition</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanDisposition_validateNonhumanDispositionSupplementalValue(NonhumanDisposition nonhumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanDisposition.validateNonhumanDispositionSupplementalValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(nonhumanExposure, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateSubstanceAdministration_validateClassCode(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureTemplateId(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureClassCode(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureMoodCode(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureDoseQuantity(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureEffectiveTime(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureId(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureRouteCode(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureRouteCodeP(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureMaxDoseQuantity(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureText(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureApproachSiteCode(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureApproachSiteCodeP(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureConsumableMaterial(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureTimingReference(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureStudyDayPeriod(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureComment(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureDomainAssignment(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureRelatedRecord(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureSupplementalValue(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureDoseAdjustmentReason(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureCategory(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureSubCategory(nonhumanExposure, diagnostics, context);
		if (result || diagnostics != null) result &= validateNonhumanExposure_validateNonhumanExposureEventDuration(nonhumanExposure, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateNonhumanExposureTemplateId constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureTemplateId(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureClassCode constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureClassCode(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureMoodCode constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureMoodCode(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureDoseQuantity constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureDoseQuantity(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureEffectiveTime constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureEffectiveTime(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureId constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureId(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureId(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureRouteCode constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureRouteCode(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureRouteCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureRouteCodeP constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureRouteCodeP(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureRouteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureMaxDoseQuantity constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureMaxDoseQuantity(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureMaxDoseQuantity(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureText constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureText(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureText(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureApproachSiteCode constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureApproachSiteCode(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureApproachSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureApproachSiteCodeP constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureApproachSiteCodeP(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureApproachSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureConsumableMaterial constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureConsumableMaterial(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureConsumableMaterial(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureTimingReference constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureTimingReference(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureStudyDayPeriod constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureStudyDayPeriod(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureComment constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureComment(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureComment(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureDomainAssignment constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureDomainAssignment(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureRelatedRecord constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureRelatedRecord(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureSupplementalValue constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureSupplementalValue(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureDoseAdjustmentReason constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureDoseAdjustmentReason(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureDoseAdjustmentReason(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureCategory constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureCategory(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureCategory(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureSubCategory constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureSubCategory(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateNonhumanExposureEventDuration constraint of '<em>Nonhuman Exposure</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateNonhumanExposure_validateNonhumanExposureEventDuration(NonhumanExposure nonhumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return nonhumanExposure.validateNonhumanExposureEventDuration(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(bodyWeight, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightTemplateId(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightClassCode(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightMoodCode(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightId(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightCodeP(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightCode(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightStatusCode(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightValue(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightInterpretationCodeP(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightInterpretationCode(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightNonPerformanceReason(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightDataCollection(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightExclusionReason(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightComment(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightDomainAssignment(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightRelatedRecord(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightSupplementalValue(bodyWeight, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightFastingStatus(bodyWeight, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateBodyWeightTemplateId constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightTemplateId(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightClassCode constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightClassCode(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightMoodCode constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightMoodCode(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightId constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightId(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightId(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightCodeP constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightCodeP(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightCode constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightCode(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightStatusCode constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightStatusCode(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightValue constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightValue(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightValue(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightInterpretationCodeP constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightInterpretationCodeP(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightInterpretationCode constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightInterpretationCode(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightNonPerformanceReason constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightNonPerformanceReason(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightDataCollection constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightDataCollection(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightExclusionReason constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightExclusionReason(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightExclusionReason(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightComment constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightComment(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightComment(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightDomainAssignment constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightDomainAssignment(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightRelatedRecord constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightRelatedRecord(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightSupplementalValue constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightSupplementalValue(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightFastingStatus constraint of '<em>Body Weight</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeight_validateBodyWeightFastingStatus(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeight.validateBodyWeightFastingStatus(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(bodyWeightGain, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainTemplateId(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainClassCode(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainMoodCode(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainId(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainCodeP(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainCode(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainStatusCode(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainEffectiveTime(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainValue(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainInterpretationCodeP(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainInterpretationCode(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainNonPerformanceReason(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainStudyDayPeriod(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainTimingReference(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainExclusionReason(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainComment(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainDomainAssignment(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainRelatedRecord(bodyWeightGain, diagnostics, context);
		if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainSupplementalValue(bodyWeightGain, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateBodyWeightGainTemplateId constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainTemplateId(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainClassCode constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainClassCode(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainMoodCode constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainMoodCode(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainId constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainId(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainId(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainCodeP constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainCodeP(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainCode constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainCode(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainStatusCode constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainStatusCode(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainEffectiveTime constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainEffectiveTime(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainValue constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainValue(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainValue(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainInterpretationCodeP constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainInterpretationCodeP(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainInterpretationCode constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainInterpretationCode(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainNonPerformanceReason constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainNonPerformanceReason(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainStudyDayPeriod constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainStudyDayPeriod(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainTimingReference constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainTimingReference(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainExclusionReason constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainExclusionReason(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainExclusionReason(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainComment constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainComment(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainComment(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainDomainAssignment constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainDomainAssignment(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainRelatedRecord constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainRelatedRecord(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateBodyWeightGainSupplementalValue constraint of '<em>Body Weight Gain</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateBodyWeightGain_validateBodyWeightGainSupplementalValue(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return bodyWeightGain.validateBodyWeightGainSupplementalValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(clinicalObservation, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationTemplateId(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationClassCode(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationMoodCode(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationCodeP(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationCode(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationId(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationValue(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationStatusCode(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationTargetSiteCodeP(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationTargetSiteCode(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationInterpretationCodeP(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationInterpretationCode(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationGroupIdentifier(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationBodySystemorOrganClass(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationNonPerformanceReason(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationStudyFindingEvaluator(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationEventSeverity(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationPlannedStudyDay(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationDataCollection(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationTimingReference(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationMassIdentification(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationExclusionReason(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationComment(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationDomainAssignment(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationRelatedRecord(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationSupplementalValue(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationCategory(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationSubCategory(clinicalObservation, diagnostics, context);
		if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationResultCategory(clinicalObservation, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateClinicalObservationTemplateId constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationTemplateId(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationClassCode constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationClassCode(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationMoodCode constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationMoodCode(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationCodeP constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationCodeP(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationCode constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationCode(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationId constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationId(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationId(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationValue constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationValue(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationValue(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationStatusCode constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationStatusCode(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationTargetSiteCodeP constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationTargetSiteCodeP(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationTargetSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationTargetSiteCode constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationTargetSiteCode(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationInterpretationCodeP constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationInterpretationCodeP(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationInterpretationCode constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationInterpretationCode(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationGroupIdentifier constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationGroupIdentifier(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationBodySystemorOrganClass constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationBodySystemorOrganClass(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationBodySystemorOrganClass(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationNonPerformanceReason constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationNonPerformanceReason(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationStudyFindingEvaluator constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationStudyFindingEvaluator(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationEventSeverity constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationEventSeverity(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationEventSeverity(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationPlannedStudyDay constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationPlannedStudyDay(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationPlannedStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationDataCollection constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationDataCollection(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationTimingReference constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationTimingReference(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationTimingReference(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationMassIdentification constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationMassIdentification(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationMassIdentification(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationExclusionReason constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationExclusionReason(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationExclusionReason(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationComment constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationComment(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationComment(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationDomainAssignment constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationDomainAssignment(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationRelatedRecord constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationRelatedRecord(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationSupplementalValue constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationSupplementalValue(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationCategory constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationCategory(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationCategory(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationSubCategory constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationSubCategory(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationSubCategory(diagnostics, context);
	}

	/**
	 * Validates the validateClinicalObservationResultCategory constraint of '<em>Clinical Observation</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateClinicalObservation_validateClinicalObservationResultCategory(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return clinicalObservation.validateClinicalObservationResultCategory(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(deathDiagnosis, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisTemplateId(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisClassCode(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisMoodCode(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisId(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisCodeP(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisCode(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisValue(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisValueP(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisStudyFindingEvaluator(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisDataCollection(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisComment(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisDomainAssignment(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisRelatedRecord(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisSupplementalValue(deathDiagnosis, diagnostics, context);
		if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisResultCategory(deathDiagnosis, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateDeathDiagnosisTemplateId constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisTemplateId(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisClassCode constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisClassCode(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisMoodCode constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisMoodCode(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisId constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisId(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisId(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisCodeP constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisCodeP(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisCode constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisCode(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisCode(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisValue constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisValue(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisValue(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisValueP constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisValueP(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisValueP(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisStudyFindingEvaluator constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisStudyFindingEvaluator(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisDataCollection constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisDataCollection(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisComment constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisComment(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisComment(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisDomainAssignment constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisDomainAssignment(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisRelatedRecord constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisRelatedRecord(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisSupplementalValue constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisSupplementalValue(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateDeathDiagnosisResultCategory constraint of '<em>Death Diagnosis</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateDeathDiagnosis_validateDeathDiagnosisResultCategory(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return deathDiagnosis.validateDeathDiagnosisResultCategory(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(foodandWaterConsumption, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionTemplateId(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionClassCode(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionMoodCode(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionId(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionCodeP(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionCode(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionStatusCode(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionEffectiveTime(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionValue(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionInterpretationCodeP(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionInterpretationCode(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionNonPerformanceReason(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionStudyDayPeriod(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionExclusionReason(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionGroupIdentifier(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionComment(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionDomainAssignment(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionRelatedRecord(foodandWaterConsumption, diagnostics, context);
		if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionSupplementalValue(foodandWaterConsumption, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateFoodandWaterConsumptionTemplateId constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionTemplateId(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionClassCode constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionClassCode(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionMoodCode constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionMoodCode(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionId constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionId(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionId(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionCodeP constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionCodeP(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionCode constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionCode(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionCode(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionStatusCode constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionStatusCode(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionEffectiveTime constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionEffectiveTime(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionEffectiveTime(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionValue constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionValue(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionValue(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionInterpretationCodeP constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionInterpretationCodeP(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionInterpretationCode constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionInterpretationCode(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionNonPerformanceReason constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionNonPerformanceReason(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionStudyDayPeriod constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionStudyDayPeriod(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionStudyDayPeriod(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionExclusionReason constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionExclusionReason(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionExclusionReason(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionGroupIdentifier constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionGroupIdentifier(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionComment constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionComment(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionComment(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionDomainAssignment constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionDomainAssignment(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionRelatedRecord constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionRelatedRecord(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateFoodandWaterConsumptionSupplementalValue constraint of '<em>Foodand Water Consumption</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionSupplementalValue(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return foodandWaterConsumption.validateFoodandWaterConsumptionSupplementalValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(macroscopicFinding, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingTemplateId(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingClassCode(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingMoodCode(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingCodeP(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingCode(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingId(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingValue(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingStatusCode(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingMassIdentification(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingGroupIdentifier(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingSpecimenInformation(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingBodySystemorOrganClass(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingNonPerformanceReason(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingStudyTestPerformer(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingStudyFindingEvaluator(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingEventSeverity(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingDataCollection(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingComment(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingDomainAssignment(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingRelatedRecord(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingSupplementalValue(macroscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingDeathRelationship(macroscopicFinding, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateMacroscopicFindingTemplateId constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingTemplateId(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingClassCode constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingClassCode(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingMoodCode constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingMoodCode(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingCodeP constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingCodeP(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingCode constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingCode(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingCode(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingId constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingId(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingId(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingValue constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingValue(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingValue(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingStatusCode constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingStatusCode(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingMassIdentification constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingMassIdentification(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingMassIdentification(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingGroupIdentifier constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingGroupIdentifier(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingSpecimenInformation constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingSpecimenInformation(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingBodySystemorOrganClass constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingBodySystemorOrganClass(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingBodySystemorOrganClass(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingNonPerformanceReason constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingNonPerformanceReason(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingStudyTestPerformer constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingStudyTestPerformer(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingStudyTestPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingStudyFindingEvaluator constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingStudyFindingEvaluator(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingEventSeverity constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingEventSeverity(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingEventSeverity(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingDataCollection constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingDataCollection(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingComment constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingComment(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingComment(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingDomainAssignment constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingDomainAssignment(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingRelatedRecord constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingRelatedRecord(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingSupplementalValue constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingSupplementalValue(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateMacroscopicFindingDeathRelationship constraint of '<em>Macroscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMacroscopicFinding_validateMacroscopicFindingDeathRelationship(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return macroscopicFinding.validateMacroscopicFindingDeathRelationship(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(microscopicFinding, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingTemplateId(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingClassCode(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingMoodCode(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingId(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingCodeP(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingCode(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingStatusCode(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingValue(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingMethodCodeP(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingMethodCode(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingNonPerformanceReason(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingStudyTestPerformer(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingSpecimenInformation(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingStudyFindingEvaluator(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingEventSeverity(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingDataCollection(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingGroupIdentifier(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingMassIdentification(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingBodySystemorOrganClass(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingComment(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingDomainAssignment(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingRelatedRecord(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingSupplementalValue(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingResultCategory(microscopicFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateMicroscopicFinding_validateMicroscopicFindingDeathRelationship(microscopicFinding, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateMicroscopicFindingTemplateId constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingTemplateId(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingClassCode constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingClassCode(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingMoodCode constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingMoodCode(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingId constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingId(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingId(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingCodeP constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingCodeP(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingCode constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingCode(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingStatusCode constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingStatusCode(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingValue constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingValue(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingValue(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingMethodCodeP constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingMethodCodeP(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingMethodCode constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingMethodCode(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingNonPerformanceReason constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingNonPerformanceReason(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingStudyTestPerformer constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingStudyTestPerformer(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingStudyTestPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingSpecimenInformation constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingSpecimenInformation(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingStudyFindingEvaluator constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingStudyFindingEvaluator(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingEventSeverity constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingEventSeverity(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingEventSeverity(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingDataCollection constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingDataCollection(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingGroupIdentifier constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingGroupIdentifier(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingMassIdentification constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingMassIdentification(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingMassIdentification(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingBodySystemorOrganClass constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingBodySystemorOrganClass(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingBodySystemorOrganClass(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingComment constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingComment(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingComment(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingDomainAssignment constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingDomainAssignment(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingRelatedRecord constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingRelatedRecord(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingSupplementalValue constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingSupplementalValue(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingResultCategory constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingResultCategory(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingResultCategory(diagnostics, context);
	}

	/**
	 * Validates the validateMicroscopicFindingDeathRelationship constraint of '<em>Microscopic Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMicroscopicFinding_validateMicroscopicFindingDeathRelationship(MicroscopicFinding microscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return microscopicFinding.validateMicroscopicFindingDeathRelationship(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(organMeasurement, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementTemplateId(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementClassCode(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementMoodCode(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementId(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementCodeP(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementCode(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementStatusCode(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementValue(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementInterpretationCodeP(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementInterpretationCode(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementNonPerformanceReason(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementSpecimenInformation(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementDataCollection(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementComment(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementExclusionReason(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementRelatedRecord(organMeasurement, diagnostics, context);
		if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementSupplementalValue(organMeasurement, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateOrganMeasurementTemplateId constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementTemplateId(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementClassCode constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementClassCode(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementMoodCode constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementMoodCode(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementId constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementId(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementId(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementCodeP constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementCodeP(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementCode constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementCode(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementCode(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementStatusCode constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementStatusCode(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementValue constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementValue(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementValue(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementInterpretationCodeP constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementInterpretationCodeP(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementInterpretationCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementInterpretationCode constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementInterpretationCode(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementInterpretationCode(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementNonPerformanceReason constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementNonPerformanceReason(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementSpecimenInformation constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementSpecimenInformation(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementDataCollection constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementDataCollection(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementComment constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementComment(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementComment(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementExclusionReason constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementExclusionReason(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementExclusionReason(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementRelatedRecord constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementRelatedRecord(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateOrganMeasurementSupplementalValue constraint of '<em>Organ Measurement</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateOrganMeasurement_validateOrganMeasurementSupplementalValue(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return organMeasurement.validateOrganMeasurementSupplementalValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(palpableMass, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassTemplateId(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassClassCode(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassMoodCode(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassId(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassCodeP(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassCode(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassStatusCode(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassValue(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassTargetSiteCodeP(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassTargetSiteCode(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassNonPerformanceReason(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassStudyFindingEvaluator(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassPlannedStudyDay(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassDataCollection(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassMassIdentification(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassComment(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassDomainAssignment(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassRelatedRecord(palpableMass, diagnostics, context);
		if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassSupplementalValue(palpableMass, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validatePalpableMassTemplateId constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassTemplateId(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassClassCode constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassClassCode(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassClassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassMoodCode constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassMoodCode(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassId constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassId(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassId(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassCodeP constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassCodeP(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassCode constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassCode(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassCode(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassStatusCode constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassStatusCode(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassValue constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassValue(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassValue(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassTargetSiteCodeP constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassTargetSiteCodeP(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassTargetSiteCodeP(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassTargetSiteCode constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassTargetSiteCode(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassTargetSiteCode(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassNonPerformanceReason constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassNonPerformanceReason(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassStudyFindingEvaluator constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassStudyFindingEvaluator(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassStudyFindingEvaluator(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassPlannedStudyDay constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassPlannedStudyDay(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassPlannedStudyDay(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassDataCollection constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassDataCollection(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassDataCollection(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassMassIdentification constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassMassIdentification(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassMassIdentification(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassComment constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassComment(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassComment(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassDomainAssignment constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassDomainAssignment(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassRelatedRecord constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassRelatedRecord(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validatePalpableMassSupplementalValue constraint of '<em>Palpable Mass</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validatePalpableMass_validatePalpableMassSupplementalValue(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return palpableMass.validatePalpableMassSupplementalValue(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(tumorFinding, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingTemplateId(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingId(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingCodeP(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingCode(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingStatusCode(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingValue(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingMethodCodeP(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingMethodCode(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingGroupIdentifier(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingSpecimenInformation(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingMassIdentification(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingNonPerformanceReason(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingStudyTestPerformer(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingDetectionDelayAssociation(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingComment(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingDomainAssignment(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingRelatedRecord(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingSupplementalValue(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingResultCategory(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingDeathRelationship(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingdetectionDelayAssociationdetectionDelayClassCode(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingdetectionDelayAssociationdetectionDelayCode(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingdetectionDelayAssociationdetectionDelayMoodCode(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingdetectionDelayAssociationdetectionDelayValue(tumorFinding, diagnostics, context);
		if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingdetectionDelayAssociationTypeCode(tumorFinding, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateTumorFindingTemplateId constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingTemplateId(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingId constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingId(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingId(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingCodeP constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingCodeP(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingCode constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingCode(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingCode(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingStatusCode constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingStatusCode(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingStatusCode(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingValue constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingValue(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingValue(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingMethodCodeP constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingMethodCodeP(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingMethodCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingMethodCode constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingMethodCode(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingMethodCode(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingGroupIdentifier constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingGroupIdentifier(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingGroupIdentifier(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingSpecimenInformation constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingSpecimenInformation(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingSpecimenInformation(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingMassIdentification constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingMassIdentification(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingMassIdentification(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingNonPerformanceReason constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingNonPerformanceReason(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingNonPerformanceReason(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingStudyTestPerformer constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingStudyTestPerformer(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingStudyTestPerformer(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingDetectionDelayAssociation constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingDetectionDelayAssociation(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingDetectionDelayAssociation(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingComment constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingComment(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingComment(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingDomainAssignment constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingDomainAssignment(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingDomainAssignment(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingRelatedRecord constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingRelatedRecord(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingRelatedRecord(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingSupplementalValue constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingSupplementalValue(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingSupplementalValue(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingResultCategory constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingResultCategory(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingResultCategory(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingDeathRelationship constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingDeathRelationship(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingDeathRelationship(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingdetectionDelayAssociationdetectionDelayClassCode constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingdetectionDelayAssociationdetectionDelayClassCode(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingdetectionDelayAssociationdetectionDelayClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingdetectionDelayAssociationdetectionDelayCode constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingdetectionDelayAssociationdetectionDelayCode(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingdetectionDelayAssociationdetectionDelayCode(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingdetectionDelayAssociationdetectionDelayMoodCode constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingdetectionDelayAssociationdetectionDelayMoodCode(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingdetectionDelayAssociationdetectionDelayMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingdetectionDelayAssociationdetectionDelayValue constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingdetectionDelayAssociationdetectionDelayValue(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingdetectionDelayAssociationdetectionDelayValue(diagnostics, context);
	}

	/**
	 * Validates the validateTumorFindingdetectionDelayAssociationTypeCode constraint of '<em>Tumor Finding</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateTumorFinding_validateTumorFindingdetectionDelayAssociationTypeCode(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return tumorFinding.validateTumorFindingdetectionDelayAssociationTypeCode(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(subjectPool, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolTemplateId(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolMoodCode(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolCodeP(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolCode(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolId(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolParticipant(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolPoolParticipantSubjectMemberClassCode(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolPoolParticipantSubjectMemberId(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolPoolParticipantTypeCode(subjectPool, diagnostics, context);
		if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolPoolParticipantParticipantRole(subjectPool, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateSubjectPoolTemplateId constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolTemplateId(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectPoolMoodCode constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolMoodCode(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectPoolCodeP constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolCodeP(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectPoolCode constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolCode(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectPoolId constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolId(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectPoolParticipant constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolParticipant(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolParticipant(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectPoolPoolParticipantSubjectMemberClassCode constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolPoolParticipantSubjectMemberClassCode(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolPoolParticipantSubjectMemberClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectPoolPoolParticipantSubjectMemberId constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolPoolParticipantSubjectMemberId(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolPoolParticipantSubjectMemberId(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectPoolPoolParticipantTypeCode constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolPoolParticipantTypeCode(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolPoolParticipantTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateSubjectPoolPoolParticipantParticipantRole constraint of '<em>Subject Pool</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateSubjectPool_validateSubjectPoolPoolParticipantParticipantRole(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return subjectPool.validateSubjectPoolPoolParticipantParticipantRole(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMassIdentification(MassIdentification massIdentification, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(massIdentification, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateParticipant2_validateContextControlCode(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validateMassIdentification_validateMassIdentificationTemplateId(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validateMassIdentification_validateMassIdentificationTypeCode(massIdentification, diagnostics, context);
		if (result || diagnostics != null) result &= validateMassIdentification_validateMassIdentificationParticipantRole(massIdentification, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateMassIdentificationTemplateId constraint of '<em>Mass Identification</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMassIdentification_validateMassIdentificationTemplateId(MassIdentification massIdentification, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return massIdentification.validateMassIdentificationTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateMassIdentificationTypeCode constraint of '<em>Mass Identification</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMassIdentification_validateMassIdentificationTypeCode(MassIdentification massIdentification, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return massIdentification.validateMassIdentificationTypeCode(diagnostics, context);
	}

	/**
	 * Validates the validateMassIdentificationParticipantRole constraint of '<em>Mass Identification</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateMassIdentification_validateMassIdentificationParticipantRole(MassIdentification massIdentification, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return massIdentification.validateMassIdentificationParticipantRole(diagnostics, context);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferenceRange(ReferenceRange referenceRange, DiagnosticChain diagnostics, Map<Object, Object> context) {
		if (!validate_NoCircularContainment(referenceRange, diagnostics, context)) return false;
		boolean result = validate_EveryMultiplicityConforms(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryDataValueConforms(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryBidirectionalReferenceIsPaired(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryProxyResolves(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validate_UniqueID(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryKeyUnique(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= cdaValidator.validateObservationRange_validateMoodCode(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferenceRange_validateReferenceRangeTemplateId(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferenceRange_validateReferenceRangeClassCode(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferenceRange_validateReferenceRangeMoodCode(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferenceRange_validateReferenceRangeCode(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferenceRange_validateReferenceRangeCodeP(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferenceRange_validateReferenceRangeValue(referenceRange, diagnostics, context);
		if (result || diagnostics != null) result &= validateReferenceRange_validateReferenceRangeInterpretationCode(referenceRange, diagnostics, context);
		return result;
	}

	/**
	 * Validates the validateReferenceRangeTemplateId constraint of '<em>Reference Range</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferenceRange_validateReferenceRangeTemplateId(ReferenceRange referenceRange, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referenceRange.validateReferenceRangeTemplateId(diagnostics, context);
	}

	/**
	 * Validates the validateReferenceRangeClassCode constraint of '<em>Reference Range</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferenceRange_validateReferenceRangeClassCode(ReferenceRange referenceRange, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referenceRange.validateReferenceRangeClassCode(diagnostics, context);
	}

	/**
	 * Validates the validateReferenceRangeMoodCode constraint of '<em>Reference Range</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferenceRange_validateReferenceRangeMoodCode(ReferenceRange referenceRange, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referenceRange.validateReferenceRangeMoodCode(diagnostics, context);
	}

	/**
	 * Validates the validateReferenceRangeCode constraint of '<em>Reference Range</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferenceRange_validateReferenceRangeCode(ReferenceRange referenceRange, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referenceRange.validateReferenceRangeCode(diagnostics, context);
	}

	/**
	 * Validates the validateReferenceRangeCodeP constraint of '<em>Reference Range</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferenceRange_validateReferenceRangeCodeP(ReferenceRange referenceRange, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referenceRange.validateReferenceRangeCodeP(diagnostics, context);
	}

	/**
	 * Validates the validateReferenceRangeValue constraint of '<em>Reference Range</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferenceRange_validateReferenceRangeValue(ReferenceRange referenceRange, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referenceRange.validateReferenceRangeValue(diagnostics, context);
	}

	/**
	 * Validates the validateReferenceRangeInterpretationCode constraint of '<em>Reference Range</em>'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean validateReferenceRange_validateReferenceRangeInterpretationCode(ReferenceRange referenceRange, DiagnosticChain diagnostics, Map<Object, Object> context) {
		return referenceRange.validateReferenceRangeInterpretationCode(diagnostics, context);
	}

	/**
	 * Returns the resource locator that will be used to fetch messages for this validator's diagnostics.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ResourceLocator getResourceLocator() {
		return SdtmPlugin.INSTANCE;
	}

} //SdtmValidator
