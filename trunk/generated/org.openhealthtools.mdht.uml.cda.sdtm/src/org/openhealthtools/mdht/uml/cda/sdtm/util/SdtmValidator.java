/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openhealthtools.mdht.uml.cda.sdtm.util;

import java.util.Map;

import org.eclipse.emf.common.util.DiagnosticChain;
import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.EObjectValidator;

import org.openhealthtools.mdht.uml.cda.sdtm.*;

import org.openhealthtools.mdht.uml.cda.util.CDAValidator;

/**
 * <!-- begin-user-doc -->
 * The <b>Validator</b> for the model.
 * <!-- end-user-doc -->
 * @see org.openhealthtools.mdht.uml.cda.sdtm.SdtmPackage
 * @generated
 */
public class SdtmValidator extends EObjectValidator
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final SdtmValidator INSTANCE = new SdtmValidator();

  /**
   * A constant for the {@link org.eclipse.emf.common.util.Diagnostic#getSource() source} of diagnostic {@link org.eclipse.emf.common.util.Diagnostic#getCode() codes} from this package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.common.util.Diagnostic#getSource()
   * @see org.eclipse.emf.common.util.Diagnostic#getCode()
   * @generated
   */
  public static final String DIAGNOSTIC_SOURCE = "org.openhealthtools.mdht.uml.cda.sdtm";

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Template Id' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_TEMPLATE_ID = 1;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Class Code' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CLASS_CODE = 2;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Code P' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CODE_P = 3;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Code' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CODE = 4;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Confidentiality Code P' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CONFIDENTIALITY_CODE_P = 5;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Confidentiality Code' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_CONFIDENTIALITY_CODE = 6;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Effective Time' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_EFFECTIVE_TIME = 7;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Id' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_ID = 8;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Language Code' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_LANGUAGE_CODE = 9;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Mood Code' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_MOOD_CODE = 10;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Realm Code' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_REALM_CODE = 11;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Set Id' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_SET_ID = 12;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Version Number' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_VERSION_NUMBER = 13;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Human Clinical Subject Data Document Body' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY = 14;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Author Participation' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_AUTHOR_PARTICIPATION = 15;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Study Relationship' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_STUDY_RELATIONSHIP = 16;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Human Clinical Trials Subject Participation' of 'Subject Data Human Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_HUMAN_CLINICAL_TRIALS__SUBJECT_DATA_HUMAN_CLINICAL_TRIALS_SUBJECT_PARTICIPATION = 17;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Template Id' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_TEMPLATE_ID = 18;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Class Code' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_CLASS_CODE = 19;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Code' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_CODE = 20;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Code P' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_CODE_P = 21;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Mood Code' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_MOOD_CODE = 22;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Human Clinical Subject Demographics' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS = 23;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Human Clinical Visit' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_HUMAN_CLINICAL_VISIT = 24;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Human Clinical Study Arm' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_HUMAN_CLINICAL_STUDY_ARM = 25;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Subject Element' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_SUBJECT_ELEMENT = 26;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Substance Use' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_SUBSTANCE_USE = 27;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Disposition' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_DISPOSITION = 28;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Medical History' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_MEDICAL_HISTORY = 29;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Protocol Deviation' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_PROTOCOL_DEVIATION = 30;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Clinical Event' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_CLINICAL_EVENT = 31;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body ECG Test Result' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_ECG_TEST_RESULT = 32;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Subject Characteristic' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_SUBJECT_CHARACTERISTIC = 33;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Body Pharmacokinetic Parameter Finding' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY_PHARMACOKINETIC_PARAMETER_FINDING = 34;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Bodyexposure Association Type Code' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODYEXPOSURE_ASSOCIATION_TYPE_CODE = 35;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Data Document Bodyexposure Association Exposure Substance Administration' of 'Human Clinical Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY__HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODYEXPOSURE_ASSOCIATION_EXPOSURE_SUBSTANCE_ADMINISTRATION = 36;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Template Id' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_TEMPLATE_ID = 37;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Class Code' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_CLASS_CODE = 38;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Code' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_CODE = 39;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Code P' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_CODE_P = 40;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Mood Code' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_MOOD_CODE = 41;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Data Collection' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_DATA_COLLECTION = 42;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Study Arm' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_STUDY_ARM = 43;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Class Code' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CLASS_CODE = 44;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Code P' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CODE_P = 45;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Code' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_CODE = 46;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Mood Code' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_MOOD_CODE = 47;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Subject Age Value' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_SUBJECT_AGE_VALUE = 48;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Subject Demographics Age Association Type Code' of 'Human Clinical Subject Demographics'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS__HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS_AGE_ASSOCIATION_TYPE_CODE = 49;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Template Id' of 'Data Collection'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DATA_COLLECTION__DATA_COLLECTION_TEMPLATE_ID = 50;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Class Code' of 'Data Collection'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DATA_COLLECTION__DATA_COLLECTION_CLASS_CODE = 51;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Code P' of 'Data Collection'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DATA_COLLECTION__DATA_COLLECTION_CODE_P = 52;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Code' of 'Data Collection'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DATA_COLLECTION__DATA_COLLECTION_CODE = 53;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Effective Time' of 'Data Collection'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DATA_COLLECTION__DATA_COLLECTION_EFFECTIVE_TIME = 54;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Mood Code' of 'Data Collection'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DATA_COLLECTION__DATA_COLLECTION_MOOD_CODE = 55;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Negation Ind' of 'Data Collection'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DATA_COLLECTION__DATA_COLLECTION_NEGATION_IND = 56;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Data Collection Event Study Day' of 'Data Collection'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DATA_COLLECTION__DATA_COLLECTION_EVENT_STUDY_DAY = 57;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Template Id' of 'Event Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_TEMPLATE_ID = 58;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Class Code' of 'Event Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_CLASS_CODE = 59;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Code P' of 'Event Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_CODE_P = 60;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Code' of 'Event Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_CODE = 61;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Mood Code' of 'Event Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_MOOD_CODE = 62;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Study Day Value' of 'Event Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_STUDY_DAY__EVENT_STUDY_DAY_VALUE = 63;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Template Id' of 'Study Arm'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_ARM__STUDY_ARM_TEMPLATE_ID = 64;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Class Code' of 'Study Arm'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_ARM__STUDY_ARM_CLASS_CODE = 65;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Code P' of 'Study Arm'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_ARM__STUDY_ARM_CODE_P = 66;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Code' of 'Study Arm'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_ARM__STUDY_ARM_CODE = 67;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Text' of 'Study Arm'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_ARM__STUDY_ARM_TEXT = 68;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Mood Code' of 'Study Arm'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_ARM__STUDY_ARM_MOOD_CODE = 69;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Arm Effective Time' of 'Study Arm'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_ARM__STUDY_ARM_EFFECTIVE_TIME = 70;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Template Id' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_TEMPLATE_ID = 71;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Class Code' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_CLASS_CODE = 72;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Code' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_CODE = 73;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Effective Time' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_EFFECTIVE_TIME = 74;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Mood Code' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_MOOD_CODE = 75;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Text' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_TEXT = 76;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Id' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_ID = 77;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Human Clinical Adverse Event' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_HUMAN_CLINICAL_ADVERSE_EVENT = 78;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Human Clinical Vital Sign' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_HUMAN_CLINICAL_VITAL_SIGN = 79;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Planned Study Day' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_PLANNED_STUDY_DAY = 80;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Concommitant Medication Association' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_CONCOMMITANT_MEDICATION_ASSOCIATION = 81;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit ECG Test Result' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_ECG_TEST_RESULT = 82;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Inclusionor Exclusion Criteria Not Met' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET = 83;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Laboratory Test Result' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_LABORATORY_TEST_RESULT = 84;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Physical Examination' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_PHYSICAL_EXAMINATION = 85;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Substance Use Association' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_SUBSTANCE_USE_ASSOCIATION = 86;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Microbiology Specimen' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_MICROBIOLOGY_SPECIMEN = 87;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Microbiology Susceptibility' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_MICROBIOLOGY_SUSCEPTIBILITY = 88;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Pharmacokinetic Concentration Finding' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_PHARMACOKINETIC_CONCENTRATION_FINDING = 89;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Finding About' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_FINDING_ABOUT = 90;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Drug Accountability' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_DRUG_ACCOUNTABILITY = 91;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Visit Study Day Period' of 'Visit'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VISIT__VISIT_STUDY_DAY_PERIOD = 92;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Template Id' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_TEMPLATE_ID = 93;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_CODE_P = 94;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_CODE = 95;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Effective Time' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_EFFECTIVE_TIME = 96;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_MOOD_CODE = 97;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_VALUE = 98;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Id' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_ID = 99;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Target Site Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_TARGET_SITE_CODE = 100;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Group Identifier' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_GROUP_IDENTIFIER = 101;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Body Systemor Organ Class' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_BODY_SYSTEMOR_ORGAN_CLASS = 102;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Event Severity' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_EVENT_SEVERITY = 103;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Serious Event Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_SERIOUS_EVENT_ASSOCIATION = 104;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Study Treatment Action Taken Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_STUDY_TREATMENT_ACTION_TAKEN_ASSOCIATION = 105;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Other Treatment Action Taken Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_OTHER_TREATMENT_ACTION_TAKEN_ASSOCIATION = 106;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Adverse Event Sub Category Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_ADVERSE_EVENT_SUB_CATEGORY_ASSOCIATION = 107;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Study Treatment Causality Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_STUDY_TREATMENT_CAUSALITY_ASSOCIATION = 108;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Non Study Treatment Causality Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_NON_STUDY_TREATMENT_CAUSALITY_ASSOCIATION = 109;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Pattern Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_PATTERN_ASSOCIATION = 110;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Outcome Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_OUTCOME_ASSOCIATION = 111;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Concomitant Treatment Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_CONCOMITANT_TREATMENT_ASSOCIATION = 112;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Toxicity Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_TOXICITY_ASSOCIATION = 113;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Adverse Event Category Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_ADVERSE_EVENT_CATEGORY_ASSOCIATION = 114;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Pre Specified Event' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_PRE_SPECIFIED_EVENT = 115;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Event Study Day Period' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENT_STUDY_DAY_PERIOD = 116;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Serious Event Type Association Serious Event Type Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_CLASS_CODE = 117;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Serious Event Type Association Serious Event Type Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_CODE_P = 118;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Serious Event Type Association Serious Event Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_CODE = 119;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Serious Event Type Association Serious Event Type Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_MOOD_CODE = 120;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Serious Event Type Association Serious Event Type Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_VALUE = 121;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Serious Event Type Association Serious Event Type Value P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE_VALUE_P = 122;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Serious Event Type Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_TYPE_CODE = 123;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Serious Event Type Association Serious Event Type' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION_SERIOUS_EVENT_TYPE = 124;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_CLASS_CODE = 125;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_CODE_P = 126;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_CODE = 127;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_MOOD_CODE = 128;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_VALUE = 129;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event Serious Event Type Association' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT_SERIOUS_EVENT_TYPE_ASSOCIATION = 130;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_TYPE_CODE = 131;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventserious Event Association Serious Event' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSERIOUS_EVENT_ASSOCIATION_SERIOUS_EVENT = 132;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Action Taken Associationstudy Treatment Action Taken Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_ACTION_TAKEN_ASSOCIATIONSTUDY_TREATMENT_ACTION_TAKEN_CLASS_CODE = 133;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Action Taken Associationstudy Treatment Action Taken Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_ACTION_TAKEN_ASSOCIATIONSTUDY_TREATMENT_ACTION_TAKEN_CODE_P = 134;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Action Taken Associationstudy Treatment Action Taken Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_ACTION_TAKEN_ASSOCIATIONSTUDY_TREATMENT_ACTION_TAKEN_CODE = 135;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Action Taken Associationstudy Treatment Action Taken Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_ACTION_TAKEN_ASSOCIATIONSTUDY_TREATMENT_ACTION_TAKEN_MOOD_CODE = 136;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Action Taken Associationstudy Treatment Action Taken Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_ACTION_TAKEN_ASSOCIATIONSTUDY_TREATMENT_ACTION_TAKEN_VALUE = 137;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Action Taken Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_ACTION_TAKEN_ASSOCIATION_TYPE_CODE = 138;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Action Taken Association Study Treatment Action Taken' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_ACTION_TAKEN_ASSOCIATION_STUDY_TREATMENT_ACTION_TAKEN = 139;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventother Treatment Action Taken Associationother Treatment Action Taken Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOTHER_TREATMENT_ACTION_TAKEN_ASSOCIATIONOTHER_TREATMENT_ACTION_TAKEN_CLASS_CODE = 140;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventother Treatment Action Taken Associationother Treatment Action Taken Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOTHER_TREATMENT_ACTION_TAKEN_ASSOCIATIONOTHER_TREATMENT_ACTION_TAKEN_CODE = 141;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventother Treatment Action Taken Associationother Treatment Action Taken Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOTHER_TREATMENT_ACTION_TAKEN_ASSOCIATIONOTHER_TREATMENT_ACTION_TAKEN_MOOD_CODE = 142;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventother Treatment Action Taken Associationother Treatment Action Taken Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOTHER_TREATMENT_ACTION_TAKEN_ASSOCIATIONOTHER_TREATMENT_ACTION_TAKEN_VALUE = 143;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventother Treatment Action Taken Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOTHER_TREATMENT_ACTION_TAKEN_ASSOCIATION_TYPE_CODE = 144;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventother Treatment Action Taken Association Other Treatment Action Taken' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOTHER_TREATMENT_ACTION_TAKEN_ASSOCIATION_OTHER_TREATMENT_ACTION_TAKEN = 145;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Sub Category Associationadverse Event Sub Category Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_SUB_CATEGORY_ASSOCIATIONADVERSE_EVENT_SUB_CATEGORY_CLASS_CODE = 146;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Sub Category Associationadverse Event Sub Category Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_SUB_CATEGORY_ASSOCIATIONADVERSE_EVENT_SUB_CATEGORY_CODE_P = 147;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Sub Category Associationadverse Event Sub Category Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_SUB_CATEGORY_ASSOCIATIONADVERSE_EVENT_SUB_CATEGORY_CODE = 148;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Sub Category Associationadverse Event Sub Category Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_SUB_CATEGORY_ASSOCIATIONADVERSE_EVENT_SUB_CATEGORY_MOOD_CODE = 149;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Sub Category Associationadverse Event Sub Category Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_SUB_CATEGORY_ASSOCIATIONADVERSE_EVENT_SUB_CATEGORY_VALUE = 150;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Sub Category Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 151;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Sub Category Association Adverse Event Sub Category' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_SUB_CATEGORY_ASSOCIATION_ADVERSE_EVENT_SUB_CATEGORY = 152;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_CLASS_CODE = 153;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_CODE_P = 154;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_CODE = 155;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_MOOD_CODE = 156;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_VALUE = 157;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATION_TYPE_CODE = 158;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Association Study Treatment Causality' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATION_STUDY_TREATMENT_CAUSALITY = 159;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Class Code Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Class Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_CLASS_CODE_ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_CLASS_CODE1 = 160;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Code PAdverse Eventstudy Treatment Causality Associationstudy Treatment Causality Code P1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_CODE_PADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_CODE_P1 = 161;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Code Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_CODE_ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_CODE1 = 162;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Mood Code Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Mood Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_MOOD_CODE_ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_MOOD_CODE1 = 163;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Value Adverse Eventstudy Treatment Causality Associationstudy Treatment Causality Value1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_VALUE_ADVERSE_EVENTSTUDY_TREATMENT_CAUSALITY_ASSOCIATIONSTUDY_TREATMENT_CAUSALITY_VALUE1 = 164;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_CLASS_CODE = 165;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_CODE = 166;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_MOOD_CODE = 167;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_VALUE = 168;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATION_TYPE_CODE = 169;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Association Non Study Treatment Causality' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATION_NON_STUDY_TREATMENT_CAUSALITY = 170;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Class Code Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Class Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_CLASS_CODE_ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_CLASS_CODE1 = 171;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Code Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_CODE_ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_CODE1 = 172;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Mood Code Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Mood Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_MOOD_CODE_ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_MOOD_CODE1 = 173;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Value Adverse Eventnon Study Treatment Causality Associationnon Study Treatment Causality Value1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_VALUE_ADVERSE_EVENTNON_STUDY_TREATMENT_CAUSALITY_ASSOCIATIONNON_STUDY_TREATMENT_CAUSALITY_VALUE1 = 174;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventpattern Associationadverse Event Pattern Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTPATTERN_ASSOCIATIONADVERSE_EVENT_PATTERN_CLASS_CODE = 175;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventpattern Associationadverse Event Pattern Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTPATTERN_ASSOCIATIONADVERSE_EVENT_PATTERN_CODE_P = 176;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventpattern Associationadverse Event Pattern Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTPATTERN_ASSOCIATIONADVERSE_EVENT_PATTERN_CODE = 177;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventpattern Associationadverse Event Pattern Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTPATTERN_ASSOCIATIONADVERSE_EVENT_PATTERN_MOOD_CODE = 178;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventpattern Associationadverse Event Pattern Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTPATTERN_ASSOCIATIONADVERSE_EVENT_PATTERN_VALUE = 179;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventpattern Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTPATTERN_ASSOCIATION_TYPE_CODE = 180;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventpattern Association Adverse Event Pattern' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTPATTERN_ASSOCIATION_ADVERSE_EVENT_PATTERN = 181;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventoutcome Associationadverse Event Outcome Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOUTCOME_ASSOCIATIONADVERSE_EVENT_OUTCOME_CLASS_CODE = 182;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventoutcome Associationadverse Event Outcome Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOUTCOME_ASSOCIATIONADVERSE_EVENT_OUTCOME_CODE_P = 183;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventoutcome Associationadverse Event Outcome Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOUTCOME_ASSOCIATIONADVERSE_EVENT_OUTCOME_CODE = 184;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventoutcome Associationadverse Event Outcome Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOUTCOME_ASSOCIATIONADVERSE_EVENT_OUTCOME_MOOD_CODE = 185;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventoutcome Associationadverse Event Outcome Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOUTCOME_ASSOCIATIONADVERSE_EVENT_OUTCOME_VALUE = 186;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventoutcome Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOUTCOME_ASSOCIATION_TYPE_CODE = 187;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventoutcome Association Adverse Event Outcome' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTOUTCOME_ASSOCIATION_ADVERSE_EVENT_OUTCOME = 188;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Associationconcomitant Treatment Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_CLASS_CODE = 189;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Associationconcomitant Treatment Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_CODE = 190;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Associationconcomitant Treatment Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_MOOD_CODE = 191;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Associationconcomitant Treatment Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_VALUE = 192;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATION_TYPE_CODE = 193;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Association Concomitant Treatment' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATION_CONCOMITANT_TREATMENT = 194;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Associationconcomitant Treatment Class Code Adverse Eventconcomitant Treatment Associationconcomitant Treatment Class Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_CLASS_CODE_ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_CLASS_CODE1 = 195;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Associationconcomitant Treatment Code Adverse Eventconcomitant Treatment Associationconcomitant Treatment Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_CODE_ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_CODE1 = 196;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Associationconcomitant Treatment Mood Code Adverse Eventconcomitant Treatment Associationconcomitant Treatment Mood Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_MOOD_CODE_ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_MOOD_CODE1 = 197;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventconcomitant Treatment Associationconcomitant Treatment Value Adverse Eventconcomitant Treatment Associationconcomitant Treatment Value1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_VALUE_ADVERSE_EVENTCONCOMITANT_TREATMENT_ASSOCIATIONCONCOMITANT_TREATMENT_VALUE1 = 198;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_CLASS_CODE = 199;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_CODE_P = 200;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_CODE = 201;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_MOOD_CODE = 202;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_VALUE = 203;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Value P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_VALUE_P = 204;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATION_TYPE_CODE = 205;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Association Toxicity Grade' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATION_TOXICITY_GRADE = 206;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Class Code Adverse Eventae Toxicity Associationae Toxicity Grade Class Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_CLASS_CODE_ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_CLASS_CODE1 = 207;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Code PAdverse Eventae Toxicity Associationae Toxicity Grade Code P1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_CODE_PADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_CODE_P1 = 208;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Code Adverse Eventae Toxicity Associationae Toxicity Grade Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_CODE_ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_CODE1 = 209;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Mood Code Adverse Eventae Toxicity Associationae Toxicity Grade Mood Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_MOOD_CODE_ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_MOOD_CODE1 = 210;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Value Adverse Eventae Toxicity Associationae Toxicity Grade Value1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_VALUE_ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_VALUE1 = 211;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventae Toxicity Associationae Toxicity Grade Value PAdverse Eventae Toxicity Associationae Toxicity Grade Value P1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_VALUE_PADVERSE_EVENTAE_TOXICITY_ASSOCIATIONAE_TOXICITY_GRADE_VALUE_P1 = 212;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Class Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_CLASS_CODE = 213;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Code P' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_CODE_P = 214;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_CODE = 215;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Mood Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_MOOD_CODE = 216;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Value' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_VALUE = 217;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Association Type Code' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATION_TYPE_CODE = 218;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Association Adverse Event Category' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATION_ADVERSE_EVENT_CATEGORY = 219;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Class Code Adverse Eventadverse Event Category Associationadverse Event Category Class Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_CLASS_CODE_ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_CLASS_CODE1 = 220;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Code PAdverse Eventadverse Event Category Associationadverse Event Category Code P1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_CODE_PADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_CODE_P1 = 221;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Code Adverse Eventadverse Event Category Associationadverse Event Category Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_CODE_ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_CODE1 = 222;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Mood Code Adverse Eventadverse Event Category Associationadverse Event Category Mood Code1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_MOOD_CODE_ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_MOOD_CODE1 = 223;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Adverse Eventadverse Event Category Associationadverse Event Category Value Adverse Eventadverse Event Category Associationadverse Event Category Value1' of 'Adverse Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ADVERSE_EVENT__ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_VALUE_ADVERSE_EVENTADVERSE_EVENT_CATEGORY_ASSOCIATIONADVERSE_EVENT_CATEGORY_VALUE1 = 224;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Template Id' of 'Group Identifier'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_TEMPLATE_ID = 225;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Class Code' of 'Group Identifier'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_CLASS_CODE = 226;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Code P' of 'Group Identifier'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_CODE_P = 227;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Code' of 'Group Identifier'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_CODE = 228;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Id' of 'Group Identifier'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_ID = 229;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Group Identifier Mood Code' of 'Group Identifier'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int GROUP_IDENTIFIER__GROUP_IDENTIFIER_MOOD_CODE = 230;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Template Id' of 'Body Systemor Organ Class'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_TEMPLATE_ID = 231;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Class Code' of 'Body Systemor Organ Class'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_CLASS_CODE = 232;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Code' of 'Body Systemor Organ Class'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_CODE = 233;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Mood Code' of 'Body Systemor Organ Class'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_MOOD_CODE = 234;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Systemor Organ Class Value' of 'Body Systemor Organ Class'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BODY_SYSTEMOR_ORGAN_CLASS__BODY_SYSTEMOR_ORGAN_CLASS_VALUE = 235;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Severity Template Id' of 'Event Severity'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_SEVERITY__EVENT_SEVERITY_TEMPLATE_ID = 236;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Severity Class Code' of 'Event Severity'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_SEVERITY__EVENT_SEVERITY_CLASS_CODE = 237;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Severity Code P' of 'Event Severity'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_SEVERITY__EVENT_SEVERITY_CODE_P = 238;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Severity Code' of 'Event Severity'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_SEVERITY__EVENT_SEVERITY_CODE = 239;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Severity Mood Code' of 'Event Severity'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_SEVERITY__EVENT_SEVERITY_MOOD_CODE = 240;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Severity Value' of 'Event Severity'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_SEVERITY__EVENT_SEVERITY_VALUE = 241;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Event Severity Value P' of 'Event Severity'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int EVENT_SEVERITY__EVENT_SEVERITY_VALUE_P = 242;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Template Id' of 'Pre Specified Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_TEMPLATE_ID = 243;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Class Code' of 'Pre Specified Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_CLASS_CODE = 244;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Code P' of 'Pre Specified Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_CODE_P = 245;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Code' of 'Pre Specified Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_CODE = 246;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Mood Code' of 'Pre Specified Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_MOOD_CODE = 247;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pre Specified Event Value' of 'Pre Specified Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PRE_SPECIFIED_EVENT__PRE_SPECIFIED_EVENT_VALUE = 248;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Template Id' of 'Study Day Period'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_TEMPLATE_ID = 249;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Class Code' of 'Study Day Period'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_CLASS_CODE = 250;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Code P' of 'Study Day Period'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_CODE_P = 251;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Code' of 'Study Day Period'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_CODE = 252;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Mood Code' of 'Study Day Period'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_MOOD_CODE = 253;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Day Period Value' of 'Study Day Period'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_DAY_PERIOD__STUDY_DAY_PERIOD_VALUE = 254;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Template Id' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_TEMPLATE_ID = 255;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Class Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_CLASS_CODE = 256;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_CODE = 257;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Mood Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_MOOD_CODE = 258;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Value' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_VALUE = 259;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Status Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_STATUS_CODE = 260;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Interpretation Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_INTERPRETATION_CODE = 261;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Interpretation Code P' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_INTERPRETATION_CODE_P = 262;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Target Site Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_TARGET_SITE_CODE = 263;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Effective Time' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_EFFECTIVE_TIME = 264;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Associated Position' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_ASSOCIATED_POSITION = 265;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Event Study Day' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_EVENT_STUDY_DAY = 266;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Planned Study Day' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_PLANNED_STUDY_DAY = 267;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Timing Reference' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_TIMING_REFERENCE = 268;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Sign Non Performance Reason' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGN_NON_PERFORMANCE_REASON = 269;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Positionposition Class Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_POSITIONPOSITION_CLASS_CODE = 270;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Positionposition Code P' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_POSITIONPOSITION_CODE_P = 271;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Positionposition Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_POSITIONPOSITION_CODE = 272;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Positionposition Mood Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_POSITIONPOSITION_MOOD_CODE = 273;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Positionposition Value' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_POSITIONPOSITION_VALUE = 274;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Position Type Code' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_POSITION_TYPE_CODE = 275;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Vital Signassociated Position Position' of 'Vital Sign'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int VITAL_SIGN__VITAL_SIGNASSOCIATED_POSITION_POSITION = 276;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Template Id' of 'Planned Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_TEMPLATE_ID = 277;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Class Code' of 'Planned Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_CLASS_CODE = 278;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Code P' of 'Planned Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_CODE_P = 279;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Code' of 'Planned Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_CODE = 280;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Mood Code' of 'Planned Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_MOOD_CODE = 281;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Planned Study Day Value' of 'Planned Study Day'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PLANNED_STUDY_DAY__PLANNED_STUDY_DAY_VALUE = 282;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Template Id' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_TEMPLATE_ID = 283;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Class Code' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_CLASS_CODE = 284;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Code P' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_CODE_P = 285;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Code' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_CODE = 286;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Effective Time' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_EFFECTIVE_TIME = 287;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Id' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_ID = 288;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Mood Code' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_MOOD_CODE = 289;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION = 290;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point Class Code' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT_CLASS_CODE = 291;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point Code' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT_CODE = 292;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point Effective Time' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT_EFFECTIVE_TIME = 293;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point Mood Code' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT_MOOD_CODE = 294;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Type Code' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_TYPE_CODE = 295;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Timing Reference Anchor Association Anchor Time Point' of 'Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TIMING_REFERENCE__TIMING_REFERENCE_ANCHOR_ASSOCIATION_ANCHOR_TIME_POINT = 296;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Template Id' of 'Non Performance Reason'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_TEMPLATE_ID = 297;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Class Code' of 'Non Performance Reason'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_CLASS_CODE = 298;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Code P' of 'Non Performance Reason'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_CODE_P = 299;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Code' of 'Non Performance Reason'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_CODE = 300;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Mood Code' of 'Non Performance Reason'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_MOOD_CODE = 301;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Performance Reason Value' of 'Non Performance Reason'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_PERFORMANCE_REASON__NON_PERFORMANCE_REASON_VALUE = 302;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Template Id' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_TEMPLATE_ID = 303;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Class Code' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_CLASS_CODE = 304;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Code' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_CODE = 305;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Effective Time' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_EFFECTIVE_TIME = 306;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Id' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_ID = 307;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Value' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_VALUE = 308;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Mood Code' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_MOOD_CODE = 309;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Status Code' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_STATUS_CODE = 310;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Method Code' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_METHOD_CODE = 311;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Text' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_TEXT = 312;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Group Identifier' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_GROUP_IDENTIFIER = 313;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Ecg Test Result Category Association' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_ECG_TEST_RESULT_CATEGORY_ASSOCIATION = 314;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Ecg Test Result Sub Category Association' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_ECG_TEST_RESULT_SUB_CATEGORY_ASSOCIATION = 315;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Associated Position' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_ASSOCIATED_POSITION = 316;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Non Performance Reason' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_NON_PERFORMANCE_REASON = 317;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Lead Location Association' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_LEAD_LOCATION_ASSOCIATION = 318;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Baseline Indicator' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_BASELINE_INDICATOR = 319;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Derived Data Indicator' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_DERIVED_DATA_INDICATOR = 320;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Event Study Day' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_EVENT_STUDY_DAY = 321;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Result Timing Reference' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULT_TIMING_REFERENCE = 322;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultecg Test Result Category Association Type Code' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULTECG_TEST_RESULT_CATEGORY_ASSOCIATION_TYPE_CODE = 323;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultecg Test Result Sub Category Association Type Code' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULTECG_TEST_RESULT_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 324;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultassociated Position Type Code' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULTASSOCIATED_POSITION_TYPE_CODE = 325;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate ECG Test Resultlead Location Association Type Code' of 'ECG Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ECG_TEST_RESULT__ECG_TEST_RESULTLEAD_LOCATION_ASSOCIATION_TYPE_CODE = 326;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Baseline Indicator Template Id' of 'Baseline Indicator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BASELINE_INDICATOR__BASELINE_INDICATOR_TEMPLATE_ID = 327;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Baseline Indicator Code P' of 'Baseline Indicator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BASELINE_INDICATOR__BASELINE_INDICATOR_CODE_P = 328;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Baseline Indicator Code' of 'Baseline Indicator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BASELINE_INDICATOR__BASELINE_INDICATOR_CODE = 329;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Baseline Indicator Value' of 'Baseline Indicator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BASELINE_INDICATOR__BASELINE_INDICATOR_VALUE = 330;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Derived Data Indicator Template Id' of 'Derived Data Indicator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DERIVED_DATA_INDICATOR__DERIVED_DATA_INDICATOR_TEMPLATE_ID = 331;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Derived Data Indicator Code P' of 'Derived Data Indicator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DERIVED_DATA_INDICATOR__DERIVED_DATA_INDICATOR_CODE_P = 332;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Derived Data Indicator Code' of 'Derived Data Indicator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DERIVED_DATA_INDICATOR__DERIVED_DATA_INDICATOR_CODE = 333;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Derived Data Indicator Value' of 'Derived Data Indicator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DERIVED_DATA_INDICATOR__DERIVED_DATA_INDICATOR_VALUE = 334;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Template Id' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_TEMPLATE_ID = 335;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Class Code' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_CLASS_CODE = 336;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Code P' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_CODE_P = 337;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Code' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_CODE = 338;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Id' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_ID = 339;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Mood Code' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_MOOD_CODE = 340;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Value' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_VALUE = 341;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Inclusion Exclusion Category Association' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_INCLUSION_EXCLUSION_CATEGORY_ASSOCIATION = 342;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Inclusion Exclusion Sub Category Association' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_INCLUSION_EXCLUSION_SUB_CATEGORY_ASSOCIATION = 343;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Met Data Collection' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET_DATA_COLLECTION = 344;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Metinclusion Exclusion Category Association Type Code' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_METINCLUSION_EXCLUSION_CATEGORY_ASSOCIATION_TYPE_CODE = 345;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Inclusionor Exclusion Criteria Not Metinclusion Exclusion Sub Category Association Type Code' of 'Inclusionor Exclusion Criteria Not Met'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET__INCLUSIONOR_EXCLUSION_CRITERIA_NOT_METINCLUSION_EXCLUSION_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 346;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Template Id' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_TEMPLATE_ID = 347;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Class Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_CLASS_CODE = 348;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_CODE = 349;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Id' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_ID = 350;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Mood Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_MOOD_CODE = 351;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Status Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_STATUS_CODE = 352;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Value' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_VALUE = 353;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Method Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_METHOD_CODE = 354;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Group Identifier' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_GROUP_IDENTIFIER = 355;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Specimen Information' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_SPECIMEN_INFORMATION = 356;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Laboratory Test Result Category Association' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_LABORATORY_TEST_RESULT_CATEGORY_ASSOCIATION = 357;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Laboratory Test Result Sub Category Association' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_LABORATORY_TEST_RESULT_SUB_CATEGORY_ASSOCIATION = 358;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Reference Range Association' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_REFERENCE_RANGE_ASSOCIATION = 359;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Non Performance Reason' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_NON_PERFORMANCE_REASON = 360;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Baseline Indicator' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_BASELINE_INDICATOR = 361;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Derived Data Indicator' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_DERIVED_DATA_INDICATOR = 362;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Fasting Association' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_FASTING_ASSOCIATION = 363;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Result Lab Toxicity Association' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULT_LAB_TOXICITY_ASSOCIATION = 364;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultlaboratory Test Result Category Association Type Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTLABORATORY_TEST_RESULT_CATEGORY_ASSOCIATION_TYPE_CODE = 365;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultlaboratory Test Result Sub Category Association Type Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTLABORATORY_TEST_RESULT_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 366;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultreference Range Associationreference Range Class Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTREFERENCE_RANGE_ASSOCIATIONREFERENCE_RANGE_CLASS_CODE = 367;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultreference Range Associationreference Range Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTREFERENCE_RANGE_ASSOCIATIONREFERENCE_RANGE_CODE = 368;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultreference Range Associationreference Range Code P' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTREFERENCE_RANGE_ASSOCIATIONREFERENCE_RANGE_CODE_P = 369;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultreference Range Associationreference Range Interpretation Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTREFERENCE_RANGE_ASSOCIATIONREFERENCE_RANGE_INTERPRETATION_CODE = 370;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultreference Range Associationreference Range Mood Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTREFERENCE_RANGE_ASSOCIATIONREFERENCE_RANGE_MOOD_CODE = 371;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultreference Range Associationreference Range Value' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTREFERENCE_RANGE_ASSOCIATIONREFERENCE_RANGE_VALUE = 372;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultreference Range Association Type Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTREFERENCE_RANGE_ASSOCIATION_TYPE_CODE = 373;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultreference Range Association Reference Range' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTREFERENCE_RANGE_ASSOCIATION_REFERENCE_RANGE = 374;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultfasting Associationfasting Status Class Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTFASTING_ASSOCIATIONFASTING_STATUS_CLASS_CODE = 375;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultfasting Associationfasting Status Code P' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTFASTING_ASSOCIATIONFASTING_STATUS_CODE_P = 376;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultfasting Associationfasting Status Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTFASTING_ASSOCIATIONFASTING_STATUS_CODE = 377;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultfasting Associationfasting Status Mood Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTFASTING_ASSOCIATIONFASTING_STATUS_MOOD_CODE = 378;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultfasting Associationfasting Status Value' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTFASTING_ASSOCIATIONFASTING_STATUS_VALUE = 379;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultfasting Association Type Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTFASTING_ASSOCIATION_TYPE_CODE = 380;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultfasting Association Fasting Status' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTFASTING_ASSOCIATION_FASTING_STATUS = 381;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Laboratory Test Resultlab Toxicity Association Type Code' of 'Non Human Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_LABORATORY_TEST_RESULT__NON_HUMAN_LABORATORY_TEST_RESULTLAB_TOXICITY_ASSOCIATION_TYPE_CODE = 382;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Template Id' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_TEMPLATE_ID = 383;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Class Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_CLASS_CODE = 384;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Effective Time' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_EFFECTIVE_TIME = 385;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Mood Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_MOOD_CODE = 386;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_CODE = 387;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Code P' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_CODE_P = 388;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Target Site Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_TARGET_SITE_CODE = 389;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Participating Specimen' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_PARTICIPATING_SPECIMEN = 390;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Condition Association' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_CONDITION_ASSOCIATION = 391;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Event Study Day' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_EVENT_STUDY_DAY = 392;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Information Timing Reference' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATION_TIMING_REFERENCE = 393;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimenspecimen Entity Class Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMENSPECIMEN_ENTITY_CLASS_CODE = 394;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimenspecimen Entity Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMENSPECIMEN_ENTITY_CODE = 395;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimenspecimen Entity Determiner Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMENSPECIMEN_ENTITY_DETERMINER_CODE = 396;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimen Class Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMEN_CLASS_CODE = 397;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimenrole Of Specimen Id' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMENROLE_OF_SPECIMEN_ID = 398;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimen Type Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMEN_TYPE_CODE = 399;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationparticipating Specimen Role Of Specimen' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONPARTICIPATING_SPECIMEN_ROLE_OF_SPECIMEN = 400;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Code P' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_CODE_P = 401;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_CODE = 402;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Mood Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_MOOD_CODE = 403;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Value' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_VALUE = 404;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Association Type Code' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATION_TYPE_CODE = 405;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Association Specimen Condition' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATION_SPECIMEN_CONDITION = 406;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Code PSpecimen Informationcondition Associationspecimen Condition Code P1' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_CODE_PSPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_CODE_P1 = 407;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Code Specimen Informationcondition Associationspecimen Condition Code1' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_CODE_SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_CODE1 = 408;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Mood Code Specimen Informationcondition Associationspecimen Condition Mood Code1' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_MOOD_CODE_SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_MOOD_CODE1 = 409;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Specimen Informationcondition Associationspecimen Condition Value Specimen Informationcondition Associationspecimen Condition Value1' of 'Specimen Information'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SPECIMEN_INFORMATION__SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_VALUE_SPECIMEN_INFORMATIONCONDITION_ASSOCIATIONSPECIMEN_CONDITION_VALUE1 = 410;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Template Id' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_TEMPLATE_ID = 411;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Class Code' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_CLASS_CODE = 412;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Code' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_CODE = 413;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Effective Time' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_EFFECTIVE_TIME = 414;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Id' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_ID = 415;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Mood Code' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_MOOD_CODE = 416;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Value' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_VALUE = 417;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Status Code' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_STATUS_CODE = 418;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Target Site Code' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_TARGET_SITE_CODE = 419;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Method Code' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_METHOD_CODE = 420;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Group Identifier' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_GROUP_IDENTIFIER = 421;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Physical Exam Result Category Association' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_PHYSICAL_EXAM_RESULT_CATEGORY_ASSOCIATION = 422;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Physical Exam Result Sub Category Association' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_PHYSICAL_EXAM_RESULT_SUB_CATEGORY_ASSOCIATION = 423;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Body Systemor Organ Class' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_BODY_SYSTEMOR_ORGAN_CLASS = 424;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Finding Non Performance Reason' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDING_NON_PERFORMANCE_REASON = 425;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Findingphysical Exam Result Category Association Type Code' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDINGPHYSICAL_EXAM_RESULT_CATEGORY_ASSOCIATION_TYPE_CODE = 426;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Physical Examination Findingphysical Exam Result Sub Category Association Type Code' of 'Physical Examination Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHYSICAL_EXAMINATION_FINDING__PHYSICAL_EXAMINATION_FINDINGPHYSICAL_EXAM_RESULT_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 427;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Template Id' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_TEMPLATE_ID = 428;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Class Code' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_CLASS_CODE = 429;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Code' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_CODE = 430;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Id' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_ID = 431;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Method Code' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_METHOD_CODE = 432;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Mood Code' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_MOOD_CODE = 433;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Status Code' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_STATUS_CODE = 434;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Value' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_VALUE = 435;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Group Identifier' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_GROUP_IDENTIFIER = 436;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Microbiology Specimen Result Category Association' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_MICROBIOLOGY_SPECIMEN_RESULT_CATEGORY_ASSOCIATION = 437;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Microbiology Specimen Result Sub Category Association' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_MICROBIOLOGY_SPECIMEN_RESULT_SUB_CATEGORY_ASSOCIATION = 438;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Non Performance Reason' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_NON_PERFORMANCE_REASON = 439;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Specimen Information' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_SPECIMEN_INFORMATION = 440;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Baseline Indicator' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_BASELINE_INDICATOR = 441;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Finding Derived Data Indicator' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDING_DERIVED_DATA_INDICATOR = 442;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Findingmicrobiology Specimen Finding Category Association Type Code' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDINGMICROBIOLOGY_SPECIMEN_FINDING_CATEGORY_ASSOCIATION_TYPE_CODE = 443;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Findingmicrobiology Specimen Finding Sub Category Association Type Code' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDINGMICROBIOLOGY_SPECIMEN_FINDING_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 444;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Specimen Findingmicrobiology Result Category Association Type Code' of 'Microbiology Specimen Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SPECIMEN_FINDING__MICROBIOLOGY_SPECIMEN_FINDINGMICROBIOLOGY_RESULT_CATEGORY_ASSOCIATION_TYPE_CODE = 445;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Template Id' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_TEMPLATE_ID = 446;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Class Code' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_CLASS_CODE = 447;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Code' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_CODE = 448;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Id' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_ID = 449;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Method Code' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_METHOD_CODE = 450;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Mood Code' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_MOOD_CODE = 451;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Status Code' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_STATUS_CODE = 452;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Value' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_VALUE = 453;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Effective Time' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_EFFECTIVE_TIME = 454;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Event Study Day' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_EVENT_STUDY_DAY = 455;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Timing Reference' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_TIMING_REFERENCE = 456;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Group Identifier' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_GROUP_IDENTIFIER = 457;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Microbiology Susceptibility Finding Category Association' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_MICROBIOLOGY_SUSCEPTIBILITY_FINDING_CATEGORY_ASSOCIATION = 458;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Microbiology Susceptibility Finding Sub Category Association' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_MICROBIOLOGY_SUSCEPTIBILITY_FINDING_SUB_CATEGORY_ASSOCIATION = 459;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Non Performance Reason' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_NON_PERFORMANCE_REASON = 460;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Baseline Indicator' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_BASELINE_INDICATOR = 461;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibility Derived Data Indicator' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITY_DERIVED_DATA_INDICATOR = 462;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibilitymicrobiology Susceptibility Finding Category Association Type Code' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITYMICROBIOLOGY_SUSCEPTIBILITY_FINDING_CATEGORY_ASSOCIATION_TYPE_CODE = 463;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microbiology Susceptibilitymicrobiology Susceptibility Finding Sub Category Association Type Code' of 'Microbiology Susceptibility'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROBIOLOGY_SUSCEPTIBILITY__MICROBIOLOGY_SUSCEPTIBILITYMICROBIOLOGY_SUSCEPTIBILITY_FINDING_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 464;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Template Id' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_TEMPLATE_ID = 465;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Class Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_CLASS_CODE = 466;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_CODE = 467;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Id' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_ID = 468;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Mood Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_MOOD_CODE = 469;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Status Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_STATUS_CODE = 470;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Value' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_VALUE = 471;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Method Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_METHOD_CODE = 472;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Group Identifier' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_GROUP_IDENTIFIER = 473;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Pharmacokinetics Test Result Category Association' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_PHARMACOKINETICS_TEST_RESULT_CATEGORY_ASSOCIATION = 474;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Pharmacokinetics Test Result Sub Category Association' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_PHARMACOKINETICS_TEST_RESULT_SUB_CATEGORY_ASSOCIATION = 475;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Fasting Association' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_FASTING_ASSOCIATION = 476;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Specimen Information' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_SPECIMEN_INFORMATION = 477;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Non Performance Reason' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_NON_PERFORMANCE_REASON = 478;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Derived Data Indicator' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_DERIVED_DATA_INDICATOR = 479;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Finding Assay Quantitation Association' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDING_ASSAY_QUANTITATION_ASSOCIATION = 480;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingpharmacokinetics Test Result Category Association Type Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGPHARMACOKINETICS_TEST_RESULT_CATEGORY_ASSOCIATION_TYPE_CODE = 481;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingpharmacokinetics Test Result Sub Category Association Type Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGPHARMACOKINETICS_TEST_RESULT_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 482;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingfasting Associationfasting Status Class Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGFASTING_ASSOCIATIONFASTING_STATUS_CLASS_CODE = 483;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingfasting Associationfasting Status Code P' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGFASTING_ASSOCIATIONFASTING_STATUS_CODE_P = 484;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingfasting Associationfasting Status Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGFASTING_ASSOCIATIONFASTING_STATUS_CODE = 485;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingfasting Associationfasting Status Mood Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGFASTING_ASSOCIATIONFASTING_STATUS_MOOD_CODE = 486;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingfasting Associationfasting Status Value' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGFASTING_ASSOCIATIONFASTING_STATUS_VALUE = 487;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingfasting Association Type Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGFASTING_ASSOCIATION_TYPE_CODE = 488;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingfasting Association Fasting Status' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGFASTING_ASSOCIATION_FASTING_STATUS = 489;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Class Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_CLASS_CODE = 490;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Code P' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_CODE_P = 491;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_CODE = 492;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Mood Code' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_MOOD_CODE = 493;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Value' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_VALUE = 494;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Association Type Id' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATION_TYPE_ID = 495;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Association Observation' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATION_OBSERVATION = 496;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Class Code Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Class Code1' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_CLASS_CODE_PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_CLASS_CODE1 = 497;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Code PPharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Code P1' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_CODE_PPHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_CODE_P1 = 498;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Code Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Code1' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_CODE_PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_CODE1 = 499;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Mood Code Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Mood Code1' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_MOOD_CODE_PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_MOOD_CODE1 = 500;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Value Pharmacokinetic Concentration Findingassay Quantitation Associationassay Quantitation Value1' of 'Pharmacokinetic Concentration Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_CONCENTRATION_FINDING__PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_VALUE_PHARMACOKINETIC_CONCENTRATION_FINDINGASSAY_QUANTITATION_ASSOCIATIONASSAY_QUANTITATION_VALUE1 = 501;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Template Id' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_TEMPLATE_ID = 502;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Class Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_CLASS_CODE = 503;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_CODE = 504;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Id' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_ID = 505;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Mood Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_MOOD_CODE = 506;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Status Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_STATUS_CODE = 507;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Target Site Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_TARGET_SITE_CODE = 508;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Value' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_VALUE = 509;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Group Identifier' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_GROUP_IDENTIFIER = 510;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Finding Observation Object Association' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_FINDING_OBSERVATION_OBJECT_ASSOCIATION = 511;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Finding About Category Association' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_FINDING_ABOUT_CATEGORY_ASSOCIATION = 512;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Finding About Sub Category Association' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_FINDING_ABOUT_SUB_CATEGORY_ASSOCIATION = 513;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Non Performance Reason' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_NON_PERFORMANCE_REASON = 514;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Baseline Indicator' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_BASELINE_INDICATOR = 515;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding About Data Collection' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUT_DATA_COLLECTION = 516;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Class Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CLASS_CODE = 517;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Code P' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CODE_P = 518;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CODE = 519;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Mood Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_MOOD_CODE = 520;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Value' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_VALUE = 521;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Association Type Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATION_TYPE_CODE = 522;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Association Observation' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATION_OBSERVATION = 523;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Class Code Finding Aboutfinding Observation Object Associationfinding Observation Object Class Code1' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CLASS_CODE_FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CLASS_CODE1 = 524;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Code PFinding Aboutfinding Observation Object Associationfinding Observation Object Code P1' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CODE_PFINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CODE_P1 = 525;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Code Finding Aboutfinding Observation Object Associationfinding Observation Object Code1' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CODE_FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_CODE1 = 526;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Mood Code Finding Aboutfinding Observation Object Associationfinding Observation Object Mood Code1' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_MOOD_CODE_FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_MOOD_CODE1 = 527;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding Observation Object Associationfinding Observation Object Value Finding Aboutfinding Observation Object Associationfinding Observation Object Value1' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_VALUE_FINDING_ABOUTFINDING_OBSERVATION_OBJECT_ASSOCIATIONFINDING_OBSERVATION_OBJECT_VALUE1 = 528;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding About Category Association Type Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_ABOUT_CATEGORY_ASSOCIATION_TYPE_CODE = 529;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Finding Aboutfinding About Sub Category Association Type Code' of 'Finding About'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FINDING_ABOUT__FINDING_ABOUTFINDING_ABOUT_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 530;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Template Id' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_TEMPLATE_ID = 531;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Class Code' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_CLASS_CODE = 532;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Code' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_CODE = 533;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Id' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_ID = 534;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Mood Code' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_MOOD_CODE = 535;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Value' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_VALUE = 536;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Status Code' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_STATUS_CODE = 537;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Effective Time' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_EFFECTIVE_TIME = 538;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Group Identifier' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_GROUP_IDENTIFIER = 539;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Drug Accountability Category Association' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_DRUG_ACCOUNTABILITY_CATEGORY_ASSOCIATION = 540;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Drug Accountability Sub Category Association' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_DRUG_ACCOUNTABILITY_SUB_CATEGORY_ASSOCIATION = 541;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Non Performance Reason' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_NON_PERFORMANCE_REASON = 542;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountability Event Study Day' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITY_EVENT_STUDY_DAY = 543;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountabilitydrug Accountability Category Association Type Code' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITYDRUG_ACCOUNTABILITY_CATEGORY_ASSOCIATION_TYPE_CODE = 544;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Drug Accountabilitydrug Accountability Sub Category Association Type Code' of 'Drug Accountability'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DRUG_ACCOUNTABILITY__DRUG_ACCOUNTABILITYDRUG_ACCOUNTABILITY_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 545;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Template Id' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_TEMPLATE_ID = 546;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Class Code' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_CLASS_CODE = 547;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Code P' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_CODE_P = 548;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Code' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_CODE = 549;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Effective Time' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_EFFECTIVE_TIME = 550;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Id' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_ID = 551;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Mood Code' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_MOOD_CODE = 552;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Study Epoch' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_STUDY_EPOCH = 553;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Element Element Order Association' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENT_ELEMENT_ORDER_ASSOCIATION = 554;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Class Code' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CLASS_CODE = 555;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Code P' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE_P = 556;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Code' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE = 557;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Mood Code' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_MOOD_CODE = 558;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Value' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_VALUE = 559;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Association Type Code' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATION_TYPE_CODE = 560;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Association Element Order' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATION_ELEMENT_ORDER = 561;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Class Code Subject Elementelement Order Associationelement Order Class Code1' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CLASS_CODE_SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CLASS_CODE1 = 562;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Code PSubject Elementelement Order Associationelement Order Code P1' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE_PSUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE_P1 = 563;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Code Subject Elementelement Order Associationelement Order Code1' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE_SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE1 = 564;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Mood Code Subject Elementelement Order Associationelement Order Mood Code1' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_MOOD_CODE_SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_MOOD_CODE1 = 565;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Elementelement Order Associationelement Order Value Subject Elementelement Order Associationelement Order Value1' of 'Subject Element'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_ELEMENT__SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_VALUE_SUBJECT_ELEMENTELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_VALUE1 = 566;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Template Id' of 'Study Epoch'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_EPOCH__STUDY_EPOCH_TEMPLATE_ID = 567;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Class Code' of 'Study Epoch'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_EPOCH__STUDY_EPOCH_CLASS_CODE = 568;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Class Code P' of 'Study Epoch'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_EPOCH__STUDY_EPOCH_CLASS_CODE_P = 569;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Code P' of 'Study Epoch'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_EPOCH__STUDY_EPOCH_CODE_P = 570;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Code' of 'Study Epoch'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_EPOCH__STUDY_EPOCH_CODE = 571;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Text' of 'Study Epoch'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_EPOCH__STUDY_EPOCH_TEXT = 572;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Epoch Mood Code' of 'Study Epoch'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_EPOCH__STUDY_EPOCH_MOOD_CODE = 573;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Template Id' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_TEMPLATE_ID = 574;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Class Code' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_CLASS_CODE = 575;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Dose Quantity' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_DOSE_QUANTITY = 576;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Effective Time' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_EFFECTIVE_TIME = 577;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Id' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_ID = 578;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Max Dose Quantity' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_MAX_DOSE_QUANTITY = 579;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Mood Code' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_MOOD_CODE = 580;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Route Code' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_ROUTE_CODE = 581;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Status Code' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_STATUS_CODE = 582;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Text' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_TEXT = 583;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Consumable Material' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_CONSUMABLE_MATERIAL = 584;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Substance Use Category Association' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_SUBSTANCE_USE_CATEGORY_ASSOCIATION = 585;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Substance Use Sub Category Association' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_SUBSTANCE_USE_SUB_CATEGORY_ASSOCIATION = 586;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Pre Specified Event' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_PRE_SPECIFIED_EVENT = 587;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Non Performance Reason' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_NON_PERFORMANCE_REASON = 588;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Activity Start Timing Reference' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_ACTIVITY_START_TIMING_REFERENCE = 589;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Activity End Timing Reference' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_ACTIVITY_END_TIMING_REFERENCE = 590;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Data Collection' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_DATA_COLLECTION = 591;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Use Study Day Period' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USE_STUDY_DAY_PERIOD = 592;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Usesubstance Use Category Association Type Code' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USESUBSTANCE_USE_CATEGORY_ASSOCIATION_TYPE_CODE = 593;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Substance Usesubstance Use Sub Category Association Type Code' of 'Substance Use'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBSTANCE_USE__SUBSTANCE_USESUBSTANCE_USE_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 594;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Template Id' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_TEMPLATE_ID = 595;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Class Code' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_CLASS_CODE = 596;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Code P' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_CODE_P = 597;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Code' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_CODE = 598;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Effective Time' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_EFFECTIVE_TIME = 599;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Id' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_ID = 600;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Mood Code' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_MOOD_CODE = 601;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Activity Start Anchor Association' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_ACTIVITY_START_ANCHOR_ASSOCIATION = 602;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Activity Start Anchor Association Activity Start Anchor Time Point Class Code' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_ACTIVITY_START_ANCHOR_ASSOCIATION_ACTIVITY_START_ANCHOR_TIME_POINT_CLASS_CODE = 603;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Activity Start Anchor Association Activity Start Anchor Time Point Code P' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_ACTIVITY_START_ANCHOR_ASSOCIATION_ACTIVITY_START_ANCHOR_TIME_POINT_CODE_P = 604;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Activity Start Anchor Association Activity Start Anchor Time Point Code' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_ACTIVITY_START_ANCHOR_ASSOCIATION_ACTIVITY_START_ANCHOR_TIME_POINT_CODE = 605;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Activity Start Anchor Association Activity Start Anchor Time Point Effective Time' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_ACTIVITY_START_ANCHOR_ASSOCIATION_ACTIVITY_START_ANCHOR_TIME_POINT_EFFECTIVE_TIME = 606;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Activity Start Anchor Association Activity Start Anchor Time Point Mood Code' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_ACTIVITY_START_ANCHOR_ASSOCIATION_ACTIVITY_START_ANCHOR_TIME_POINT_MOOD_CODE = 607;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Activity Start Anchor Association Type Code' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_ACTIVITY_START_ANCHOR_ASSOCIATION_TYPE_CODE = 608;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity Start Timing Reference Activity Start Anchor Association Activity Start Anchor Time Point' of 'Activity Start Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_START_TIMING_REFERENCE__ACTIVITY_START_TIMING_REFERENCE_ACTIVITY_START_ANCHOR_ASSOCIATION_ACTIVITY_START_ANCHOR_TIME_POINT = 609;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Template Id' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_TEMPLATE_ID = 610;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Class Code' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_CLASS_CODE = 611;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Code P' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_CODE_P = 612;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Code' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_CODE = 613;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Effective Time' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_EFFECTIVE_TIME = 614;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Id' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_ID = 615;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Mood Code' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_MOOD_CODE = 616;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Activity End Anchor Association' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_ACTIVITY_END_ANCHOR_ASSOCIATION = 617;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Activity End Anchor Association Activity End Anchor Time Point Class Code' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_ACTIVITY_END_ANCHOR_ASSOCIATION_ACTIVITY_END_ANCHOR_TIME_POINT_CLASS_CODE = 618;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Activity End Anchor Association Activity End Anchor Time Point Code P' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_ACTIVITY_END_ANCHOR_ASSOCIATION_ACTIVITY_END_ANCHOR_TIME_POINT_CODE_P = 619;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Activity End Anchor Association Activity End Anchor Time Point Code' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_ACTIVITY_END_ANCHOR_ASSOCIATION_ACTIVITY_END_ANCHOR_TIME_POINT_CODE = 620;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Activity End Anchor Association Activity End Anchor Time Point Effective Time' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_ACTIVITY_END_ANCHOR_ASSOCIATION_ACTIVITY_END_ANCHOR_TIME_POINT_EFFECTIVE_TIME = 621;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Activity End Anchor Association Activity End Anchor Time Point Mood Code' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_ACTIVITY_END_ANCHOR_ASSOCIATION_ACTIVITY_END_ANCHOR_TIME_POINT_MOOD_CODE = 622;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Activity End Anchor Association Type Code' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_ACTIVITY_END_ANCHOR_ASSOCIATION_TYPE_CODE = 623;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Activity End Timing Reference Activity End Anchor Association Activity End Anchor Time Point' of 'Activity End Timing Reference'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ACTIVITY_END_TIMING_REFERENCE__ACTIVITY_END_TIMING_REFERENCE_ACTIVITY_END_ANCHOR_ASSOCIATION_ACTIVITY_END_ANCHOR_TIME_POINT = 624;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Template Id' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_TEMPLATE_ID = 625;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Class Code' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_CLASS_CODE = 626;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Code' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_CODE = 627;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Effective Time' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_EFFECTIVE_TIME = 628;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Id' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_ID = 629;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Mood Code' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_MOOD_CODE = 630;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Disposition Category Association' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_DISPOSITION_CATEGORY_ASSOCIATION = 631;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Disposition Sub Category Association' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_DISPOSITION_SUB_CATEGORY_ASSOCIATION = 632;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Study Epoch' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_STUDY_EPOCH = 633;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Data Collection' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_DATA_COLLECTION = 634;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Group Identifier' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_GROUP_IDENTIFIER = 635;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Disposition Study Day Period' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITION_STUDY_DAY_PERIOD = 636;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Dispositiondisposition Category Association Type Code' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITIONDISPOSITION_CATEGORY_ASSOCIATION_TYPE_CODE = 637;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Dispositiondisposition Sub Category Association Type Code' of 'Human Clinical Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_DISPOSITION__HUMAN_CLINICAL_DISPOSITIONDISPOSITION_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 638;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Template Id' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_TEMPLATE_ID = 639;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Class Code' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_CLASS_CODE = 640;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Code' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_CODE = 641;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Effective Time' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_EFFECTIVE_TIME = 642;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Id' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_ID = 643;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Mood Code' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_MOOD_CODE = 644;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Status Code' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_STATUS_CODE = 645;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Value' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_VALUE = 646;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Group Identifier' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_GROUP_IDENTIFIER = 647;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Medical History Category Association' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_MEDICAL_HISTORY_CATEGORY_ASSOCIATION = 648;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Medical History Sub Category Association' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_MEDICAL_HISTORY_SUB_CATEGORY_ASSOCIATION = 649;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Pre Specified Event' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_PRE_SPECIFIED_EVENT = 650;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Non Performance Reason' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_NON_PERFORMANCE_REASON = 651;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Body Systemor Organ Class' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_BODY_SYSTEMOR_ORGAN_CLASS = 652;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Event Study Day' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_EVENT_STUDY_DAY = 653;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Activity End Timing Reference' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_ACTIVITY_END_TIMING_REFERENCE = 654;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Item Data Collection' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEM_DATA_COLLECTION = 655;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Itemmedical History Category Association Type Code' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEMMEDICAL_HISTORY_CATEGORY_ASSOCIATION_TYPE_CODE = 656;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Medical History Itemmedical History Sub Category Association Type Code' of 'Medical History Item'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MEDICAL_HISTORY_ITEM__MEDICAL_HISTORY_ITEMMEDICAL_HISTORY_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 657;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Template Id' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_TEMPLATE_ID = 658;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Class Code' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_CLASS_CODE = 659;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Code' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_CODE = 660;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Effective Time' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_EFFECTIVE_TIME = 661;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Id' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_ID = 662;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Mood Code' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_MOOD_CODE = 663;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Value' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_VALUE = 664;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Protocol Deviation Category Association' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_PROTOCOL_DEVIATION_CATEGORY_ASSOCIATION = 665;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Protocol Deviation Sub Category Association' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_PROTOCOL_DEVIATION_SUB_CATEGORY_ASSOCIATION = 666;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviation Study Epoch' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATION_STUDY_EPOCH = 667;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviationprotocol Deviation Category Association Type Code' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATIONPROTOCOL_DEVIATION_CATEGORY_ASSOCIATION_TYPE_CODE = 668;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Protocol Deviationprotocol Deviation Sub Category Association Type Code' of 'Protocol Deviation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PROTOCOL_DEVIATION__PROTOCOL_DEVIATIONPROTOCOL_DEVIATION_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 669;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Template Id' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_TEMPLATE_ID = 670;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Class Code' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_CLASS_CODE = 671;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Code' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_CODE = 672;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Effective Time' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_EFFECTIVE_TIME = 673;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Id' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_ID = 674;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Mood Code' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_MOOD_CODE = 675;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Status Code' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_STATUS_CODE = 676;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Value' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_VALUE = 677;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Clinical Event Category Association' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_CLINICAL_EVENT_CATEGORY_ASSOCIATION = 678;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Clinical Event Sub Category Association' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_CLINICAL_EVENT_SUB_CATEGORY_ASSOCIATION = 679;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Pre Specified Event' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_PRE_SPECIFIED_EVENT = 680;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Non Performance Reason' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_NON_PERFORMANCE_REASON = 681;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Body Systemor Organ Class' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_BODY_SYSTEMOR_ORGAN_CLASS = 682;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Data Collection' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_DATA_COLLECTION = 683;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Event Severity' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_EVENT_SEVERITY = 684;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Activity Start Timing Reference' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_ACTIVITY_START_TIMING_REFERENCE = 685;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Event Activity End Timing Reference' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENT_ACTIVITY_END_TIMING_REFERENCE = 686;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Eventclinical Event Category Association Type Code' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENTCLINICAL_EVENT_CATEGORY_ASSOCIATION_TYPE_CODE = 687;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Eventclinical Event Sub Category Association Type Code' of 'Clinical Event'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_EVENT__CLINICAL_EVENTCLINICAL_EVENT_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 688;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Template Id' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_TEMPLATE_ID = 689;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Class Code' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_CLASS_CODE = 690;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Code' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_CODE = 691;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Id' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_ID = 692;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Mood Code' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_MOOD_CODE = 693;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Value' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_VALUE = 694;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Status Code' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_STATUS_CODE = 695;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Data Collection' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_DATA_COLLECTION = 696;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Non Performance Reason' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_NON_PERFORMANCE_REASON = 697;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Group Identifier' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_GROUP_IDENTIFIER = 698;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristic Subject Charateristic Category Association' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTIC_SUBJECT_CHARATERISTIC_CATEGORY_ASSOCIATION = 699;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristicsubject Charateristic Category Association Template Id' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTICSUBJECT_CHARATERISTIC_CATEGORY_ASSOCIATION_TEMPLATE_ID = 700;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristicsubject Charateristic Category Association Type Code' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTICSUBJECT_CHARATERISTIC_CATEGORY_ASSOCIATION_TYPE_CODE = 701;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Characteristicsubject Charateristic Sub Category Association Type Code' of 'Subject Characteristic'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_CHARACTERISTIC__SUBJECT_CHARACTERISTICSUBJECT_CHARATERISTIC_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 702;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Template Id' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_TEMPLATE_ID = 703;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Class Code' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_CLASS_CODE = 704;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Code' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_CODE = 705;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Id' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_ID = 706;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Mood Code' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_MOOD_CODE = 707;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Status Code' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_STATUS_CODE = 708;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Value' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_VALUE = 709;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Group Identifier' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_GROUP_IDENTIFIER = 710;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Specimen Information' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_SPECIMEN_INFORMATION = 711;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Pharmacokinetics Parameter Category Association' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_PHARMACOKINETICS_PARAMETER_CATEGORY_ASSOCIATION = 712;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Pharmacokinetics Parameter Sub Category Association' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_PHARMACOKINETICS_PARAMETER_SUB_CATEGORY_ASSOCIATION = 713;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Non Performance Reason' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_NON_PERFORMANCE_REASON = 714;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Finding Timing Reference' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDING_TIMING_REFERENCE = 715;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Findingpharmacokinetics Parameter Category Association Type Code' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDINGPHARMACOKINETICS_PARAMETER_CATEGORY_ASSOCIATION_TYPE_CODE = 716;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Pharmacokinetic Parameter Findingpharmacokinetics Parameter Sub Category Association Type Code' of 'Pharmacokinetic Parameter Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PHARMACOKINETIC_PARAMETER_FINDING__PHARMACOKINETIC_PARAMETER_FINDINGPHARMACOKINETICS_PARAMETER_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 717;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Template Id' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_TEMPLATE_ID = 718;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Class Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_CLASS_CODE = 719;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Dose Quantity' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_DOSE_QUANTITY = 720;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Effective Time' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_EFFECTIVE_TIME = 721;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Route Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_ROUTE_CODE = 722;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Id' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_ID = 723;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Mood Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_MOOD_CODE = 724;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Status Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_STATUS_CODE = 725;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Text' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_TEXT = 726;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Max Dose Quantity' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_MAX_DOSE_QUANTITY = 727;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Group Identifier' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_GROUP_IDENTIFIER = 728;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Concomitant Medication Category Association' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_CONCOMITANT_MEDICATION_CATEGORY_ASSOCIATION = 729;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Non Performance Reason' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_NON_PERFORMANCE_REASON = 730;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationindication Association' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONINDICATION_ASSOCIATION = 731;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Consumable Material' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_CONSUMABLE_MATERIAL = 732;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Concomitant Medication Sub Category Association' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION = 733;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Intended Regimen Association' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INTENDED_REGIMEN_ASSOCIATION = 734;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Activity Start Timing Reference' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_ACTIVITY_START_TIMING_REFERENCE = 735;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Activty End Timing Reference' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_ACTIVTY_END_TIMING_REFERENCE = 736;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Pre Specified Event' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_PRE_SPECIFIED_EVENT = 737;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Data Collection' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_DATA_COLLECTION = 738;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Study Day Period' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_STUDY_DAY_PERIOD = 739;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Class Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CLASS_CODE = 740;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CODE = 741;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Mood Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_MOOD_CODE = 742;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Value' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_VALUE = 743;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Type Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 744;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY = 745;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Class Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_CLASS_CODE = 746;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_CODE = 747;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Mood Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_MOOD_CODE = 748;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Value' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_VALUE = 749;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Concomitant Medication Sub Category Association' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_CONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION = 750;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Association Type Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATION_TYPE_CODE = 751;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Association Concomitant Medication Category' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_CATEGORY = 752;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Class Code Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Class Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CLASS_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CLASS_CODE1 = 753;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Code Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CODE1 = 754;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Mood Code Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Mood Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_MOOD_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_MOOD_CODE1 = 755;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Value Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Value1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_VALUE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_VALUE1 = 756;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Type Code Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Type Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_TYPE_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_TYPE_CODE1 = 757;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Categoryconcomitant Medication Sub Category Association Concomitant Medication Sub Category1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORYCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY1 = 758;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Class Code Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Class Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_CLASS_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_CLASS_CODE1 = 759;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Code Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_CODE1 = 760;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Mood Code Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Mood Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_MOOD_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_MOOD_CODE1 = 761;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Value Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Value1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_VALUE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_VALUE1 = 762;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Concomitant Medication Sub Category Association Concomitant Medicationconcomitant Medication Category Associationconcomitant Medication Category Concomitant Medication Sub Category Association1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_CONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_CATEGORY_ASSOCIATIONCONCOMITANT_MEDICATION_CATEGORY_CONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION1 = 763;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Indication Association Concomitant Medication Indication Class Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_INDICATION_ASSOCIATION_CONCOMITANT_MEDICATION_INDICATION_CLASS_CODE = 764;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Indication Association Concomitant Medication Indication Mood Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_INDICATION_ASSOCIATION_CONCOMITANT_MEDICATION_INDICATION_MOOD_CODE = 765;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Indication Association Concomitant Medication Indication Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_INDICATION_ASSOCIATION_CONCOMITANT_MEDICATION_INDICATION_CODE = 766;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Indication Association Concomitant Medication Indication Value' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_INDICATION_ASSOCIATION_CONCOMITANT_MEDICATION_INDICATION_VALUE = 767;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Indication Association Type Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_INDICATION_ASSOCIATION_TYPE_CODE = 768;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Indication Association Indication' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_INDICATION_ASSOCIATION_INDICATION = 769;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Class Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CLASS_CODE = 770;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CODE = 771;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Mood Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_MOOD_CODE = 772;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Value' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_VALUE = 773;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Type Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 774;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY = 775;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Class Code Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Class Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CLASS_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CLASS_CODE1 = 776;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Code Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_CODE1 = 777;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Mood Code Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Mood Code1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_MOOD_CODE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_MOOD_CODE1 = 778;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Value Concomitant Medicationconcomitant Medication Sub Category Association Concomitant Medication Sub Category Value1' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_VALUE_CONCOMITANT_MEDICATIONCONCOMITANT_MEDICATION_SUB_CATEGORY_ASSOCIATION_CONCOMITANT_MEDICATION_SUB_CATEGORY_VALUE1 = 779;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Intended Regimen Association Intended Regimen Class Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INTENDED_REGIMEN_ASSOCIATION_INTENDED_REGIMEN_CLASS_CODE = 780;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Intended Regimen Association Intended Regimen Code P' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INTENDED_REGIMEN_ASSOCIATION_INTENDED_REGIMEN_CODE_P = 781;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Intended Regimen Association Intended Regimen Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INTENDED_REGIMEN_ASSOCIATION_INTENDED_REGIMEN_CODE = 782;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Intended Regimen Association Intended Regimen Mood Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INTENDED_REGIMEN_ASSOCIATION_INTENDED_REGIMEN_MOOD_CODE = 783;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Intended Regimen Association Intended Regimen Value' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INTENDED_REGIMEN_ASSOCIATION_INTENDED_REGIMEN_VALUE = 784;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Intended Regimen Association Type Code' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INTENDED_REGIMEN_ASSOCIATION_TYPE_CODE = 785;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Concomitant Medication Intended Regimen Association Intended Regimen' of 'Concomitant Medication'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONCOMITANT_MEDICATION__CONCOMITANT_MEDICATION_INTENDED_REGIMEN_ASSOCIATION_INTENDED_REGIMEN = 786;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Template Id' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_TEMPLATE_ID = 787;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Type Code' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_TYPE_CODE = 788;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION = 789;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Class Code' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_CLASS_CODE = 790;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Code' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_CODE = 791;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Lot Number Text' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_LOT_NUMBER_TEXT = 792;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Class Code' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_CLASS_CODE = 793;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Class Code Consumable Material Medication Medication Material Class Code1' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_CLASS_CODE_CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_CLASS_CODE1 = 794;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Code Consumable Material Medication Medication Material Code1' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_CODE_CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_CODE1 = 795;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Consumable Material Medication Medication Material Lot Number Text Consumable Material Medication Medication Material Lot Number Text1' of 'Consumable Material'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CONSUMABLE_MATERIAL__CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_LOT_NUMBER_TEXT_CONSUMABLE_MATERIAL_MEDICATION_MEDICATION_MATERIAL_LOT_NUMBER_TEXT1 = 796;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Template Id' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_TEMPLATE_ID = 797;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Class Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_CLASS_CODE = 798;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Dose Quantity' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_DOSE_QUANTITY = 799;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Effective Time' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_EFFECTIVE_TIME = 800;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Id' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_ID = 801;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Mood Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_MOOD_CODE = 802;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Route Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_ROUTE_CODE = 803;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Max Dose Quantity' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_MAX_DOSE_QUANTITY = 804;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Text' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_TEXT = 805;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Approach Site Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_APPROACH_SITE_CODE = 806;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Group Identifier' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_GROUP_IDENTIFIER = 807;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Consumable Material' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_CONSUMABLE_MATERIAL = 808;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Exposure Category Association' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_EXPOSURE_CATEGORY_ASSOCIATION = 809;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Exposure Sub Category Association' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_EXPOSURE_SUB_CATEGORY_ASSOCIATION = 810;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Exposure Indication' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_EXPOSURE_INDICATION = 811;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Dose Adjustment Reason Association' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_DOSE_ADJUSTMENT_REASON_ASSOCIATION = 812;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Study Epoch' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_STUDY_EPOCH = 813;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Element Order Association' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_ELEMENT_ORDER_ASSOCIATION = 814;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Timing Reference' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_TIMING_REFERENCE = 815;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposure Study Day Period' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSURE_STUDY_DAY_PERIOD = 816;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureexposure Category Association Type Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREEXPOSURE_CATEGORY_ASSOCIATION_TYPE_CODE = 817;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureexposure Sub Category Association Type Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREEXPOSURE_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 818;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureexposure Intended Regimen Class Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREEXPOSURE_INTENDED_REGIMEN_CLASS_CODE = 819;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureexposure Intended Regimen Mood Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREEXPOSURE_INTENDED_REGIMEN_MOOD_CODE = 820;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureexposure Intended Regimen Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREEXPOSURE_INTENDED_REGIMEN_CODE = 821;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureexposure Intended Regimen Value' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREEXPOSURE_INTENDED_REGIMEN_VALUE = 822;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposuredose Adjustment Reason Association Type Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREDOSE_ADJUSTMENT_REASON_ASSOCIATION_TYPE_CODE = 823;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Class Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CLASS_CODE = 824;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Code P' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE_P = 825;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_CODE = 826;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Mood Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_MOOD_CODE = 827;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Associationelement Order Value' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATIONELEMENT_ORDER_VALUE = 828;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Association Type Code' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATION_TYPE_CODE = 829;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Exposureelement Order Association Element Order' of 'Human Clinical Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_EXPOSURE__HUMAN_CLINICAL_EXPOSUREELEMENT_ORDER_ASSOCIATION_ELEMENT_ORDER = 830;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Test Performer Template Id' of 'Study Test Performer'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_TEST_PERFORMER__STUDY_TEST_PERFORMER_TEMPLATE_ID = 831;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Test Performer Type Code' of 'Study Test Performer'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_TEST_PERFORMER__STUDY_TEST_PERFORMER_TYPE_CODE = 832;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Template Id' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_TEMPLATE_ID = 833;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Class Code' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_CLASS_CODE = 834;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Code' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_CODE = 835;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Effective Time' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_EFFECTIVE_TIME = 836;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Id' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_ID = 837;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Mood Code' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_MOOD_CODE = 838;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Value' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_VALUE = 839;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Status Code' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_STATUS_CODE = 840;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Group Identifier' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_GROUP_IDENTIFIER = 841;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Questionnaire Category Association' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_QUESTIONNAIRE_CATEGORY_ASSOCIATION = 842;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Questionnaire Sub Category Association' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_QUESTIONNAIRE_SUB_CATEGORY_ASSOCIATION = 843;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Non Performance Reason' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_NON_PERFORMANCE_REASON = 844;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Baseline Indicator' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_BASELINE_INDICATOR = 845;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Derived Data Indicator' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_DERIVED_DATA_INDICATOR = 846;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Timing Reference' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_TIMING_REFERENCE = 847;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Finding Data Collection' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDING_DATA_COLLECTION = 848;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Findingquestionnaire Category Association Type Code' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDINGQUESTIONNAIRE_CATEGORY_ASSOCIATION_TYPE_CODE = 849;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Questionnaire Findingquestionnaire Sub Category Association Type Code' of 'Questionnaire Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int QUESTIONNAIRE_FINDING__QUESTIONNAIRE_FINDINGQUESTIONNAIRE_SUB_CATEGORY_ASSOCIATION_TYPE_CODE = 850;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Finding Evaluator Template Id' of 'Study Finding Evaluator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_FINDING_EVALUATOR__STUDY_FINDING_EVALUATOR_TEMPLATE_ID = 851;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Study Finding Evaluator Type Code' of 'Study Finding Evaluator'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int STUDY_FINDING_EVALUATOR__STUDY_FINDING_EVALUATOR_TYPE_CODE = 852;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Template Id' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_TEMPLATE_ID = 853;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Class Code' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CLASS_CODE = 854;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Code P' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CODE_P = 855;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Code' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CODE = 856;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Confidentiality Code P' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CONFIDENTIALITY_CODE_P = 857;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Confidentiality Code' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_CONFIDENTIALITY_CODE = 858;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Effective Time' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_EFFECTIVE_TIME = 859;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Id' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_ID = 860;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Language Code' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_LANGUAGE_CODE = 861;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Mood Code' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_MOOD_CODE = 862;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Realm Code' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_REALM_CODE = 863;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Set Id' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_SET_ID = 864;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Data Non Clinical Trials Version Number' of 'Subject Data Non Clinical Trials'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_DATA_NON_CLINICAL_TRIALS__SUBJECT_DATA_NON_CLINICAL_TRIALS_VERSION_NUMBER = 865;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Subject Data Document Body Template Id' of 'Non Human Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY__NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY_TEMPLATE_ID = 866;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Subject Data Document Body Class Code' of 'Non Human Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY__NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY_CLASS_CODE = 867;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Subject Data Document Body Code' of 'Non Human Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY__NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY_CODE = 868;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Subject Data Document Body Code P' of 'Non Human Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY__NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY_CODE_P = 869;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Subject Data Document Body Mood Code' of 'Non Human Subject Data Document Body'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY__NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY_MOOD_CODE = 870;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Template Id' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_TEMPLATE_ID = 871;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Class Code' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_CLASS_CODE = 872;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Dose Quantity' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_DOSE_QUANTITY = 873;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Effective Time' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_EFFECTIVE_TIME = 874;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Id' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_ID = 875;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Mood Code' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_MOOD_CODE = 876;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Route Code' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_ROUTE_CODE = 877;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Max Dose Quantity' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_MAX_DOSE_QUANTITY = 878;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Text' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_TEXT = 879;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Exposure Approach Site Code' of 'Non Human Exposure'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_EXPOSURE__NON_HUMAN_EXPOSURE_APPROACH_SITE_CODE = 880;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Disposition Template Id' of 'Non Human Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_DISPOSITION__NON_HUMAN_DISPOSITION_TEMPLATE_ID = 881;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Disposition Class Code' of 'Non Human Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_DISPOSITION__NON_HUMAN_DISPOSITION_CLASS_CODE = 882;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Disposition Code' of 'Non Human Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_DISPOSITION__NON_HUMAN_DISPOSITION_CODE = 883;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Disposition Effective Time' of 'Non Human Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_DISPOSITION__NON_HUMAN_DISPOSITION_EFFECTIVE_TIME = 884;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Disposition Id' of 'Non Human Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_DISPOSITION__NON_HUMAN_DISPOSITION_ID = 885;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Non Human Disposition Mood Code' of 'Non Human Disposition'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int NON_HUMAN_DISPOSITION__NON_HUMAN_DISPOSITION_MOOD_CODE = 886;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Template Id' of 'Human Clinical Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_TEMPLATE_ID = 887;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Class Code' of 'Human Clinical Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_CLASS_CODE = 888;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Code' of 'Human Clinical Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_CODE = 889;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Id' of 'Human Clinical Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_ID = 890;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Mood Code' of 'Human Clinical Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_MOOD_CODE = 891;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Status Code' of 'Human Clinical Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_STATUS_CODE = 892;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Value' of 'Human Clinical Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_VALUE = 893;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Human Clinical Laboratory Test Result Method Code' of 'Human Clinical Laboratory Test Result'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int HUMAN_CLINICAL_LABORATORY_TEST_RESULT__HUMAN_CLINICAL_LABORATORY_TEST_RESULT_METHOD_CODE = 894;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Template Id' of 'Body Weight'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BODY_WEIGHT__BODY_WEIGHT_TEMPLATE_ID = 895;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Body Weight Gain Template Id' of 'Body Weight Gain'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int BODY_WEIGHT_GAIN__BODY_WEIGHT_GAIN_TEMPLATE_ID = 896;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Clinical Observation Template Id' of 'Clinical Observation'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int CLINICAL_OBSERVATION__CLINICAL_OBSERVATION_TEMPLATE_ID = 897;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Death Diagnosis Template Id' of 'Death Diagnosis'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int DEATH_DIAGNOSIS__DEATH_DIAGNOSIS_TEMPLATE_ID = 898;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Foodand Water Consumption Template Id' of 'Foodand Water Consumption'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int FOODAND_WATER_CONSUMPTION__FOODAND_WATER_CONSUMPTION_TEMPLATE_ID = 899;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Macroscopic Finding Template Id' of 'Macroscopic Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MACROSCOPIC_FINDING__MACROSCOPIC_FINDING_TEMPLATE_ID = 900;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Microscopic Findings Template Id' of 'Microscopic Findings'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int MICROSCOPIC_FINDINGS__MICROSCOPIC_FINDINGS_TEMPLATE_ID = 901;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Organ Measurement Template Id' of 'Organ Measurement'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int ORGAN_MEASUREMENT__ORGAN_MEASUREMENT_TEMPLATE_ID = 902;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Palpable Mass Template Id' of 'Palpable Mass'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int PALPABLE_MASS__PALPABLE_MASS_TEMPLATE_ID = 903;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Tumor Finding Template Id' of 'Tumor Finding'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int TUMOR_FINDING__TUMOR_FINDING_TEMPLATE_ID = 904;

  /**
   * The {@link org.eclipse.emf.common.util.Diagnostic#getCode() code} for constraint 'Validate Subject Pool Template Id' of 'Subject Pool'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static final int SUBJECT_POOL__SUBJECT_POOL_TEMPLATE_ID = 905;

  /**
   * A constant with a fixed name that can be used as the base value for additional hand written constants.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static final int GENERATED_DIAGNOSTIC_CODE_COUNT = 905;

  /**
   * A constant with a fixed name that can be used as the base value for additional hand written constants in a derived class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static final int DIAGNOSTIC_CODE_COUNT = GENERATED_DIAGNOSTIC_CODE_COUNT;

  /**
   * The cached base package validator.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CDAValidator cdaValidator;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SdtmValidator()
  {
    super();
    cdaValidator = CDAValidator.INSTANCE;
  }

  /**
   * Returns the package of this validator switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EPackage getEPackage()
  {
    return SdtmPackage.eINSTANCE;
  }

  /**
   * Calls <code>validateXXX</code> for the corresponding classifier of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected boolean validate(int classifierID, Object value, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    switch (classifierID)
    {
      case SdtmPackage.SUBJECT_DATA_HUMAN_CLINICAL_TRIALS:
        return validateSubjectDataHumanClinicalTrials((SubjectDataHumanClinicalTrials)value, diagnostics, context);
      case SdtmPackage.HUMAN_CLINICAL_SUBJECT_DATA_DOCUMENT_BODY:
        return validateHumanClinicalSubjectDataDocumentBody((HumanClinicalSubjectDataDocumentBody)value, diagnostics, context);
      case SdtmPackage.HUMAN_CLINICAL_SUBJECT_DEMOGRAPHICS:
        return validateHumanClinicalSubjectDemographics((HumanClinicalSubjectDemographics)value, diagnostics, context);
      case SdtmPackage.DATA_COLLECTION:
        return validateDataCollection((DataCollection)value, diagnostics, context);
      case SdtmPackage.EVENT_STUDY_DAY:
        return validateEventStudyDay((EventStudyDay)value, diagnostics, context);
      case SdtmPackage.STUDY_ARM:
        return validateStudyArm((StudyArm)value, diagnostics, context);
      case SdtmPackage.VISIT:
        return validateVisit((Visit)value, diagnostics, context);
      case SdtmPackage.ADVERSE_EVENT:
        return validateAdverseEvent((AdverseEvent)value, diagnostics, context);
      case SdtmPackage.GROUP_IDENTIFIER:
        return validateGroupIdentifier((GroupIdentifier)value, diagnostics, context);
      case SdtmPackage.BODY_SYSTEMOR_ORGAN_CLASS:
        return validateBodySystemorOrganClass((BodySystemorOrganClass)value, diagnostics, context);
      case SdtmPackage.EVENT_SEVERITY:
        return validateEventSeverity((EventSeverity)value, diagnostics, context);
      case SdtmPackage.PRE_SPECIFIED_EVENT:
        return validatePreSpecifiedEvent((PreSpecifiedEvent)value, diagnostics, context);
      case SdtmPackage.STUDY_DAY_PERIOD:
        return validateStudyDayPeriod((StudyDayPeriod)value, diagnostics, context);
      case SdtmPackage.VITAL_SIGN:
        return validateVitalSign((VitalSign)value, diagnostics, context);
      case SdtmPackage.PLANNED_STUDY_DAY:
        return validatePlannedStudyDay((PlannedStudyDay)value, diagnostics, context);
      case SdtmPackage.TIMING_REFERENCE:
        return validateTimingReference((TimingReference)value, diagnostics, context);
      case SdtmPackage.NON_PERFORMANCE_REASON:
        return validateNonPerformanceReason((NonPerformanceReason)value, diagnostics, context);
      case SdtmPackage.ECG_TEST_RESULT:
        return validateECGTestResult((ECGTestResult)value, diagnostics, context);
      case SdtmPackage.BASELINE_INDICATOR:
        return validateBaselineIndicator((BaselineIndicator)value, diagnostics, context);
      case SdtmPackage.DERIVED_DATA_INDICATOR:
        return validateDerivedDataIndicator((DerivedDataIndicator)value, diagnostics, context);
      case SdtmPackage.INCLUSIONOR_EXCLUSION_CRITERIA_NOT_MET:
        return validateInclusionorExclusionCriteriaNotMet((InclusionorExclusionCriteriaNotMet)value, diagnostics, context);
      case SdtmPackage.NON_HUMAN_LABORATORY_TEST_RESULT:
        return validateNonHumanLaboratoryTestResult((NonHumanLaboratoryTestResult)value, diagnostics, context);
      case SdtmPackage.SPECIMEN_INFORMATION:
        return validateSpecimenInformation((SpecimenInformation)value, diagnostics, context);
      case SdtmPackage.PHYSICAL_EXAMINATION_FINDING:
        return validatePhysicalExaminationFinding((PhysicalExaminationFinding)value, diagnostics, context);
      case SdtmPackage.MICROBIOLOGY_SPECIMEN_FINDING:
        return validateMicrobiologySpecimenFinding((MicrobiologySpecimenFinding)value, diagnostics, context);
      case SdtmPackage.MICROBIOLOGY_SUSCEPTIBILITY:
        return validateMicrobiologySusceptibility((MicrobiologySusceptibility)value, diagnostics, context);
      case SdtmPackage.PHARMACOKINETIC_CONCENTRATION_FINDING:
        return validatePharmacokineticConcentrationFinding((PharmacokineticConcentrationFinding)value, diagnostics, context);
      case SdtmPackage.FINDING_ABOUT:
        return validateFindingAbout((FindingAbout)value, diagnostics, context);
      case SdtmPackage.DRUG_ACCOUNTABILITY:
        return validateDrugAccountability((DrugAccountability)value, diagnostics, context);
      case SdtmPackage.SUBJECT_ELEMENT:
        return validateSubjectElement((SubjectElement)value, diagnostics, context);
      case SdtmPackage.STUDY_EPOCH:
        return validateStudyEpoch((StudyEpoch)value, diagnostics, context);
      case SdtmPackage.SUBSTANCE_USE:
        return validateSubstanceUse((SubstanceUse)value, diagnostics, context);
      case SdtmPackage.ACTIVITY_START_TIMING_REFERENCE:
        return validateActivityStartTimingReference((ActivityStartTimingReference)value, diagnostics, context);
      case SdtmPackage.ACTIVITY_END_TIMING_REFERENCE:
        return validateActivityEndTimingReference((ActivityEndTimingReference)value, diagnostics, context);
      case SdtmPackage.HUMAN_CLINICAL_DISPOSITION:
        return validateHumanClinicalDisposition((HumanClinicalDisposition)value, diagnostics, context);
      case SdtmPackage.MEDICAL_HISTORY_ITEM:
        return validateMedicalHistoryItem((MedicalHistoryItem)value, diagnostics, context);
      case SdtmPackage.PROTOCOL_DEVIATION:
        return validateProtocolDeviation((ProtocolDeviation)value, diagnostics, context);
      case SdtmPackage.CLINICAL_EVENT:
        return validateClinicalEvent((ClinicalEvent)value, diagnostics, context);
      case SdtmPackage.SUBJECT_CHARACTERISTIC:
        return validateSubjectCharacteristic((SubjectCharacteristic)value, diagnostics, context);
      case SdtmPackage.PHARMACOKINETIC_PARAMETER_FINDING:
        return validatePharmacokineticParameterFinding((PharmacokineticParameterFinding)value, diagnostics, context);
      case SdtmPackage.CONCOMITANT_MEDICATION:
        return validateConcomitantMedication((ConcomitantMedication)value, diagnostics, context);
      case SdtmPackage.CONSUMABLE_MATERIAL:
        return validateConsumableMaterial((ConsumableMaterial)value, diagnostics, context);
      case SdtmPackage.HUMAN_CLINICAL_EXPOSURE:
        return validateHumanClinicalExposure((HumanClinicalExposure)value, diagnostics, context);
      case SdtmPackage.STUDY_TEST_PERFORMER:
        return validateStudyTestPerformer((StudyTestPerformer)value, diagnostics, context);
      case SdtmPackage.QUESTIONNAIRE_FINDING:
        return validateQuestionnaireFinding((QuestionnaireFinding)value, diagnostics, context);
      case SdtmPackage.STUDY_FINDING_EVALUATOR:
        return validateStudyFindingEvaluator((StudyFindingEvaluator)value, diagnostics, context);
      case SdtmPackage.SUBJECT_DATA_NON_CLINICAL_TRIALS:
        return validateSubjectDataNonClinicalTrials((SubjectDataNonClinicalTrials)value, diagnostics, context);
      case SdtmPackage.NON_HUMAN_SUBJECT_DATA_DOCUMENT_BODY:
        return validateNonHumanSubjectDataDocumentBody((NonHumanSubjectDataDocumentBody)value, diagnostics, context);
      case SdtmPackage.NON_HUMAN_EXPOSURE:
        return validateNonHumanExposure((NonHumanExposure)value, diagnostics, context);
      case SdtmPackage.NON_HUMAN_DISPOSITION:
        return validateNonHumanDisposition((NonHumanDisposition)value, diagnostics, context);
      case SdtmPackage.HUMAN_CLINICAL_LABORATORY_TEST_RESULT:
        return validateHumanClinicalLaboratoryTestResult((HumanClinicalLaboratoryTestResult)value, diagnostics, context);
      case SdtmPackage.BODY_WEIGHT:
        return validateBodyWeight((BodyWeight)value, diagnostics, context);
      case SdtmPackage.BODY_WEIGHT_GAIN:
        return validateBodyWeightGain((BodyWeightGain)value, diagnostics, context);
      case SdtmPackage.CLINICAL_OBSERVATION:
        return validateClinicalObservation((ClinicalObservation)value, diagnostics, context);
      case SdtmPackage.DEATH_DIAGNOSIS:
        return validateDeathDiagnosis((DeathDiagnosis)value, diagnostics, context);
      case SdtmPackage.FOODAND_WATER_CONSUMPTION:
        return validateFoodandWaterConsumption((FoodandWaterConsumption)value, diagnostics, context);
      case SdtmPackage.MACROSCOPIC_FINDING:
        return validateMacroscopicFinding((MacroscopicFinding)value, diagnostics, context);
      case SdtmPackage.MICROSCOPIC_FINDINGS:
        return validateMicroscopicFindings((MicroscopicFindings)value, diagnostics, context);
      case SdtmPackage.ORGAN_MEASUREMENT:
        return validateOrganMeasurement((OrganMeasurement)value, diagnostics, context);
      case SdtmPackage.PALPABLE_MASS:
        return validatePalpableMass((PalpableMass)value, diagnostics, context);
      case SdtmPackage.TUMOR_FINDING:
        return validateTumorFinding((TumorFinding)value, diagnostics, context);
      case SdtmPackage.SUBJECT_POOL:
        return validateSubjectPool((SubjectPool)value, diagnostics, context);
      default:
        return true;
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(subjectDataHumanClinicalTrials, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateClinicalDocument_validateClassCode(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateClinicalDocument_validateMoodCode(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsTemplateId(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsClassCode(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCodeP(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCode(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsConfidentialityCodeP(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsConfidentialityCode(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsEffectiveTime(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsId(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsLanguageCode(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsMoodCode(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsRealmCode(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsSetId(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsVersionNumber(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsHumanClinicalSubjectDataDocumentBody(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsAuthorParticipation(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsStudyRelationship(subjectDataHumanClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsSubjectParticipation(subjectDataHumanClinicalTrials, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsTemplateId constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsTemplateId(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsClassCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsClassCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsClassCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsCodeP constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCodeP(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsCodeP(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsConfidentialityCodeP constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsConfidentialityCodeP(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsConfidentialityCodeP(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsConfidentialityCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsConfidentialityCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsConfidentialityCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsEffectiveTime constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsEffectiveTime(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsId constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsId(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsLanguageCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsLanguageCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsLanguageCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsMoodCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsMoodCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsRealmCode constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsRealmCode(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsRealmCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsSetId constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsSetId(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsSetId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsVersionNumber constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsVersionNumber(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsVersionNumber(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsHumanClinicalSubjectDataDocumentBody constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsHumanClinicalSubjectDataDocumentBody(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsHumanClinicalSubjectDataDocumentBody(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsAuthorParticipation constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsAuthorParticipation(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsAuthorParticipation(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsStudyRelationship constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsStudyRelationship(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsStudyRelationship(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataHumanClinicalTrialsSubjectParticipation constraint of '<em>Subject Data Human Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataHumanClinicalTrials_validateSubjectDataHumanClinicalTrialsSubjectParticipation(SubjectDataHumanClinicalTrials subjectDataHumanClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataHumanClinicalTrials.validateSubjectDataHumanClinicalTrialsSubjectParticipation(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(humanClinicalSubjectDataDocumentBody, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateSection_validateClassCode(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateSection_validateMoodCode(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyTemplateId(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyClassCode(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyCode(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyCodeP(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyMoodCode(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyHumanClinicalSubjectDemographics(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyHumanClinicalVisit(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyHumanClinicalStudyArm(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodySubjectElement(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodySubstanceUse(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyDisposition(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyMedicalHistory(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyProtocolDeviation(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyClinicalEvent(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyECGTestResult(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodySubjectCharacteristic(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyPharmacokineticParameterFinding(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyexposureAssociationTypeCode(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyexposureAssociationExposureSubstanceAdministration(humanClinicalSubjectDataDocumentBody, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyTemplateId constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyTemplateId(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyClassCode constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyClassCode(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyClassCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyCode constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyCode(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyCodeP constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyCodeP(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyCodeP(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyMoodCode constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyMoodCode(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyHumanClinicalSubjectDemographics constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyHumanClinicalSubjectDemographics(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyHumanClinicalSubjectDemographics(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyHumanClinicalVisit constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyHumanClinicalVisit(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyHumanClinicalVisit(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyHumanClinicalStudyArm constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyHumanClinicalStudyArm(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyHumanClinicalStudyArm(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodySubjectElement constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodySubjectElement(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodySubjectElement(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodySubstanceUse constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodySubstanceUse(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodySubstanceUse(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyDisposition constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyDisposition(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyDisposition(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyMedicalHistory constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyMedicalHistory(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyMedicalHistory(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyProtocolDeviation constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyProtocolDeviation(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyProtocolDeviation(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyClinicalEvent constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyClinicalEvent(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyClinicalEvent(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyECGTestResult constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyECGTestResult(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyECGTestResult(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodySubjectCharacteristic constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodySubjectCharacteristic(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodySubjectCharacteristic(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyPharmacokineticParameterFinding constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyPharmacokineticParameterFinding(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyPharmacokineticParameterFinding(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyexposureAssociationTypeCode constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyexposureAssociationTypeCode(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyexposureAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDataDocumentBodyexposureAssociationExposureSubstanceAdministration constraint of '<em>Human Clinical Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDataDocumentBody_validateHumanClinicalSubjectDataDocumentBodyexposureAssociationExposureSubstanceAdministration(HumanClinicalSubjectDataDocumentBody humanClinicalSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDataDocumentBody.validateHumanClinicalSubjectDataDocumentBodyexposureAssociationExposureSubstanceAdministration(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(humanClinicalSubjectDemographics, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsTemplateId(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsClassCode(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsCode(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsCodeP(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsMoodCode(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsDataCollection(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsStudyArm(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(humanClinicalSubjectDemographics, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationTypeCode(humanClinicalSubjectDemographics, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsTemplateId constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsTemplateId(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsClassCode constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsClassCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsClassCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsCode constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsCodeP constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsCodeP(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsCodeP(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsMoodCode constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsMoodCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsDataCollection constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsDataCollection(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsStudyArm constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsStudyArm(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsStudyArm(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeClassCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCodeP(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationSubjectAgeValue(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalSubjectDemographicsAgeAssociationTypeCode constraint of '<em>Human Clinical Subject Demographics</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalSubjectDemographics_validateHumanClinicalSubjectDemographicsAgeAssociationTypeCode(HumanClinicalSubjectDemographics humanClinicalSubjectDemographics, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalSubjectDemographics.validateHumanClinicalSubjectDemographicsAgeAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDataCollection(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(dataCollection, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionTemplateId(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionClassCode(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionCodeP(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionCode(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionEffectiveTime(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionMoodCode(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionNegationInd(dataCollection, diagnostics, context);
    if (result || diagnostics != null) result &= validateDataCollection_validateDataCollectionEventStudyDay(dataCollection, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateDataCollectionTemplateId constraint of '<em>Data Collection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDataCollection_validateDataCollectionTemplateId(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return dataCollection.validateDataCollectionTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateDataCollectionClassCode constraint of '<em>Data Collection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDataCollection_validateDataCollectionClassCode(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return dataCollection.validateDataCollectionClassCode(diagnostics, context);
  }

  /**
   * Validates the validateDataCollectionCodeP constraint of '<em>Data Collection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDataCollection_validateDataCollectionCodeP(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return dataCollection.validateDataCollectionCodeP(diagnostics, context);
  }

  /**
   * Validates the validateDataCollectionCode constraint of '<em>Data Collection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDataCollection_validateDataCollectionCode(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return dataCollection.validateDataCollectionCode(diagnostics, context);
  }

  /**
   * Validates the validateDataCollectionEffectiveTime constraint of '<em>Data Collection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDataCollection_validateDataCollectionEffectiveTime(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return dataCollection.validateDataCollectionEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateDataCollectionMoodCode constraint of '<em>Data Collection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDataCollection_validateDataCollectionMoodCode(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return dataCollection.validateDataCollectionMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateDataCollectionNegationInd constraint of '<em>Data Collection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDataCollection_validateDataCollectionNegationInd(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return dataCollection.validateDataCollectionNegationInd(diagnostics, context);
  }

  /**
   * Validates the validateDataCollectionEventStudyDay constraint of '<em>Data Collection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDataCollection_validateDataCollectionEventStudyDay(DataCollection dataCollection, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return dataCollection.validateDataCollectionEventStudyDay(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventStudyDay(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(eventStudyDay, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayTemplateId(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayClassCode(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayCodeP(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayCode(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayMoodCode(eventStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventStudyDay_validateEventStudyDayValue(eventStudyDay, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateEventStudyDayTemplateId constraint of '<em>Event Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventStudyDay_validateEventStudyDayTemplateId(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventStudyDay.validateEventStudyDayTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateEventStudyDayClassCode constraint of '<em>Event Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventStudyDay_validateEventStudyDayClassCode(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventStudyDay.validateEventStudyDayClassCode(diagnostics, context);
  }

  /**
   * Validates the validateEventStudyDayCodeP constraint of '<em>Event Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventStudyDay_validateEventStudyDayCodeP(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventStudyDay.validateEventStudyDayCodeP(diagnostics, context);
  }

  /**
   * Validates the validateEventStudyDayCode constraint of '<em>Event Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventStudyDay_validateEventStudyDayCode(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventStudyDay.validateEventStudyDayCode(diagnostics, context);
  }

  /**
   * Validates the validateEventStudyDayMoodCode constraint of '<em>Event Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventStudyDay_validateEventStudyDayMoodCode(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventStudyDay.validateEventStudyDayMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateEventStudyDayValue constraint of '<em>Event Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventStudyDay_validateEventStudyDayValue(EventStudyDay eventStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventStudyDay.validateEventStudyDayValue(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyArm(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(studyArm, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmTemplateId(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmClassCode(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmCodeP(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmCode(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmText(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmMoodCode(studyArm, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyArm_validateStudyArmEffectiveTime(studyArm, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateStudyArmTemplateId constraint of '<em>Study Arm</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyArm_validateStudyArmTemplateId(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyArm.validateStudyArmTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateStudyArmClassCode constraint of '<em>Study Arm</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyArm_validateStudyArmClassCode(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyArm.validateStudyArmClassCode(diagnostics, context);
  }

  /**
   * Validates the validateStudyArmCodeP constraint of '<em>Study Arm</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyArm_validateStudyArmCodeP(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyArm.validateStudyArmCodeP(diagnostics, context);
  }

  /**
   * Validates the validateStudyArmCode constraint of '<em>Study Arm</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyArm_validateStudyArmCode(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyArm.validateStudyArmCode(diagnostics, context);
  }

  /**
   * Validates the validateStudyArmText constraint of '<em>Study Arm</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyArm_validateStudyArmText(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyArm.validateStudyArmText(diagnostics, context);
  }

  /**
   * Validates the validateStudyArmMoodCode constraint of '<em>Study Arm</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyArm_validateStudyArmMoodCode(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyArm.validateStudyArmMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateStudyArmEffectiveTime constraint of '<em>Study Arm</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyArm_validateStudyArmEffectiveTime(StudyArm studyArm, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyArm.validateStudyArmEffectiveTime(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(visit, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitTemplateId(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitClassCode(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitCode(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitEffectiveTime(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitMoodCode(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitText(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitId(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitHumanClinicalAdverseEvent(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitHumanClinicalVitalSign(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitPlannedStudyDay(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitConcommitantMedicationAssociation(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitECGTestResult(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitInclusionorExclusionCriteriaNotMet(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitLaboratoryTestResult(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitPhysicalExamination(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitSubstanceUseAssociation(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitMicrobiologySpecimen(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitMicrobiologySusceptibility(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitPharmacokineticConcentrationFinding(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitFindingAbout(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitDrugAccountability(visit, diagnostics, context);
    if (result || diagnostics != null) result &= validateVisit_validateVisitStudyDayPeriod(visit, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateVisitTemplateId constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitTemplateId(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateVisitClassCode constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitClassCode(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitClassCode(diagnostics, context);
  }

  /**
   * Validates the validateVisitCode constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitCode(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitCode(diagnostics, context);
  }

  /**
   * Validates the validateVisitEffectiveTime constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitEffectiveTime(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateVisitMoodCode constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitMoodCode(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateVisitText constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitText(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitText(diagnostics, context);
  }

  /**
   * Validates the validateVisitId constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitId(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitId(diagnostics, context);
  }

  /**
   * Validates the validateVisitHumanClinicalAdverseEvent constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitHumanClinicalAdverseEvent(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitHumanClinicalAdverseEvent(diagnostics, context);
  }

  /**
   * Validates the validateVisitHumanClinicalVitalSign constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitHumanClinicalVitalSign(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitHumanClinicalVitalSign(diagnostics, context);
  }

  /**
   * Validates the validateVisitPlannedStudyDay constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitPlannedStudyDay(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitPlannedStudyDay(diagnostics, context);
  }

  /**
   * Validates the validateVisitConcommitantMedicationAssociation constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitConcommitantMedicationAssociation(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitConcommitantMedicationAssociation(diagnostics, context);
  }

  /**
   * Validates the validateVisitECGTestResult constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitECGTestResult(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitECGTestResult(diagnostics, context);
  }

  /**
   * Validates the validateVisitInclusionorExclusionCriteriaNotMet constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitInclusionorExclusionCriteriaNotMet(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitInclusionorExclusionCriteriaNotMet(diagnostics, context);
  }

  /**
   * Validates the validateVisitLaboratoryTestResult constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitLaboratoryTestResult(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitLaboratoryTestResult(diagnostics, context);
  }

  /**
   * Validates the validateVisitPhysicalExamination constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitPhysicalExamination(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitPhysicalExamination(diagnostics, context);
  }

  /**
   * Validates the validateVisitSubstanceUseAssociation constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitSubstanceUseAssociation(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitSubstanceUseAssociation(diagnostics, context);
  }

  /**
   * Validates the validateVisitMicrobiologySpecimen constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitMicrobiologySpecimen(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitMicrobiologySpecimen(diagnostics, context);
  }

  /**
   * Validates the validateVisitMicrobiologySusceptibility constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitMicrobiologySusceptibility(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitMicrobiologySusceptibility(diagnostics, context);
  }

  /**
   * Validates the validateVisitPharmacokineticConcentrationFinding constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitPharmacokineticConcentrationFinding(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitPharmacokineticConcentrationFinding(diagnostics, context);
  }

  /**
   * Validates the validateVisitFindingAbout constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitFindingAbout(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitFindingAbout(diagnostics, context);
  }

  /**
   * Validates the validateVisitDrugAccountability constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitDrugAccountability(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitDrugAccountability(diagnostics, context);
  }

  /**
   * Validates the validateVisitStudyDayPeriod constraint of '<em>Visit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVisit_validateVisitStudyDayPeriod(Visit visit, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return visit.validateVisitStudyDayPeriod(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(adverseEvent, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventTemplateId(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventEffectiveTime(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventId(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventTargetSiteCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventGroupIdentifier(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventBodySystemorOrganClass(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventEventSeverity(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventSeriousEventAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventStudyTreatmentActionTakenAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventOtherTreatmentActionTakenAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventAdverseEventSubCategoryAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventStudyTreatmentCausalityAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventNonStudyTreatmentCausalityAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventPatternAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventOutcomeAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventConcomitantTreatmentAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventToxicityAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventAdverseEventCategoryAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventPreSpecifiedEvent(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventStudyDayPeriod(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeValueP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventType(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociation(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEvent(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationStudyTreatmentActionTaken(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationOtherTreatmentActionTaken(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationAdverseEventSubCategory(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationStudyTreatmentCausality(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodePAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeP1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValueAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValue1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationNonStudyTreatmentCausality(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValueAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValue1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventpatternAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventpatternAssociationAdverseEventPattern(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventoutcomeAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventoutcomeAssociationAdverseEventOutcome(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationConcomitantTreatment(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValueAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValue1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeValueP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationToxicityGrade(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeClassCodeAdverseEventaeToxicityAssociationaeToxicityGradeClassCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeCodePAdverseEventaeToxicityAssociationaeToxicityGradeCodeP1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeCodeAdverseEventaeToxicityAssociationaeToxicityGradeCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeMoodCodeAdverseEventaeToxicityAssociationaeToxicityGradeMoodCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeValueAdverseEventaeToxicityAssociationaeToxicityGradeValue1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeValuePAdverseEventaeToxicityAssociationaeToxicityGradeValueP1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeP(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryValue(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationTypeCode(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationAdverseEventCategory(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodePAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeP1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCode1(adverseEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryValueAdverseEventadverseEventCategoryAssociationadverseEventCategoryValue1(adverseEvent, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateAdverseEventTemplateId constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventTemplateId(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventEffectiveTime constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventEffectiveTime(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventId constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventId(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventId(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventTargetSiteCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventTargetSiteCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventTargetSiteCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventGroupIdentifier constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventGroupIdentifier(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventBodySystemorOrganClass constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventBodySystemorOrganClass(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventBodySystemorOrganClass(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventEventSeverity constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventEventSeverity(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventEventSeverity(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventSeriousEventAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventSeriousEventAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventSeriousEventAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventStudyTreatmentActionTakenAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventStudyTreatmentActionTakenAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventStudyTreatmentActionTakenAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventOtherTreatmentActionTakenAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventOtherTreatmentActionTakenAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventOtherTreatmentActionTakenAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventAdverseEventSubCategoryAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventAdverseEventSubCategoryAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventAdverseEventSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventStudyTreatmentCausalityAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventStudyTreatmentCausalityAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventStudyTreatmentCausalityAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventNonStudyTreatmentCausalityAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventNonStudyTreatmentCausalityAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventNonStudyTreatmentCausalityAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventPatternAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventPatternAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventPatternAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventOutcomeAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventOutcomeAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventOutcomeAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventConcomitantTreatmentAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventConcomitantTreatmentAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventConcomitantTreatmentAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventToxicityAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventToxicityAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventToxicityAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventAdverseEventCategoryAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventAdverseEventCategoryAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventAdverseEventCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventPreSpecifiedEvent constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventPreSpecifiedEvent(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventPreSpecifiedEvent(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventStudyDayPeriod constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventStudyDayPeriod(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventStudyDayPeriod(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeValueP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeValueP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventTypeValueP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventType constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventType(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociationSeriousEventType(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociation constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociation(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEventSeriousEventTypeAssociation(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventseriousEventAssociationSeriousEvent constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventseriousEventAssociationSeriousEvent(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventseriousEventAssociationSeriousEvent(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentActionTakenAssociationstudyTreatmentActionTakenValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentActionTakenAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentActionTakenAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentActionTakenAssociationStudyTreatmentActionTaken constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentActionTakenAssociationStudyTreatmentActionTaken(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentActionTakenAssociationStudyTreatmentActionTaken(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventotherTreatmentActionTakenAssociationotherTreatmentActionTakenValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventotherTreatmentActionTakenAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventotherTreatmentActionTakenAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventotherTreatmentActionTakenAssociationOtherTreatmentActionTaken constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventotherTreatmentActionTakenAssociationOtherTreatmentActionTaken(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventotherTreatmentActionTakenAssociationOtherTreatmentActionTaken(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventSubCategoryAssociationadverseEventSubCategoryValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventSubCategoryAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventSubCategoryAssociationAdverseEventSubCategory constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventSubCategoryAssociationAdverseEventSubCategory(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventSubCategoryAssociationAdverseEventSubCategory(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationStudyTreatmentCausality constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationStudyTreatmentCausality(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationStudyTreatmentCausality(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodePAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeP1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodePAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeP1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodePAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeP1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCodeAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValueAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValue1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValueAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValue1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValueAdverseEventstudyTreatmentCausalityAssociationstudyTreatmentCausalityValue1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationNonStudyTreatmentCausality constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationNonStudyTreatmentCausality(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationNonStudyTreatmentCausality(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCodeAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValueAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValue1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValueAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValue1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValueAdverseEventnonStudyTreatmentCausalityAssociationnonStudyTreatmentCausalityValue1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventpatternAssociationadverseEventPatternClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventpatternAssociationadverseEventPatternClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventpatternAssociationadverseEventPatternCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventpatternAssociationadverseEventPatternCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventpatternAssociationadverseEventPatternCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventpatternAssociationadverseEventPatternCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventpatternAssociationadverseEventPatternMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventpatternAssociationadverseEventPatternMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventpatternAssociationadverseEventPatternValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventpatternAssociationadverseEventPatternValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventpatternAssociationadverseEventPatternValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventpatternAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventpatternAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventpatternAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventpatternAssociationAdverseEventPattern constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventpatternAssociationAdverseEventPattern(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventpatternAssociationAdverseEventPattern(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventoutcomeAssociationadverseEventOutcomeClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventoutcomeAssociationadverseEventOutcomeClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventoutcomeAssociationadverseEventOutcomeCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventoutcomeAssociationadverseEventOutcomeCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventoutcomeAssociationadverseEventOutcomeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventoutcomeAssociationadverseEventOutcomeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventoutcomeAssociationadverseEventOutcomeMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventoutcomeAssociationadverseEventOutcomeMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventoutcomeAssociationadverseEventOutcomeValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventoutcomeAssociationadverseEventOutcomeValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventoutcomeAssociationadverseEventOutcomeValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventoutcomeAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventoutcomeAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventoutcomeAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventoutcomeAssociationAdverseEventOutcome constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventoutcomeAssociationAdverseEventOutcome(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventoutcomeAssociationAdverseEventOutcome(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationConcomitantTreatment constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationConcomitantTreatment(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationConcomitantTreatment(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCodeAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValueAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValue1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValueAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValue1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValueAdverseEventconcomitantTreatmentAssociationconcomitantTreatmentValue1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeValueP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeValueP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeValueP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationToxicityGrade constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationToxicityGrade(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationToxicityGrade(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeClassCodeAdverseEventaeToxicityAssociationaeToxicityGradeClassCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeClassCodeAdverseEventaeToxicityAssociationaeToxicityGradeClassCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeClassCodeAdverseEventaeToxicityAssociationaeToxicityGradeClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeCodePAdverseEventaeToxicityAssociationaeToxicityGradeCodeP1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeCodePAdverseEventaeToxicityAssociationaeToxicityGradeCodeP1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeCodePAdverseEventaeToxicityAssociationaeToxicityGradeCodeP1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeCodeAdverseEventaeToxicityAssociationaeToxicityGradeCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeCodeAdverseEventaeToxicityAssociationaeToxicityGradeCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeCodeAdverseEventaeToxicityAssociationaeToxicityGradeCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeMoodCodeAdverseEventaeToxicityAssociationaeToxicityGradeMoodCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeMoodCodeAdverseEventaeToxicityAssociationaeToxicityGradeMoodCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeMoodCodeAdverseEventaeToxicityAssociationaeToxicityGradeMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeValueAdverseEventaeToxicityAssociationaeToxicityGradeValue1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeValueAdverseEventaeToxicityAssociationaeToxicityGradeValue1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeValueAdverseEventaeToxicityAssociationaeToxicityGradeValue1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventaeToxicityAssociationaeToxicityGradeValuePAdverseEventaeToxicityAssociationaeToxicityGradeValueP1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventaeToxicityAssociationaeToxicityGradeValuePAdverseEventaeToxicityAssociationaeToxicityGradeValueP1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventaeToxicityAssociationaeToxicityGradeValuePAdverseEventaeToxicityAssociationaeToxicityGradeValueP1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeP constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeP(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeP(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryValue constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryValue(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryValue(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationTypeCode constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationTypeCode(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationAdverseEventCategory constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationAdverseEventCategory(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationAdverseEventCategory(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodePAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeP1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodePAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeP1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodePAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeP1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCode1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCode1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCodeAdverseEventadverseEventCategoryAssociationadverseEventCategoryMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryValueAdverseEventadverseEventCategoryAssociationadverseEventCategoryValue1 constraint of '<em>Adverse Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateAdverseEvent_validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryValueAdverseEventadverseEventCategoryAssociationadverseEventCategoryValue1(AdverseEvent adverseEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return adverseEvent.validateAdverseEventadverseEventCategoryAssociationadverseEventCategoryValueAdverseEventadverseEventCategoryAssociationadverseEventCategoryValue1(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateGroupIdentifier(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(groupIdentifier, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierTemplateId(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierClassCode(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierCodeP(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierCode(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierId(groupIdentifier, diagnostics, context);
    if (result || diagnostics != null) result &= validateGroupIdentifier_validateGroupIdentifierMoodCode(groupIdentifier, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateGroupIdentifierTemplateId constraint of '<em>Group Identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateGroupIdentifier_validateGroupIdentifierTemplateId(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return groupIdentifier.validateGroupIdentifierTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateGroupIdentifierClassCode constraint of '<em>Group Identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateGroupIdentifier_validateGroupIdentifierClassCode(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return groupIdentifier.validateGroupIdentifierClassCode(diagnostics, context);
  }

  /**
   * Validates the validateGroupIdentifierCodeP constraint of '<em>Group Identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateGroupIdentifier_validateGroupIdentifierCodeP(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return groupIdentifier.validateGroupIdentifierCodeP(diagnostics, context);
  }

  /**
   * Validates the validateGroupIdentifierCode constraint of '<em>Group Identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateGroupIdentifier_validateGroupIdentifierCode(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return groupIdentifier.validateGroupIdentifierCode(diagnostics, context);
  }

  /**
   * Validates the validateGroupIdentifierId constraint of '<em>Group Identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateGroupIdentifier_validateGroupIdentifierId(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return groupIdentifier.validateGroupIdentifierId(diagnostics, context);
  }

  /**
   * Validates the validateGroupIdentifierMoodCode constraint of '<em>Group Identifier</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateGroupIdentifier_validateGroupIdentifierMoodCode(GroupIdentifier groupIdentifier, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return groupIdentifier.validateGroupIdentifierMoodCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodySystemorOrganClass(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(bodySystemorOrganClass, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassTemplateId(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassClassCode(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassCode(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassMoodCode(bodySystemorOrganClass, diagnostics, context);
    if (result || diagnostics != null) result &= validateBodySystemorOrganClass_validateBodySystemorOrganClassValue(bodySystemorOrganClass, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateBodySystemorOrganClassTemplateId constraint of '<em>Body Systemor Organ Class</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassTemplateId(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return bodySystemorOrganClass.validateBodySystemorOrganClassTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateBodySystemorOrganClassClassCode constraint of '<em>Body Systemor Organ Class</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassClassCode(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return bodySystemorOrganClass.validateBodySystemorOrganClassClassCode(diagnostics, context);
  }

  /**
   * Validates the validateBodySystemorOrganClassCode constraint of '<em>Body Systemor Organ Class</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassCode(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return bodySystemorOrganClass.validateBodySystemorOrganClassCode(diagnostics, context);
  }

  /**
   * Validates the validateBodySystemorOrganClassMoodCode constraint of '<em>Body Systemor Organ Class</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassMoodCode(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return bodySystemorOrganClass.validateBodySystemorOrganClassMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateBodySystemorOrganClassValue constraint of '<em>Body Systemor Organ Class</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodySystemorOrganClass_validateBodySystemorOrganClassValue(BodySystemorOrganClass bodySystemorOrganClass, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return bodySystemorOrganClass.validateBodySystemorOrganClassValue(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventSeverity(EventSeverity eventSeverity, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(eventSeverity, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventSeverity_validateEventSeverityTemplateId(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventSeverity_validateEventSeverityClassCode(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventSeverity_validateEventSeverityCodeP(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventSeverity_validateEventSeverityCode(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventSeverity_validateEventSeverityMoodCode(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventSeverity_validateEventSeverityValue(eventSeverity, diagnostics, context);
    if (result || diagnostics != null) result &= validateEventSeverity_validateEventSeverityValueP(eventSeverity, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateEventSeverityTemplateId constraint of '<em>Event Severity</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventSeverity_validateEventSeverityTemplateId(EventSeverity eventSeverity, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventSeverity.validateEventSeverityTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateEventSeverityClassCode constraint of '<em>Event Severity</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventSeverity_validateEventSeverityClassCode(EventSeverity eventSeverity, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventSeverity.validateEventSeverityClassCode(diagnostics, context);
  }

  /**
   * Validates the validateEventSeverityCodeP constraint of '<em>Event Severity</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventSeverity_validateEventSeverityCodeP(EventSeverity eventSeverity, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventSeverity.validateEventSeverityCodeP(diagnostics, context);
  }

  /**
   * Validates the validateEventSeverityCode constraint of '<em>Event Severity</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventSeverity_validateEventSeverityCode(EventSeverity eventSeverity, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventSeverity.validateEventSeverityCode(diagnostics, context);
  }

  /**
   * Validates the validateEventSeverityMoodCode constraint of '<em>Event Severity</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventSeverity_validateEventSeverityMoodCode(EventSeverity eventSeverity, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventSeverity.validateEventSeverityMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateEventSeverityValue constraint of '<em>Event Severity</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventSeverity_validateEventSeverityValue(EventSeverity eventSeverity, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventSeverity.validateEventSeverityValue(diagnostics, context);
  }

  /**
   * Validates the validateEventSeverityValueP constraint of '<em>Event Severity</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateEventSeverity_validateEventSeverityValueP(EventSeverity eventSeverity, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return eventSeverity.validateEventSeverityValueP(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePreSpecifiedEvent(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(preSpecifiedEvent, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventTemplateId(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventClassCode(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventCodeP(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventCode(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventMoodCode(preSpecifiedEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validatePreSpecifiedEvent_validatePreSpecifiedEventValue(preSpecifiedEvent, diagnostics, context);
    return result;
  }

  /**
   * Validates the validatePreSpecifiedEventTemplateId constraint of '<em>Pre Specified Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventTemplateId(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return preSpecifiedEvent.validatePreSpecifiedEventTemplateId(diagnostics, context);
  }

  /**
   * Validates the validatePreSpecifiedEventClassCode constraint of '<em>Pre Specified Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventClassCode(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return preSpecifiedEvent.validatePreSpecifiedEventClassCode(diagnostics, context);
  }

  /**
   * Validates the validatePreSpecifiedEventCodeP constraint of '<em>Pre Specified Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventCodeP(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return preSpecifiedEvent.validatePreSpecifiedEventCodeP(diagnostics, context);
  }

  /**
   * Validates the validatePreSpecifiedEventCode constraint of '<em>Pre Specified Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventCode(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return preSpecifiedEvent.validatePreSpecifiedEventCode(diagnostics, context);
  }

  /**
   * Validates the validatePreSpecifiedEventMoodCode constraint of '<em>Pre Specified Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventMoodCode(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return preSpecifiedEvent.validatePreSpecifiedEventMoodCode(diagnostics, context);
  }

  /**
   * Validates the validatePreSpecifiedEventValue constraint of '<em>Pre Specified Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePreSpecifiedEvent_validatePreSpecifiedEventValue(PreSpecifiedEvent preSpecifiedEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return preSpecifiedEvent.validatePreSpecifiedEventValue(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyDayPeriod(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(studyDayPeriod, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodTemplateId(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodClassCode(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodCodeP(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodCode(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodMoodCode(studyDayPeriod, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyDayPeriod_validateStudyDayPeriodValue(studyDayPeriod, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateStudyDayPeriodTemplateId constraint of '<em>Study Day Period</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyDayPeriod_validateStudyDayPeriodTemplateId(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyDayPeriod.validateStudyDayPeriodTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateStudyDayPeriodClassCode constraint of '<em>Study Day Period</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyDayPeriod_validateStudyDayPeriodClassCode(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyDayPeriod.validateStudyDayPeriodClassCode(diagnostics, context);
  }

  /**
   * Validates the validateStudyDayPeriodCodeP constraint of '<em>Study Day Period</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyDayPeriod_validateStudyDayPeriodCodeP(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyDayPeriod.validateStudyDayPeriodCodeP(diagnostics, context);
  }

  /**
   * Validates the validateStudyDayPeriodCode constraint of '<em>Study Day Period</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyDayPeriod_validateStudyDayPeriodCode(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyDayPeriod.validateStudyDayPeriodCode(diagnostics, context);
  }

  /**
   * Validates the validateStudyDayPeriodMoodCode constraint of '<em>Study Day Period</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyDayPeriod_validateStudyDayPeriodMoodCode(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyDayPeriod.validateStudyDayPeriodMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateStudyDayPeriodValue constraint of '<em>Study Day Period</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyDayPeriod_validateStudyDayPeriodValue(StudyDayPeriod studyDayPeriod, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyDayPeriod.validateStudyDayPeriodValue(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(vitalSign, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignTemplateId(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignClassCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignMoodCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignValue(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignStatusCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignInterpretationCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignInterpretationCodeP(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignTargetSiteCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignEffectiveTime(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignAssociatedPosition(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignEventStudyDay(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignPlannedStudyDay(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignTimingReference(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignNonPerformanceReason(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedPositionpositionClassCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedPositionpositionCodeP(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedPositionpositionCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedPositionpositionMoodCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedPositionpositionValue(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedPositionTypeCode(vitalSign, diagnostics, context);
    if (result || diagnostics != null) result &= validateVitalSign_validateVitalSignassociatedPositionPosition(vitalSign, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateVitalSignTemplateId constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignTemplateId(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignClassCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignClassCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignClassCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignMoodCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignMoodCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignValue constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignValue(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignValue(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignStatusCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignStatusCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignInterpretationCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignInterpretationCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignInterpretationCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignInterpretationCodeP constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignInterpretationCodeP(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignInterpretationCodeP(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignTargetSiteCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignTargetSiteCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignTargetSiteCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignEffectiveTime constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignEffectiveTime(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignAssociatedPosition constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignAssociatedPosition(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignAssociatedPosition(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignEventStudyDay constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignEventStudyDay(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignEventStudyDay(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignPlannedStudyDay constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignPlannedStudyDay(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignPlannedStudyDay(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignTimingReference constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignTimingReference(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignNonPerformanceReason constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignNonPerformanceReason(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignassociatedPositionpositionClassCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignassociatedPositionpositionClassCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignassociatedPositionpositionClassCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignassociatedPositionpositionCodeP constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignassociatedPositionpositionCodeP(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignassociatedPositionpositionCodeP(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignassociatedPositionpositionCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignassociatedPositionpositionCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignassociatedPositionpositionCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignassociatedPositionpositionMoodCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignassociatedPositionpositionMoodCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignassociatedPositionpositionMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignassociatedPositionpositionValue constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignassociatedPositionpositionValue(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignassociatedPositionpositionValue(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignassociatedPositionTypeCode constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignassociatedPositionTypeCode(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignassociatedPositionTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateVitalSignassociatedPositionPosition constraint of '<em>Vital Sign</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateVitalSign_validateVitalSignassociatedPositionPosition(VitalSign vitalSign, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return vitalSign.validateVitalSignassociatedPositionPosition(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePlannedStudyDay(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(plannedStudyDay, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayTemplateId(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayClassCode(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayCodeP(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayCode(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayMoodCode(plannedStudyDay, diagnostics, context);
    if (result || diagnostics != null) result &= validatePlannedStudyDay_validatePlannedStudyDayValue(plannedStudyDay, diagnostics, context);
    return result;
  }

  /**
   * Validates the validatePlannedStudyDayTemplateId constraint of '<em>Planned Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePlannedStudyDay_validatePlannedStudyDayTemplateId(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return plannedStudyDay.validatePlannedStudyDayTemplateId(diagnostics, context);
  }

  /**
   * Validates the validatePlannedStudyDayClassCode constraint of '<em>Planned Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePlannedStudyDay_validatePlannedStudyDayClassCode(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return plannedStudyDay.validatePlannedStudyDayClassCode(diagnostics, context);
  }

  /**
   * Validates the validatePlannedStudyDayCodeP constraint of '<em>Planned Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePlannedStudyDay_validatePlannedStudyDayCodeP(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return plannedStudyDay.validatePlannedStudyDayCodeP(diagnostics, context);
  }

  /**
   * Validates the validatePlannedStudyDayCode constraint of '<em>Planned Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePlannedStudyDay_validatePlannedStudyDayCode(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return plannedStudyDay.validatePlannedStudyDayCode(diagnostics, context);
  }

  /**
   * Validates the validatePlannedStudyDayMoodCode constraint of '<em>Planned Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePlannedStudyDay_validatePlannedStudyDayMoodCode(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return plannedStudyDay.validatePlannedStudyDayMoodCode(diagnostics, context);
  }

  /**
   * Validates the validatePlannedStudyDayValue constraint of '<em>Planned Study Day</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePlannedStudyDay_validatePlannedStudyDayValue(PlannedStudyDay plannedStudyDay, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return plannedStudyDay.validatePlannedStudyDayValue(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(timingReference, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceTemplateId(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceClassCode(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceCodeP(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceCode(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceEffectiveTime(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceId(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceMoodCode(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociation(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointClassCode(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointCode(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointEffectiveTime(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointMoodCode(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationTypeCode(timingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePoint(timingReference, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateTimingReferenceTemplateId constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceTemplateId(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceClassCode constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceClassCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceClassCode(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceCodeP constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceCodeP(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceCodeP(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceCode constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceCode(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceEffectiveTime constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceEffectiveTime(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceId constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceId(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceId(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceMoodCode constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceMoodCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceAnchorAssociation constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceAnchorAssociation(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceAnchorAssociation(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceAnchorAssociationAnchorTimePointClassCode constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointClassCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePointClassCode(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceAnchorAssociationAnchorTimePointCode constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePointCode(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceAnchorAssociationAnchorTimePointEffectiveTime constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointEffectiveTime(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePointEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceAnchorAssociationAnchorTimePointMoodCode constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePointMoodCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePointMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceAnchorAssociationTypeCode constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceAnchorAssociationTypeCode(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceAnchorAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateTimingReferenceAnchorAssociationAnchorTimePoint constraint of '<em>Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTimingReference_validateTimingReferenceAnchorAssociationAnchorTimePoint(TimingReference timingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return timingReference.validateTimingReferenceAnchorAssociationAnchorTimePoint(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonPerformanceReason(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(nonPerformanceReason, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonTemplateId(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonClassCode(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonCodeP(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonCode(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonMoodCode(nonPerformanceReason, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonPerformanceReason_validateNonPerformanceReasonValue(nonPerformanceReason, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateNonPerformanceReasonTemplateId constraint of '<em>Non Performance Reason</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonPerformanceReason_validateNonPerformanceReasonTemplateId(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonPerformanceReason.validateNonPerformanceReasonTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateNonPerformanceReasonClassCode constraint of '<em>Non Performance Reason</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonPerformanceReason_validateNonPerformanceReasonClassCode(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonPerformanceReason.validateNonPerformanceReasonClassCode(diagnostics, context);
  }

  /**
   * Validates the validateNonPerformanceReasonCodeP constraint of '<em>Non Performance Reason</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonPerformanceReason_validateNonPerformanceReasonCodeP(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonPerformanceReason.validateNonPerformanceReasonCodeP(diagnostics, context);
  }

  /**
   * Validates the validateNonPerformanceReasonCode constraint of '<em>Non Performance Reason</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonPerformanceReason_validateNonPerformanceReasonCode(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonPerformanceReason.validateNonPerformanceReasonCode(diagnostics, context);
  }

  /**
   * Validates the validateNonPerformanceReasonMoodCode constraint of '<em>Non Performance Reason</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonPerformanceReason_validateNonPerformanceReasonMoodCode(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonPerformanceReason.validateNonPerformanceReasonMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateNonPerformanceReasonValue constraint of '<em>Non Performance Reason</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonPerformanceReason_validateNonPerformanceReasonValue(NonPerformanceReason nonPerformanceReason, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonPerformanceReason.validateNonPerformanceReasonValue(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(ecgTestResult, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultTemplateId(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultClassCode(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultCode(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultEffectiveTime(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultId(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultValue(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultMoodCode(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultStatusCode(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultMethodCode(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultText(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultGroupIdentifier(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultEcgTestResultCategoryAssociation(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultEcgTestResultSubCategoryAssociation(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultAssociatedPosition(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultNonPerformanceReason(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultLeadLocationAssociation(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultBaselineIndicator(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultDerivedDataIndicator(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultEventStudyDay(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultTimingReference(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultecgTestResultCategoryAssociationTypeCode(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultecgTestResultSubCategoryAssociationTypeCode(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultassociatedPositionTypeCode(ecgTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateECGTestResult_validateECGTestResultleadLocationAssociationTypeCode(ecgTestResult, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateECGTestResultTemplateId constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultTemplateId(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultClassCode constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultClassCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultClassCode(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultCode constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultCode(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultEffectiveTime constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultEffectiveTime(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultId constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultId(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultId(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultValue constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultValue(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultValue(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultMoodCode constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultMoodCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultStatusCode constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultStatusCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultMethodCode constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultMethodCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultMethodCode(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultText constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultText(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultText(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultGroupIdentifier constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultGroupIdentifier(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultEcgTestResultCategoryAssociation constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultEcgTestResultCategoryAssociation(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultEcgTestResultCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultEcgTestResultSubCategoryAssociation constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultEcgTestResultSubCategoryAssociation(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultEcgTestResultSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultAssociatedPosition constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultAssociatedPosition(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultAssociatedPosition(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultNonPerformanceReason constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultNonPerformanceReason(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultLeadLocationAssociation constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultLeadLocationAssociation(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultLeadLocationAssociation(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultBaselineIndicator constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultBaselineIndicator(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultBaselineIndicator(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultDerivedDataIndicator constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultDerivedDataIndicator(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultDerivedDataIndicator(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultEventStudyDay constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultEventStudyDay(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultEventStudyDay(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultTimingReference constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultTimingReference(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultecgTestResultCategoryAssociationTypeCode constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultecgTestResultCategoryAssociationTypeCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultecgTestResultCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultecgTestResultSubCategoryAssociationTypeCode constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultecgTestResultSubCategoryAssociationTypeCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultecgTestResultSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultassociatedPositionTypeCode constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultassociatedPositionTypeCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultassociatedPositionTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateECGTestResultleadLocationAssociationTypeCode constraint of '<em>ECG Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateECGTestResult_validateECGTestResultleadLocationAssociationTypeCode(ECGTestResult ecgTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return ecgTestResult.validateECGTestResultleadLocationAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBaselineIndicator(BaselineIndicator baselineIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(baselineIndicator, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validateBaselineIndicator_validateBaselineIndicatorTemplateId(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validateBaselineIndicator_validateBaselineIndicatorCodeP(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validateBaselineIndicator_validateBaselineIndicatorCode(baselineIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validateBaselineIndicator_validateBaselineIndicatorValue(baselineIndicator, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateBaselineIndicatorTemplateId constraint of '<em>Baseline Indicator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBaselineIndicator_validateBaselineIndicatorTemplateId(BaselineIndicator baselineIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return baselineIndicator.validateBaselineIndicatorTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateBaselineIndicatorCodeP constraint of '<em>Baseline Indicator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBaselineIndicator_validateBaselineIndicatorCodeP(BaselineIndicator baselineIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return baselineIndicator.validateBaselineIndicatorCodeP(diagnostics, context);
  }

  /**
   * Validates the validateBaselineIndicatorCode constraint of '<em>Baseline Indicator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBaselineIndicator_validateBaselineIndicatorCode(BaselineIndicator baselineIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return baselineIndicator.validateBaselineIndicatorCode(diagnostics, context);
  }

  /**
   * Validates the validateBaselineIndicatorValue constraint of '<em>Baseline Indicator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBaselineIndicator_validateBaselineIndicatorValue(BaselineIndicator baselineIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return baselineIndicator.validateBaselineIndicatorValue(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDerivedDataIndicator(DerivedDataIndicator derivedDataIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(derivedDataIndicator, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validateDerivedDataIndicator_validateDerivedDataIndicatorTemplateId(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validateDerivedDataIndicator_validateDerivedDataIndicatorCodeP(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validateDerivedDataIndicator_validateDerivedDataIndicatorCode(derivedDataIndicator, diagnostics, context);
    if (result || diagnostics != null) result &= validateDerivedDataIndicator_validateDerivedDataIndicatorValue(derivedDataIndicator, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateDerivedDataIndicatorTemplateId constraint of '<em>Derived Data Indicator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDerivedDataIndicator_validateDerivedDataIndicatorTemplateId(DerivedDataIndicator derivedDataIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return derivedDataIndicator.validateDerivedDataIndicatorTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateDerivedDataIndicatorCodeP constraint of '<em>Derived Data Indicator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDerivedDataIndicator_validateDerivedDataIndicatorCodeP(DerivedDataIndicator derivedDataIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return derivedDataIndicator.validateDerivedDataIndicatorCodeP(diagnostics, context);
  }

  /**
   * Validates the validateDerivedDataIndicatorCode constraint of '<em>Derived Data Indicator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDerivedDataIndicator_validateDerivedDataIndicatorCode(DerivedDataIndicator derivedDataIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return derivedDataIndicator.validateDerivedDataIndicatorCode(diagnostics, context);
  }

  /**
   * Validates the validateDerivedDataIndicatorValue constraint of '<em>Derived Data Indicator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDerivedDataIndicator_validateDerivedDataIndicatorValue(DerivedDataIndicator derivedDataIndicator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return derivedDataIndicator.validateDerivedDataIndicatorValue(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(inclusionorExclusionCriteriaNotMet, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetTemplateId(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetClassCode(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCodeP(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCode(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetId(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetMoodCode(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetValue(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetInclusionExclusionCategoryAssociation(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetInclusionExclusionSubCategoryAssociation(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetDataCollection(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetinclusionExclusionCategoryAssociationTypeCode(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    if (result || diagnostics != null) result &= validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetinclusionExclusionSubCategoryAssociationTypeCode(inclusionorExclusionCriteriaNotMet, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetTemplateId constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetTemplateId(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetClassCode constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetClassCode(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetClassCode(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetCodeP constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCodeP(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetCodeP(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetCode constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetCode(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetCode(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetId constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetId(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetId(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetMoodCode constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetMoodCode(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetValue constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetValue(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetValue(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetInclusionExclusionCategoryAssociation constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetInclusionExclusionCategoryAssociation(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetInclusionExclusionCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetInclusionExclusionSubCategoryAssociation constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetInclusionExclusionSubCategoryAssociation(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetInclusionExclusionSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetDataCollection constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetDataCollection(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetinclusionExclusionCategoryAssociationTypeCode constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetinclusionExclusionCategoryAssociationTypeCode(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetinclusionExclusionCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateInclusionorExclusionCriteriaNotMetinclusionExclusionSubCategoryAssociationTypeCode constraint of '<em>Inclusionor Exclusion Criteria Not Met</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateInclusionorExclusionCriteriaNotMet_validateInclusionorExclusionCriteriaNotMetinclusionExclusionSubCategoryAssociationTypeCode(InclusionorExclusionCriteriaNotMet inclusionorExclusionCriteriaNotMet, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return inclusionorExclusionCriteriaNotMet.validateInclusionorExclusionCriteriaNotMetinclusionExclusionSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(nonHumanLaboratoryTestResult, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultTemplateId(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultClassCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultId(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultMoodCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultStatusCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultValue(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultMethodCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultGroupIdentifier(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultSpecimenInformation(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultLaboratoryTestResultCategoryAssociation(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultLaboratoryTestResultSubCategoryAssociation(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultReferenceRangeAssociation(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultNonPerformanceReason(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultBaselineIndicator(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultDerivedDataIndicator(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultFastingAssociation(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultLabToxicityAssociation(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultlaboratoryTestResultCategoryAssociationTypeCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultlaboratoryTestResultSubCategoryAssociationTypeCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeClassCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeCodeP(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeInterpretationCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeMoodCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeValue(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationTypeCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationReferenceRange(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusClassCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusCodeP(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusMoodCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusValue(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationTypeCode(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationFastingStatus(nonHumanLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultlabToxicityAssociationTypeCode(nonHumanLaboratoryTestResult, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultTemplateId constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultTemplateId(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultClassCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultClassCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultClassCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultId constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultId(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultId(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultMoodCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultMoodCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultStatusCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultStatusCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultValue constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultValue(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultValue(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultMethodCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultMethodCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultMethodCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultGroupIdentifier constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultGroupIdentifier(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultSpecimenInformation constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultSpecimenInformation(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultSpecimenInformation(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultLaboratoryTestResultCategoryAssociation constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultLaboratoryTestResultCategoryAssociation(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultLaboratoryTestResultCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultLaboratoryTestResultSubCategoryAssociation constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultLaboratoryTestResultSubCategoryAssociation(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultLaboratoryTestResultSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultReferenceRangeAssociation constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultReferenceRangeAssociation(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultReferenceRangeAssociation(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultNonPerformanceReason constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultNonPerformanceReason(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultBaselineIndicator constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultBaselineIndicator(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultBaselineIndicator(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultDerivedDataIndicator constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultDerivedDataIndicator(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultDerivedDataIndicator(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultFastingAssociation constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultFastingAssociation(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultFastingAssociation(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultLabToxicityAssociation constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultLabToxicityAssociation(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultLabToxicityAssociation(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultlaboratoryTestResultCategoryAssociationTypeCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultlaboratoryTestResultCategoryAssociationTypeCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultlaboratoryTestResultCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultlaboratoryTestResultSubCategoryAssociationTypeCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultlaboratoryTestResultSubCategoryAssociationTypeCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultlaboratoryTestResultSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeClassCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeClassCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeClassCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeCodeP constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeCodeP(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeCodeP(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeInterpretationCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeInterpretationCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeInterpretationCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeMoodCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeMoodCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeValue constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeValue(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultreferenceRangeAssociationreferenceRangeValue(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultreferenceRangeAssociationTypeCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationTypeCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultreferenceRangeAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultreferenceRangeAssociationReferenceRange constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultreferenceRangeAssociationReferenceRange(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultreferenceRangeAssociationReferenceRange(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusClassCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusClassCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusClassCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusCodeP constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusCodeP(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusCodeP(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusMoodCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusMoodCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusValue constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusValue(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultfastingAssociationfastingStatusValue(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultfastingAssociationTypeCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationTypeCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultfastingAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultfastingAssociationFastingStatus constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultfastingAssociationFastingStatus(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultfastingAssociationFastingStatus(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanLaboratoryTestResultlabToxicityAssociationTypeCode constraint of '<em>Non Human Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanLaboratoryTestResult_validateNonHumanLaboratoryTestResultlabToxicityAssociationTypeCode(NonHumanLaboratoryTestResult nonHumanLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanLaboratoryTestResult.validateNonHumanLaboratoryTestResultlabToxicityAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(specimenInformation, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationTemplateId(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationClassCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationEffectiveTime(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationMoodCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationCodeP(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationTargetSiteCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationParticipatingSpecimen(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationConditionAssociation(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationEventStudyDay(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationTimingReference(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenClassCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenId(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenTypeCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenRoleOfSpecimen(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCodeP(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionMoodCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionValue(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationTypeCode(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationSpecimenCondition(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCodePSpecimenInformationconditionAssociationspecimenConditionCodeP1(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCodeSpecimenInformationconditionAssociationspecimenConditionCode1(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionMoodCodeSpecimenInformationconditionAssociationspecimenConditionMoodCode1(specimenInformation, diagnostics, context);
    if (result || diagnostics != null) result &= validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionValueSpecimenInformationconditionAssociationspecimenConditionValue1(specimenInformation, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateSpecimenInformationTemplateId constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationTemplateId(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationClassCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationClassCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationClassCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationEffectiveTime constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationEffectiveTime(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationMoodCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationMoodCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationCodeP constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationCodeP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationCodeP(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationTargetSiteCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationTargetSiteCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationTargetSiteCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationParticipatingSpecimen constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationParticipatingSpecimen(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationParticipatingSpecimen(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationConditionAssociation constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationConditionAssociation(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationConditionAssociation(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationEventStudyDay constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationEventStudyDay(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationEventStudyDay(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationTimingReference constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationTimingReference(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenClassCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenClassCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenClassCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationparticipatingSpecimenroleOfSpecimenId constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenroleOfSpecimenId(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationparticipatingSpecimenroleOfSpecimenId(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationparticipatingSpecimenTypeCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenTypeCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationparticipatingSpecimenTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationparticipatingSpecimenRoleOfSpecimen constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationparticipatingSpecimenRoleOfSpecimen(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationparticipatingSpecimenRoleOfSpecimen(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationspecimenConditionCodeP constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCodeP(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionCodeP(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationspecimenConditionCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationspecimenConditionMoodCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionMoodCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationspecimenConditionValue constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionValue(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionValue(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationTypeCode constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationTypeCode(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationSpecimenCondition constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationSpecimenCondition(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationSpecimenCondition(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationspecimenConditionCodePSpecimenInformationconditionAssociationspecimenConditionCodeP1 constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCodePSpecimenInformationconditionAssociationspecimenConditionCodeP1(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionCodePSpecimenInformationconditionAssociationspecimenConditionCodeP1(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationspecimenConditionCodeSpecimenInformationconditionAssociationspecimenConditionCode1 constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionCodeSpecimenInformationconditionAssociationspecimenConditionCode1(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionCodeSpecimenInformationconditionAssociationspecimenConditionCode1(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationspecimenConditionMoodCodeSpecimenInformationconditionAssociationspecimenConditionMoodCode1 constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionMoodCodeSpecimenInformationconditionAssociationspecimenConditionMoodCode1(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionMoodCodeSpecimenInformationconditionAssociationspecimenConditionMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateSpecimenInformationconditionAssociationspecimenConditionValueSpecimenInformationconditionAssociationspecimenConditionValue1 constraint of '<em>Specimen Information</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSpecimenInformation_validateSpecimenInformationconditionAssociationspecimenConditionValueSpecimenInformationconditionAssociationspecimenConditionValue1(SpecimenInformation specimenInformation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return specimenInformation.validateSpecimenInformationconditionAssociationspecimenConditionValueSpecimenInformationconditionAssociationspecimenConditionValue1(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(physicalExaminationFinding, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTemplateId(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingClassCode(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingCode(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingEffectiveTime(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingId(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMoodCode(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingValue(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingStatusCode(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTargetSiteCode(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMethodCode(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingGroupIdentifier(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingPhysicalExamResultCategoryAssociation(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingPhysicalExamResultSubCategoryAssociation(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingBodySystemorOrganClass(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingNonPerformanceReason(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingphysicalExamResultCategoryAssociationTypeCode(physicalExaminationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePhysicalExaminationFinding_validatePhysicalExaminationFindingphysicalExamResultSubCategoryAssociationTypeCode(physicalExaminationFinding, diagnostics, context);
    return result;
  }

  /**
   * Validates the validatePhysicalExaminationFindingTemplateId constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTemplateId(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingTemplateId(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingClassCode constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingClassCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingClassCode(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingCode constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingCode(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingEffectiveTime constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingEffectiveTime(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingId constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingId(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingId(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingMoodCode constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMoodCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingMoodCode(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingValue constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingValue(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingValue(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingStatusCode constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingStatusCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingStatusCode(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingTargetSiteCode constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingTargetSiteCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingTargetSiteCode(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingMethodCode constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingMethodCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingMethodCode(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingGroupIdentifier constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingGroupIdentifier(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingPhysicalExamResultCategoryAssociation constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingPhysicalExamResultCategoryAssociation(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingPhysicalExamResultCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingPhysicalExamResultSubCategoryAssociation constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingPhysicalExamResultSubCategoryAssociation(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingPhysicalExamResultSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingBodySystemorOrganClass constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingBodySystemorOrganClass(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingBodySystemorOrganClass(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingNonPerformanceReason constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingNonPerformanceReason(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingphysicalExamResultCategoryAssociationTypeCode constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingphysicalExamResultCategoryAssociationTypeCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingphysicalExamResultCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validatePhysicalExaminationFindingphysicalExamResultSubCategoryAssociationTypeCode constraint of '<em>Physical Examination Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePhysicalExaminationFinding_validatePhysicalExaminationFindingphysicalExamResultSubCategoryAssociationTypeCode(PhysicalExaminationFinding physicalExaminationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return physicalExaminationFinding.validatePhysicalExaminationFindingphysicalExamResultSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(microbiologySpecimenFinding, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingTemplateId(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingClassCode(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingCode(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingId(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMethodCode(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMoodCode(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingStatusCode(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingValue(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingGroupIdentifier(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMicrobiologySpecimenResultCategoryAssociation(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMicrobiologySpecimenResultSubCategoryAssociation(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingNonPerformanceReason(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingSpecimenInformation(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingBaselineIndicator(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingDerivedDataIndicator(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingmicrobiologySpecimenFindingCategoryAssociationTypeCode(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingmicrobiologySpecimenFindingSubCategoryAssociationTypeCode(microbiologySpecimenFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingmicrobiologyResultCategoryAssociationTypeCode(microbiologySpecimenFinding, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingTemplateId constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingTemplateId(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingClassCode constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingClassCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingClassCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingCode constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingId constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingId(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingId(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingMethodCode constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMethodCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingMethodCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingMoodCode constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMoodCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingStatusCode constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingStatusCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingValue constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingValue(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingValue(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingGroupIdentifier constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingGroupIdentifier(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingMicrobiologySpecimenResultCategoryAssociation constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMicrobiologySpecimenResultCategoryAssociation(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingMicrobiologySpecimenResultCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingMicrobiologySpecimenResultSubCategoryAssociation constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingMicrobiologySpecimenResultSubCategoryAssociation(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingMicrobiologySpecimenResultSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingNonPerformanceReason constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingNonPerformanceReason(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingSpecimenInformation constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingSpecimenInformation(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingSpecimenInformation(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingBaselineIndicator constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingBaselineIndicator(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingBaselineIndicator(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingDerivedDataIndicator constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingDerivedDataIndicator(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingDerivedDataIndicator(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingmicrobiologySpecimenFindingCategoryAssociationTypeCode constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingmicrobiologySpecimenFindingCategoryAssociationTypeCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingmicrobiologySpecimenFindingCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingmicrobiologySpecimenFindingSubCategoryAssociationTypeCode constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingmicrobiologySpecimenFindingSubCategoryAssociationTypeCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingmicrobiologySpecimenFindingSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySpecimenFindingmicrobiologyResultCategoryAssociationTypeCode constraint of '<em>Microbiology Specimen Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySpecimenFinding_validateMicrobiologySpecimenFindingmicrobiologyResultCategoryAssociationTypeCode(MicrobiologySpecimenFinding microbiologySpecimenFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySpecimenFinding.validateMicrobiologySpecimenFindingmicrobiologyResultCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(microbiologySusceptibility, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityTemplateId(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityClassCode(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityCode(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityId(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMethodCode(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMoodCode(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityStatusCode(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityValue(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityEffectiveTime(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityEventStudyDay(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityTimingReference(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityGroupIdentifier(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMicrobiologySusceptibilityFindingCategoryAssociation(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMicrobiologySusceptibilityFindingSubCategoryAssociation(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityNonPerformanceReason(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityBaselineIndicator(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityDerivedDataIndicator(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilitymicrobiologySusceptibilityFindingCategoryAssociationTypeCode(microbiologySusceptibility, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicrobiologySusceptibility_validateMicrobiologySusceptibilitymicrobiologySusceptibilityFindingSubCategoryAssociationTypeCode(microbiologySusceptibility, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateMicrobiologySusceptibilityTemplateId constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityTemplateId(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityClassCode constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityClassCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityClassCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityCode constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityId constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityId(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityId(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityMethodCode constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMethodCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityMethodCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityMoodCode constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMoodCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityStatusCode constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityStatusCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityValue constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityValue(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityValue(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityEffectiveTime constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityEffectiveTime(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityEventStudyDay constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityEventStudyDay(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityEventStudyDay(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityTimingReference constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityTimingReference(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityGroupIdentifier constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityGroupIdentifier(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityMicrobiologySusceptibilityFindingCategoryAssociation constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMicrobiologySusceptibilityFindingCategoryAssociation(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityMicrobiologySusceptibilityFindingCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityMicrobiologySusceptibilityFindingSubCategoryAssociation constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityMicrobiologySusceptibilityFindingSubCategoryAssociation(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityMicrobiologySusceptibilityFindingSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityNonPerformanceReason constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityNonPerformanceReason(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityBaselineIndicator constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityBaselineIndicator(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityBaselineIndicator(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilityDerivedDataIndicator constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilityDerivedDataIndicator(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilityDerivedDataIndicator(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilitymicrobiologySusceptibilityFindingCategoryAssociationTypeCode constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilitymicrobiologySusceptibilityFindingCategoryAssociationTypeCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilitymicrobiologySusceptibilityFindingCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateMicrobiologySusceptibilitymicrobiologySusceptibilityFindingSubCategoryAssociationTypeCode constraint of '<em>Microbiology Susceptibility</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicrobiologySusceptibility_validateMicrobiologySusceptibilitymicrobiologySusceptibilityFindingSubCategoryAssociationTypeCode(MicrobiologySusceptibility microbiologySusceptibility, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microbiologySusceptibility.validateMicrobiologySusceptibilitymicrobiologySusceptibilityFindingSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(pharmacokineticConcentrationFinding, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingTemplateId(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingClassCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingId(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMoodCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingStatusCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingValue(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMethodCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingGroupIdentifier(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingPharmacokineticsTestResultCategoryAssociation(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingPharmacokineticsTestResultSubCategoryAssociation(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingFastingAssociation(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingSpecimenInformation(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingNonPerformanceReason(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingDerivedDataIndicator(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingAssayQuantitationAssociation(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingpharmacokineticsTestResultCategoryAssociationTypeCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingpharmacokineticsTestResultSubCategoryAssociationTypeCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusClassCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusCodeP(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusMoodCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusValue(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationTypeCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationFastingStatus(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodeP(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCode(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValue(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationTypeId(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationObservation(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCode1(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodePPharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodeP1(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCode1(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCode1(pharmacokineticConcentrationFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValuePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValue1(pharmacokineticConcentrationFinding, diagnostics, context);
    return result;
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingTemplateId constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingTemplateId(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingTemplateId(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingClassCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingClassCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingClassCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingId constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingId(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingId(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingMoodCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMoodCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingMoodCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingStatusCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingStatusCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingStatusCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingValue constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingValue(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingValue(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingMethodCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingMethodCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingMethodCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingGroupIdentifier constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingGroupIdentifier(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingPharmacokineticsTestResultCategoryAssociation constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingPharmacokineticsTestResultCategoryAssociation(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingPharmacokineticsTestResultCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingPharmacokineticsTestResultSubCategoryAssociation constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingPharmacokineticsTestResultSubCategoryAssociation(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingPharmacokineticsTestResultSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingFastingAssociation constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingFastingAssociation(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingFastingAssociation(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingSpecimenInformation constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingSpecimenInformation(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingSpecimenInformation(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingNonPerformanceReason constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingNonPerformanceReason(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingDerivedDataIndicator constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingDerivedDataIndicator(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingDerivedDataIndicator(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingAssayQuantitationAssociation constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingAssayQuantitationAssociation(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingAssayQuantitationAssociation(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingpharmacokineticsTestResultCategoryAssociationTypeCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingpharmacokineticsTestResultCategoryAssociationTypeCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingpharmacokineticsTestResultCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingpharmacokineticsTestResultSubCategoryAssociationTypeCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingpharmacokineticsTestResultSubCategoryAssociationTypeCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingpharmacokineticsTestResultSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusClassCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusClassCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusClassCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusCodeP constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusCodeP(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusCodeP(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusMoodCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusMoodCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusMoodCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusValue constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusValue(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingfastingAssociationfastingStatusValue(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingfastingAssociationTypeCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationTypeCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingfastingAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingfastingAssociationFastingStatus constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingfastingAssociationFastingStatus(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingfastingAssociationFastingStatus(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodeP constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodeP(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodeP(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCode constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCode(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValue constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValue(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValue(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationTypeId constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationTypeId(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationTypeId(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationObservation constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationObservation(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationObservation(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCode1 constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCode1(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationClassCode1(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodePPharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodeP1 constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodePPharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodeP1(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodePPharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodeP1(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCode1 constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCode1(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationCode1(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCode1 constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCode1(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCodePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValuePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValue1 constraint of '<em>Pharmacokinetic Concentration Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticConcentrationFinding_validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValuePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValue1(PharmacokineticConcentrationFinding pharmacokineticConcentrationFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticConcentrationFinding.validatePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValuePharmacokineticConcentrationFindingassayQuantitationAssociationassayQuantitationValue1(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(findingAbout, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutTemplateId(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutClassCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutId(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutMoodCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutStatusCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutTargetSiteCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutValue(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutGroupIdentifier(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutFindingObservationObjectAssociation(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutFindingAboutCategoryAssociation(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutFindingAboutSubCategoryAssociation(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutNonPerformanceReason(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutBaselineIndicator(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutDataCollection(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationTypeCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationObservation(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode1(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodePFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP1(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode1(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode1(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValueFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue1(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingAboutCategoryAssociationTypeCode(findingAbout, diagnostics, context);
    if (result || diagnostics != null) result &= validateFindingAbout_validateFindingAboutfindingAboutSubCategoryAssociationTypeCode(findingAbout, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateFindingAboutTemplateId constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutTemplateId(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutClassCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutClassCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutClassCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutId constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutId(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutId(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutMoodCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutMoodCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutStatusCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutStatusCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutTargetSiteCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutTargetSiteCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutTargetSiteCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutValue constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutValue(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutValue(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutGroupIdentifier constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutGroupIdentifier(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutFindingObservationObjectAssociation constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutFindingObservationObjectAssociation(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutFindingObservationObjectAssociation(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutFindingAboutCategoryAssociation constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutFindingAboutCategoryAssociation(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutFindingAboutCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutFindingAboutSubCategoryAssociation constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutFindingAboutSubCategoryAssociation(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutFindingAboutSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutNonPerformanceReason constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutNonPerformanceReason(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutBaselineIndicator constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutBaselineIndicator(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutBaselineIndicator(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutDataCollection constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutDataCollection(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationTypeCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationTypeCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationObservation constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationObservation(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationObservation(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode1 constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode1(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodePFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP1 constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodePFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP1(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodePFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeP1(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode1 constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode1(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectCode1(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode1 constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode1(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCodeFindingAboutfindingObservationObjectAssociationfindingObservationObjectMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValueFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue1 constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValueFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue1(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingObservationObjectAssociationfindingObservationObjectValueFindingAboutfindingObservationObjectAssociationfindingObservationObjectValue1(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingAboutCategoryAssociationTypeCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingAboutCategoryAssociationTypeCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingAboutCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateFindingAboutfindingAboutSubCategoryAssociationTypeCode constraint of '<em>Finding About</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFindingAbout_validateFindingAboutfindingAboutSubCategoryAssociationTypeCode(FindingAbout findingAbout, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return findingAbout.validateFindingAboutfindingAboutSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(drugAccountability, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityTemplateId(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityClassCode(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityCode(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityId(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityMoodCode(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityValue(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityStatusCode(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityEffectiveTime(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityGroupIdentifier(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityDrugAccountabilityCategoryAssociation(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityDrugAccountabilitySubCategoryAssociation(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityNonPerformanceReason(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilityEventStudyDay(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilitydrugAccountabilityCategoryAssociationTypeCode(drugAccountability, diagnostics, context);
    if (result || diagnostics != null) result &= validateDrugAccountability_validateDrugAccountabilitydrugAccountabilitySubCategoryAssociationTypeCode(drugAccountability, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateDrugAccountabilityTemplateId constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityTemplateId(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityClassCode constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityClassCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityClassCode(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityCode constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityCode(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityId constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityId(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityId(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityMoodCode constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityMoodCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityValue constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityValue(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityValue(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityStatusCode constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityStatusCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityEffectiveTime constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityEffectiveTime(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityGroupIdentifier constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityGroupIdentifier(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityDrugAccountabilityCategoryAssociation constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityDrugAccountabilityCategoryAssociation(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityDrugAccountabilityCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityDrugAccountabilitySubCategoryAssociation constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityDrugAccountabilitySubCategoryAssociation(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityDrugAccountabilitySubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityNonPerformanceReason constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityNonPerformanceReason(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilityEventStudyDay constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilityEventStudyDay(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilityEventStudyDay(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilitydrugAccountabilityCategoryAssociationTypeCode constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilitydrugAccountabilityCategoryAssociationTypeCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilitydrugAccountabilityCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateDrugAccountabilitydrugAccountabilitySubCategoryAssociationTypeCode constraint of '<em>Drug Accountability</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDrugAccountability_validateDrugAccountabilitydrugAccountabilitySubCategoryAssociationTypeCode(DrugAccountability drugAccountability, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return drugAccountability.validateDrugAccountabilitydrugAccountabilitySubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(subjectElement, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementTemplateId(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementClassCode(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementCodeP(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementCode(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementEffectiveTime(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementId(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementMoodCode(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementStudyEpoch(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementElementOrderAssociation(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderClassCode(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderCodeP(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderCode(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderMoodCode(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderValue(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationTypeCode(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationElementOrder(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderClassCodeSubjectElementelementOrderAssociationelementOrderClassCode1(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderCodePSubjectElementelementOrderAssociationelementOrderCodeP1(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderCodeSubjectElementelementOrderAssociationelementOrderCode1(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderMoodCodeSubjectElementelementOrderAssociationelementOrderMoodCode1(subjectElement, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderValueSubjectElementelementOrderAssociationelementOrderValue1(subjectElement, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateSubjectElementTemplateId constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementTemplateId(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementClassCode constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementClassCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementClassCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementCodeP constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementCodeP(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementCodeP(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementCode constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementEffectiveTime constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementEffectiveTime(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementId constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementId(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementMoodCode constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementMoodCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementStudyEpoch constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementStudyEpoch(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementStudyEpoch(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementElementOrderAssociation constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementElementOrderAssociation(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementElementOrderAssociation(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderClassCode constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderClassCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderClassCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderCodeP constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderCodeP(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderCodeP(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderCode constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderMoodCode constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderMoodCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderValue constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderValue(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderValue(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationTypeCode constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationTypeCode(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationElementOrder constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationElementOrder(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationElementOrder(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderClassCodeSubjectElementelementOrderAssociationelementOrderClassCode1 constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderClassCodeSubjectElementelementOrderAssociationelementOrderClassCode1(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderClassCodeSubjectElementelementOrderAssociationelementOrderClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderCodePSubjectElementelementOrderAssociationelementOrderCodeP1 constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderCodePSubjectElementelementOrderAssociationelementOrderCodeP1(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderCodePSubjectElementelementOrderAssociationelementOrderCodeP1(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderCodeSubjectElementelementOrderAssociationelementOrderCode1 constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderCodeSubjectElementelementOrderAssociationelementOrderCode1(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderCodeSubjectElementelementOrderAssociationelementOrderCode1(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderMoodCodeSubjectElementelementOrderAssociationelementOrderMoodCode1 constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderMoodCodeSubjectElementelementOrderAssociationelementOrderMoodCode1(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderMoodCodeSubjectElementelementOrderAssociationelementOrderMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateSubjectElementelementOrderAssociationelementOrderValueSubjectElementelementOrderAssociationelementOrderValue1 constraint of '<em>Subject Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectElement_validateSubjectElementelementOrderAssociationelementOrderValueSubjectElementelementOrderAssociationelementOrderValue1(SubjectElement subjectElement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectElement.validateSubjectElementelementOrderAssociationelementOrderValueSubjectElementelementOrderAssociationelementOrderValue1(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyEpoch(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(studyEpoch, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochTemplateId(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochClassCode(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochClassCodeP(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochCodeP(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochCode(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochText(studyEpoch, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyEpoch_validateStudyEpochMoodCode(studyEpoch, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateStudyEpochTemplateId constraint of '<em>Study Epoch</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyEpoch_validateStudyEpochTemplateId(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyEpoch.validateStudyEpochTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateStudyEpochClassCode constraint of '<em>Study Epoch</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyEpoch_validateStudyEpochClassCode(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyEpoch.validateStudyEpochClassCode(diagnostics, context);
  }

  /**
   * Validates the validateStudyEpochClassCodeP constraint of '<em>Study Epoch</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyEpoch_validateStudyEpochClassCodeP(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyEpoch.validateStudyEpochClassCodeP(diagnostics, context);
  }

  /**
   * Validates the validateStudyEpochCodeP constraint of '<em>Study Epoch</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyEpoch_validateStudyEpochCodeP(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyEpoch.validateStudyEpochCodeP(diagnostics, context);
  }

  /**
   * Validates the validateStudyEpochCode constraint of '<em>Study Epoch</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyEpoch_validateStudyEpochCode(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyEpoch.validateStudyEpochCode(diagnostics, context);
  }

  /**
   * Validates the validateStudyEpochText constraint of '<em>Study Epoch</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyEpoch_validateStudyEpochText(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyEpoch.validateStudyEpochText(diagnostics, context);
  }

  /**
   * Validates the validateStudyEpochMoodCode constraint of '<em>Study Epoch</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyEpoch_validateStudyEpochMoodCode(StudyEpoch studyEpoch, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyEpoch.validateStudyEpochMoodCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(substanceUse, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateSubstanceAdministration_validateClassCode(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseTemplateId(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseClassCode(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseDoseQuantity(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseEffectiveTime(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseId(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseMaxDoseQuantity(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseMoodCode(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseRouteCode(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseStatusCode(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseText(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseConsumableMaterial(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseSubstanceUseCategoryAssociation(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseSubstanceUseSubCategoryAssociation(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUsePreSpecifiedEvent(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseNonPerformanceReason(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseActivityStartTimingReference(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseActivityEndTimingReference(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseDataCollection(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUseStudyDayPeriod(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUsesubstanceUseCategoryAssociationTypeCode(substanceUse, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubstanceUse_validateSubstanceUsesubstanceUseSubCategoryAssociationTypeCode(substanceUse, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateSubstanceUseTemplateId constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseTemplateId(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseClassCode constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseClassCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseClassCode(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseDoseQuantity constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseDoseQuantity(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseDoseQuantity(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseEffectiveTime constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseEffectiveTime(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseId constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseId(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseId(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseMaxDoseQuantity constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseMaxDoseQuantity(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseMaxDoseQuantity(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseMoodCode constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseMoodCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseRouteCode constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseRouteCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseRouteCode(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseStatusCode constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseStatusCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseText constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseText(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseText(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseConsumableMaterial constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseConsumableMaterial(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseConsumableMaterial(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseSubstanceUseCategoryAssociation constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseSubstanceUseCategoryAssociation(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseSubstanceUseCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseSubstanceUseSubCategoryAssociation constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseSubstanceUseSubCategoryAssociation(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseSubstanceUseSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUsePreSpecifiedEvent constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUsePreSpecifiedEvent(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUsePreSpecifiedEvent(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseNonPerformanceReason constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseNonPerformanceReason(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseActivityStartTimingReference constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseActivityStartTimingReference(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseActivityStartTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseActivityEndTimingReference constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseActivityEndTimingReference(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseActivityEndTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseDataCollection constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseDataCollection(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUseStudyDayPeriod constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUseStudyDayPeriod(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUseStudyDayPeriod(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUsesubstanceUseCategoryAssociationTypeCode constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUsesubstanceUseCategoryAssociationTypeCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUsesubstanceUseCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateSubstanceUsesubstanceUseSubCategoryAssociationTypeCode constraint of '<em>Substance Use</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubstanceUse_validateSubstanceUsesubstanceUseSubCategoryAssociationTypeCode(SubstanceUse substanceUse, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return substanceUse.validateSubstanceUsesubstanceUseSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(activityStartTimingReference, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceTemplateId(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceClassCode(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceCodeP(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceCode(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceEffectiveTime(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceId(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceMoodCode(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociation(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointClassCode(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointCodeP(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointCode(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointEffectiveTime(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointMoodCode(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationTypeCode(activityStartTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePoint(activityStartTimingReference, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateActivityStartTimingReferenceTemplateId constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceTemplateId(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceClassCode constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceClassCode(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceClassCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceCodeP constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceCodeP(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceCodeP(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceCode constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceCode(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceEffectiveTime constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceEffectiveTime(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceId constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceId(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceId(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceMoodCode constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceMoodCode(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceActivityStartAnchorAssociation constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociation(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceActivityStartAnchorAssociation(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointClassCode constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointClassCode(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointClassCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointCodeP constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointCodeP(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointCodeP(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointCode constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointCode(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointEffectiveTime constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointEffectiveTime(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointMoodCode constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointMoodCode(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePointMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceActivityStartAnchorAssociationTypeCode constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationTypeCode(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceActivityStartAnchorAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePoint constraint of '<em>Activity Start Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityStartTimingReference_validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePoint(ActivityStartTimingReference activityStartTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityStartTimingReference.validateActivityStartTimingReferenceActivityStartAnchorAssociationActivityStartAnchorTimePoint(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(activityEndTimingReference, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceTemplateId(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceClassCode(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceCodeP(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceCode(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceEffectiveTime(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceId(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceMoodCode(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociation(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointClassCode(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointCodeP(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointCode(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointEffectiveTime(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointMoodCode(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationTypeCode(activityEndTimingReference, diagnostics, context);
    if (result || diagnostics != null) result &= validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePoint(activityEndTimingReference, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateActivityEndTimingReferenceTemplateId constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceTemplateId(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceClassCode constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceClassCode(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceClassCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceCodeP constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceCodeP(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceCodeP(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceCode constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceCode(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceEffectiveTime constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceEffectiveTime(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceId constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceId(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceId(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceMoodCode constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceMoodCode(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceActivityEndAnchorAssociation constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociation(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceActivityEndAnchorAssociation(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointClassCode constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointClassCode(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointClassCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointCodeP constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointCodeP(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointCodeP(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointCode constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointCode(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointEffectiveTime constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointEffectiveTime(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointMoodCode constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointMoodCode(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePointMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceActivityEndAnchorAssociationTypeCode constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationTypeCode(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceActivityEndAnchorAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePoint constraint of '<em>Activity End Timing Reference</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateActivityEndTimingReference_validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePoint(ActivityEndTimingReference activityEndTimingReference, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return activityEndTimingReference.validateActivityEndTimingReferenceActivityEndAnchorAssociationActivityEndAnchorTimePoint(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(humanClinicalDisposition, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionTemplateId(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionClassCode(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionCode(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionEffectiveTime(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionId(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionMoodCode(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionDispositionCategoryAssociation(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionDispositionSubCategoryAssociation(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionStudyEpoch(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionDataCollection(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionGroupIdentifier(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositionStudyDayPeriod(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositiondispositionCategoryAssociationTypeCode(humanClinicalDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalDisposition_validateHumanClinicalDispositiondispositionSubCategoryAssociationTypeCode(humanClinicalDisposition, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateHumanClinicalDispositionTemplateId constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionTemplateId(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionClassCode constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionClassCode(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionClassCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionCode constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionCode(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionEffectiveTime constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionEffectiveTime(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionId constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionId(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionId(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionMoodCode constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionMoodCode(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionDispositionCategoryAssociation constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionDispositionCategoryAssociation(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionDispositionCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionDispositionSubCategoryAssociation constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionDispositionSubCategoryAssociation(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionDispositionSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionStudyEpoch constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionStudyEpoch(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionStudyEpoch(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionDataCollection constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionDataCollection(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionGroupIdentifier constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionGroupIdentifier(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositionStudyDayPeriod constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositionStudyDayPeriod(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositionStudyDayPeriod(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositiondispositionCategoryAssociationTypeCode constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositiondispositionCategoryAssociationTypeCode(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositiondispositionCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalDispositiondispositionSubCategoryAssociationTypeCode constraint of '<em>Human Clinical Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalDisposition_validateHumanClinicalDispositiondispositionSubCategoryAssociationTypeCode(HumanClinicalDisposition humanClinicalDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalDisposition.validateHumanClinicalDispositiondispositionSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(medicalHistoryItem, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemTemplateId(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemClassCode(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemCode(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemEffectiveTime(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemId(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemMoodCode(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemStatusCode(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemValue(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemGroupIdentifier(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemMedicalHistoryCategoryAssociation(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemMedicalHistorySubCategoryAssociation(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemPreSpecifiedEvent(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemNonPerformanceReason(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemBodySystemorOrganClass(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemEventStudyDay(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemActivityEndTimingReference(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemDataCollection(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemmedicalHistoryCategoryAssociationTypeCode(medicalHistoryItem, diagnostics, context);
    if (result || diagnostics != null) result &= validateMedicalHistoryItem_validateMedicalHistoryItemmedicalHistorySubCategoryAssociationTypeCode(medicalHistoryItem, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateMedicalHistoryItemTemplateId constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemTemplateId(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemClassCode constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemClassCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemClassCode(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemCode constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemCode(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemEffectiveTime constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemEffectiveTime(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemId constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemId(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemId(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemMoodCode constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemMoodCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemStatusCode constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemStatusCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemValue constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemValue(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemValue(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemGroupIdentifier constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemGroupIdentifier(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemMedicalHistoryCategoryAssociation constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemMedicalHistoryCategoryAssociation(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemMedicalHistoryCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemMedicalHistorySubCategoryAssociation constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemMedicalHistorySubCategoryAssociation(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemMedicalHistorySubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemPreSpecifiedEvent constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemPreSpecifiedEvent(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemPreSpecifiedEvent(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemNonPerformanceReason constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemNonPerformanceReason(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemBodySystemorOrganClass constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemBodySystemorOrganClass(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemBodySystemorOrganClass(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemEventStudyDay constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemEventStudyDay(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemEventStudyDay(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemActivityEndTimingReference constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemActivityEndTimingReference(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemActivityEndTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemDataCollection constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemDataCollection(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemmedicalHistoryCategoryAssociationTypeCode constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemmedicalHistoryCategoryAssociationTypeCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemmedicalHistoryCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateMedicalHistoryItemmedicalHistorySubCategoryAssociationTypeCode constraint of '<em>Medical History Item</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMedicalHistoryItem_validateMedicalHistoryItemmedicalHistorySubCategoryAssociationTypeCode(MedicalHistoryItem medicalHistoryItem, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return medicalHistoryItem.validateMedicalHistoryItemmedicalHistorySubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(protocolDeviation, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationTemplateId(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationClassCode(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationCode(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationEffectiveTime(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationId(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationMoodCode(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationValue(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationProtocolDeviationCategoryAssociation(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationProtocolDeviationSubCategoryAssociation(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationStudyEpoch(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationprotocolDeviationCategoryAssociationTypeCode(protocolDeviation, diagnostics, context);
    if (result || diagnostics != null) result &= validateProtocolDeviation_validateProtocolDeviationprotocolDeviationSubCategoryAssociationTypeCode(protocolDeviation, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateProtocolDeviationTemplateId constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationTemplateId(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationClassCode constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationClassCode(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationClassCode(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationCode constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationCode(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationCode(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationEffectiveTime constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationEffectiveTime(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationId constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationId(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationId(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationMoodCode constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationMoodCode(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationValue constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationValue(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationValue(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationProtocolDeviationCategoryAssociation constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationProtocolDeviationCategoryAssociation(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationProtocolDeviationCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationProtocolDeviationSubCategoryAssociation constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationProtocolDeviationSubCategoryAssociation(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationProtocolDeviationSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationStudyEpoch constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationStudyEpoch(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationStudyEpoch(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationprotocolDeviationCategoryAssociationTypeCode constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationprotocolDeviationCategoryAssociationTypeCode(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationprotocolDeviationCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateProtocolDeviationprotocolDeviationSubCategoryAssociationTypeCode constraint of '<em>Protocol Deviation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateProtocolDeviation_validateProtocolDeviationprotocolDeviationSubCategoryAssociationTypeCode(ProtocolDeviation protocolDeviation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return protocolDeviation.validateProtocolDeviationprotocolDeviationSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(clinicalEvent, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventTemplateId(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventClassCode(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventCode(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventEffectiveTime(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventId(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventMoodCode(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventStatusCode(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventValue(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventClinicalEventCategoryAssociation(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventClinicalEventSubCategoryAssociation(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventPreSpecifiedEvent(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventNonPerformanceReason(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventBodySystemorOrganClass(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventDataCollection(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventEventSeverity(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventActivityStartTimingReference(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventActivityEndTimingReference(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventclinicalEventCategoryAssociationTypeCode(clinicalEvent, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalEvent_validateClinicalEventclinicalEventSubCategoryAssociationTypeCode(clinicalEvent, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateClinicalEventTemplateId constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventTemplateId(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventClassCode constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventClassCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventClassCode(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventCode constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventCode(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventEffectiveTime constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventEffectiveTime(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventId constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventId(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventId(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventMoodCode constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventMoodCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventStatusCode constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventStatusCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventValue constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventValue(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventValue(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventClinicalEventCategoryAssociation constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventClinicalEventCategoryAssociation(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventClinicalEventCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventClinicalEventSubCategoryAssociation constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventClinicalEventSubCategoryAssociation(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventClinicalEventSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventPreSpecifiedEvent constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventPreSpecifiedEvent(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventPreSpecifiedEvent(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventNonPerformanceReason constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventNonPerformanceReason(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventBodySystemorOrganClass constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventBodySystemorOrganClass(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventBodySystemorOrganClass(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventDataCollection constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventDataCollection(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventEventSeverity constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventEventSeverity(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventEventSeverity(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventActivityStartTimingReference constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventActivityStartTimingReference(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventActivityStartTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventActivityEndTimingReference constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventActivityEndTimingReference(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventActivityEndTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventclinicalEventCategoryAssociationTypeCode constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventclinicalEventCategoryAssociationTypeCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventclinicalEventCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateClinicalEventclinicalEventSubCategoryAssociationTypeCode constraint of '<em>Clinical Event</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalEvent_validateClinicalEventclinicalEventSubCategoryAssociationTypeCode(ClinicalEvent clinicalEvent, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalEvent.validateClinicalEventclinicalEventSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(subjectCharacteristic, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicTemplateId(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicClassCode(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicCode(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicId(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicMoodCode(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicValue(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicStatusCode(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicDataCollection(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicNonPerformanceReason(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicGroupIdentifier(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicSubjectCharateristicCategoryAssociation(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicsubjectCharateristicCategoryAssociationTemplateId(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicsubjectCharateristicCategoryAssociationTypeCode(subjectCharacteristic, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectCharacteristic_validateSubjectCharacteristicsubjectCharateristicSubCategoryAssociationTypeCode(subjectCharacteristic, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateSubjectCharacteristicTemplateId constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicTemplateId(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicClassCode constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicClassCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicClassCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicCode constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicId constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicId(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicMoodCode constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicMoodCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicValue constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicValue(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicValue(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicStatusCode constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicStatusCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicDataCollection constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicDataCollection(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicNonPerformanceReason constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicNonPerformanceReason(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicGroupIdentifier constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicGroupIdentifier(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicSubjectCharateristicCategoryAssociation constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicSubjectCharateristicCategoryAssociation(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicSubjectCharateristicCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicsubjectCharateristicCategoryAssociationTemplateId constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicsubjectCharateristicCategoryAssociationTemplateId(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicsubjectCharateristicCategoryAssociationTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicsubjectCharateristicCategoryAssociationTypeCode constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicsubjectCharateristicCategoryAssociationTypeCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicsubjectCharateristicCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectCharacteristicsubjectCharateristicSubCategoryAssociationTypeCode constraint of '<em>Subject Characteristic</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectCharacteristic_validateSubjectCharacteristicsubjectCharateristicSubCategoryAssociationTypeCode(SubjectCharacteristic subjectCharacteristic, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectCharacteristic.validateSubjectCharacteristicsubjectCharateristicSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(pharmacokineticParameterFinding, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingTemplateId(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingClassCode(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingCode(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingId(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingMoodCode(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingStatusCode(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingValue(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingGroupIdentifier(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingSpecimenInformation(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingPharmacokineticsParameterCategoryAssociation(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingPharmacokineticsParameterSubCategoryAssociation(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingNonPerformanceReason(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingTimingReference(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingpharmacokineticsParameterCategoryAssociationTypeCode(pharmacokineticParameterFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingpharmacokineticsParameterSubCategoryAssociationTypeCode(pharmacokineticParameterFinding, diagnostics, context);
    return result;
  }

  /**
   * Validates the validatePharmacokineticParameterFindingTemplateId constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingTemplateId(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingTemplateId(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingClassCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingClassCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingClassCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingId constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingId(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingId(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingMoodCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingMoodCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingMoodCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingStatusCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingStatusCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingStatusCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingValue constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingValue(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingValue(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingGroupIdentifier constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingGroupIdentifier(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingSpecimenInformation constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingSpecimenInformation(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingSpecimenInformation(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingPharmacokineticsParameterCategoryAssociation constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingPharmacokineticsParameterCategoryAssociation(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingPharmacokineticsParameterCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingPharmacokineticsParameterSubCategoryAssociation constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingPharmacokineticsParameterSubCategoryAssociation(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingPharmacokineticsParameterSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingNonPerformanceReason constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingNonPerformanceReason(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingTimingReference constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingTimingReference(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingTimingReference(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingpharmacokineticsParameterCategoryAssociationTypeCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingpharmacokineticsParameterCategoryAssociationTypeCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingpharmacokineticsParameterCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validatePharmacokineticParameterFindingpharmacokineticsParameterSubCategoryAssociationTypeCode constraint of '<em>Pharmacokinetic Parameter Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePharmacokineticParameterFinding_validatePharmacokineticParameterFindingpharmacokineticsParameterSubCategoryAssociationTypeCode(PharmacokineticParameterFinding pharmacokineticParameterFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return pharmacokineticParameterFinding.validatePharmacokineticParameterFindingpharmacokineticsParameterSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(concomitantMedication, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateSubstanceAdministration_validateClassCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationTemplateId(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationClassCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationDoseQuantity(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationEffectiveTime(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationRouteCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationId(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationMoodCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationStatusCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationText(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationMaxDoseQuantity(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationGroupIdentifier(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationConcomitantMedicationCategoryAssociation(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationNonPerformanceReason(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationindicationAssociation(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationConsumableMaterial(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationConcomitantMedicationSubCategoryAssociation(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociation(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationActivityStartTimingReference(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationActivtyEndTimingReference(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationPreSpecifiedEvent(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationDataCollection(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationStudyDayPeriod(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValue(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociation(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationTypeCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationConcomitantMedicationCategory(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValueConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValueConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValue1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociationConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociation1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationClassCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationMoodCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationValue(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationTypeCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationIndication(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationTypeCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValueConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue1(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenClassCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenCodeP(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenMoodCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenValue(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationTypeCode(concomitantMedication, diagnostics, context);
    if (result || diagnostics != null) result &= validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimen(concomitantMedication, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateConcomitantMedicationTemplateId constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationTemplateId(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationClassCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationClassCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationClassCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationDoseQuantity constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationDoseQuantity(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationDoseQuantity(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationEffectiveTime constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationEffectiveTime(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationRouteCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationRouteCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationRouteCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationId constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationId(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationId(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationMoodCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationMoodCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationStatusCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationStatusCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationText constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationText(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationText(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationMaxDoseQuantity constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationMaxDoseQuantity(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationMaxDoseQuantity(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationGroupIdentifier constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationGroupIdentifier(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationConcomitantMedicationCategoryAssociation constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationConcomitantMedicationCategoryAssociation(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationConcomitantMedicationCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationNonPerformanceReason constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationNonPerformanceReason(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationindicationAssociation constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationindicationAssociation(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationindicationAssociation(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationConsumableMaterial constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationConsumableMaterial(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationConsumableMaterial(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationConcomitantMedicationSubCategoryAssociation constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationConcomitantMedicationSubCategoryAssociation(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationConcomitantMedicationSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationIntendedRegimenAssociation constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociation(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationIntendedRegimenAssociation(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationActivityStartTimingReference constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationActivityStartTimingReference(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationActivityStartTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationActivtyEndTimingReference constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationActivtyEndTimingReference(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationActivtyEndTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationPreSpecifiedEvent constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationPreSpecifiedEvent(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationPreSpecifiedEvent(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationDataCollection constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationDataCollection(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationStudyDayPeriod constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationStudyDayPeriod(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationStudyDayPeriod(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValue constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValue(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValue(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociation constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociation(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationTypeCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationTypeCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationConcomitantMedicationCategory constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationConcomitantMedicationCategory(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationConcomitantMedicationCategory(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValueConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValueConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValueConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationTypeCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCodeConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValueConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValue1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValueConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValue1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValueConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryValue1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociationConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociation1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociationConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociation1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociationConcomitantMedicationconcomitantMedicationCategoryAssociationconcomitantMedicationCategoryConcomitantMedicationSubCategoryAssociation1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationClassCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationClassCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationClassCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationMoodCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationMoodCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationValue constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationValue(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationIndicationAssociationConcomitantMedicationIndicationValue(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationIndicationAssociationTypeCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationTypeCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationIndicationAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationIndicationAssociationIndication constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationIndicationAssociationIndication(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationIndicationAssociationIndication(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationTypeCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationTypeCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategory(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCodeConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryMoodCode1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValueConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue1 constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValueConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue1(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValueConcomitantMedicationconcomitantMedicationSubCategoryAssociationConcomitantMedicationSubCategoryValue1(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenClassCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenClassCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenClassCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenCodeP constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenCodeP(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenCodeP(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenMoodCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenMoodCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenValue constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenValue(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimenValue(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationIntendedRegimenAssociationTypeCode constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationTypeCode(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationIntendedRegimenAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimen constraint of '<em>Concomitant Medication</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConcomitantMedication_validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimen(ConcomitantMedication concomitantMedication, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return concomitantMedication.validateConcomitantMedicationIntendedRegimenAssociationIntendedRegimen(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(consumableMaterial, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateConsumable_validateTypeCode(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialTemplateId(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialTypeCode(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedication(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialClassCode(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialCode(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialLotNumberText(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationClassCode(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialClassCodeConsumableMaterialMedicationMedicationMaterialClassCode1(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialCodeConsumableMaterialMedicationMedicationMaterialCode1(consumableMaterial, diagnostics, context);
    if (result || diagnostics != null) result &= validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialLotNumberTextConsumableMaterialMedicationMedicationMaterialLotNumberText1(consumableMaterial, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateConsumableMaterialTemplateId constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialTemplateId(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateConsumableMaterialTypeCode constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialTypeCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateConsumableMaterialMedication constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialMedication(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialMedication(diagnostics, context);
  }

  /**
   * Validates the validateConsumableMaterialMedicationMedicationMaterialClassCode constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialClassCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialClassCode(diagnostics, context);
  }

  /**
   * Validates the validateConsumableMaterialMedicationMedicationMaterialCode constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialCode(diagnostics, context);
  }

  /**
   * Validates the validateConsumableMaterialMedicationMedicationMaterialLotNumberText constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialLotNumberText(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialLotNumberText(diagnostics, context);
  }

  /**
   * Validates the validateConsumableMaterialMedicationClassCode constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialMedicationClassCode(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialMedicationClassCode(diagnostics, context);
  }

  /**
   * Validates the validateConsumableMaterialMedicationMedicationMaterialClassCodeConsumableMaterialMedicationMedicationMaterialClassCode1 constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialClassCodeConsumableMaterialMedicationMedicationMaterialClassCode1(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialClassCodeConsumableMaterialMedicationMedicationMaterialClassCode1(diagnostics, context);
  }

  /**
   * Validates the validateConsumableMaterialMedicationMedicationMaterialCodeConsumableMaterialMedicationMedicationMaterialCode1 constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialCodeConsumableMaterialMedicationMedicationMaterialCode1(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialCodeConsumableMaterialMedicationMedicationMaterialCode1(diagnostics, context);
  }

  /**
   * Validates the validateConsumableMaterialMedicationMedicationMaterialLotNumberTextConsumableMaterialMedicationMedicationMaterialLotNumberText1 constraint of '<em>Consumable Material</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateConsumableMaterial_validateConsumableMaterialMedicationMedicationMaterialLotNumberTextConsumableMaterialMedicationMedicationMaterialLotNumberText1(ConsumableMaterial consumableMaterial, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return consumableMaterial.validateConsumableMaterialMedicationMedicationMaterialLotNumberTextConsumableMaterialMedicationMedicationMaterialLotNumberText1(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(humanClinicalExposure, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateSubstanceAdministration_validateClassCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureTemplateId(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureClassCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureDoseQuantity(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureEffectiveTime(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureId(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureMoodCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureRouteCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureMaxDoseQuantity(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureText(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureApproachSiteCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureGroupIdentifier(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureConsumableMaterial(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureExposureCategoryAssociation(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureExposureSubCategoryAssociation(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureExposureIndication(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureDoseAdjustmentReasonAssociation(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureStudyEpoch(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureElementOrderAssociation(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureTimingReference(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureStudyDayPeriod(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureexposureCategoryAssociationTypeCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureexposureSubCategoryAssociationTypeCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureexposureIntendedRegimenClassCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureexposureIntendedRegimenMoodCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureexposureIntendedRegimenCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureexposureIntendedRegimenValue(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposuredoseAdjustmentReasonAssociationTypeCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderValue(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationTypeCode(humanClinicalExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationElementOrder(humanClinicalExposure, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateHumanClinicalExposureTemplateId constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureTemplateId(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureClassCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureClassCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureClassCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureDoseQuantity constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureDoseQuantity(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureDoseQuantity(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureEffectiveTime constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureEffectiveTime(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureId constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureId(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureId(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureMoodCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureMoodCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureRouteCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureRouteCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureRouteCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureMaxDoseQuantity constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureMaxDoseQuantity(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureMaxDoseQuantity(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureText constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureText(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureText(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureApproachSiteCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureApproachSiteCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureApproachSiteCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureGroupIdentifier constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureGroupIdentifier(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureConsumableMaterial constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureConsumableMaterial(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureConsumableMaterial(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureExposureCategoryAssociation constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureExposureCategoryAssociation(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureExposureCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureExposureSubCategoryAssociation constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureExposureSubCategoryAssociation(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureExposureSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureExposureIndication constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureExposureIndication(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureExposureIndication(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureDoseAdjustmentReasonAssociation constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureDoseAdjustmentReasonAssociation(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureDoseAdjustmentReasonAssociation(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureStudyEpoch constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureStudyEpoch(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureStudyEpoch(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureElementOrderAssociation constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureElementOrderAssociation(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureElementOrderAssociation(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureTimingReference constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureTimingReference(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureStudyDayPeriod constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureStudyDayPeriod(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureStudyDayPeriod(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureexposureCategoryAssociationTypeCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureexposureCategoryAssociationTypeCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureexposureCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureexposureSubCategoryAssociationTypeCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureexposureSubCategoryAssociationTypeCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureexposureSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureexposureIntendedRegimenClassCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureexposureIntendedRegimenClassCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureexposureIntendedRegimenClassCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureexposureIntendedRegimenMoodCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureexposureIntendedRegimenMoodCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureexposureIntendedRegimenMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureexposureIntendedRegimenCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureexposureIntendedRegimenCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureexposureIntendedRegimenCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureexposureIntendedRegimenValue constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureexposureIntendedRegimenValue(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureexposureIntendedRegimenValue(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposuredoseAdjustmentReasonAssociationTypeCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposuredoseAdjustmentReasonAssociationTypeCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposuredoseAdjustmentReasonAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderClassCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderCodeP(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureelementOrderAssociationelementOrderValue constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationelementOrderValue(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationelementOrderValue(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureelementOrderAssociationTypeCode constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationTypeCode(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalExposureelementOrderAssociationElementOrder constraint of '<em>Human Clinical Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalExposure_validateHumanClinicalExposureelementOrderAssociationElementOrder(HumanClinicalExposure humanClinicalExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalExposure.validateHumanClinicalExposureelementOrderAssociationElementOrder(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyTestPerformer(StudyTestPerformer studyTestPerformer, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(studyTestPerformer, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(studyTestPerformer, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyTestPerformer, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyTestPerformer, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyTestPerformer, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(studyTestPerformer, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyTestPerformer, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyTestPerformer, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateParticipant1_validateContextControlCode(studyTestPerformer, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyTestPerformer_validateStudyTestPerformerTemplateId(studyTestPerformer, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyTestPerformer_validateStudyTestPerformerTypeCode(studyTestPerformer, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateStudyTestPerformerTemplateId constraint of '<em>Study Test Performer</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyTestPerformer_validateStudyTestPerformerTemplateId(StudyTestPerformer studyTestPerformer, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyTestPerformer.validateStudyTestPerformerTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateStudyTestPerformerTypeCode constraint of '<em>Study Test Performer</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyTestPerformer_validateStudyTestPerformerTypeCode(StudyTestPerformer studyTestPerformer, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyTestPerformer.validateStudyTestPerformerTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(questionnaireFinding, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingTemplateId(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingClassCode(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingCode(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingEffectiveTime(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingId(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingMoodCode(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingValue(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingStatusCode(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingGroupIdentifier(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingQuestionnaireCategoryAssociation(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingQuestionnaireSubCategoryAssociation(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingNonPerformanceReason(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingBaselineIndicator(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingDerivedDataIndicator(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingTimingReference(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingDataCollection(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingquestionnaireCategoryAssociationTypeCode(questionnaireFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateQuestionnaireFinding_validateQuestionnaireFindingquestionnaireSubCategoryAssociationTypeCode(questionnaireFinding, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateQuestionnaireFindingTemplateId constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingTemplateId(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingClassCode constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingClassCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingClassCode(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingCode constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingCode(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingEffectiveTime constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingEffectiveTime(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingId constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingId(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingId(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingMoodCode constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingMoodCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingValue constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingValue(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingValue(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingStatusCode constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingStatusCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingGroupIdentifier constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingGroupIdentifier(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingGroupIdentifier(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingQuestionnaireCategoryAssociation constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingQuestionnaireCategoryAssociation(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingQuestionnaireCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingQuestionnaireSubCategoryAssociation constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingQuestionnaireSubCategoryAssociation(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingQuestionnaireSubCategoryAssociation(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingNonPerformanceReason constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingNonPerformanceReason(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingNonPerformanceReason(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingBaselineIndicator constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingBaselineIndicator(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingBaselineIndicator(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingDerivedDataIndicator constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingDerivedDataIndicator(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingDerivedDataIndicator(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingTimingReference constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingTimingReference(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingTimingReference(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingDataCollection constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingDataCollection(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingDataCollection(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingquestionnaireCategoryAssociationTypeCode constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingquestionnaireCategoryAssociationTypeCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingquestionnaireCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * Validates the validateQuestionnaireFindingquestionnaireSubCategoryAssociationTypeCode constraint of '<em>Questionnaire Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateQuestionnaireFinding_validateQuestionnaireFindingquestionnaireSubCategoryAssociationTypeCode(QuestionnaireFinding questionnaireFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return questionnaireFinding.validateQuestionnaireFindingquestionnaireSubCategoryAssociationTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyFindingEvaluator(StudyFindingEvaluator studyFindingEvaluator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(studyFindingEvaluator, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(studyFindingEvaluator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(studyFindingEvaluator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(studyFindingEvaluator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(studyFindingEvaluator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(studyFindingEvaluator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(studyFindingEvaluator, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(studyFindingEvaluator, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateParticipant1_validateContextControlCode(studyFindingEvaluator, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyFindingEvaluator_validateStudyFindingEvaluatorTemplateId(studyFindingEvaluator, diagnostics, context);
    if (result || diagnostics != null) result &= validateStudyFindingEvaluator_validateStudyFindingEvaluatorTypeCode(studyFindingEvaluator, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateStudyFindingEvaluatorTemplateId constraint of '<em>Study Finding Evaluator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyFindingEvaluator_validateStudyFindingEvaluatorTemplateId(StudyFindingEvaluator studyFindingEvaluator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyFindingEvaluator.validateStudyFindingEvaluatorTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateStudyFindingEvaluatorTypeCode constraint of '<em>Study Finding Evaluator</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateStudyFindingEvaluator_validateStudyFindingEvaluatorTypeCode(StudyFindingEvaluator studyFindingEvaluator, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return studyFindingEvaluator.validateStudyFindingEvaluatorTypeCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(subjectDataNonClinicalTrials, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateClinicalDocument_validateClassCode(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateClinicalDocument_validateMoodCode(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsTemplateId(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsClassCode(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCodeP(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCode(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsConfidentialityCodeP(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsConfidentialityCode(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsEffectiveTime(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsId(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsLanguageCode(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsMoodCode(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsRealmCode(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsSetId(subjectDataNonClinicalTrials, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsVersionNumber(subjectDataNonClinicalTrials, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsTemplateId constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsTemplateId(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsClassCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsClassCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsClassCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsCodeP constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCodeP(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsCodeP(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsConfidentialityCodeP constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsConfidentialityCodeP(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsConfidentialityCodeP(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsConfidentialityCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsConfidentialityCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsConfidentialityCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsEffectiveTime constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsEffectiveTime(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsId constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsId(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsLanguageCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsLanguageCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsLanguageCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsMoodCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsMoodCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsRealmCode constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsRealmCode(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsRealmCode(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsSetId constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsSetId(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsSetId(diagnostics, context);
  }

  /**
   * Validates the validateSubjectDataNonClinicalTrialsVersionNumber constraint of '<em>Subject Data Non Clinical Trials</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectDataNonClinicalTrials_validateSubjectDataNonClinicalTrialsVersionNumber(SubjectDataNonClinicalTrials subjectDataNonClinicalTrials, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectDataNonClinicalTrials.validateSubjectDataNonClinicalTrialsVersionNumber(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanSubjectDataDocumentBody(NonHumanSubjectDataDocumentBody nonHumanSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(nonHumanSubjectDataDocumentBody, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateSection_validateClassCode(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateSection_validateMoodCode(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyTemplateId(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyClassCode(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyCode(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyCodeP(nonHumanSubjectDataDocumentBody, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyMoodCode(nonHumanSubjectDataDocumentBody, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateNonHumanSubjectDataDocumentBodyTemplateId constraint of '<em>Non Human Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyTemplateId(NonHumanSubjectDataDocumentBody nonHumanSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanSubjectDataDocumentBody.validateNonHumanSubjectDataDocumentBodyTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanSubjectDataDocumentBodyClassCode constraint of '<em>Non Human Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyClassCode(NonHumanSubjectDataDocumentBody nonHumanSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanSubjectDataDocumentBody.validateNonHumanSubjectDataDocumentBodyClassCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanSubjectDataDocumentBodyCode constraint of '<em>Non Human Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyCode(NonHumanSubjectDataDocumentBody nonHumanSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanSubjectDataDocumentBody.validateNonHumanSubjectDataDocumentBodyCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanSubjectDataDocumentBodyCodeP constraint of '<em>Non Human Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyCodeP(NonHumanSubjectDataDocumentBody nonHumanSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanSubjectDataDocumentBody.validateNonHumanSubjectDataDocumentBodyCodeP(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanSubjectDataDocumentBodyMoodCode constraint of '<em>Non Human Subject Data Document Body</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanSubjectDataDocumentBody_validateNonHumanSubjectDataDocumentBodyMoodCode(NonHumanSubjectDataDocumentBody nonHumanSubjectDataDocumentBody, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanSubjectDataDocumentBody.validateNonHumanSubjectDataDocumentBodyMoodCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(nonHumanExposure, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= cdaValidator.validateSubstanceAdministration_validateClassCode(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureTemplateId(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureClassCode(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureDoseQuantity(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureEffectiveTime(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureId(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureMoodCode(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureRouteCode(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureMaxDoseQuantity(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureText(nonHumanExposure, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanExposure_validateNonHumanExposureApproachSiteCode(nonHumanExposure, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateNonHumanExposureTemplateId constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureTemplateId(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanExposureClassCode constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureClassCode(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureClassCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanExposureDoseQuantity constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureDoseQuantity(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureDoseQuantity(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanExposureEffectiveTime constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureEffectiveTime(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanExposureId constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureId(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureId(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanExposureMoodCode constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureMoodCode(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanExposureRouteCode constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureRouteCode(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureRouteCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanExposureMaxDoseQuantity constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureMaxDoseQuantity(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureMaxDoseQuantity(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanExposureText constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureText(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureText(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanExposureApproachSiteCode constraint of '<em>Non Human Exposure</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanExposure_validateNonHumanExposureApproachSiteCode(NonHumanExposure nonHumanExposure, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanExposure.validateNonHumanExposureApproachSiteCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanDisposition(NonHumanDisposition nonHumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(nonHumanDisposition, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanDisposition_validateNonHumanDispositionTemplateId(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanDisposition_validateNonHumanDispositionClassCode(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanDisposition_validateNonHumanDispositionCode(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanDisposition_validateNonHumanDispositionEffectiveTime(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanDisposition_validateNonHumanDispositionId(nonHumanDisposition, diagnostics, context);
    if (result || diagnostics != null) result &= validateNonHumanDisposition_validateNonHumanDispositionMoodCode(nonHumanDisposition, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateNonHumanDispositionTemplateId constraint of '<em>Non Human Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanDisposition_validateNonHumanDispositionTemplateId(NonHumanDisposition nonHumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanDisposition.validateNonHumanDispositionTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanDispositionClassCode constraint of '<em>Non Human Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanDisposition_validateNonHumanDispositionClassCode(NonHumanDisposition nonHumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanDisposition.validateNonHumanDispositionClassCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanDispositionCode constraint of '<em>Non Human Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanDisposition_validateNonHumanDispositionCode(NonHumanDisposition nonHumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanDisposition.validateNonHumanDispositionCode(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanDispositionEffectiveTime constraint of '<em>Non Human Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanDisposition_validateNonHumanDispositionEffectiveTime(NonHumanDisposition nonHumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanDisposition.validateNonHumanDispositionEffectiveTime(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanDispositionId constraint of '<em>Non Human Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanDisposition_validateNonHumanDispositionId(NonHumanDisposition nonHumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanDisposition.validateNonHumanDispositionId(diagnostics, context);
  }

  /**
   * Validates the validateNonHumanDispositionMoodCode constraint of '<em>Non Human Disposition</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateNonHumanDisposition_validateNonHumanDispositionMoodCode(NonHumanDisposition nonHumanDisposition, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return nonHumanDisposition.validateNonHumanDispositionMoodCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalLaboratoryTestResult(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(humanClinicalLaboratoryTestResult, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultTemplateId(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultClassCode(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultCode(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultId(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMoodCode(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultStatusCode(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultValue(humanClinicalLaboratoryTestResult, diagnostics, context);
    if (result || diagnostics != null) result &= validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMethodCode(humanClinicalLaboratoryTestResult, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateHumanClinicalLaboratoryTestResultTemplateId constraint of '<em>Human Clinical Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultTemplateId(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultTemplateId(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalLaboratoryTestResultClassCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultClassCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultClassCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalLaboratoryTestResultCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalLaboratoryTestResultId constraint of '<em>Human Clinical Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultId(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultId(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalLaboratoryTestResultMoodCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMoodCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultMoodCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalLaboratoryTestResultStatusCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultStatusCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultStatusCode(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalLaboratoryTestResultValue constraint of '<em>Human Clinical Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultValue(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultValue(diagnostics, context);
  }

  /**
   * Validates the validateHumanClinicalLaboratoryTestResultMethodCode constraint of '<em>Human Clinical Laboratory Test Result</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateHumanClinicalLaboratoryTestResult_validateHumanClinicalLaboratoryTestResultMethodCode(HumanClinicalLaboratoryTestResult humanClinicalLaboratoryTestResult, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return humanClinicalLaboratoryTestResult.validateHumanClinicalLaboratoryTestResultMethodCode(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodyWeight(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(bodyWeight, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(bodyWeight, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(bodyWeight, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(bodyWeight, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(bodyWeight, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(bodyWeight, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(bodyWeight, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(bodyWeight, diagnostics, context);
    if (result || diagnostics != null) result &= validateBodyWeight_validateBodyWeightTemplateId(bodyWeight, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateBodyWeightTemplateId constraint of '<em>Body Weight</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodyWeight_validateBodyWeightTemplateId(BodyWeight bodyWeight, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return bodyWeight.validateBodyWeightTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodyWeightGain(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(bodyWeightGain, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(bodyWeightGain, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(bodyWeightGain, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(bodyWeightGain, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(bodyWeightGain, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(bodyWeightGain, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(bodyWeightGain, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(bodyWeightGain, diagnostics, context);
    if (result || diagnostics != null) result &= validateBodyWeightGain_validateBodyWeightGainTemplateId(bodyWeightGain, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateBodyWeightGainTemplateId constraint of '<em>Body Weight Gain</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateBodyWeightGain_validateBodyWeightGainTemplateId(BodyWeightGain bodyWeightGain, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return bodyWeightGain.validateBodyWeightGainTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalObservation(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(clinicalObservation, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(clinicalObservation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(clinicalObservation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(clinicalObservation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(clinicalObservation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(clinicalObservation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(clinicalObservation, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(clinicalObservation, diagnostics, context);
    if (result || diagnostics != null) result &= validateClinicalObservation_validateClinicalObservationTemplateId(clinicalObservation, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateClinicalObservationTemplateId constraint of '<em>Clinical Observation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateClinicalObservation_validateClinicalObservationTemplateId(ClinicalObservation clinicalObservation, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return clinicalObservation.validateClinicalObservationTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDeathDiagnosis(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(deathDiagnosis, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(deathDiagnosis, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(deathDiagnosis, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(deathDiagnosis, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(deathDiagnosis, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(deathDiagnosis, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(deathDiagnosis, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(deathDiagnosis, diagnostics, context);
    if (result || diagnostics != null) result &= validateDeathDiagnosis_validateDeathDiagnosisTemplateId(deathDiagnosis, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateDeathDiagnosisTemplateId constraint of '<em>Death Diagnosis</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateDeathDiagnosis_validateDeathDiagnosisTemplateId(DeathDiagnosis deathDiagnosis, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return deathDiagnosis.validateDeathDiagnosisTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFoodandWaterConsumption(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(foodandWaterConsumption, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(foodandWaterConsumption, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(foodandWaterConsumption, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(foodandWaterConsumption, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(foodandWaterConsumption, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(foodandWaterConsumption, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(foodandWaterConsumption, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(foodandWaterConsumption, diagnostics, context);
    if (result || diagnostics != null) result &= validateFoodandWaterConsumption_validateFoodandWaterConsumptionTemplateId(foodandWaterConsumption, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateFoodandWaterConsumptionTemplateId constraint of '<em>Foodand Water Consumption</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateFoodandWaterConsumption_validateFoodandWaterConsumptionTemplateId(FoodandWaterConsumption foodandWaterConsumption, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return foodandWaterConsumption.validateFoodandWaterConsumptionTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMacroscopicFinding(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(macroscopicFinding, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(macroscopicFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(macroscopicFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(macroscopicFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(macroscopicFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(macroscopicFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(macroscopicFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(macroscopicFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateMacroscopicFinding_validateMacroscopicFindingTemplateId(macroscopicFinding, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateMacroscopicFindingTemplateId constraint of '<em>Macroscopic Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMacroscopicFinding_validateMacroscopicFindingTemplateId(MacroscopicFinding macroscopicFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return macroscopicFinding.validateMacroscopicFindingTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicroscopicFindings(MicroscopicFindings microscopicFindings, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(microscopicFindings, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(microscopicFindings, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(microscopicFindings, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(microscopicFindings, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(microscopicFindings, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(microscopicFindings, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(microscopicFindings, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(microscopicFindings, diagnostics, context);
    if (result || diagnostics != null) result &= validateMicroscopicFindings_validateMicroscopicFindingsTemplateId(microscopicFindings, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateMicroscopicFindingsTemplateId constraint of '<em>Microscopic Findings</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateMicroscopicFindings_validateMicroscopicFindingsTemplateId(MicroscopicFindings microscopicFindings, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return microscopicFindings.validateMicroscopicFindingsTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateOrganMeasurement(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(organMeasurement, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(organMeasurement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(organMeasurement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(organMeasurement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(organMeasurement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(organMeasurement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(organMeasurement, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(organMeasurement, diagnostics, context);
    if (result || diagnostics != null) result &= validateOrganMeasurement_validateOrganMeasurementTemplateId(organMeasurement, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateOrganMeasurementTemplateId constraint of '<em>Organ Measurement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateOrganMeasurement_validateOrganMeasurementTemplateId(OrganMeasurement organMeasurement, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return organMeasurement.validateOrganMeasurementTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePalpableMass(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(palpableMass, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(palpableMass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(palpableMass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(palpableMass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(palpableMass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(palpableMass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(palpableMass, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(palpableMass, diagnostics, context);
    if (result || diagnostics != null) result &= validatePalpableMass_validatePalpableMassTemplateId(palpableMass, diagnostics, context);
    return result;
  }

  /**
   * Validates the validatePalpableMassTemplateId constraint of '<em>Palpable Mass</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validatePalpableMass_validatePalpableMassTemplateId(PalpableMass palpableMass, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return palpableMass.validatePalpableMassTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTumorFinding(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(tumorFinding, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(tumorFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(tumorFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(tumorFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(tumorFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(tumorFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(tumorFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(tumorFinding, diagnostics, context);
    if (result || diagnostics != null) result &= validateTumorFinding_validateTumorFindingTemplateId(tumorFinding, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateTumorFindingTemplateId constraint of '<em>Tumor Finding</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateTumorFinding_validateTumorFindingTemplateId(TumorFinding tumorFinding, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return tumorFinding.validateTumorFindingTemplateId(diagnostics, context);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectPool(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    if (!validate_NoCircularContainment(subjectPool, diagnostics, context)) return false;
    boolean result = validate_EveryMultiplicityConforms(subjectPool, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryDataValueConforms(subjectPool, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryReferenceIsContained(subjectPool, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryProxyResolves(subjectPool, diagnostics, context);
    if (result || diagnostics != null) result &= validate_UniqueID(subjectPool, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryKeyUnique(subjectPool, diagnostics, context);
    if (result || diagnostics != null) result &= validate_EveryMapEntryUnique(subjectPool, diagnostics, context);
    if (result || diagnostics != null) result &= validateSubjectPool_validateSubjectPoolTemplateId(subjectPool, diagnostics, context);
    return result;
  }

  /**
   * Validates the validateSubjectPoolTemplateId constraint of '<em>Subject Pool</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean validateSubjectPool_validateSubjectPoolTemplateId(SubjectPool subjectPool, DiagnosticChain diagnostics, Map<Object, Object> context)
  {
    return subjectPool.validateSubjectPoolTemplateId(diagnostics, context);
  }

  /**
   * Returns the resource locator that will be used to fetch messages for this validator's diagnostics.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ResourceLocator getResourceLocator()
  {
    return SdtmPlugin.INSTANCE;
  }

} //SdtmValidator
