<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_BK1HwF10EeGh_7NFCJ3fGA" name="sdtm">
    <packageImport xmi:id="_BOQPMV10EeGh_7NFCJ3fGA">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_BOQPMl10EeGh_7NFCJ3fGA">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.sdtm.model/model/sdtm-vocab.uml#_BLRzsF10EeGh_7NFCJ3fGA"/>
    </packageImport>
    <packageImport xmi:id="_0tP_8PCjEeGpx4DczVG-Cw">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_2WgcwPCjEeGpx4DczVG-Cw">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_BMxBcV10EeGh_7NFCJ3fGA" name="Subject Data Human Clinical Trials">
      <ownedComment xmi:id="_btxXIGn6EeGH0KSwdtr7gA">
        <body>This fundamental template contains the core document related information for reporting the experience of a human subject within a clinical trial.</body>
      </ownedComment>
      <ownedRule xmi:id="_g5GW4BpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsTemplateId" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5G98BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5WOgBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsClassCode" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5WOgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::ActClinicalDocument::DOCCLIN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5sMwBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsMoodCode" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5sMwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode') and self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6h6QBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsCodeP" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6h6QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6GccBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsCode" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6HDgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = 'TBD' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g7cgQBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsConfidentialityCodeP" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g7cgQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g7BpgBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsConfidentialityCode" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g7BpgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined() and self.confidentialityCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.confidentialityCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.5.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g72v8BpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsEffectiveTime" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g72v8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g8IcwBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsId" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g8IcwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.id.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g8awoBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsLanguageCode" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g8awoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g8sdcBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsRealmCode" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g8sdcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.realmCode->isEmpty() or self.realmCode->exists(element | element.isNullFlavorUndefined())) implies (not self.realmCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g8-xUBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsSetId" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g8-xURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.setId.oclIsUndefined() or self.setId.isNullFlavorUndefined()) implies (not self.setId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g9QeIBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsVersionNumber" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g9QeIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.versionNumber.oclIsUndefined() or self.versionNumber.isNullFlavorUndefined()) implies (not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hedGsBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsStudyRelationship" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hedGsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hhJ1YBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsSubjectParticipation" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhJ1YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYb2QBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsAuthor" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYb2QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZEIYBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsCustodian" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZEIYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_omdEIBpQEeSd5OoVIuDNwg" name="Subject Data Human Clinical TrialsHuman Clinical Subject Data Document Section" constrainedElement="_BMxBcV10EeGh_7NFCJ3fGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_omdEIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(sdtm::HumanClinicalSubjectDataDocumentSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_BMxBc110EeGh_7NFCJ3fGA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_omm1IBpQEeSd5OoVIuDNwg" name="getHuman Clinical Subject Data Document Section" bodyCondition="_omm1IxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_omm1IxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_omm1IBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_omm1JBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(sdtm::HumanClinicalSubjectDataDocumentSection))->asSequence()->any(true).oclAsType(sdtm::HumanClinicalSubjectDataDocumentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_omm1IRpQEeSd5OoVIuDNwg" type="_FmC1AGSqEeGaWrlBtEAvSQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_omm1IhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1ruQ4GSqEeGaWrlBtEAvSQ" name="Human Clinical Subject Demographics">
      <ownedComment xmi:id="_nwpvoGn5EeGH0KSwdtr7gA">
        <body>The template captures the demographic information for a study subject.  The section includes the information which is not accommodated within the recordTarget structure.   Currently, for human clinical trial reporting, age of the subject is the only contained item.</body>
      </ownedComment>
      <ownedRule xmi:id="_hGkLIBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsTemplateId" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hGkyMBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.46')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hG3GEBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsMoodCode" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hG3GERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hH0IUBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsCodeP" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hH0IURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hHZRkBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsCode" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hHZRkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'DMGtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ihZxcBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsData Collection" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ihZxcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kFbwABpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsStudy Arm" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kFbwARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::StudyArm) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)->size() = 2</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mIInkBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsParticipant" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mIInkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mrOtkBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsComment" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mrOtkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mrdXEBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsDomain Assignment" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mrdXERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mrsAkBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsRelated Record" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mrsAkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mr6qEBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsSupplemental Value" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mr6qERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nFdLcBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsReference Period" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nFdygBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::ReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ohwKUBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsFinding About" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ohwKURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_osFLABpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osFLARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_osIOUBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osIOURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_osKqkBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osKqkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_osNG0BpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osNt4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'C25150' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_osQKIBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeValue" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osQKIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::PQ))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_osSmYBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationTypeCode" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osSmYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_osVpsBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAge" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osVpsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_osrA4BpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsLocationParticipationStudySiteClassCode" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osrA4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(classCode=vocab::RoleClassRoot::SDLOC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_osuEMBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsLocationParticipationStudySiteAddr" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osuEMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject((addr->isEmpty() or addr->exists(element | element.isNullFlavorUndefined())) implies (addr->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oswgcBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsLocationParticipationTypeCode" constrainedElement="_1ruQ4GSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_osxHgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::LOC)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1ruQ4WSqEeGaWrlBtEAvSQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_ihjicBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_ihjicxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ihjicxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ihjicBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ihjidBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ihjicRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ihjichpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kFlhABpQEeSd5OoVIuDNwg" name="getStudy Arms" bodyCondition="_kFlhAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kFlhAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kFlhABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kFlhBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::StudyArm)).oclAsType(sdtm::StudyArm)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kFlhARpQEeSd5OoVIuDNwg" type="_NPsncGbuEeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kFlhAhpQEeSd5OoVIuDNwg" value="2"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mrX3gBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mrX3gxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mrX3gxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mrX3gBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mrYekBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mrX3gRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mrX3ghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mrmhABpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mrmhAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mrmhAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mrmhABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mrmhBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mrmhARpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mrmhAhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mr1KgBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mr1xkRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mr1xkRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mr1KgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mr1xkhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mr1KgRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mr1xkBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_msD0ABpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_msEbERpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_msEbERpQEeSd5OoVIuDNwg" name="body" constrainedElement="_msD0ABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_msEbEhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_msD0ARpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_msEbEBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nFnjgBpQEeSd5OoVIuDNwg" name="getReference Period" bodyCondition="_nFnjgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nFnjgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nFnjgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nFnjhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::ReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::ReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nFnjgRpQEeSd5OoVIuDNwg" type="_XrR40NW4EeGKmsh0mvGT9Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nFnjghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oh7wgBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_oh8XkhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oh8XkhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oh7wgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oh8XkxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oh8XkBpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oh8XkRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JhW-kGSrEeGaWrlBtEAvSQ" name="Visit">
      <ownedComment xmi:id="_M1kNEGiXEeG7jNHx5OkAWw">
        <body>The template records activity that is captured within the data report of a subject's experience is organized by visit, by the subject's encounter with a study clinician.  The encounter may be face to face, or it may be indirect, such as over the phone.  All reported activity either takes place within the context of a study, or is associated with the visit (encounter) in which it is reported to the investigator.</body>
      </ownedComment>
      <ownedRule xmi:id="_hLMMcBpQEeSd5OoVIuDNwg" name="VisitTemplateId" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hLMzgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.100')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hLcEEBpQEeSd5OoVIuDNwg" name="VisitClassCode" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hLcEERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::ENC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hLyCUBpQEeSd5OoVIuDNwg" name="VisitMoodCode" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hLyCURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentEncounterMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hMOHMBpQEeSd5OoVIuDNwg" name="VisitCode" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hMOHMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C78802' or value.code = 'C78800' or value.code = '78801' or value.code = '78727' or value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hMnv0BpQEeSd5OoVIuDNwg" name="VisitCodeP" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hMnv0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hNBYcBpQEeSd5OoVIuDNwg" name="VisitId" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hNBYcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hNaaABpQEeSd5OoVIuDNwg" name="VisitText" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hNaaARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hNtU8BpQEeSd5OoVIuDNwg" name="VisitEffectiveTime" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hNtU8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hePrUBpQEeSd5OoVIuDNwg" name="VisitHuman Clinical Vital Sign" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hePrURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::VitalSign) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_horZsBpQEeSd5OoVIuDNwg" name="VisitPlanned Study Day" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_horZsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PlannedStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i4D98BpQEeSd5OoVIuDNwg" name="VisitECG Test Result" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i4D98RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ECGTestResult) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jVzC0BpQEeSd5OoVIuDNwg" name="VisitPhysical Examination" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jVzC0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PhysicalExaminationFinding) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jllyUBpQEeSd5OoVIuDNwg" name="VisitMicrobiology Specimen" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlmZYBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::MicrobiologySpecimenFinding) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrJAsBpQEeSd5OoVIuDNwg" name="VisitMicrobiology Susceptibility" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrJAsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::MicrobiologySusceptibility) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j-OUwBpQEeSd5OoVIuDNwg" name="VisitPharmacokinetic Concentration Finding" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j-OUwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PharmacokineticConcentrationFinding) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j-c-QBpQEeSd5OoVIuDNwg" name="VisitFinding About" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j-c-QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kEfU0BpQEeSd5OoVIuDNwg" name="VisitDrug Accountability" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kEfU0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DrugAccountability) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kHsZ0BpQEeSd5OoVIuDNwg" name="VisitStudy Day Period" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kHtA4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nBhGoBpQEeSd5OoVIuDNwg" name="VisitComment" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nBhtsBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nBwXMBpQEeSd5OoVIuDNwg" name="VisitDomain Assignment" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nBwXMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nB_nwBpQEeSd5OoVIuDNwg" name="VisitRelated Record" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nB_nwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nCORQBpQEeSd5OoVIuDNwg" name="VisitSupplemental Value" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nCORQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZx6EBpQEeSd5OoVIuDNwg" name="VisitHuman Clinical Laboratory Test Result" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZx6ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::HumanClinicalLaboratoryTestResult) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_omuJ4BpQEeSd5OoVIuDNwg" name="VisitQuestionnaire Finding" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_omuJ4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::QuestionnaireFinding) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_onEIIBpQEeSd5OoVIuDNwg" name="VisitPharmacokinetic Parameter Finding" constrainedElement="_JhW-kGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_onEIIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PharmacokineticParameterFinding) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JhW-kWSrEeGaWrlBtEAvSQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_AAXtEEbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_heZcUBpQEeSd5OoVIuDNwg" name="getHuman Clinical Vital Signs" bodyCondition="_heZcUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_heZcUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_heZcUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_heZcVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::VitalSign)).oclAsType(sdtm::VitalSign)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_heZcURpQEeSd5OoVIuDNwg" type="_pxvVsGSrEeGaWrlBtEAvSQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_heZcUhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ho1KsBpQEeSd5OoVIuDNwg" name="getPlanned Study Day" bodyCondition="_ho1KsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ho1KsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ho1KsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ho1KtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PlannedStudyDay))->asSequence()->any(true).oclAsType(sdtm::PlannedStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ho1KsRpQEeSd5OoVIuDNwg" type="_li9xQGeiEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ho1KshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i4Nu8BpQEeSd5OoVIuDNwg" name="getECG Test Results" bodyCondition="_i4Nu8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_i4Nu8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_i4Nu8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i4Nu9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ECGTestResult)).oclAsType(sdtm::ECGTestResult)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i4Nu8RpQEeSd5OoVIuDNwg" type="_CPm5YIslEeGEXvbgIb1duQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i4Nu8hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jV8z0BpQEeSd5OoVIuDNwg" name="getPhysical Examinations" bodyCondition="_jV8z0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jV8z0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jV8z0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jV8z1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PhysicalExaminationFinding)).oclAsType(sdtm::PhysicalExaminationFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jV8z0RpQEeSd5OoVIuDNwg" type="_mA6qUI_rEeG51rA0mhosMg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jV8z0hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jlvjUBpQEeSd5OoVIuDNwg" name="getMicrobiology Specimen" bodyCondition="_jlvjUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jlvjUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jlvjUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlvjVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::MicrobiologySpecimenFinding))->asSequence()->any(true).oclAsType(sdtm::MicrobiologySpecimenFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jlvjURpQEeSd5OoVIuDNwg" type="_T0sngJLKEeGM5Pa1LbomZA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jlvjUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jrSKoBpQEeSd5OoVIuDNwg" name="getMicrobiology Susceptibility" bodyCondition="_jrSKoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jrSKoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jrSKoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrSxsBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::MicrobiologySusceptibility))->asSequence()->any(true).oclAsType(sdtm::MicrobiologySusceptibility)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jrSKoRpQEeSd5OoVIuDNwg" type="_zXC1IJLkEeGM5Pa1LbomZA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jrSKohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j-YFwBpQEeSd5OoVIuDNwg" name="getPharmacokinetic Concentration Finding" bodyCondition="_j-YFwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j-YFwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j-YFwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j-YFxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PharmacokineticConcentrationFinding))->asSequence()->any(true).oclAsType(sdtm::PharmacokineticConcentrationFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j-YFwRpQEeSd5OoVIuDNwg" type="_CwmU4JLsEeGM5Pa1LbomZA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j-YFwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j-mvQBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_j-mvQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j-mvQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j-mvQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j-mvRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j-mvQRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j-mvQhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kEoewBpQEeSd5OoVIuDNwg" name="getDrug Accountability" bodyCondition="_kEoewxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kEoewxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kEoewBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kEoexBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DrugAccountability))->asSequence()->any(true).oclAsType(sdtm::DrugAccountability)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kEoewRpQEeSd5OoVIuDNwg" type="_Dj3ekJSREeGlSMYQDPvGqQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kEoewhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kH2K0BpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_kH2K0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kH2K0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kH2K0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kH2K1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kH2K0RpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kH2K0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nBq3oBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_nBq3oxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nBq3oxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nBq3oBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nBq3pBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nBq3oRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nBq3ohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nB6IMBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_nB6IMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nB6IMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nB6IMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nB6INBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nB6IMRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nB6IMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nCIxsBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_nCJYwBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nCJYwBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nCIxsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nCJYwRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nCIxsRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nCIxshpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nCXbMBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_nCYCQRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nCYCQRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nCXbMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nCYCQhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nCXbMRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nCYCQBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oZ7EABpQEeSd5OoVIuDNwg" name="getHuman Clinical Laboratory Test Results" bodyCondition="_oZ7rEhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oZ7rEhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oZ7EABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZ7rExpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::HumanClinicalLaboratoryTestResult)).oclAsType(sdtm::HumanClinicalLaboratoryTestResult)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oZ7rEBpQEeSd5OoVIuDNwg" type="_jQ-2sJoaEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZ7rERpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_om7lQBpQEeSd5OoVIuDNwg" name="getQuestionnaire Findings" bodyCondition="_om8MUhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_om8MUhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_om7lQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_om8MUxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::QuestionnaireFinding)).oclAsType(sdtm::QuestionnaireFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_om8MUBpQEeSd5OoVIuDNwg" type="_xmX7AJBuEeGHg6ZmktWLJQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_om8MURpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_onOgMBpQEeSd5OoVIuDNwg" name="getPharmacokinetic Parameter Findings" bodyCondition="_onOgMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_onOgMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_onOgMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_onOgNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PharmacokineticParameterFinding)).oclAsType(sdtm::PharmacokineticParameterFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_onOgMRpQEeSd5OoVIuDNwg" type="_olGlMJOXEeGM5Pa1LbomZA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_onOgMhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aI700GSrEeGaWrlBtEAvSQ" name="Adverse Event">
      <ownedComment xmi:id="_G_ZbEGe_EeGFKaG0B9CEsg">
        <body>The template captures data that the SDTM IG organizes into the adverse event domain.  It includes information on each adverse event (not necessarily linked to the study treatment) that ocurred to a study subject.  It should include clinical data describing &quot;any untoward medical occurrence in a patient or clinical investigation subject administered a pharmaceutical product and which does not necessarily have to have a causal relationship with this treatment&quot; (ICH E2A).</body>
      </ownedComment>
      <ownedRule xmi:id="_hOILsBpQEeSd5OoVIuDNwg" name="Adverse EventTemplateId" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hOIywBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hOYDUBpQEeSd5OoVIuDNwg" name="Adverse EventClassCode" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hOYDURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hOuBkBpQEeSd5OoVIuDNwg" name="Adverse EventMoodCode" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hOuBkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hPCKoBpQEeSd5OoVIuDNwg" name="Adverse EventId" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hPCKoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hP0NwBpQEeSd5OoVIuDNwg" name="Adverse EventCodeP" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hP0NwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hPZ-EBpQEeSd5OoVIuDNwg" name="Adverse EventCode" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hPZ-ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C49562' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hQNPUBpQEeSd5OoVIuDNwg" name="Adverse EventEffectiveTime" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hQNPURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hQnfABpQEeSd5OoVIuDNwg" name="Adverse EventValue" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hQnfARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystemName = 'MedDRA' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hRBHoBpQEeSd5OoVIuDNwg" name="Adverse EventValueP" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hRBHoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hR7toBpQEeSd5OoVIuDNwg" name="Adverse EventTargetSiteCodeP" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hR7toRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hRiFABpQEeSd5OoVIuDNwg" name="Adverse EventTargetSiteCode" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hRisEBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hwZyUBpQEeSd5OoVIuDNwg" name="Adverse EventGroupIdentifier" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hwaZYBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hzUjcBpQEeSd5OoVIuDNwg" name="Adverse EventBody System or Organ Class" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hzUjcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::BodySystemorOrganClass) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h2QisBpQEeSd5OoVIuDNwg" name="Adverse EventEvent Severity" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h2QisRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventorFindingSeverity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iVgqgBpQEeSd5OoVIuDNwg" name="Adverse EventPre-Specified Event" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iVgqgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PreSpecifiedEvent) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kInm4BpQEeSd5OoVIuDNwg" name="Adverse EventStudy Day Period" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kInm4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mYQuQBpQEeSd5OoVIuDNwg" name="Adverse EventDomain Assignment" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mYQuQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mYfXwBpQEeSd5OoVIuDNwg" name="Adverse EventComment" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mYfXwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mbF_0BpQEeSd5OoVIuDNwg" name="Adverse EventRelated Record" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mbF_0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mgZ9oBpQEeSd5OoVIuDNwg" name="Adverse EventSupplemental Value" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mgZ9oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nMPv8BpQEeSd5OoVIuDNwg" name="Adverse EventStart Relative to Reference Period" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nMPv8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nMfAgBpQEeSd5OoVIuDNwg" name="Adverse EventStop Relative to Reference Period" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nMfAgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nblzgBpQEeSd5OoVIuDNwg" name="Adverse EventSerious Event" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nblzgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SeriousEvent) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nev1MBpQEeSd5OoVIuDNwg" name="Adverse EventStudy Treatment Action Taken" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nev1MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyTreatmentActionTaken) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nhPIgBpQEeSd5OoVIuDNwg" name="Adverse EventOther Treatment Action Taken" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nhPIgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::OtherTreatmentActionTaken) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nkZKMBpQEeSd5OoVIuDNwg" name="Adverse EventStudy Treatment Causality" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nkZKMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyTreatmentCausality) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nm6SsBpQEeSd5OoVIuDNwg" name="Adverse EventNon-Study Treatment Relationship" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nm6SsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonStudyTreatmentRelationship) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nqE7cBpQEeSd5OoVIuDNwg" name="Adverse EventEvent Pattern" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nqE7cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventPattern) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ntO9IBpQEeSd5OoVIuDNwg" name="Adverse EventEvent Outcome" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ntO9IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventOutcome) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nvyh4BpQEeSd5OoVIuDNwg" name="Adverse EventConcomitant Treatment" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nvyh4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ConcomitantTreatment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nzWMMBpQEeSd5OoVIuDNwg" name="Adverse EventToxicity" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzWMMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Toxicity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n3S4EBpQEeSd5OoVIuDNwg" name="Adverse EventCategory" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n3S4ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n_XO8BpQEeSd5OoVIuDNwg" name="Adverse EventSub-Category" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n_XO8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oaqq4BpQEeSd5OoVIuDNwg" name="Adverse EventFinding About" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaqq4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_opi0YBpQEeSd5OoVIuDNwg" name="Adverse EventEvent Duration" constrainedElement="_aI700GSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_opi0YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventDuration) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aI700WSrEeGaWrlBtEAvSQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_hwjjUBpQEeSd5OoVIuDNwg" name="getGroupIdentifier" bodyCondition="_hwjjUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_hwjjUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_hwjjUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_hwjjVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_hwjjURpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hwjjUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_hze7gBpQEeSd5OoVIuDNwg" name="getBody System or Organ Class" bodyCondition="_hze7gxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_hze7gxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_hze7gBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_hze7hBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodySystemorOrganClass))->asSequence()->any(true).oclAsType(sdtm::BodySystemorOrganClass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_hze7gRpQEeSd5OoVIuDNwg" type="_QmoEwGoUEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hze7ghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_h2cI4BpQEeSd5OoVIuDNwg" name="getEvent Severity" bodyCondition="_h2cI4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_h2cI4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_h2cI4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_h2cI5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventorFindingSeverity))->asSequence()->any(true).oclAsType(sdtm::EventorFindingSeverity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_h2cI4RpQEeSd5OoVIuDNwg" type="_nrFiEGoYEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_h2cI4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iVp0cBpQEeSd5OoVIuDNwg" name="getPre-Specified Event" bodyCondition="_iVqbgBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iVqbgBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iVp0cBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iVqbgRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PreSpecifiedEvent))->asSequence()->any(true).oclAsType(sdtm::PreSpecifiedEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iVp0cRpQEeSd5OoVIuDNwg" type="__G5heXIJEeGL-K1S1E9LrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iVp0chpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kIww0BpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_kIxX4RpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kIxX4RpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kIww0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kIxX4hpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kIww0RpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kIxX4BpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mYZ4MBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mYafQBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mYafQBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mYZ4MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mYafQRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mYZ4MRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mYZ4MhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mYohsBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mYohsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mYohsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mYohsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mYpIwBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mYohsRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mYohshpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mbPJwBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mbPJwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mbPJwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mbPJwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mbPw0BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mbPJwRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mbPJwhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mgjuoBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mgjuoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mgjuoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mgjuoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mgjupBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mgjuoRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mgjuohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nMZg8BpQEeSd5OoVIuDNwg" name="getStart Relative to Reference Period" bodyCondition="_nMaIABpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nMaIABpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nMZg8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nMaIARpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StartRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nMZg8RpQEeSd5OoVIuDNwg" type="_w_aIINW7EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nMZg8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nMoKcBpQEeSd5OoVIuDNwg" name="getStop Relative to Reference Period" bodyCondition="_nMoKcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nMoKcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nMoKcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nMoxgBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StopRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nMoKcRpQEeSd5OoVIuDNwg" type="_PTdgANW9EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nMoKchpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nbvkgBpQEeSd5OoVIuDNwg" name="getSerious Event" bodyCondition="_nbvkgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nbvkgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nbvkgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nbvkhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SeriousEvent))->asSequence()->any(true).oclAsType(sdtm::SeriousEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nbvkgRpQEeSd5OoVIuDNwg" type="_sYRDArZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nbvkghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ne4_IBpQEeSd5OoVIuDNwg" name="getStudy Treatment Action Taken" bodyCondition="_ne4_IxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ne4_IxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ne4_IBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ne5mMBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyTreatmentActionTaken))->asSequence()->any(true).oclAsType(sdtm::StudyTreatmentActionTaken)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ne4_IRpQEeSd5OoVIuDNwg" type="_sYRDL7ZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ne4_IhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nhY5gBpQEeSd5OoVIuDNwg" name="getOther Treatment Action Taken" bodyCondition="_nhY5gxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nhY5gxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nhY5gBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nhY5hBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::OtherTreatmentActionTaken))->asSequence()->any(true).oclAsType(sdtm::OtherTreatmentActionTaken)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nhY5gRpQEeSd5OoVIuDNwg" type="_sYRDRbZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nhY5ghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nki7MBpQEeSd5OoVIuDNwg" name="getStudy Treatment Causality" bodyCondition="_nki7MxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nki7MxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nki7MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nki7NBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyTreatmentCausality))->asSequence()->any(true).oclAsType(sdtm::StudyTreatmentCausality)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nki7MRpQEeSd5OoVIuDNwg" type="_sYRDXLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nki7MhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nnDcoBpQEeSd5OoVIuDNwg" name="getNon-Study Treatment Relationship" bodyCondition="_nnDcoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nnDcoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nnDcoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nnDcpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonStudyTreatmentRelationship))->asSequence()->any(true).oclAsType(sdtm::NonStudyTreatmentRelationship)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nnDcoRpQEeSd5OoVIuDNwg" type="_sYRDc7ZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nnDcohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nqOFYBpQEeSd5OoVIuDNwg" name="getEvent Pattern" bodyCondition="_nqOscRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nqOscRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nqOFYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nqOschpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventPattern))->asSequence()->any(true).oclAsType(sdtm::EventPattern)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nqOFYRpQEeSd5OoVIuDNwg" type="_sYRDirZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nqOscBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ntYHEBpQEeSd5OoVIuDNwg" name="getEvent Outcome" bodyCondition="_ntYuIRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ntYuIRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ntYHEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ntYuIhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventOutcome))->asSequence()->any(true).oclAsType(sdtm::EventOutcome)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ntYHERpQEeSd5OoVIuDNwg" type="_sYRDobZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ntYuIBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nv8S4BpQEeSd5OoVIuDNwg" name="getConcomitant Treatment" bodyCondition="_nv8S4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nv8S4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nv8S4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nv8S5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ConcomitantTreatment))->asSequence()->any(true).oclAsType(sdtm::ConcomitantTreatment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nv8S4RpQEeSd5OoVIuDNwg" type="_sYRDuLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nv8S4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nzf9MBpQEeSd5OoVIuDNwg" name="getToxicity" bodyCondition="_nzgkQhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nzgkQhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nzf9MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzgkQxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Toxicity))->asSequence()->any(true).oclAsType(sdtm::Toxicity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nzgkQBpQEeSd5OoVIuDNwg" type="_sYRDz7ZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nzgkQRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n3cpEBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n3cpExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n3cpExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n3cpEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n3cpFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n3cpERpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3cpEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n_g_8BpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_n_g_8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n_g_8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n_g_8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n_g_9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n_g_8RpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n_g_8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oa0b4BpQEeSd5OoVIuDNwg" name="getFinding About" bodyCondition="_oa1C8hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oa1C8hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oa0b4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oa1C8xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout))->asSequence()->any(true).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oa1C8BpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oa1C8RpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_opslYBpQEeSd5OoVIuDNwg" name="getEvent Duration" bodyCondition="_opslYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_opslYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_opslYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_optMcBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventDuration))->asSequence()->any(true).oclAsType(sdtm::EventDuration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_opslYRpQEeSd5OoVIuDNwg" type="_-HQWMPj8EeG7pMUQbTahtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_opslYhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pxvVsGSrEeGaWrlBtEAvSQ" name="Vital Sign">
      <ownedComment xmi:id="_zfXZgGn5EeGH0KSwdtr7gA">
        <body>A vital sign measurement that is collected from the study subject.  A vital sign is a measure of a particular physiological statistic, often taken by a health professional, that is intended to assess a basic body function.</body>
      </ownedComment>
      <packageImport xmi:id="_BOQPMF10EeGh_7NFCJ3fGA">
        <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
      </packageImport>
      <ownedRule xmi:id="_hStJsBpQEeSd5OoVIuDNwg" name="Vital SignTemplateId" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hSuX0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.101')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hS9BUBpQEeSd5OoVIuDNwg" name="Vital SignClassCode" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hS9BURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hTS_kBpQEeSd5OoVIuDNwg" name="Vital SignMoodCode" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hTS_kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hTmhkBpQEeSd5OoVIuDNwg" name="Vital SignId" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hTmhkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hT7RsBpQEeSd5OoVIuDNwg" name="Vital SignCode" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hT7RsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hUaZ4BpQEeSd5OoVIuDNwg" name="Vital SignStatusCode" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hUaZ4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hU0pkBpQEeSd5OoVIuDNwg" name="Vital SignEffectiveTime" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hU0pkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hVG9cBpQEeSd5OoVIuDNwg" name="Vital SignValue" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hVG9cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hV8D4BpQEeSd5OoVIuDNwg" name="Vital SignInterpretationCodeP" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hV8D4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hVh0MBpQEeSd5OoVIuDNwg" name="Vital SignInterpretationCode" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hVh0MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hW5GIBpQEeSd5OoVIuDNwg" name="Vital SignTargetSiteCodeP" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hW5GIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hWe2cBpQEeSd5OoVIuDNwg" name="Vital SignTargetSiteCode" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hWe2cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ho6DMBpQEeSd5OoVIuDNwg" name="Vital SignEvent Study Day" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ho6qQBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ht0_cBpQEeSd5OoVIuDNwg" name="Vital SignTimingReference" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ht0_cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h2hBYBpQEeSd5OoVIuDNwg" name="Vital SignNonPerformanceReason" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h2hocBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mFm4ABpQEeSd5OoVIuDNwg" name="Vital SignConsciousnessState" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mFm4ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(cda::Observation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mF0TYBpQEeSd5OoVIuDNwg" name="Vital SignPlanned Study Day" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mF0TYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PlannedStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mGCV0BpQEeSd5OoVIuDNwg" name="Vital SignStudy Day Period" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mGCV0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mKcUsBpQEeSd5OoVIuDNwg" name="Vital SignExclusion Reason" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mKcUsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ExclusionReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mLIRMBpQEeSd5OoVIuDNwg" name="Vital SignGroup Identifier" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mLIRMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nCc6wBpQEeSd5OoVIuDNwg" name="Vital SignComment" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nCc6wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nCsLUBpQEeSd5OoVIuDNwg" name="Vital SignDomain Assignment" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nCsLURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nC7b4BpQEeSd5OoVIuDNwg" name="Vital SignRelated Record" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nC7b4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nDKFYBpQEeSd5OoVIuDNwg" name="Vital SignSupplemental Value" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nDKFYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n9F-EBpQEeSd5OoVIuDNwg" name="Vital SignCategory" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n9F-ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oFDnQBpQEeSd5OoVIuDNwg" name="Vital SignSub-Category" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFDnQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIeHoBpQEeSd5OoVIuDNwg" name="Vital SignPosition of Subject" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIeHoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PositionofSubject) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_olgo8BpQEeSd5OoVIuDNwg" name="Vital SignFinding About" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_olgo8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_otjxsBpQEeSd5OoVIuDNwg" name="Vital SignassociatedConsciousnessconsciousnessStateClassCode" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_otjxsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_otm1ABpQEeSd5OoVIuDNwg" name="Vital SignassociatedConsciousnessconsciousnessStateCodeP" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_otm1ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_otpRQBpQEeSd5OoVIuDNwg" name="Vital SignassociatedConsciousnessconsciousnessStateCode" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_otpRQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'CStbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_otsUkBpQEeSd5OoVIuDNwg" name="Vital SignassociatedConsciousnessconsciousnessStateMoodCode" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_otsUkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(isDefined('moodCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_otuw0BpQEeSd5OoVIuDNwg" name="Vital SignassociatedConsciousnessconsciousnessStateValue" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_otuw0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_otxNEBpQEeSd5OoVIuDNwg" name="Vital SignassociatedConsciousnessconsciousnessStateValueP" constrainedElement="_pxvVsGSrEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_otx0IBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pxvVsWSrEeGaWrlBtEAvSQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_hpD0MBpQEeSd5OoVIuDNwg" name="getEvent Study Day" bodyCondition="_hpD0MxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_hpD0MxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_hpD0MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_hpD0NBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventStudyDay))->asSequence()->any(true).oclAsType(sdtm::EventStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_hpD0MRpQEeSd5OoVIuDNwg" type="_j42pwGerEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hpD0MhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ht-JYBpQEeSd5OoVIuDNwg" name="getTimingReference" bodyCondition="_ht-wcRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ht-wcRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ht-JYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ht-wchpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ht-JYRpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ht-wcBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_h2qyYBpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_h2qyYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_h2qyYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_h2qyYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_h2qyZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_h2qyYRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_h2qyYhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mF9dUBpQEeSd5OoVIuDNwg" name="getPlanned Study Day" bodyCondition="_mF9dUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mF9dUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mF9dUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mF9dVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PlannedStudyDay))->asSequence()->any(true).oclAsType(sdtm::PlannedStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mF9dURpQEeSd5OoVIuDNwg" type="_li9xQGeiEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mF9dUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mGNU8BpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_mGNU8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mGNU8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mGNU8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mGNU9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mGNU8RpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mGNU8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mKleoBpQEeSd5OoVIuDNwg" name="getExclusion Reason" bodyCondition="_mKmFshpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mKmFshpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mKleoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mKmFsxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ExclusionReason))->asSequence()->any(true).oclAsType(sdtm::ExclusionReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mKmFsBpQEeSd5OoVIuDNwg" type="_mZNiwLWAEeGLXdg8xIiGrA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mKmFsRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mLSCMBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_mLSCMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mLSCMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mLSCMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mLSCNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mLSCMRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLSCMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nCmrwBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_nCmrwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nCmrwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nCmrwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nCmrxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nCmrwRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nCmrwhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nC1VQBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_nC18UBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nC18UBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nC1VQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nC18URpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nC1VQRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nC1VQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nDEl0BpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_nDEl0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nDEl0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nDEl0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nDFM4BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nDEl0RpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nDEl0hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nDTPUBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_nDT2YhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nDT2YhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nDTPUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nDT2YxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nDT2YBpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nDT2YRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n9PvEBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n9PvExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n9PvExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n9PvEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n9PvFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n9PvERpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n9PvEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oFNYQBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oFNYQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oFNYQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oFNYQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFNYRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oFNYQRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oFNYQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oIofsBpQEeSd5OoVIuDNwg" name="getPosition of Subject" bodyCondition="_oIofsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oIofsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oIofsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIoftBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PositionofSubject))->asSequence()->any(true).oclAsType(sdtm::PositionofSubject)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oIofsRpQEeSd5OoVIuDNwg" type="_FhxtaYsoEeGEXvbgIb1duQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIofshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_olqZ8BpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_olrBARpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_olrBARpQEeSd5OoVIuDNwg" name="body" constrainedElement="_olqZ8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_olrBAhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_olqZ8RpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_olrBABpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_FmC1AGSqEeGaWrlBtEAvSQ" name="Human Clinical Subject Data Document Section">
      <ownedComment xmi:id="_eAGbkGn5EeGH0KSwdtr7gA">
        <body>The document is divided into sections as defined by the user.  It is reccomended that, with the exeception of the generic &quot;add-on&quot; templates: related records, supplemental values, comments, findings about, each section contain a single type of the possible listed templates, that is, the content of a single SDTM domain.  In the case of the visit template, this allows for inclusion of data from other SDTM  defined data structures (domain) to be included within the section.  The user is also free to create custom sections based on the included generic templates: Study Subject Finding, Study Subject Event, Study Subject Intervention.</body>
      </ownedComment>
      <ownedRule xmi:id="_haZtIBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionTemplateId" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_haa7QBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_haqL0BpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionClassCode" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_haqL0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::ActClass::DOCSECT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ha_jABpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionMoodCode" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ha_jARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hbZLoBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionCode" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hbZLoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = 'HUStbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hb0CYBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionCodeP" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hb0CYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hcfX0BpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionText" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hcfX0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hdyYUBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionHuman Clinical Subject Demographics" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hdyYURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(sdtm::HumanClinicalSubjectDemographics) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_heBB0BpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionHuman Clinical Visit" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_heBB0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.encounter.oclIsUndefined() and entry.encounter.oclIsKindOf(sdtm::Visit) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iLnHoBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionExposureAssociation" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iLnHoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.oclIsUndefined() and entry.oclIsKindOf(cda::Entry))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iQjSABpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionSubject Element" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iQjSARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(sdtm::SubjectElement) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iby4sBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionDisposition" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iby4sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(sdtm::HumanClinicalDisposition) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_irTUUBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionMedical History" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_irT7YBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::MedicalHistoryItem) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_irh90BpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionProtocol Deviation" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_irh90RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::ProtocolDeviation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_irwnUBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionClinical Event" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_irwnURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::ClinicalEvent) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfejQBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionSubject Characteristic" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfejQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::SubjectCharacteristic) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mRTKoBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionStudy Subject Event" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mRTKoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::StudySubjectEvent) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mRibMBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionStudy Subject Finding" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mRibMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::StudySubjectFinding) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mRxEsBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionStudy Subject Intervention" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mRxEsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(sdtm::StudySubjectIntervention) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mrAEEBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionComment" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mrAEERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::Comment) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oZjQkBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionAdverse Event" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZjQkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::AdverseEvent) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_of_PwBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionInclusion or Exclusion Criteria Not Met" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_of_PwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::InclusionorExclusionCriteriaNotMet) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oqTpYBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionFinding About" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oqTpYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::FindingAbout) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oue-wBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionexposureAssociationTypeCode" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oue-wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entry->excluding(null)->reject(isDefined('typeCode') and typeCode=vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ouiCEBpQEeSd5OoVIuDNwg" name="Human Clinical Subject Data Document SectionexposureAssociationExposure Substance Administration" constrainedElement="_FmC1AGSqEeGaWrlBtEAvSQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ouiCERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entry->excluding(null)->reject(substanceAdministration->one(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(sdtm::HumanClinicalExposure)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FmC1AWSqEeGaWrlBtEAvSQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_hd8JUBpQEeSd5OoVIuDNwg" name="getHuman Clinical Subject Demographics" bodyCondition="_hd8JUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_hd8JUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_hd8JUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_hd8JVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::HumanClinicalSubjectDemographics))->asSequence()->any(true).oclAsType(sdtm::HumanClinicalSubjectDemographics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_hd8JURpQEeSd5OoVIuDNwg" type="_1ruQ4GSqEeGaWrlBtEAvSQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_hd8JUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_heKy0BpQEeSd5OoVIuDNwg" name="getHuman Clinical Visits" bodyCondition="_heKy0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_heKy0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_heKy0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_heKy1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getEncounters()->select(encounter : cda::Encounter | not encounter.oclIsUndefined() and encounter.oclIsKindOf(sdtm::Visit)).oclAsType(sdtm::Visit)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_heKy0RpQEeSd5OoVIuDNwg" type="_JhW-kGSrEeGaWrlBtEAvSQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_heKy0hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iQsb8BpQEeSd5OoVIuDNwg" name="getSubject Elements" bodyCondition="_iQsb8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iQsb8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iQsb8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iQsb9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::SubjectElement)).oclAsType(sdtm::SubjectElement)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iQsb8RpQEeSd5OoVIuDNwg" type="_iOsK4H9NEeG03tOkpWkfyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iQsb8hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ib8CoBpQEeSd5OoVIuDNwg" name="getDispositions" bodyCondition="_ib8psBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ib8psBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ib8CoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ib8psRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::HumanClinicalDisposition)).oclAsType(sdtm::HumanClinicalDisposition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ib8CoRpQEeSd5OoVIuDNwg" type="_BQFfoIjAEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ib8CohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_irdFUBpQEeSd5OoVIuDNwg" name="getMedical Histories" bodyCondition="_irdFUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_irdFUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_irdFUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_irdFVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::MedicalHistoryItem)).oclAsType(sdtm::MedicalHistoryItem)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_irdFURpQEeSd5OoVIuDNwg" type="_6-6mEIjLEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_irdFUhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_irru0BpQEeSd5OoVIuDNwg" name="getProtocol Deviations" bodyCondition="_irru0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_irru0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_irru0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_irru1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ProtocolDeviation)).oclAsType(sdtm::ProtocolDeviation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_irru0RpQEeSd5OoVIuDNwg" type="_sq4oMIpqEeGissEAbjTgHg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_irru0hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ir5xQBpQEeSd5OoVIuDNwg" name="getClinical Events" bodyCondition="_ir6YUBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ir6YUBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ir5xQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ir6YURpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ClinicalEvent)).oclAsType(sdtm::ClinicalEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ir5xQRpQEeSd5OoVIuDNwg" type="_iR3fUIsBEeGEXvbgIb1duQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ir5xQhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jfoUQBpQEeSd5OoVIuDNwg" name="getSubject Characteristics" bodyCondition="_jfoUQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jfoUQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jfoUQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfoURBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubjectCharacteristic)).oclAsType(sdtm::SubjectCharacteristic)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jfoUQRpQEeSd5OoVIuDNwg" type="_KzX_4JB4EeGHg6ZmktWLJQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jfoUQhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mRc7oBpQEeSd5OoVIuDNwg" name="getStudy Subject Events" bodyCondition="_mRc7oxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mRc7oxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mRc7oBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mRc7pBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudySubjectEvent)).oclAsType(sdtm::StudySubjectEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mRc7oRpQEeSd5OoVIuDNwg" type="_sYRCoLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mRc7ohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mRrlIBpQEeSd5OoVIuDNwg" name="getStudy Subject Findings" bodyCondition="_mRrlIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mRrlIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mRrlIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mRrlJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudySubjectFinding)).oclAsType(sdtm::StudySubjectFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mRrlIRpQEeSd5OoVIuDNwg" type="_2Tri4LZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mRrlIhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mR61sBpQEeSd5OoVIuDNwg" name="getStudy Subject Interventions" bodyCondition="_mR61sxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mR61sxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mR61sBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mR61tBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(sdtm::StudySubjectIntervention)).oclAsType(sdtm::StudySubjectIntervention)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mR61sRpQEeSd5OoVIuDNwg" type="_YbytILZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mR61shpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mrJOABpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mrJ1ERpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mrJ1ERpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mrJOABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mrJ1EhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mrJOARpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mrJ1EBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oZsagBpQEeSd5OoVIuDNwg" name="getAdverse Events" bodyCondition="_oZtBkhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oZtBkhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oZsagBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oZtBkxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::AdverseEvent)).oclAsType(sdtm::AdverseEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oZtBkBpQEeSd5OoVIuDNwg" type="_aI700GSrEeGaWrlBtEAvSQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oZtBkRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ogJAwBpQEeSd5OoVIuDNwg" name="getInclusion or Exclusion Criteria Not Mets" bodyCondition="_ogJAwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ogJAwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ogJAwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ogJAxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::InclusionorExclusionCriteriaNotMet)).oclAsType(sdtm::InclusionorExclusionCriteriaNotMet)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ogJAwRpQEeSd5OoVIuDNwg" type="_55IL0I4zEeGz0ZL5qt1C9w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ogJAwhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oqdaYBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_oqdaYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oqdaYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oqdaYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oqdaZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oqdaYRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oqdaYhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NPsncGbuEeGjiJmz4TzZew" name="Study Arm">
      <ownedComment xmi:id="_8rj4wGn4EeGH0KSwdtr7gA">
        <body>The template contains information on the study arm to which the subject was assigned.  Patients in clinical trials are assigned to on part or segment of a study- a study &quot;arm.&quot; One arm receives a different treatment from another.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical trial reporting.&#xD;
&#xD;
Study arm information may refer either to the planned arm for a subject or to the actual arm.  Which is being referred to is determined by the mood code value.</body>
      </ownedComment>
      <ownedRule xmi:id="_hewosBpQEeSd5OoVIuDNwg" name="Study ArmTemplateId" constrainedElement="_NPsncGbuEeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hexPwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.81')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hfAgUBpQEeSd5OoVIuDNwg" name="Study ArmClassCode" constrainedElement="_NPsncGbuEeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hfAgURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hfV3gBpQEeSd5OoVIuDNwg" name="Study ArmMoodCode" constrainedElement="_NPsncGbuEeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hfV3gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hgLlABpQEeSd5OoVIuDNwg" name="Study ArmCodeP" constrainedElement="_NPsncGbuEeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hgLlARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hfx8YBpQEeSd5OoVIuDNwg" name="Study ArmCode" constrainedElement="_NPsncGbuEeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hfx8YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hgnp4BpQEeSd5OoVIuDNwg" name="Study ArmText" constrainedElement="_NPsncGbuEeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hgnp4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hg59wBpQEeSd5OoVIuDNwg" name="Study ArmEffectiveTime" constrainedElement="_NPsncGbuEeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hg6k0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NPsncWbuEeGjiJmz4TzZew">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xvcSQGb_EeGjiJmz4TzZew" name="Non Performance Reason">
      <ownedComment xmi:id="_G7bwoGn6EeGH0KSwdtr7gA">
        <body>The template provides a reusable structure that contains information on  the reason that information relating to an intended measure or other activity was not collected.</body>
      </ownedComment>
      <ownedRule xmi:id="_hhzVoBpQEeSd5OoVIuDNwg" name="Non Performance ReasonTemplateId" constrainedElement="_xvcSQGb_EeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hhz8sBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.56')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hiD0UBpQEeSd5OoVIuDNwg" name="Non Performance ReasonClassCode" constrainedElement="_xvcSQGb_EeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hiD0URpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hi5h0BpQEeSd5OoVIuDNwg" name="Non Performance ReasonCodeP" constrainedElement="_xvcSQGb_EeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hi5h0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hieEABpQEeSd5OoVIuDNwg" name="Non Performance ReasonCode" constrainedElement="_xvcSQGb_EeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hieEARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C66727' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hjVmsBpQEeSd5OoVIuDNwg" name="Non Performance ReasonMoodCode" constrainedElement="_xvcSQGb_EeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hjVmsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hjxrkBpQEeSd5OoVIuDNwg" name="Non Performance ReasonValue" constrainedElement="_xvcSQGb_EeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hjySoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hkL7QBpQEeSd5OoVIuDNwg" name="Non Performance ReasonValueP" constrainedElement="_xvcSQGb_EeGjiJmz4TzZew">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkL7QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1KSogGb_EeGjiJmz4TzZew">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_li9xQGeiEeGFKaG0B9CEsg" name="Planned Study Day">
      <ownedComment xmi:id="_OwFBsGiGEeG7jNHx5OkAWw">
        <body>The template contains information that is used to identify the study day on which the event it is related to was planned to occur.  &quot;Study Day&quot; refers to the relative day of an observation or other event with respect the the designated reference day for the study - which is labled as &quot;Day 1&quot;.   Note, dates prior to the reference data are decremented by 1, with the day preceeding the reference day designated as &quot;Study Day -1&quot;.  This structure is captured as a template to facilitate its reuse for different types of data within clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_hkh5gBpQEeSd5OoVIuDNwg" name="Planned Study DayTemplateId" constrainedElement="_li9xQGeiEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkjHoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.68')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hkyYMBpQEeSd5OoVIuDNwg" name="Planned Study DayClassCode" constrainedElement="_li9xQGeiEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hkyYMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hlHvYBpQEeSd5OoVIuDNwg" name="Planned Study DayMoodCode" constrainedElement="_li9xQGeiEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hlHvYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::INT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hl8OwBpQEeSd5OoVIuDNwg" name="Planned Study DayCodeP" constrainedElement="_li9xQGeiEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hl8OwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hlhYABpQEeSd5OoVIuDNwg" name="Planned Study DayCode" constrainedElement="_li9xQGeiEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hlhYARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C83450' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hmXskBpQEeSd5OoVIuDNwg" name="Planned Study DayValue" constrainedElement="_li9xQGeiEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hmXskRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_li9xQWeiEeGFKaG0B9CEsg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j42pwGerEeGFKaG0B9CEsg" name="Event Study Day">
      <ownedComment xmi:id="_9_8MwGe-EeGFKaG0B9CEsg">
        <body>The template contains information to identify the study day on which the event it is related to occurred.  &quot;Study Day&quot; refers to the relative day of an observation or other event with respect the the designated reference day for the study - which is labled as &quot;Day 1&quot;.   Note, dates prior to the reference data are decremented by 1, with the day preceeding the reference day designated as &quot;Study Day -1&quot;.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_hmmWEBpQEeSd5OoVIuDNwg" name="Event Study DayTemplateId" constrainedElement="_j42pwGerEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hmm9IBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.37')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hm2NsBpQEeSd5OoVIuDNwg" name="Event Study DayClassCode" constrainedElement="_j42pwGerEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hm2NsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hnLk4BpQEeSd5OoVIuDNwg" name="Event Study DayMoodCode" constrainedElement="_j42pwGerEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hnLk4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hoArUBpQEeSd5OoVIuDNwg" name="Event Study DayCodeP" constrainedElement="_j42pwGerEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hoArURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hnlNgBpQEeSd5OoVIuDNwg" name="Event Study DayCode" constrainedElement="_j42pwGerEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hnlNgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ESDtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hoaT8BpQEeSd5OoVIuDNwg" name="Event Study DayValue" constrainedElement="_j42pwGerEeGFKaG0B9CEsg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hoaT8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j42pwWerEeGFKaG0B9CEsg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IWO1oGiEEeG7jNHx5OkAWw" name="Timing Reference">
      <ownedComment xmi:id="_zRolAGiEEeG7jNHx5OkAWw">
        <body>The timing reference template makes it possible to indicate the timing of a measurement or activity as an offset from an anchoring event.   Note, in SDTM, the anchoring event is known as a &quot;Time Point Reference'.  The reference, described as &quot;an elapsed time relative to a fixed reference point, such as time of last dose&quot;, is known as a &quot;Planned Time Point.  This structure is captured as a template to facilitate its reuse for different types of data within clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_hpGQcBpQEeSd5OoVIuDNwg" name="Timing ReferenceTemplateId" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hpHekBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.97')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hpWvIBpQEeSd5OoVIuDNwg" name="Timing ReferenceClassCode" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hpWvIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hpstYBpQEeSd5OoVIuDNwg" name="Timing ReferenceMoodCode" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hpstYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hqAPYBpQEeSd5OoVIuDNwg" name="Timing ReferenceId" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hqAPYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hqy5kBpQEeSd5OoVIuDNwg" name="Timing ReferenceCodeP" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hqy5kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hqYC0BpQEeSd5OoVIuDNwg" name="Timing ReferenceCode" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hqYC0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'TRtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hrNJQBpQEeSd5OoVIuDNwg" name="Timing ReferenceEffectiveTime" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hrNJQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hrgrQBpQEeSd5OoVIuDNwg" name="Timing ReferenceText" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hrgrQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_huBzwBpQEeSd5OoVIuDNwg" name="Timing ReferenceAnchorAssociation" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_huBzwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ou_8IBpQEeSd5OoVIuDNwg" name="Timing ReferenceAnchorAssociationAnchorTimePointClassCode" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ovAjMBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject(classCode=vocab::x_ActClassDocumentEntryAct::ACT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ovC_cBpQEeSd5OoVIuDNwg" name="Timing ReferenceAnchorAssociationAnchorTimePointMoodCode" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ovC_cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject(isDefined('moodCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ovFbsBpQEeSd5OoVIuDNwg" name="Timing ReferenceAnchorAssociationAnchorTimePointCodeP" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ovGCwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ovIfABpQEeSd5OoVIuDNwg" name="Timing ReferenceAnchorAssociationAnchorTimePointCode" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ovIfARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'ATPtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ovLiUBpQEeSd5OoVIuDNwg" name="Timing ReferenceAnchorAssociationAnchorTimePointEffectiveTime" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ovLiURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).act->excluding(null)->reject((effectiveTime.oclIsUndefined() or effectiveTime.isNullFlavorUndefined()) implies (not effectiveTime.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ovN-kBpQEeSd5OoVIuDNwg" name="Timing ReferenceAnchorAssociationTypeCode" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ovN-kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ovQa0BpQEeSd5OoVIuDNwg" name="Timing ReferenceAnchorAssociationAnchorTimePoint" constrainedElement="_IWO1oGiEEeG7jNHx5OkAWw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ovRB4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(act->one(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(cda::Act)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_IWO1oWiEEeG7jNHx5OkAWw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_8Ae3QGn_EeGH0KSwdtr7gA" name="Group Identifier">
      <ownedComment xmi:id="_QzjdkGoAEeGH0KSwdtr7gA">
        <body>The template provides a reusable structure to contain information on an identifier that can be assigned to a concommitant medication, adverse event or other event.  It is used as a mechanism to group related records within a domain.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_huV80BpQEeSd5OoVIuDNwg" name="Group IdentifierTemplateId" constrainedElement="_8Ae3QGn_EeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_huWj4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hul0cBpQEeSd5OoVIuDNwg" name="Group IdentifierClassCode" constrainedElement="_8Ae3QGn_EeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hul0cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hu7LoBpQEeSd5OoVIuDNwg" name="Group IdentifierMoodCode" constrainedElement="_8Ae3QGn_EeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hu7LoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hvOtoBpQEeSd5OoVIuDNwg" name="Group IdentifierId" constrainedElement="_8Ae3QGn_EeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hvOtoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hwBX0BpQEeSd5OoVIuDNwg" name="Group IdentifierCodeP" constrainedElement="_8Ae3QGn_EeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hwBX0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hvmhEBpQEeSd5OoVIuDNwg" name="Group IdentifierCode" constrainedElement="_8Ae3QGn_EeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hvmhERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C83204' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_8Ae3QWn_EeGH0KSwdtr7gA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QmoEwGoUEeGH0KSwdtr7gA" name="Body System or Organ Class">
      <ownedComment xmi:id="_NpXM8GoVEeGH0KSwdtr7gA">
        <body>The resuable structure provides for entry of the body system or organ class that is relevant for a measurement or event.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical or non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_hwl_kBpQEeSd5OoVIuDNwg" name="Body System or Organ ClassTemplateId" constrainedElement="_QmoEwGoUEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hwmmoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hw13MBpQEeSd5OoVIuDNwg" name="Body System or Organ ClassClassCode" constrainedElement="_QmoEwGoUEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hw13MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hxL1cBpQEeSd5OoVIuDNwg" name="Body System or Organ ClassMoodCode" constrainedElement="_QmoEwGoUEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hxL1cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hyAU0BpQEeSd5OoVIuDNwg" name="Body System or Organ ClassCodeP" constrainedElement="_QmoEwGoUEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hyAU0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hxmFIBpQEeSd5OoVIuDNwg" name="Body System or Organ ClassCode" constrainedElement="_QmoEwGoUEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hxmFIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C88026' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hyh5QBpQEeSd5OoVIuDNwg" name="Body System or Organ ClassValue" constrainedElement="_QmoEwGoUEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hyh5QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hy7h4BpQEeSd5OoVIuDNwg" name="Body System or Organ ClassValueP" constrainedElement="_QmoEwGoUEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hy7h4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QmoEwWoUEeGH0KSwdtr7gA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nrFiEGoYEeGH0KSwdtr7gA" name="Event or Finding Severity">
      <ownedComment xmi:id="_B3K0cGoZEeGH0KSwdtr7gA">
        <body>The template provides a reusable stucture to record information regarding the severity or intensity of an observed event or a recorded finding.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_hzhXwBpQEeSd5OoVIuDNwg" name="Event or Finding SeverityTemplateId" constrainedElement="_nrFiEGoYEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hzil4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_hzxPYBpQEeSd5OoVIuDNwg" name="Event or Finding SeverityClassCode" constrainedElement="_nrFiEGoYEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_hzx2cBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h0GmkBpQEeSd5OoVIuDNwg" name="Event or Finding SeverityMoodCode" constrainedElement="_nrFiEGoYEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h0HNoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h07tABpQEeSd5OoVIuDNwg" name="Event or Finding SeverityCodeP" constrainedElement="_nrFiEGoYEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h07tARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h0g2QBpQEeSd5OoVIuDNwg" name="Event or Finding SeverityCode" constrainedElement="_nrFiEGoYEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h0g2QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C66769' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h1dRcBpQEeSd5OoVIuDNwg" name="Event or Finding SeverityValue" constrainedElement="_nrFiEGoYEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h1dRcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h126EBpQEeSd5OoVIuDNwg" name="Event or Finding SeverityValueP" constrainedElement="_nrFiEGoYEeGH0KSwdtr7gA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h126ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_nrFiEWoYEeGH0KSwdtr7gA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Artifact" xmi:id="_x_-BEG0fEeGiP4Zd1ERrDw" name="Subject Data Human Clinical TrialsSample" fileName="Subject Data Human Clinical TrialsSample.xml"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_If_OMHH-EeGL-K1S1E9LrQ" name="Concomitant Medication">
      <ownedComment xmi:id="_kdWk0IsUEeGEXvbgIb1duQ">
        <body>The template is used to collect concommitant and prior medications or therapies used by the study subject.   Examples are concommitant medications or therapies given on an as-needed basis.</body>
      </ownedComment>
      <ownedRule xmi:id="_h2tOoBpQEeSd5OoVIuDNwg" name="Concomitant MedicationTemplateId" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h2ucwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.25.24')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h29GQBpQEeSd5OoVIuDNwg" name="Concomitant MedicationClassCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h29GQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h3TEgBpQEeSd5OoVIuDNwg" name="Concomitant MedicationMoodCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h3TEgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h3mmgBpQEeSd5OoVIuDNwg" name="Concomitant MedicationId" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h3mmgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h346YBpQEeSd5OoVIuDNwg" name="Concomitant MedicationStatusCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h346YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h4KnMBpQEeSd5OoVIuDNwg" name="Concomitant MedicationText" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h4KnMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h4c7EBpQEeSd5OoVIuDNwg" name="Concomitant MedicationEffectiveTime" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h4c7ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h4un4BpQEeSd5OoVIuDNwg" name="Concomitant MedicationDoseQuantity" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h4un4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h5A7wBpQEeSd5OoVIuDNwg" name="Concomitant MedicationMaxDoseQuantity" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h5A7wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h533YBpQEeSd5OoVIuDNwg" name="Concomitant MedicationRouteCodeP" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h533YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h5bLcBpQEeSd5OoVIuDNwg" name="Concomitant MedicationRouteCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h5bLcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h6neQBpQEeSd5OoVIuDNwg" name="Concomitant MedicationGroup Identifier" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h6neQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h6388BpQEeSd5OoVIuDNwg" name="Concomitant MedicationNonPerformanceReason" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h6388RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iBrIgBpQEeSd5OoVIuDNwg" name="Concomitant MedicationConsumableMaterial" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iBrvkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(sdtm::ConsumableMaterial))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iVSBABpQEeSd5OoVIuDNwg" name="Concomitant MedicationPre-Specified Event" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iVSBARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PreSpecifiedEvent) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iqJdwBpQEeSd5OoVIuDNwg" name="Concomitant MedicationData Collection" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iqJdwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kH7DUBpQEeSd5OoVIuDNwg" name="Concomitant MedicationStudy Day Period" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kH7qYBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mSAVQBpQEeSd5OoVIuDNwg" name="Concomitant MedicationTiming Reference" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mSAVQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mkS_IBpQEeSd5OoVIuDNwg" name="Concomitant MedicationComment" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mkS_IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mkhooBpQEeSd5OoVIuDNwg" name="Concomitant MedicationDomain Assignment" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mkhooRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mkwSIBpQEeSd5OoVIuDNwg" name="Concomitant MedicationRelated Record" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mkwSIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mk-7oBpQEeSd5OoVIuDNwg" name="Concomitant MedicationSupplemental Value" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mk-7oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nLVJ8BpQEeSd5OoVIuDNwg" name="Concomitant MedicationStart Relative to Reference Period" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nLVJ8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nLjzcBpQEeSd5OoVIuDNwg" name="Concomitant MedicationStop Relative to Reference Period" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nLjzcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nQfWwBpQEeSd5OoVIuDNwg" name="Concomitant MedicationIndication" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nQfWwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nS_4MBpQEeSd5OoVIuDNwg" name="Concomitant MedicationIntended Regimen" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nS_4MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::IntendedRegimen) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n4GJUBpQEeSd5OoVIuDNwg" name="Concomitant MedicationCategory" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n4GJURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n_4MUBpQEeSd5OoVIuDNwg" name="Concomitant MedicationSub-Category" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n_4MURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_offggBpQEeSd5OoVIuDNwg" name="Concomitant MedicationFinding About" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_offggRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_opz6IBpQEeSd5OoVIuDNwg" name="Concomitant MedicationEvent Duration" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_opz6IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventDuration) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ov3e0BpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ov3e0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ov6iIBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ov6iIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ov8-YBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ov8-YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_owABsBpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_owABsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'C25150' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_owCd8BpQEeSd5OoVIuDNwg" name="Human Clinical Subject DemographicsAgeAssociationSubjectAgeValue" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_owCd8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::PQ))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_owFhQBpQEeSd5OoVIuDNwg" name="Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationTypeCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_owFhQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_owH9gBpQEeSd5OoVIuDNwg" name="Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAge" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_owH9gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_owLA0BpQEeSd5OoVIuDNwg" name="Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_owLA0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_owNdEBpQEeSd5OoVIuDNwg" name="Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_owNdERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_owQgYBpQEeSd5OoVIuDNwg" name="Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_owQgYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_owS8oBpQEeSd5OoVIuDNwg" name="Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeCode" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_owS8oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'C25150' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_owV_8BpQEeSd5OoVIuDNwg" name="Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeValue" constrainedElement="_If_OMHH-EeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_owV_8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_If_1QHH-EeGL-K1S1E9LrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_h6woMBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_h6xPQhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_h6xPQhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_h6woMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_h6xPQxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_h6xPQBpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_h6xPQRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_h7Bt8BpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_h7Bt8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_h7Bt8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_h7Bt8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_h7Bt9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_h7Bt8RpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_h7Bt8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iVbK8BpQEeSd5OoVIuDNwg" name="getPre-Specified Event" bodyCondition="_iVbK8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iVbK8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iVbK8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iVbK9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PreSpecifiedEvent))->asSequence()->any(true).oclAsType(sdtm::PreSpecifiedEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iVbK8RpQEeSd5OoVIuDNwg" type="__G5heXIJEeGL-K1S1E9LrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iVbK8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iqSnsBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_iqTOwRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iqTOwRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iqSnsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iqTOwhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iqSnsRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iqTOwBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kIE0UBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_kIE0UxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kIE0UxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kIE0UBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kIE0VBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kIE0URpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kIE0UhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mSKGQBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_mSKGQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mSKGQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mSKGQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mSKGRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mSKGQRpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mSKGQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mkcJEBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mkcJExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mkcJExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mkcJEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mkcwIBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mkcJERpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mkcJEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mkqykBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mkrZohpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mkrZohpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mkqykBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mkrZoxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mkrZoBpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mkrZoRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mk6DIBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mk6DIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mk6DIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mk6DIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mk6DJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mk6DIRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mk6DIhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mlIsoBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mlIsoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mlIsoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mlIsoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mlIspBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mlIsoRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mlIsohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nLe68BpQEeSd5OoVIuDNwg" name="getStart Relative to Reference Period" bodyCondition="_nLe68xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nLe68xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nLe68BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nLe69BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StartRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nLe68RpQEeSd5OoVIuDNwg" type="_w_aIINW7EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nLe68hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nLtkcBpQEeSd5OoVIuDNwg" name="getStop Relative to Reference Period" bodyCondition="_nLtkcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nLtkcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nLtkcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nLtkdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StopRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nLtkcRpQEeSd5OoVIuDNwg" type="_PTdgANW9EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nLtkchpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nQogsBpQEeSd5OoVIuDNwg" name="getIndication" bodyCondition="_nQpHwhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nQpHwhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nQogsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nQpHwxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Indication))->asSequence()->any(true).oclAsType(sdtm::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nQpHwBpQEeSd5OoVIuDNwg" type="_zDVFEHINEeGL-K1S1E9LrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nQpHwRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nTJpMBpQEeSd5OoVIuDNwg" name="getIntended Regimen" bodyCondition="_nTJpMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nTJpMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nTJpMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nTJpNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::IntendedRegimen))->asSequence()->any(true).oclAsType(sdtm::IntendedRegimen)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nTJpMRpQEeSd5OoVIuDNwg" type="_YbytjLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nTJpMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n4QhYBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n4RIcRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n4RIcRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n4QhYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n4RIchpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n4QhYRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n4RIcBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oABWQBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oABWQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oABWQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oABWQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oAB9UBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oABWQRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oABWQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ofp4kBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ofp4kxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ofp4kxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ofp4kBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ofp4lBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ofp4kRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ofp4khpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_op-5QBpQEeSd5OoVIuDNwg" name="getEvent Duration" bodyCondition="_op-5QxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_op-5QxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_op-5QBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_op-5RBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventDuration))->asSequence()->any(true).oclAsType(sdtm::EventDuration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_op-5QRpQEeSd5OoVIuDNwg" type="_-HQWMPj8EeG7pMUQbTahtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_op-5QhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5cwoIHIUEeGL-K1S1E9LrQ" name="Consumable Material">
      <ownedComment xmi:id="_Ns3w0HWCEeGjKYyCAyW73w">
        <body>The template captures information for medicinal substances tested in trials and/or substances consumed by trial subjects.  It is called upon when recording information about exposures, concommitant medication and/or substance use.  All treatments are managed as uses of a consumable material.</body>
      </ownedComment>
      <ownedRule xmi:id="_h7DjIBpQEeSd5OoVIuDNwg" name="Consumable MaterialTemplateId" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h7ExQBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.26')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_h7TawBpQEeSd5OoVIuDNwg" name="Consumable MaterialTypeCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_h7TawRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.typeCode=vocab::ParticipationType::CSM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iB380BpQEeSd5OoVIuDNwg" name="Consumable MaterialMedication" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iB380RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->one(manufacturedProduct : cda::ManufacturedProduct | not manufacturedProduct.oclIsUndefined() and manufacturedProduct.oclIsKindOf(cda::ManufacturedProduct))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ow-5IBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ow-5IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)..representedOrganization->excluding(null)->reject(isDefined('classCode') and classCode=vocab::EntityClassManufacturedMaterial::ORG)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxB8cBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxB8cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)..representedOrganization->excluding(null)->reject(isDefined('determinerCode') and determinerCode=vocab::EntityDeterminerDetermined::KIND)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxE_wBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialasSpecializedKindClassCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxE_wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null).->reject(isDefined('classCode') and classCode=vocab::RoleClassAssignedEntity::ASSIGNED)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxHcABpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialasSpecializedKindCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxHcARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null).->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = code.oclAsType(datatypes::CE) in 
value.codeSystem = 'unknown'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxKfUBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialasSpecializedKindCodeP" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxKfURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null).->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxM7kBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxM7kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null).->reject(representedOrganization->one(representedOrganization : cda::Organization | not representedOrganization.oclIsUndefined() and representedOrganization.oclIsKindOf(cda::Material)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxlWEBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxlWERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)..assignedPerson->excluding(null)->reject(isDefined('classCode') and classCode=vocab::EntityClassRoot::MMAT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxoZYBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxoZYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)..assignedPerson->excluding(null)->reject(isDefined('determinerCode') and determinerCode=vocab::EntityDeterminer::INSTANCE)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxq1oBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxq1oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)..assignedPerson->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = code.oclAsType(datatypes::CE) in 
value.codeSystem = 'unknown'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxt48BpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxt48RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)..assignedPerson->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxwVMBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialingredientRoleClassCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxwVMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null).->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oxzYgBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialingredientRoleAssignedPerson" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oxzYgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null).->reject(assignedPerson->one(assignedPerson : cda::Person | not assignedPerson.oclIsUndefined() and assignedPerson.oclIsKindOf(cda::Entity)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ox10wBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialClassCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ox10wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)->reject(isDefined('classCode') and classCode=vocab::EntityClassManufacturedMaterial::MMAT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ox44EBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ox44ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = code.oclAsType(datatypes::CE) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ox7UUBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialCodeP" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ox7UURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ox9wkBpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationMedicationMaterialLotNumberText" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ox-XoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null).manufacturedMaterial->excluding(null)->reject((lotNumberText.oclIsUndefined() or lotNumberText.isNullFlavorUndefined()) implies (not lotNumberText.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oyAz4BpQEeSd5OoVIuDNwg" name="Consumable MaterialMedicationClassCode" constrainedElement="_5cwoIHIUEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oyAz4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.manufacturedProduct->excluding(null)->reject(isDefined('classCode') and classCode=vocab::RoleClassManufacturedProduct::MANU)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5cxPMHIUEeGL-K1S1E9LrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_gRI5MEcEEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lbhbAHXQEeGBQKUAtfSaGA" name="Human Clinical Exposure">
      <ownedComment xmi:id="_bnZHIHXTEeGBQKUAtfSaGA">
        <body>The template captures details of a human subject's exposure to protocol-specified study treatment.  Study treatment may be any intervention that is prospectively defined as a test material within a study.</body>
      </ownedComment>
      <ownedRule xmi:id="_iCMs8BpQEeSd5OoVIuDNwg" name="Human Clinical ExposureTemplateId" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iCNUABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iCckkBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureClassCode" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iCckkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iCwGkBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureDoseQuantity" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iCwGkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iDCacBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureEffectiveTime" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iDCacRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iDUHQBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureId" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iDUHQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iDoQUBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureMoodCode" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iDoQURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iEek4BpQEeSd5OoVIuDNwg" name="Human Clinical ExposureRouteCodeP" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iEek4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iEEVMBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureRouteCode" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iEEVMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iE40kBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureMaxDoseQuantity" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iE40kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iFM9oBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureText" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iFM9oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iFn0YBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureApproachSiteCode" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iFn0YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iGBdABpQEeSd5OoVIuDNwg" name="Human Clinical ExposureApproachSiteCodeP" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iGBdARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | element.oclIsTypeOf(datatypes::CE)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iIuLsBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureGroup Identifier" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iIuLsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iI8OIBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureConsumableMaterial" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iI8OIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(sdtm::ConsumableMaterial))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iLP7QBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureStudy Epoch" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iLP7QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::StudyEpoch) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iLyt0BpQEeSd5OoVIuDNwg" name="Human Clinical ExposureElementOrderAssociation" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iLyt0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iMIsEBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureTiming Reference" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iMIsERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kIJs0BpQEeSd5OoVIuDNwg" name="Human Clinical ExposureStudy Day Period" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kIJs0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mpLfIBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureComment" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mpLfIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mpaIoBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureDomain Assignment" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mpaIoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mpoyIBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureRelated Record" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mpoyIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mp20kBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureSupplemental Value" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mp20kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nTOhsBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureIntended Regimen" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nTOhsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::IntendedRegimen) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nVucEBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureDose Adjustment Reason" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nVucERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DoseAdjustmentReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n5jh4BpQEeSd5OoVIuDNwg" name="Human Clinical ExposureCategory" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n5kI8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBCC4BpQEeSd5OoVIuDNwg" name="Human Clinical ExposureSub-Category" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBCC4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ohRCIBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureFinding About" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ohRCIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oqEY0BpQEeSd5OoVIuDNwg" name="Human Clinical ExposureEvent Duration" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oqEY0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventDuration) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ozbJIBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderClassCode" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ozbJIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ozdlYBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderCodeP" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ozdlYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ozgosBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderCode" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ozgosRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ozjsABpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderMoodCode" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ozjsARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ozmIQBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderValue" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ozmIQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::ED))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ozpLkBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationTypeCode" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ozpLkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ozrn0BpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationElementOrder" constrainedElement="_lbhbAHXQEeGBQKUAtfSaGA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ozrn0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lbhbAXXQEeGBQKUAtfSaGA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_iI38sBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_iI38sxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iI38sxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iI38sBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iI38tBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iI38sRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iI38shpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iLZsQBpQEeSd5OoVIuDNwg" name="getStudy Epoch" bodyCondition="_iLZsQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iLZsQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iLZsQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iLZsRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::StudyEpoch))->asSequence()->any(true).oclAsType(sdtm::StudyEpoch)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iLZsQRpQEeSd5OoVIuDNwg" type="_HJE2EH5pEeGbfrTsVlSE3Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iLZsQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iMSdEBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_iMSdExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iMSdExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iMSdEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iMSdFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iMSdERpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iMSdEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kITd0BpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_kITd0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kITd0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kITd0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kITd1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kITd0RpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kITd0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mpUpEBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mpUpExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mpUpExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mpUpEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mpVQIBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mpUpERpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mpUpEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mpjSkBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mpjSkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mpjSkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mpjSkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mpj5oBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mpjSkRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mpjSkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mpx8EBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mpx8ExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mpx8ExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mpx8EBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mpx8FBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mpx8ERpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mpx8EhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mqAlkBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mqAlkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mqAlkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mqAlkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mqAllBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mqAlkRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mqAlkhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nTYSsBpQEeSd5OoVIuDNwg" name="getIntended Regimen" bodyCondition="_nTYSsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nTYSsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nTYSsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nTYStBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::IntendedRegimen))->asSequence()->any(true).oclAsType(sdtm::IntendedRegimen)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nTYSsRpQEeSd5OoVIuDNwg" type="_YbytjLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nTYSshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nV4NEBpQEeSd5OoVIuDNwg" name="getDose Adjustment Reason" bodyCondition="_nV4NExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nV4NExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nV4NEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nV4NFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DoseAdjustmentReason))->asSequence()->any(true).oclAsType(sdtm::DoseAdjustmentReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nV4NERpQEeSd5OoVIuDNwg" type="_YbytoLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nV4NEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n5t58BpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n5uhABpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n5uhABpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n5t58BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n5uhARpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n5t58RpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n5t58hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oBLM0BpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oBLz4hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oBLz4hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oBLM0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBLz4xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBLz4BpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oBLz4RpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ohazIBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ohazIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ohazIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ohazIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ohazJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ohazIRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ohazIhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oqOJ0BpQEeSd5OoVIuDNwg" name="getEvent Duration" bodyCondition="_oqOJ0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oqOJ0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oqOJ0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oqOJ1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventDuration))->asSequence()->any(true).oclAsType(sdtm::EventDuration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oqOJ0RpQEeSd5OoVIuDNwg" type="_-HQWMPj8EeG7pMUQbTahtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oqOJ0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HJE2EH5pEeGbfrTsVlSE3Q" name="Study Epoch">
      <ownedComment xmi:id="_owMWoH5pEeGbfrTsVlSE3Q">
        <body>The template records the epoch for an element or other activity.  As part of the design of a trial, the planned period of subjects' participation in the trial is divided into Epochs. Each Epoch is a period of time that serves a purpose in the trial as a whole. That purpose will be at the level of the primary objectives of the trial.</body>
      </ownedComment>
      <ownedRule xmi:id="_iJH0UBpQEeSd5OoVIuDNwg" name="Study EpochTemplateId" constrainedElement="_HJE2EH5pEeGbfrTsVlSE3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iJIbYBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.83')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iJYTABpQEeSd5OoVIuDNwg" name="Study EpochClassCode" constrainedElement="_HJE2EH5pEeGbfrTsVlSE3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iJYTARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iJtqMBpQEeSd5OoVIuDNwg" name="Study EpochMoodCode" constrainedElement="_HJE2EH5pEeGbfrTsVlSE3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iJtqMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iKj-wBpQEeSd5OoVIuDNwg" name="Study EpochCodeP" constrainedElement="_HJE2EH5pEeGbfrTsVlSE3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iKj-wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iKJvEBpQEeSd5OoVIuDNwg" name="Study EpochCode" constrainedElement="_HJE2EH5pEeGbfrTsVlSE3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iKJvERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iK-OcBpQEeSd5OoVIuDNwg" name="Study EpochText" constrainedElement="_HJE2EH5pEeGbfrTsVlSE3Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iK-OcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_HJYYEH5pEeGbfrTsVlSE3Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iOsK4H9NEeG03tOkpWkfyg" name="Subject Element">
      <ownedComment xmi:id="_82vnkH9NEeG03tOkpWkfyg">
        <body>The Subject Element template consolidates information about the timing of each subject's progress through the epochs and elements of the trial.</body>
      </ownedComment>
      <ownedRule xmi:id="_iMU5UBpQEeSd5OoVIuDNwg" name="Subject ElementTemplateId" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iMVgYBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.93')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iMkw8BpQEeSd5OoVIuDNwg" name="Subject ElementClassCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iMkw8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iM6vMBpQEeSd5OoVIuDNwg" name="Subject ElementMoodCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iM6vMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iNORMBpQEeSd5OoVIuDNwg" name="Subject ElementId" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iNORMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iOCJgBpQEeSd5OoVIuDNwg" name="Subject ElementCodeP" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iOCJgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iNog4BpQEeSd5OoVIuDNwg" name="Subject ElementCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iNog4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iOcZMBpQEeSd5OoVIuDNwg" name="Subject ElementEffectiveTime" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iOcZMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iQUogBpQEeSd5OoVIuDNwg" name="Subject ElementStudy Epoch" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iQUogRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::StudyEpoch) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iQvfQBpQEeSd5OoVIuDNwg" name="Subject ElementElementOrderAssociation" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iQwGUBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m-wGgBpQEeSd5OoVIuDNwg" name="Subject ElementComment" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m-wGgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m-_XEBpQEeSd5OoVIuDNwg" name="Subject ElementDomain Assignment" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m-_XERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m_OAkBpQEeSd5OoVIuDNwg" name="Subject ElementRelated Record" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m_OAkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m_cqEBpQEeSd5OoVIuDNwg" name="Subject ElementSupplemental Value" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m_cqERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_olCu4BpQEeSd5OoVIuDNwg" name="Subject ElementFinding About" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_olCu4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0TS4BpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderClassCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0TS4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0VvIBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderCodeP" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0VvIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0YycBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0YycRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0bOsBpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderMoodCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0bOsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0eSABpQEeSd5OoVIuDNwg" name="Human Clinical ExposureelementOrderAssociationelementOrderValue" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0eSARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::ED))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0guQBpQEeSd5OoVIuDNwg" name="Subject ElementHuman Clinical ExposureelementOrderAssociationTypeCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0guQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0jxkBpQEeSd5OoVIuDNwg" name="Subject ElementHuman Clinical ExposureelementOrderAssociationElementOrder" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0jxkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0mN0BpQEeSd5OoVIuDNwg" name="Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderClassCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0mN0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->excluding(null)->reject(isDefined('classCode')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0pRIBpQEeSd5OoVIuDNwg" name="Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderCodeP" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0pRIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0rtYBpQEeSd5OoVIuDNwg" name="Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0rtYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0uwsBpQEeSd5OoVIuDNwg" name="Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderMoodCode" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0uwsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o0xM8BpQEeSd5OoVIuDNwg" name="Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderValue" constrainedElement="_iOsK4H9NEeG03tOkpWkfyg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o0xM8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::ED)))))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iPI20H9NEeG03tOkpWkfyg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_iQdycBpQEeSd5OoVIuDNwg" name="getStudy Epoch" bodyCondition="_iQdycxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iQdycxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iQdycBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iQeZgBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::StudyEpoch))->asSequence()->any(true).oclAsType(sdtm::StudyEpoch)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iQdycRpQEeSd5OoVIuDNwg" type="_HJE2EH5pEeGbfrTsVlSE3Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iQdychpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m-53gBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m-53gxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m-53gxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m-53gBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m-53hBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m-53gRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m-53ghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m_IhABpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m_JIERpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m_JIERpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m_IhABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m_JIEhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m_IhARpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m_JIEBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m_XKgBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m_XKgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m_XKgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m_XKgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m_XxkBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m_XKgRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m_XKghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m_l0ABpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m_l0AxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m_l0AxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m_l0ABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m_mbEBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m_l0ARpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m_l0AhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_olMf4BpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_olMf4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_olMf4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_olMf4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_olNG8BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_olMf4RpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_olMf4hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_61u8UIMiEeGuDKqPeNB_5w" name="Substance Use">
      <ownedComment xmi:id="_HwBBMIsVEeGEXvbgIb1duQ">
        <body>The template is used to capture substance use information that may be used to assess the efficacy and/or safety of therapies that look to mitigate the effects of chronic substance use, or that could be used as covariates in other efficacy and/or safety analyses.</body>
      </ownedComment>
      <ownedRule xmi:id="_iQ53UBpQEeSd5OoVIuDNwg" name="Substance UseTemplateId" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iQ7FcBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.95')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iRQcoBpQEeSd5OoVIuDNwg" name="Substance UseClassCode" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iRQcoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iRma4BpQEeSd5OoVIuDNwg" name="Substance UseMoodCode" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iRma4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iR584BpQEeSd5OoVIuDNwg" name="Substance UseId" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iR584RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iSUMkBpQEeSd5OoVIuDNwg" name="Substance UseStatusCode" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iSUMkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iSt1MBpQEeSd5OoVIuDNwg" name="Substance UseText" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iSt1MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iTAwIBpQEeSd5OoVIuDNwg" name="Substance UseEffectiveTime" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iTAwIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iTSc8BpQEeSd5OoVIuDNwg" name="Substance UseDoseQuantity" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iTSc8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iTkw0BpQEeSd5OoVIuDNwg" name="Substance UseMaxDoseQuantity" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iTkw0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iUZ3QBpQEeSd5OoVIuDNwg" name="Substance UseRouteCodeP" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iUZ3QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iUAOoBpQEeSd5OoVIuDNwg" name="Substance UseRouteCode" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iUAOoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iVDXgBpQEeSd5OoVIuDNwg" name="Substance UseConsumable Material" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iVDXgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(sdtm::ConsumableMaterial))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iVvUABpQEeSd5OoVIuDNwg" name="Substance UsePre-Specified Event" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iVvUARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PreSpecifiedEvent) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iV99gBpQEeSd5OoVIuDNwg" name="Substance UseNonPerformanceReason" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iV99gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iqYHQBpQEeSd5OoVIuDNwg" name="Substance UseData Collection" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iqYHQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kIY9YBpQEeSd5OoVIuDNwg" name="Substance UseStudy Day Period" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kIY9YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m_rTkBpQEeSd5OoVIuDNwg" name="Substance UseComment" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m_rTkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m_59EBpQEeSd5OoVIuDNwg" name="Substance UseDomain Assignment" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m_59ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nAH_gBpQEeSd5OoVIuDNwg" name="Substance UseRelated Record" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nAImkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nAXQEBpQEeSd5OoVIuDNwg" name="Substance UseSupplemental Value" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nAXQERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nLyc8BpQEeSd5OoVIuDNwg" name="Substance UseStart Relative to Reference Period" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nLyc8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nMBGcBpQEeSd5OoVIuDNwg" name="Substance UseStop Relative to Reference Period" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nMBGcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n83UkBpQEeSd5OoVIuDNwg" name="Substance UseCategory" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n83UkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oE0WsBpQEeSd5OoVIuDNwg" name="Substance UseSub-Category" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oE0WsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_olR_cBpQEeSd5OoVIuDNwg" name="Substance UseFinding About" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_olR_cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_orR5wBpQEeSd5OoVIuDNwg" name="Substance UseEvent Duration" constrainedElement="_61u8UIMiEeGuDKqPeNB_5w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_orSg0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventDuration) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_614tUIMiEeGuDKqPeNB_5w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_iV4d8BpQEeSd5OoVIuDNwg" name="getPre-Specified Event" bodyCondition="_iV5FAhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iV5FAhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iV4d8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iV5FAxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PreSpecifiedEvent))->asSequence()->any(true).oclAsType(sdtm::PreSpecifiedEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iV5FABpQEeSd5OoVIuDNwg" type="__G5heXIJEeGL-K1S1E9LrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iV5FARpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iWHugBpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_iWHugxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iWHugxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iWHugBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iWHuhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iWHugRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iWHughpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iqh4QBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_iqh4QxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iqh4QxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iqh4QBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iqh4RBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iqh4QRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iqh4QhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kIiHUBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_kIiHUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kIiHUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kIiHUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kIiuYBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kIiHURpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kIiHUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m_0dgBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m_0dgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m_0dgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m_0dgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m_1EkBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m_0dgRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m_0dghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nADHABpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_nADHAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nADHAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nADHABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nADHBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nADHARpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nADHAhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nARwgBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_nASXkhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nASXkhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nARwgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nASXkxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nASXkBpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nASXkRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nAgaABpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_nAhBEhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nAhBEhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nAgaABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nAhBExpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nAhBEBpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nAhBERpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nL7m4BpQEeSd5OoVIuDNwg" name="getStart Relative to Reference Period" bodyCondition="_nL8N8BpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nL8N8BpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nL7m4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nL8N8RpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StartRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nL7m4RpQEeSd5OoVIuDNwg" type="_w_aIINW7EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nL7m4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nMK3cBpQEeSd5OoVIuDNwg" name="getStop Relative to Reference Period" bodyCondition="_nMK3cxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nMK3cxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nMK3cBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nMK3dBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StopRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nMK3cRpQEeSd5OoVIuDNwg" type="_PTdgANW9EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nMK3chpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n9BFkBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n9BFkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n9BFkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n9BFkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n9BFlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n9BFkRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n9BFkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oE-HsBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oE-HsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oE-HsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oE-HsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oE-HtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oE-HsRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oE-HshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_olbwcBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_olbwcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_olbwcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_olbwcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_olbwdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_olbwcRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_olbwchpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_orcR0BpQEeSd5OoVIuDNwg" name="getEvent Duration" bodyCondition="_orcR0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_orcR0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_orcR0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_orcR1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventDuration))->asSequence()->any(true).oclAsType(sdtm::EventDuration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_orcR0RpQEeSd5OoVIuDNwg" type="_-HQWMPj8EeG7pMUQbTahtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_orcR0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_BQFfoIjAEeGwjb3wu_tBLA" name="Human Clinical Disposition">
      <ownedComment xmi:id="_CSxPMIjBEeGwjb3wu_tBLA">
        <body>Th template supports the contnets of the SDTM Disposition domain.  This information provides an accounting for all subjects who entered the study and may include protocol milestones, such as randomization, as well as the subject's completion status or reason for discontinuation for the entire study or each phase or segment of the study, including screening and post-treatment follow-up.</body>
      </ownedComment>
      <ownedRule xmi:id="_iWKKwBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionTemplateId" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iWKx0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iWaCYBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionClassCode" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iWaCYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iW1gMBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionCode" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iW1gMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iXPv4BpQEeSd5OoVIuDNwg" name="Human Clinical DispositionEffectiveTime" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iXPv4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iXj48BpQEeSd5OoVIuDNwg" name="Human Clinical DispositionId" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iXj48RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iX4pEBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionMoodCode" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iX4pERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iYXKMBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionStudy Epoch" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iYXKMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::StudyEpoch) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_icBiMBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionGroup Identifier" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_icBiMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kI2QYBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionStudy Day Period" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kI2QYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_moQSEBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionComment" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_moQSERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_moe7kBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionDomain Assignment" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mofioBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_motlEBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionRelated Record" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mouMIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mo81oBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionSupplemental Value" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mo81oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n5R1EBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionCategory" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n5R1ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oAyyUBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionSub-Category" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oAyyURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ohAjcBpQEeSd5OoVIuDNwg" name="Human Clinical DispositionFinding About" constrainedElement="_BQFfoIjAEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ohAjcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_BQFfoYjAEeGwjb3wu_tBLA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_iYg7MBpQEeSd5OoVIuDNwg" name="getStudy Epoch" bodyCondition="_iYg7MxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iYg7MxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iYg7MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iYg7NBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::StudyEpoch))->asSequence()->any(true).oclAsType(sdtm::StudyEpoch)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iYg7MRpQEeSd5OoVIuDNwg" type="_HJE2EH5pEeGbfrTsVlSE3Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iYg7MhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_icLTMBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_icLTMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_icLTMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_icLTMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_icLTNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_icLTMRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_icLTMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kJABYBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_kJABYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kJABYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kJABYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kJABZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kJABYRpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kJABYhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_moaDEBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_moaDExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_moaDExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_moaDEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_moaDFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_moaDERpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_moaDEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mooskBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mooskxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mooskxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mooskBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mooslBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mooskRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mooskhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mo3WEBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mo3WExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mo3WExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mo3WEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mo39IBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mo3WERpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mo3WEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mpF_kBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mpF_kxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mpF_kxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mpF_kBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mpF_lBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mpF_kRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mpF_khpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n5cNIBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n5cNIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n5cNIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n5cNIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n5cNJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n5cNIRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n5cNIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oA8jUBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oA8jUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oA8jUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oA8jUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oA8jVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oA8jURpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oA8jUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ohLikBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ohLikxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ohLikxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ohLikBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ohLilBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ohLikRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ohLikhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YOwMEIjGEeGwjb3wu_tBLA" name="Data Collection">
      <ownedComment xmi:id="_rAP8MIjGEeGwjb3wu_tBLA">
        <body>The template is used for the collection of data, or the completion of a question with regard to an activity or other event.  It captures indication about the peformance and timing of data collection. This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical trial reporting.  Use of this template is particularly relevant when there is a potential distinction between the timing of when an activity occurred and when it was reported.</body>
      </ownedComment>
      <ownedRule xmi:id="_iYjXcBpQEeSd5OoVIuDNwg" name="Data CollectionTemplateId" constrainedElement="_YOwMEIjGEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iYklkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iYz2IBpQEeSd5OoVIuDNwg" name="Data CollectionClassCode" constrainedElement="_YOwMEIjGEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iYz2IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iZJNUBpQEeSd5OoVIuDNwg" name="Data CollectionMoodCode" constrainedElement="_YOwMEIjGEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iZJNURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iareYBpQEeSd5OoVIuDNwg" name="Data CollectionCodeP" constrainedElement="_YOwMEIjGEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iareYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iZnHYBpQEeSd5OoVIuDNwg" name="Data CollectionCode" constrainedElement="_YOwMEIjGEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iZnHYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'DCtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iaNkUBpQEeSd5OoVIuDNwg" name="Data CollectionCodeVS" constrainedElement="_YOwMEIjGEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iaNkURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C25150' or value.code = 'ATPtbd' or value.code = 'C49562' or value.code = 'AQtbd' or value.code = 'CEtbd' or value.code = 'C49569' or value.code = 'C83199' or value.code = 'CStbd' or value.code = 'C88026' or value.code = 'DCtbd' or value.code = 'DOtbd' or value.code = 'C95087' or value.code = 'DRtbd' or value.code = 'DMGtbd' or value.code = 'C66734' or value.code = 'DARtbd' or value.code = 'ELOtbd' or value.code = 'EDtbd' or value.code = 'C66769' or value.code = 'C49489' or value.code = 'C83208' or value.code = 'ESDtbd' or value.code = 'EXCtbd' or value.code = 'FStbd' or value.code = 'FAOtbd' or value.code = 'C83204' or value.code = 'HUStbd' or value.code = 'C83085' or value.code = 'IRtbd' or value.code = 'C87881' or value.code = 'MAStbd' or value.code = 'MHItbd' or value.code = 'NHStbd' or value.code = 'NPRtbd' or value.code = 'NSTtbd' or value.code = 'OWAtbd' or value.code = 'OATtbd' or value.code = 'C83450' or value.code = 'POTtbd' or value.code = 'C71148' or value.code = 'PSEtbd' or value.code = 'PDtbd' or value.code = 'RPtbd' or value.code = 'RRtbd' or value.code = 'C78736' or value.code = 'SETtbd' or value.code = 'C53252' or value.code = 'SETtbd' or value.code = 'SPCtbd' or value.code = 'SCLtbd' or value.code = 'C78733' or value.code = 'C78734' or value.code = 'SUtbd' or value.code = 'STRPtbd' or value.code = 'ENRPtbd' or value.code = 'SStbd' or value.code = 'STPtbd' or value.code = 'ARMtbd' or value.code = 'C99079' or value.code = 'STAtbd' or value.code = 'STCtbd' or value.code = 'SPtbd' or value.code = 'TRtbd' or value.code = 'TOtbd'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ibKmkBpQEeSd5OoVIuDNwg" name="Data CollectionEffectiveTime" constrainedElement="_YOwMEIjGEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ibKmkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ibfWsBpQEeSd5OoVIuDNwg" name="Data CollectionNegationInd" constrainedElement="_YOwMEIjGEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ibfWsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_irEq0BpQEeSd5OoVIuDNwg" name="Data CollectionEvent Study Day" constrainedElement="_YOwMEIjGEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_irEq0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YOwMEYjGEeGwjb3wu_tBLA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_irOb0BpQEeSd5OoVIuDNwg" name="getEvent Study Day" bodyCondition="_irOb0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_irOb0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_irOb0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_irOb1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventStudyDay))->asSequence()->any(true).oclAsType(sdtm::EventStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_irOb0RpQEeSd5OoVIuDNwg" type="_j42pwGerEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_irOb0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6-6mEIjLEeGwjb3wu_tBLA" name="Medical History Item">
      <ownedComment xmi:id="_IhrAcIjMEeGwjb3wu_tBLA">
        <body>The template records the content of the SDTM medical history domain.  It generally includes the subject's prior and concomitant conditions at the start of the trial.</body>
      </ownedComment>
      <ownedRule xmi:id="_icNvcBpQEeSd5OoVIuDNwg" name="Medical History ItemTemplateId" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_icO9kBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.52')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ice1MBpQEeSd5OoVIuDNwg" name="Medical History ItemClassCode" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ice1MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ic0zcBpQEeSd5OoVIuDNwg" name="Medical History ItemMoodCode" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ic0zcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_idI8gBpQEeSd5OoVIuDNwg" name="Medical History ItemId" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_idI8gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ieN6kBpQEeSd5OoVIuDNwg" name="Medical History ItemCodeP" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ieN6kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_idmPgBpQEeSd5OoVIuDNwg" name="Medical History ItemCode" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_idmPgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'MHItbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ietCwBpQEeSd5OoVIuDNwg" name="Medical History ItemStatusCode" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ietCwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ie_WoBpQEeSd5OoVIuDNwg" name="Medical History ItemEffectiveTime" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ie_WoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ifa0cBpQEeSd5OoVIuDNwg" name="Medical History ItemValue" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ifbbgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_if1rMBpQEeSd5OoVIuDNwg" name="Medical History ItemValueP" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_if1rMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_igekYBpQEeSd5OoVIuDNwg" name="Medical History ItemGroup Identifier" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_igekYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_igtN4BpQEeSd5OoVIuDNwg" name="Medical History ItemPre-Specified Event" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_igtN4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PreSpecifiedEvent) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ig8ecBpQEeSd5OoVIuDNwg" name="Medical History ItemNonPerformanceReason" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ig8ecRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ihLH8BpQEeSd5OoVIuDNwg" name="Medical History ItemBody System or Organ Class" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ihLH8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::BodySystemorOrganClass) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iqmwwBpQEeSd5OoVIuDNwg" name="Medical History ItemData Collection" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iqmwwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mt_GoBpQEeSd5OoVIuDNwg" name="Medical History ItemComment" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mt_GoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_muNwIBpQEeSd5OoVIuDNwg" name="Medical History ItemDomain Assignment" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_muNwIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mucZoBpQEeSd5OoVIuDNwg" name="Medical History ItemRelated Record" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mucZoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_murqMBpQEeSd5OoVIuDNwg" name="Medical History ItemSupplemental Value" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_murqMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nMtqABpQEeSd5OoVIuDNwg" name="Medical History ItemStart Relative to Reference Period" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nMtqARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nM8TgBpQEeSd5OoVIuDNwg" name="Medical History ItemStop Relative to Reference Period" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nM8TgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n6R6oBpQEeSd5OoVIuDNwg" name="Medical History ItemCategory" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n6R6oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBumcBpQEeSd5OoVIuDNwg" name="Medical History ItemSub-Category" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBumcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oiTj8BpQEeSd5OoVIuDNwg" name="Medical History ItemFinding About" constrainedElement="_6-6mEIjLEeGwjb3wu_tBLA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oiTj8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6_EXEIjLEeGwjb3wu_tBLA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_ignuUBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_igoVYhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_igoVYhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ignuUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_igoVYxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_igoVYBpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_igoVYRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ig2-4BpQEeSd5OoVIuDNwg" name="getPre-Specified Event" bodyCondition="_ig3l8hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ig3l8hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ig2-4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ig3l8xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PreSpecifiedEvent))->asSequence()->any(true).oclAsType(sdtm::PreSpecifiedEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ig3l8BpQEeSd5OoVIuDNwg" type="__G5heXIJEeGL-K1S1E9LrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ig3l8RpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ihFoYBpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_ihGPchpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ihGPchpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ihFoYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ihGPcxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ihGPcBpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ihGPcRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ihUR4BpQEeSd5OoVIuDNwg" name="getBody System or Organ Class" bodyCondition="_ihUR4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ihUR4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ihUR4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ihU48BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodySystemorOrganClass))->asSequence()->any(true).oclAsType(sdtm::BodySystemorOrganClass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ihUR4RpQEeSd5OoVIuDNwg" type="_QmoEwGoUEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ihUR4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iqwhwBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_iqwhwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iqwhwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iqwhwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iqwhxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iqwhwRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iqwhwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_muIQkBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_muIQkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_muIQkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_muIQkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_muIQlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_muIQkRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_muIQkhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_muXhIBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_muXhIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_muXhIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_muXhIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_muXhJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_muXhIRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_muXhIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mumKoBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mumKoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mumKoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mumKoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mumKpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mumKoRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mumKohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mu00IBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mu00IxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mu00IxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mu00IBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mu00JBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mu00IRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mu00IhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nM2z8BpQEeSd5OoVIuDNwg" name="getStart Relative to Reference Period" bodyCondition="_nM3bARpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nM3bARpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nM2z8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nM3bAhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StartRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nM2z8RpQEeSd5OoVIuDNwg" type="_w_aIINW7EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nM3bABpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nNFdcBpQEeSd5OoVIuDNwg" name="getStop Relative to Reference Period" bodyCondition="_nNGEgRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nNGEgRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nNFdcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nNGEghpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StopRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nNFdcRpQEeSd5OoVIuDNwg" type="_PTdgANW9EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nNGEgBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n6broBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n6cSsRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n6cSsRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n6broBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n6cSshpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n6broRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6cSsBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oB4XcBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oB4XcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oB4XcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oB4XcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oB4XdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oB4XcRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oB4XchpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oidU8BpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_oidU8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oidU8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oidU8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oidU9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oidU8RpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oidU8hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sq4oMIpqEeGissEAbjTgHg" name="Protocol Deviation">
      <ownedComment xmi:id="_OdwFwIprEeGissEAbjTgHg">
        <body>The template supports the need to capture events that are considered to be deviations from the protocol that has been established for the study subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_ihl-sBpQEeSd5OoVIuDNwg" name="Protocol DeviationTemplateId" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ihmlwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.71')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ih0oMBpQEeSd5OoVIuDNwg" name="Protocol DeviationClassCode" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ih0oMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iiIKMBpQEeSd5OoVIuDNwg" name="Protocol DeviationMoodCode" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iiIKMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iicTQBpQEeSd5OoVIuDNwg" name="Protocol DeviationId" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iicTQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ijPkgBpQEeSd5OoVIuDNwg" name="Protocol DeviationCodeP" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ijPkgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ii0twBpQEeSd5OoVIuDNwg" name="Protocol DeviationCode" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ii0twRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'PDtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ijpNIBpQEeSd5OoVIuDNwg" name="Protocol DeviationEffectiveTime" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ijpNIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ij7hABpQEeSd5OoVIuDNwg" name="Protocol DeviationValue" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ij7hARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ikVwsBpQEeSd5OoVIuDNwg" name="Protocol DeviationStudy Epoch" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ikVwsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::StudyEpoch) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m5QigBpQEeSd5OoVIuDNwg" name="Protocol DeviationComment" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m5QigRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m5fMABpQEeSd5OoVIuDNwg" name="Protocol DeviationDomain Assignment" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m5fMARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m5t1gBpQEeSd5OoVIuDNwg" name="Protocol DeviationRelated Record" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m5t1gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m58fABpQEeSd5OoVIuDNwg" name="Protocol DeviationSupplemental Value" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m58fARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n8KxABpQEeSd5OoVIuDNwg" name="Protocol DeviationCategory" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n8KxARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oDYzUBpQEeSd5OoVIuDNwg" name="Protocol DeviationSub-Category" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDYzURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ojjhIBpQEeSd5OoVIuDNwg" name="Protocol DeviationFinding About" constrainedElement="_sq4oMIpqEeGissEAbjTgHg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ojjhIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sq4oMYpqEeGissEAbjTgHg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_ikgIwBpQEeSd5OoVIuDNwg" name="getStudy Epoch" bodyCondition="_ikgIwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ikgIwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ikgIwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ikgIxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::StudyEpoch))->asSequence()->any(true).oclAsType(sdtm::StudyEpoch)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ikgIwRpQEeSd5OoVIuDNwg" type="_HJE2EH5pEeGbfrTsVlSE3Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ikgIwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m5aTgBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m5aTgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m5aTgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m5aTgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m5aThBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m5aTgRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m5aTghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m5oV8BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m5o9ARpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m5o9ARpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m5oV8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m5o9AhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m5oV8RpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m5o9ABpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m53mgBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m53mgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m53mgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m53mgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m53mhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m53mgRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m53mghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m6GQABpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m6GQAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m6GQAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m6GQABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m6GQBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m6GQARpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m6GQAhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n8UiABpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n8UiAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n8UiAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n8UiABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n8UiBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n8UiARpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n8UiAhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oDikUBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oDikUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oDikUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oDikUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDikVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oDikURpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDikUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ojt5MBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ojt5MxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ojt5MxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ojt5MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ojt5NBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ojt5MRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ojt5MhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iR3fUIsBEeGEXvbgIb1duQ" name="Clinical Event">
      <ownedComment xmi:id="_EFBLkIsUEeGEXvbgIb1duQ">
        <body>The template is based on the Clincial Event domain.  It captures clinical events of interest that are not classified as adverse events.  The data for a clinical event may include information about episodes of symptoms of the disease under study (often known as signs and symptoms), or about events that do not constitute adverse events in themselves, though they might lead to the identification of an adverse event.  For example, in a study of an investigational treatment for migraine headaches, migraine headaches may not be considered to be adverse events per protocol. The occurrence of migraines or associated signs and symptoms might be reported as a clinical event.  Other studies might track the occurrence of specific events as efficacy endpoints.  For example, in a study of an investigational treatment for prevention of ischemic stroke, all occurrences of TIA, stroke and death might be captured as clinical events and assessed as to whether they meet endpoint criteria.</body>
      </ownedComment>
      <ownedRule xmi:id="_ikilABpQEeSd5OoVIuDNwg" name="Clinical EventTemplateId" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ikjMEBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.21')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ikycoBpQEeSd5OoVIuDNwg" name="Clinical EventClassCode" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ikycoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ilHz0BpQEeSd5OoVIuDNwg" name="Clinical EventMoodCode" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ilIa4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_imuWUBpQEeSd5OoVIuDNwg" name="Clinical EventCodeP" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_imuWURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ilm8ABpQEeSd5OoVIuDNwg" name="Clinical EventCode" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ilm8ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'CEtbd')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_imPOIBpQEeSd5OoVIuDNwg" name="Clinical EventCodeVS" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_imPOIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystemName = 'MedDRA' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_inMQYBpQEeSd5OoVIuDNwg" name="Clinical EventEffectiveTime" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_inMQYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ind9MBpQEeSd5OoVIuDNwg" name="Clinical EventId" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ind9MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_in4M4BpQEeSd5OoVIuDNwg" name="Clinical EventStatusCode" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_in4M4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ioZxUBpQEeSd5OoVIuDNwg" name="Clinical EventValue" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ioZxURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystemName = 'MedDRA' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_io0BABpQEeSd5OoVIuDNwg" name="Clinical EventValueP" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_io0BARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ipc6MBpQEeSd5OoVIuDNwg" name="Clinical EventPre-Specified Event" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ipc6MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PreSpecifiedEvent) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iprjsBpQEeSd5OoVIuDNwg" name="Clinical EventNonPerformanceReason" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ipsKwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ip60QBpQEeSd5OoVIuDNwg" name="Clinical EventBody System or Organ Class" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ip60QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::BodySystemorOrganClass) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iq2BUBpQEeSd5OoVIuDNwg" name="Clinical EventData Collection" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iq2BURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ir_Q0BpQEeSd5OoVIuDNwg" name="Clinical EventEvent Severity" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ir_Q0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventorFindingSeverity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_midzIBpQEeSd5OoVIuDNwg" name="Clinical EventComment" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_midzIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mir1kBpQEeSd5OoVIuDNwg" name="Clinical EventDomain Assignment" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mir1kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mi6fEBpQEeSd5OoVIuDNwg" name="Clinical EventRelated Record" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mi6fERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mjJIkBpQEeSd5OoVIuDNwg" name="Clinical EventSupplemental Value" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mjJIkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nNK9ABpQEeSd5OoVIuDNwg" name="Clinical EventStart Relative to Reference Period" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nNK9ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nNZmgBpQEeSd5OoVIuDNwg" name="Clinical EventStop Relative to Reference Period" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nNZmgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n3kk4BpQEeSd5OoVIuDNwg" name="Clinical EventCategory" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n3kk4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ofvYIBpQEeSd5OoVIuDNwg" name="Clinical EventFinding About" constrainedElement="_iR3fUIsBEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ofvYIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iR3fUYsBEeGEXvbgIb1duQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_ipmrMBpQEeSd5OoVIuDNwg" name="getPre-Specified Event" bodyCondition="_ipmrMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ipmrMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ipmrMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ipmrNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PreSpecifiedEvent))->asSequence()->any(true).oclAsType(sdtm::PreSpecifiedEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ipmrMRpQEeSd5OoVIuDNwg" type="__G5heXIJEeGL-K1S1E9LrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ipmrMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ip1UsBpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_ip1UsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ip1UsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ip1UsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ip1UtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ip1UsRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ip1UshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iqD-MBpQEeSd5OoVIuDNwg" name="getBody System or Organ Class" bodyCondition="_iqD-MxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iqD-MxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iqD-MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iqElQBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodySystemorOrganClass))->asSequence()->any(true).oclAsType(sdtm::BodySystemorOrganClass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iqD-MRpQEeSd5OoVIuDNwg" type="_QmoEwGoUEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iqD-MhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_iq_yUBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_iq_yUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_iq_yUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_iq_yUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_iq_yVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_iq_yURpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_iq_yUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_isIawBpQEeSd5OoVIuDNwg" name="getEvent Severity" bodyCondition="_isJB0RpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_isJB0RpQEeSd5OoVIuDNwg" name="body" constrainedElement="_isIawBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_isJB0hpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventorFindingSeverity))->asSequence()->any(true).oclAsType(sdtm::EventorFindingSeverity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_isIawRpQEeSd5OoVIuDNwg" type="_nrFiEGoYEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_isJB0BpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mim9EBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mim9ExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mim9ExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mim9EBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mim9FBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mim9ERpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mim9EhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mi1mkBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mi1mkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mi1mkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mi1mkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mi1mlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mi1mkRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mi1mkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mjEQEBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mjEQExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mjEQExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mjEQEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mjEQFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mjEQERpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mjEQEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mjS5kBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mjS5kxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mjS5kxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mjS5kBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mjS5lBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mjS5kRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mjS5khpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nNUG8BpQEeSd5OoVIuDNwg" name="getStart Relative to Reference Period" bodyCondition="_nNUG8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nNUG8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nNUG8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nNUuABpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StartRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StartRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nNUG8RpQEeSd5OoVIuDNwg" type="_w_aIINW7EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nNUG8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nNiwcBpQEeSd5OoVIuDNwg" name="getStop Relative to Reference Period" bodyCondition="_nNiwcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nNiwcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nNiwcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nNiwdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StopRelativetoReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::StopRelativetoReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nNiwcRpQEeSd5OoVIuDNwg" type="_PTdgANW9EeGJ8IViYnBfBA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nNiwchpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n3u88BpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n3vkAhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n3vkAhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n3u88BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n3vkAxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n3vkABpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3vkARpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n_kDQBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_n_kDQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n_kDQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n_kDQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n_kDRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n_kDQRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n_kDQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_of5wMBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_of5wMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_of5wMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_of5wMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_of5wNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_of5wMRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_of5wMhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CPm5YIslEeGEXvbgIb1duQ" name="ECG Test Result">
      <ownedComment xmi:id="_az1goMbPEeGwbZ25JrRzcg">
        <body>The template is used for capturing ECG results.</body>
      </ownedComment>
      <ownedRule xmi:id="_isLeEBpQEeSd5OoVIuDNwg" name="ECG Test ResultTemplateId" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_isMFIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ismU0BpQEeSd5OoVIuDNwg" name="ECG Test ResultClassCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ismU0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_is8TEBpQEeSd5OoVIuDNwg" name="ECG Test ResultMoodCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_is8TERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_itP1EBpQEeSd5OoVIuDNwg" name="ECG Test ResultId" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_itP1ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iuFikBpQEeSd5OoVIuDNwg" name="ECG Test ResultCodeP" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iuFikRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_itqr0BpQEeSd5OoVIuDNwg" name="ECG Test ResultCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_itqr0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iufyQBpQEeSd5OoVIuDNwg" name="ECG Test ResultText" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iugZUBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iu6B8BpQEeSd5OoVIuDNwg" name="ECG Test ResultStatusCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iu6B8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ivTDgBpQEeSd5OoVIuDNwg" name="ECG Test ResultEffectiveTime" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ivTDgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ivlXYBpQEeSd5OoVIuDNwg" name="ECG Test ResultValue" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ivlXYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iweIMBpQEeSd5OoVIuDNwg" name="ECG Test ResultMethodCodeP" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iweIMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_iwD4gBpQEeSd5OoVIuDNwg" name="ECG Test ResultMethodCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_iwD4gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ixjGQBpQEeSd5OoVIuDNwg" name="ECG Test ResultInterpretationCodeP" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ixjGQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ixJdoBpQEeSd5OoVIuDNwg" name="ECG Test ResultInterpretationCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ixJdoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i3adsBpQEeSd5OoVIuDNwg" name="ECG Test ResultGroup Identifier" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i3adsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i3puQBpQEeSd5OoVIuDNwg" name="ECG Test ResultNonPerformanceReason" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i3puQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i33JoBpQEeSd5OoVIuDNwg" name="ECG Test ResultLeadLocationAssociation" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i33JoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i4TOgBpQEeSd5OoVIuDNwg" name="ECG Test ResultTiming Reference" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i4TOgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jP85gBpQEeSd5OoVIuDNwg" name="ECG Test ResultStudy Test Performer" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jP85gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kJES0BpQEeSd5OoVIuDNwg" name="ECG Test ResultStudy Finding Evaluator" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kJES0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mGbXYBpQEeSd5OoVIuDNwg" name="ECG Test ResultAssociatedConsciousness" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mGbXYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mG_YEBpQEeSd5OoVIuDNwg" name="ECG Test ResultPlanned Study Day" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mG_YERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PlannedStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mHOBkBpQEeSd5OoVIuDNwg" name="ECG Test ResultStudy Day Period" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mHOBkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mmZ38BpQEeSd5OoVIuDNwg" name="ECG Test ResultComment" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mmafABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mmpIgBpQEeSd5OoVIuDNwg" name="ECG Test ResultDomain Assignment" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mmpIgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mm3yABpQEeSd5OoVIuDNwg" name="ECG Test ResultRelated Record" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mm3yARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mnGbgBpQEeSd5OoVIuDNwg" name="ECG Test ResultSupplemental Value" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mnGbgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n4zT8BpQEeSd5OoVIuDNwg" name="ECG Test ResultCategory" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n4zT8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oAVfUBpQEeSd5OoVIuDNwg" name="ECG Test ResultSub-Category" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oAVfURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIOQABpQEeSd5OoVIuDNwg" name="ECG Test ResultPosition of Subject" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIOQARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PositionofSubject) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ogtogBpQEeSd5OoVIuDNwg" name="ECG Test ResultFinding About" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ogtogRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o12yEBpQEeSd5OoVIuDNwg" name="ECG Test ResultleadLocationAssociationecgLeadLocationClassCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o12yERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o15OUBpQEeSd5OoVIuDNwg" name="ECG Test ResultleadLocationAssociationecgLeadLocationCodeP" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o15OURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o18RoBpQEeSd5OoVIuDNwg" name="ECG Test ResultleadLocationAssociationecgLeadLocationCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o18RoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'C87881' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o1-t4BpQEeSd5OoVIuDNwg" name="ECG Test ResultleadLocationAssociationecgLeadLocationMoodCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o1-t4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2BxMBpQEeSd5OoVIuDNwg" name="ECG Test ResultleadLocationAssociationecgLeadLocationValue" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2BxMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2ENcBpQEeSd5OoVIuDNwg" name="ECG Test ResultleadLocationAssociationecgLeadLocationValueP" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2ENcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2HQwBpQEeSd5OoVIuDNwg" name="ECG Test ResultleadLocationAssociationTypeCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2HQwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2JtABpQEeSd5OoVIuDNwg" name="ECG Test ResultleadLocationAssociationEcgLeadLocation" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2JtARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2iukBpQEeSd5OoVIuDNwg" name="ECG Test ResultassociatedConsciousnessconsciousnessStateClassCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2iukRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2lK0BpQEeSd5OoVIuDNwg" name="ECG Test ResultassociatedConsciousnessconsciousnessStateCodeP" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2lK0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2oOIBpQEeSd5OoVIuDNwg" name="ECG Test ResultassociatedConsciousnessconsciousnessStateCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2oOIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'CStbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2qqYBpQEeSd5OoVIuDNwg" name="ECG Test ResultassociatedConsciousnessconsciousnessStateMoodCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2qqYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(isDefined('moodCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2ttsBpQEeSd5OoVIuDNwg" name="ECG Test ResultassociatedConsciousnessconsciousnessStateValue" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2ttsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2wJ8BpQEeSd5OoVIuDNwg" name="ECG Test ResultassociatedConsciousnessconsciousnessStateValueP" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2wxABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o2zNQBpQEeSd5OoVIuDNwg" name="ECG Test ResultassociatedConsciousnessTypeCode" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o2zNQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o21pgBpQEeSd5OoVIuDNwg" name="ECG Test ResultassociatedConsciousnessConsciousnessState" constrainedElement="_CPm5YIslEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o22QkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VPzesI5YEeGz0ZL5qt1C9w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_i3k1wBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_i3k1wxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_i3k1wxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_i3k1wBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i3k1xBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i3k1wRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i3k1whpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i3zfQBpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_i3zfQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_i3zfQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_i3zfQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i3zfRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i3zfQRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i3zfQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i4cYcBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_i4c_gBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_i4c_gBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_i4cYcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i4c_gRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i4cYcRpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i4cYchpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mHIiABpQEeSd5OoVIuDNwg" name="getPlanned Study Day" bodyCondition="_mHJJERpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mHJJERpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mHIiABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mHJJEhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PlannedStudyDay))->asSequence()->any(true).oclAsType(sdtm::PlannedStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mHIiARpQEeSd5OoVIuDNwg" type="_li9xQGeiEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mHJJEBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mHXykBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_mHXykxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mHXykxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mHXykBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mHXylBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mHXykRpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mHXykhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mmjo8BpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mmjo8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mmjo8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mmjo8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mmjo9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mmjo8RpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mmjo8hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mmyScBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mmy5gRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mmy5gRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mmyScBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mmy5ghpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mmyScRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mmy5gBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mnBjABpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mnBjAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mnBjAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mnBjABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mnBjBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mnBjARpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mnBjAhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mnQMgBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mnQMgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mnQMgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mnQMgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mnQMhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mnQMgRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mnQMghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n49E8BpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n49E8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n49E8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n49E8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n49E9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n49E8RpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n49E8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAfQUBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oAfQUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oAfQUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oAfQUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oAfQVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAfQURpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oAfQUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oIYBABpQEeSd5OoVIuDNwg" name="getPosition of Subject" bodyCondition="_oIYBAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oIYBAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oIYBABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIYBBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PositionofSubject))->asSequence()->any(true).oclAsType(sdtm::PositionofSubject)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oIYBARpQEeSd5OoVIuDNwg" type="_FhxtaYsoEeGEXvbgIb1duQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIYBAhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_og4noBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_og5OshpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_og5OshpQEeSd5OoVIuDNwg" name="body" constrainedElement="_og4noBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_og5OsxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_og5OsBpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_og5OsRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_55IL0I4zEeGz0ZL5qt1C9w" name="Inclusion or Exclusion Criteria Not Met">
      <ownedComment xmi:id="_qqsdUI40EeGz0ZL5qt1C9w">
        <body>The template provides a structure to include inclusion and exclusion criteria exceptions.  It should be used to record any criteria violations, even if a sponsor has granted a waiver, or the subject was admitted by mistake.  The intent is to only include information relating to criteria the subject did not meet.  It should include exceptions to inclusion or exclusion cretieria at the time that eligibility for study entry is determined - at the end of a run in period or immediately before randmization.</body>
      </ownedComment>
      <ownedRule xmi:id="_i4e0sBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetTemplateId" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i4gC0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.47')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i4vTYBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetClassCode" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i4vTYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5FRoBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetMoodCode" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5FRoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5YzoBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetId" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5ZasBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6NTABpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetCodeP" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6NTARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5zDUBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetCode" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5zDURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6nisBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetValue" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6nisRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7ByYBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetData Collection" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7ByYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_msJTkBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetComment" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_msJTkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_msX9EBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetDomain Assignment" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_msX9ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_msmmkBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetRelated Record" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_msmmkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ms1QEBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetSupplemental Value" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ms1QERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n6DRIBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetCategory" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n6DRIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBfV4BpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetSub-Category" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBfV4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oiDsUBpQEeSd5OoVIuDNwg" name="Inclusion or Exclusion Criteria Not MetFinding About" constrainedElement="_55IL0I4zEeGz0ZL5qt1C9w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oiDsURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_55Iy4I4zEeGz0ZL5qt1C9w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_i7LjYBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_i7LjYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_i7LjYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_i7LjYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7MKcBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i7LjYRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i7LjYhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_msSdgBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_msSdgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_msSdgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_msSdgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_msSdhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_msSdgRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_msSdghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mshHABpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mshuERpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mshuERpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mshHABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mshuEhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mshHARpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mshuEBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mswXkBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mswXkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mswXkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mswXkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mswXlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mswXkRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mswXkhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ms_BEBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_ms_BExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ms_BExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ms_BEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ms_BFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ms_BERpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ms_BEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n6NCIBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n6NCIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n6NCIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n6NCIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n6NCJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n6NCIRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6NCIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oBpG4BpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oBpt8hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oBpt8hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oBpG4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBpt8xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBpt8BpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oBpt8RpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oiOEYBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_oiOEYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oiOEYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oiOEYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oiOEZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oiOEYRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oiOEYhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_L1vSUI-oEeGSf7-C4p-dMA" name="Non-human Laboratory Test Result">
      <ownedComment xmi:id="_qZE40I-oEeGSf7-C4p-dMA">
        <body>The template is used to collect information on laboratory data collected on a reporting form or received from a central provider or vendor.</body>
      </ownedComment>
      <ownedRule xmi:id="_i7N_oBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultTemplateId" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7PNwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.59')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7eeUBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultClassCode" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7eeURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8UL0BpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultCodeP" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8UL0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i758IBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultCode" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i758IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8ubgBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultId" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8ubgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9B9gBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultMoodCode" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9B9gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9eCYBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultStatusCode" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9eCYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i93D8BpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultValue" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i93D8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-umoBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultMethodCodeP" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-umoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-UW8BpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultMethodCode" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-UW8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_0y0BpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultInterpretationCodeP" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_0y0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_bKMBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultInterpretationCode" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_bxQBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C78802' or value.code = 'C78800' or value.code = '78801' or value.code = '78727' or value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAVJIBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultGroup Identifier" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAVJIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMxCoBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultSpecimen Information" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMxCoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNVqYBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultNonPerformanceReason" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNVqYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPveIBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultStudy Test Performer" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPveIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l9KtsBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultExclusion Indicator" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l9KtsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ExclusionReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l9Z-QBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultPlanned Study Day" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l9Z-QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PlannedStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l9onwBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultStudy Day Period" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l9onwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l93RQBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultTiming Reference" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l93RQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mzgf0BpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultComment" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mzgf0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mzvJUBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultDomain Assignment" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mzvJURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mz9y0BpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultRelated Record" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mz9y0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m0McUBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultSupplemental Value" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m0McURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nz0GQBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultToxicity" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nz0tUBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Toxicity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n7Pj8BpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultCategory" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n7Pj8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oCc_MBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultSub-Category" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oCc_MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oaAjkBpQEeSd5OoVIuDNwg" name="Non-human Laboratory Test ResultFasting Status" constrainedElement="_L1vSUI-oEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaAjkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FastingStatus) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_L2TTAI-oEeGSf7-C4p-dMA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jAe6IBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_jAe6IxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jAe6IxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jAe6IBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAe6JBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jAe6IRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jAe6IhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jM6zoBpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_jM6zoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jM6zoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jM6zoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jM6zpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jM6zoRpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jM6zohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jNe0UBpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_jNfbYBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jNfbYBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jNe0UBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNfbYRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jNe0URpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jNe0UhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l9UesBpQEeSd5OoVIuDNwg" name="getExclusion Indicator" bodyCondition="_l9UesxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l9UesxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l9UesBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l9UetBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ExclusionReason))->asSequence()->any(true).oclAsType(sdtm::ExclusionReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l9UesRpQEeSd5OoVIuDNwg" type="_mZNiwLWAEeGLXdg8xIiGrA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l9UeshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l9jvQBpQEeSd5OoVIuDNwg" name="getPlanned Study Day" bodyCondition="_l9jvQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l9jvQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l9jvQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l9jvRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PlannedStudyDay))->asSequence()->any(true).oclAsType(sdtm::PlannedStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l9jvQRpQEeSd5OoVIuDNwg" type="_li9xQGeiEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l9jvQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l9yYwBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_l9yYwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l9yYwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l9yYwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l9yYxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l9yYwRpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l9yYwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l-BCQBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_l-BCQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l-BCQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l-BCQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l-BCRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l-BCQRpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l-BCQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mzppwBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mzppwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mzppwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mzppwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mzqQ0BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mzppwRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mzppwhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mz4TQBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mz4TQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mz4TQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mz4TQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mz4TRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mz4TQRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mz4TQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m0G8wBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m0G8wxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m0G8wxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m0G8wBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m0G8xBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m0G8wRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m0G8whpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m0VmQBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m0VmQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m0VmQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m0VmQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m0WNUBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m0VmQRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m0VmQhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nz93QBpQEeSd5OoVIuDNwg" name="getToxicity" bodyCondition="_nz93QxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nz93QxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nz93QBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nz93RBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Toxicity))->asSequence()->any(true).oclAsType(sdtm::Toxicity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nz93QRpQEeSd5OoVIuDNwg" type="_sYRDz7ZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nz93QhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n7Yt4BpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n7ZU8BpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n7ZU8BpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n7Yt4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n7ZU8RpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n7Yt4RpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n7Yt4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oCmwMBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oCnXQBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oCnXQBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oCmwMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oCnXQRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCmwMRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oCmwMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oaKUkBpQEeSd5OoVIuDNwg" name="getFasting Status" bodyCondition="_oaKUkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oaKUkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oaKUkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oaKUlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FastingStatus))->asSequence()->any(true).oclAsType(sdtm::FastingStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oaKUkRpQEeSd5OoVIuDNwg" type="_2TrjOLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oaKUkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mLJN4I-qEeGSf7-C4p-dMA" name="Specimen Information">
      <ownedComment xmi:id="_y5oSsI-qEeGSf7-C4p-dMA">
        <body>The template is used to record specimen related information that is captured in several SDTM and SEND domains.  The structure carrying specimen information has, as its starting point, the act of specimen collection. Specimen information is captured as characteristics of the entity playing the specimen role, while specimen condition is recorded as a component act.</body>
      </ownedComment>
      <ownedRule xmi:id="_jAhWYBpQEeSd5OoVIuDNwg" name="Specimen InformationTemplateId" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAikgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.78')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAxOABpQEeSd5OoVIuDNwg" name="Specimen InformationClassCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAxOARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::PROC</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBHMQBpQEeSd5OoVIuDNwg" name="Specimen InformationMoodCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBHMQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentProcedureMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBhb8BpQEeSd5OoVIuDNwg" name="Specimen InformationCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBhb8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'SCLtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jB8SsBpQEeSd5OoVIuDNwg" name="Specimen InformationCodeP" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jB8SsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCUtMBpQEeSd5OoVIuDNwg" name="Specimen InformationEffectiveTime" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCUtMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDPTMBpQEeSd5OoVIuDNwg" name="Specimen InformationTargetSiteCodeP" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDPTMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jC1qkBpQEeSd5OoVIuDNwg" name="Specimen InformationTargetSiteCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jC1qkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jM-eABpQEeSd5OoVIuDNwg" name="Specimen InformationParticipatingSpecimen" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jM-eARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->one(specimen : cda::Specimen | not specimen.oclIsUndefined() and specimen.oclIsKindOf(cda::Specimen))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQUs8BpQEeSd5OoVIuDNwg" name="Specimen InformationEvent Study Day" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQVUABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQj9gBpQEeSd5OoVIuDNwg" name="Specimen InformationTiming Reference" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQj9gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l-EsoBpQEeSd5OoVIuDNwg" name="Specimen InformationPortionAssociation" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l-EsoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l-PrwBpQEeSd5OoVIuDNwg" name="Specimen InformationUsabilityAssociation" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l-PrwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l-uz8BpQEeSd5OoVIuDNwg" name="Specimen InformationConditionAssociation" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l-uz8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o371sBpQEeSd5OoVIuDNwg" name="Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o371sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->excluding(null).specimenRole->excluding(null).->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o3-R8BpQEeSd5OoVIuDNwg" name="Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o3-R8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->excluding(null).specimenRole->excluding(null).->reject(isDefined('determinerCode') and determinerCode=vocab::EntityDeterminer::INSTANCE)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4BVQBpQEeSd5OoVIuDNwg" name="Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4BVQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->excluding(null).specimenRole->excluding(null).->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = code.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4DxgBpQEeSd5OoVIuDNwg" name="Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4DxgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->excluding(null).specimenRole->excluding(null).->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4G00BpQEeSd5OoVIuDNwg" name="Specimen InformationparticipatingSpecimenroleOfSpecimenClassCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4G00RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->excluding(null).specimenRole->excluding(null)->reject(classCode=vocab::RoleClassSpecimen::SPEC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4JREBpQEeSd5OoVIuDNwg" name="Specimen InformationparticipatingSpecimenroleOfSpecimenId" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4JRERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->excluding(null).specimenRole->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (not id->isEmpty()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4MUYBpQEeSd5OoVIuDNwg" name="Specimen InformationparticipatingSpecimenTemplateId" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4MUYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->excluding(null)->reject(templateId->exists(id : datatypes::II | id.root = 'null'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4OwoBpQEeSd5OoVIuDNwg" name="Specimen InformationparticipatingSpecimenTypeCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4OwoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->excluding(null)->reject(typeCode=vocab::ParticipationType::SPC)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4Rz8BpQEeSd5OoVIuDNwg" name="Specimen InformationparticipatingSpecimenRoleOfSpecimen" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4Rz8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.specimen->excluding(null)->reject(specimenRole->one(specimenRole : cda::SpecimenRole | not specimenRole.oclIsUndefined() and specimenRole.oclIsKindOf(cda::SpecimenRole)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4pAUBpQEeSd5OoVIuDNwg" name="Specimen InformationportionAssociationportionOrTotalityMoodCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4pAURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4rckBpQEeSd5OoVIuDNwg" name="Specimen InformationportionAssociationportionOrTotalityCodeP" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4rckRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4uf4BpQEeSd5OoVIuDNwg" name="Specimen InformationportionAssociationportionOrTotalityCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4uf4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'POTtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4w8IBpQEeSd5OoVIuDNwg" name="Specimen InformationportionAssociationportionOrTotalityValue" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4w8IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CA' or value.code = 'BD' or value.code = 'DIS' or value.code = 'DTH' or value.code = 'HOSP' or value.code = 'LT' or value.code = 'OD' or value.code = 'OTH'))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o4z_cBpQEeSd5OoVIuDNwg" name="Specimen InformationportionAssociationportionOrTotalityValueP" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o4z_cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o42bsBpQEeSd5OoVIuDNwg" name="Specimen InformationportionAssociationTypeCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o42bsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o45fABpQEeSd5OoVIuDNwg" name="Specimen InformationportionAssociationSpecimenCondition" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o45fARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o5RScBpQEeSd5OoVIuDNwg" name="Specimen InformationusabilityAssociationspecimenUsabilityMoodCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o5RScRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o5TusBpQEeSd5OoVIuDNwg" name="Specimen InformationusabilityAssociationspecimenUsabilityCodeP" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o5UVwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o5WyABpQEeSd5OoVIuDNwg" name="Specimen InformationusabilityAssociationspecimenUsabilityCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o5WyARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'SUtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o5ZOQBpQEeSd5OoVIuDNwg" name="Specimen InformationusabilityAssociationspecimenUsabilityValue" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o5ZOQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o5cRkBpQEeSd5OoVIuDNwg" name="Specimen InformationusabilityAssociationTypeCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o5cRkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o5et0BpQEeSd5OoVIuDNwg" name="Specimen InformationusabilityAssociationSpecimenUsability" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o5fU4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o52hQBpQEeSd5OoVIuDNwg" name="Specimen InformationconditionAssociationspecimenConditionMoodCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o52hQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o549gBpQEeSd5OoVIuDNwg" name="Specimen InformationconditionAssociationspecimenConditionCodeP" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o549gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o58A0BpQEeSd5OoVIuDNwg" name="Specimen InformationconditionAssociationspecimenConditionCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o58A0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'C78733' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o5-dEBpQEeSd5OoVIuDNwg" name="Specimen InformationconditionAssociationspecimenConditionValue" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o5-dERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o6BgYBpQEeSd5OoVIuDNwg" name="Specimen InformationconditionAssociationspecimenConditionValueP" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o6BgYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o6EjsBpQEeSd5OoVIuDNwg" name="Specimen InformationconditionAssociationTypeCode" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o6EjsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o6G_8BpQEeSd5OoVIuDNwg" name="Specimen InformationconditionAssociationSpecimenCondition" constrainedElement="_mLJN4I-qEeGSf7-C4p-dMA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o6G_8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mLJ08I-qEeGSf7-C4p-dMA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_jQed8BpQEeSd5OoVIuDNwg" name="getEvent Study Day" bodyCondition="_jQfFABpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jQfFABpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jQed8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQfFARpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventStudyDay))->asSequence()->any(true).oclAsType(sdtm::EventStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jQed8RpQEeSd5OoVIuDNwg" type="_j42pwGerEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jQed8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jQtugBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_jQtugxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jQtugxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jQtugBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQtuhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jQtugRpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jQtughpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_dS2eEI_XEeG51rA0mhosMg" name="Study Test Organization">
      <ownedComment xmi:id="_mQH7EI_XEeG51rA0mhosMg">
        <body>The template is used to record information on the organization performing a test or other activity within the context of the study.  Within SDTM, this is referred to as a &quot;vendor&quot;.</body>
      </ownedComment>
      <ownedRule xmi:id="_jNjFwBpQEeSd5OoVIuDNwg" name="Study Test OrganizationTemplateId" constrainedElement="_dS2eEI_XEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNkT4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.88')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jN0LgBpQEeSd5OoVIuDNwg" name="Study Test OrganizationTypeCode" constrainedElement="_dS2eEI_XEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jN0LgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.typeCode=vocab::ParticipationType::AUT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPip0BpQEeSd5OoVIuDNwg" name="Study Test OrganizationRoleOfPerformer" constrainedElement="_dS2eEI_XEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPip0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_dS5hYI_XEeG51rA0mhosMg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_51DLwEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mA6qUI_rEeG51rA0mhosMg" name="Physical Examination Finding">
      <ownedComment xmi:id="_9RsCII_rEeG51rA0mhosMg">
        <body>The template supports the collection of findings derived from physical exams, other than vital signs.</body>
      </ownedComment>
      <ownedRule xmi:id="_jQwKwBpQEeSd5OoVIuDNwg" name="Physical Examination FindingTemplateId" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQxY4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.67')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRApcBpQEeSd5OoVIuDNwg" name="Physical Examination FindingClassCode" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRApcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRWnsBpQEeSd5OoVIuDNwg" name="Physical Examination FindingMoodCode" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRWnsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRqJsBpQEeSd5OoVIuDNwg" name="Physical Examination FindingId" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRqJsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSda8BpQEeSd5OoVIuDNwg" name="Physical Examination FindingCodeP" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSeCABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSEZYBpQEeSd5OoVIuDNwg" name="Physical Examination FindingCode" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSEZYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknown' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTANgBpQEeSd5OoVIuDNwg" name="Physical Examination FindingStatusCode" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTANgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTZ2IBpQEeSd5OoVIuDNwg" name="Physical Examination FindingValue" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTZ2IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jURY0BpQEeSd5OoVIuDNwg" name="Physical Examination FindingMethodCodeP" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jURY0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jT2iEBpQEeSd5OoVIuDNwg" name="Physical Examination FindingMethodCode" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jT2iERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jVN0ABpQEeSd5OoVIuDNwg" name="Physical Examination FindingTargetSiteCodeP" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jVObEBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jU0LYBpQEeSd5OoVIuDNwg" name="Physical Examination FindingTargetSiteCode" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jU0ycBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWBsUBpQEeSd5OoVIuDNwg" name="Physical Examination FindingGroup Identifier" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWBsURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWQV0BpQEeSd5OoVIuDNwg" name="Physical Examination FindingBody System or Organ Class" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWQV0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::BodySystemorOrganClass) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWfmYBpQEeSd5OoVIuDNwg" name="Physical Examination FindingNonPerformanceReason" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWfmYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kBH3wBpQEeSd5OoVIuDNwg" name="Physical Examination FindingStudy Finding Evaluator" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kBH3wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mK5nsBpQEeSd5OoVIuDNwg" name="Physical Examination FindingData Collection" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mK5nsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m4VVcBpQEeSd5OoVIuDNwg" name="Physical Examination FindingComment" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m4VVcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m4j-8BpQEeSd5OoVIuDNwg" name="Physical Examination FindingDomain Assignment" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m4j-8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m4yocBpQEeSd5OoVIuDNwg" name="Physical Examination FindingRelated Record" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m4yocRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m5BR8BpQEeSd5OoVIuDNwg" name="Physical Examination FindingSupplemental Value" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m5BR8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n78HgBpQEeSd5OoVIuDNwg" name="Physical Examination FindingCategory" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n78HgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oDJiwBpQEeSd5OoVIuDNwg" name="Physical Examination FindingSub-Category" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDKJ0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ojSbYBpQEeSd5OoVIuDNwg" name="Physical Examination FindingFinding About" constrainedElement="_mA6qUI_rEeG51rA0mhosMg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ojTCcBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mA6qUY_rEeG51rA0mhosMg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jWLdUBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_jWLdUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jWLdUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jWLdUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWLdVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jWLdURpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jWLdUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jWaG0BpQEeSd5OoVIuDNwg" name="getBody System or Organ Class" bodyCondition="_jWaG0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jWaG0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jWaG0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWaG1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodySystemorOrganClass))->asSequence()->any(true).oclAsType(sdtm::BodySystemorOrganClass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jWaG0RpQEeSd5OoVIuDNwg" type="_QmoEwGoUEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jWaG0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jWowUBpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_jWowUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jWowUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jWowUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWowVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jWowURpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jWowUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mLDYsBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_mLDYsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mLDYsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mLDYsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mLDYtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mLDYsRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLDYshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m4efYBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m4fGcBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m4fGcBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m4efYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m4fGcRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m4efYRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m4efYhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m4tI4BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m4tv8BpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m4tv8BpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m4tI4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m4tv8RpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m4tI4RpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m4tI4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m48ZcBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m48ZcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m48ZcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m48ZcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m48ZdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m48ZcRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m48ZchpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m5LqABpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m5LqAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m5LqAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m5LqABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m5LqBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m5LqARpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m5LqAhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n8F4gBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n8F4gxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n8F4gxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n8F4gBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n8F4hBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n8F4gRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n8F4ghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oDT60BpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oDT60xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oDT60xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oDT60BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDT61BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oDT60RpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDT60hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ojdagBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ojeBkRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ojeBkRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ojdagBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ojeBkhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ojdagRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ojeBkBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xmX7AJBuEeGHg6ZmktWLJQ" name="Questionnaire Finding">
      <ownedComment xmi:id="_1Qli8JBuEeGHg6ZmktWLJQ">
        <body>The  template is used to record questionnaire information.  A questionnaire is a written or electronic survey instrument comprised of a series of questions, designed to measure a specific item or set of items.  Questionnaire data may include, but are not limited to subject reported outcomes and validated or non-validated questionnaires. The QS domain is not intended for use in submitting a set of questions grouped on the CRF for convenience of data capture.</body>
      </ownedComment>
      <ownedRule xmi:id="_jWuP4BpQEeSd5OoVIuDNwg" name="Questionnaire FindingTemplateId" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWu28BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.72')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jW-HgBpQEeSd5OoVIuDNwg" name="Questionnaire FindingClassCode" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jW-HgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXTesBpQEeSd5OoVIuDNwg" name="Questionnaire FindingMoodCode" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXTesRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXnAsBpQEeSd5OoVIuDNwg" name="Questionnaire FindingId" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXnnwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYbgEBpQEeSd5OoVIuDNwg" name="Questionnaire FindingCodeP" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYbgERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYB3cBpQEeSd5OoVIuDNwg" name="Questionnaire FindingCode" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYB3cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jY-SoBpQEeSd5OoVIuDNwg" name="Questionnaire FindingStatusCode" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jY-SoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZXUMBpQEeSd5OoVIuDNwg" name="Questionnaire FindingEffectiveTime" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZX7QBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZpoEBpQEeSd5OoVIuDNwg" name="Questionnaire FindingValue" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZpoERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jajnABpQEeSd5OoVIuDNwg" name="Questionnaire FindingInterpretationCodeP" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jajnARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jaJ-YBpQEeSd5OoVIuDNwg" name="Questionnaire FindingInterpretationCode" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaJ-YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbD9UBpQEeSd5OoVIuDNwg" name="Questionnaire FindingGroup Identifier" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbD9URpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbTN4BpQEeSd5OoVIuDNwg" name="Questionnaire FindingNonPerformanceReason" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbTN4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbh3YBpQEeSd5OoVIuDNwg" name="Questionnaire FindingTiming Reference" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbh3YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbwg4BpQEeSd5OoVIuDNwg" name="Questionnaire FindingData Collection" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbwg4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m6LIgBpQEeSd5OoVIuDNwg" name="Questionnaire FindingComment" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m6LIgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m6ZyABpQEeSd5OoVIuDNwg" name="Questionnaire FindingDomain Assignment" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m6ZyARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m6obgBpQEeSd5OoVIuDNwg" name="Questionnaire FindingRelated Record" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m6obgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m63FABpQEeSd5OoVIuDNwg" name="Questionnaire FindingSupplemental Value" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m63FARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n8aBkBpQEeSd5OoVIuDNwg" name="Questionnaire FindingCategory" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n8aBkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oDoD4BpQEeSd5OoVIuDNwg" name="Questionnaire FindingSub-Category" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDoD4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ojzYwBpQEeSd5OoVIuDNwg" name="Questionnaire FindingFinding About" constrainedElement="_xmX7AJBuEeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ojzYwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xmX7AZBuEeGHg6ZmktWLJQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jbNuUBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_jbOVYBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jbOVYBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jbNuUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbOVYRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jbNuURpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jbNuUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jbcX0BpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_jbc-4RpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jbc-4RpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jbcX0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbc-4hpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jbcX0RpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jbc-4BpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jbrBUBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_jbroYRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jbroYRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jbrBUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbroYhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jbrBURpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jbroYBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jb5q0BpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_jb5q0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jb5q0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jb5q0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jb5q1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jb5q0RpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jb5q0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m6U5gBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m6U5gxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m6U5gxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m6U5gBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m6U5hBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m6U5gRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m6U5ghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m6i78BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m6jjAhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m6jjAhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m6i78BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m6jjAxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m6jjABpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m6jjARpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m6xlcBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m6xlcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m6xlcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m6xlcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m6yMgBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m6xlcRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m6xlchpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m7AO8BpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m7AO8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m7AO8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m7AO8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7AO9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m7AO8RpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m7AO8hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n8jLgBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n8jykBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n8jykBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n8jLgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n8jykRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n8jLgRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n8jLghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oDxN0BpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oDxN0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oDxN0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oDxN0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDx04BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oDxN0RpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDxN0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oj9w0BpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_oj9w0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oj9w0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oj9w0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oj9w1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oj9w0RpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oj9w0hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KzX_4JB4EeGHg6ZmktWLJQ" name="Subject Characteristic">
      <ownedComment xmi:id="_eCtikJB4EeGHg6ZmktWLJQ">
        <body>The template is ussed to capture subject related data that does not fit within the other SDTM domains.</body>
      </ownedComment>
      <ownedRule xmi:id="_jb8HEBpQEeSd5OoVIuDNwg" name="Subject CharacteristicTemplateId" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jb9VMBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.92')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jcMlwBpQEeSd5OoVIuDNwg" name="Subject CharacteristicClassCode" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcMlwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jch88BpQEeSd5OoVIuDNwg" name="Subject CharacteristicMoodCode" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcikABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jc2GABpQEeSd5OoVIuDNwg" name="Subject CharacteristicId" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jc2GARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdpXQBpQEeSd5OoVIuDNwg" name="Subject CharacteristicCodeP" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdpXQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdPuoBpQEeSd5OoVIuDNwg" name="Subject CharacteristicCode" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdPuoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeEOABpQEeSd5OoVIuDNwg" name="Subject CharacteristicStatusCode" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeEOARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeV60BpQEeSd5OoVIuDNwg" name="Subject CharacteristicValue" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeV60RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jex_sBpQEeSd5OoVIuDNwg" name="Subject CharacteristicData Collection" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeymwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfBQQBpQEeSd5OoVIuDNwg" name="Subject CharacteristicNonPerformanceReason" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfBQQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfP5wBpQEeSd5OoVIuDNwg" name="Subject CharacteristicGroup Identifier" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfP5wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m905cBpQEeSd5OoVIuDNwg" name="Subject CharacteristicComment" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m905cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m-EKABpQEeSd5OoVIuDNwg" name="Subject CharacteristicDomain Assignment" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m-EKARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m-SzgBpQEeSd5OoVIuDNwg" name="Subject CharacteristicRelated Record" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m-SzgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m-hdABpQEeSd5OoVIuDNwg" name="Subject CharacteristicSupplemental Value" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m-hdARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n8orEBpQEeSd5OoVIuDNwg" name="Subject CharacteristicCategory" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n8orERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEltMBpQEeSd5OoVIuDNwg" name="Subject CharacteristicSub-Category" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEltMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oky3QBpQEeSd5OoVIuDNwg" name="Subject CharacteristicFinding About" constrainedElement="_KzX_4JB4EeGHg6ZmktWLJQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oky3QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KzYm8JB4EeGHg6ZmktWLJQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_je7wsBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_je7wsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_je7wsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_je7wsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_je7wtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_je7wsRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_je7wshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jfKaMBpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_jfLBQBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jfLBQBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jfKaMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfLBQRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jfKaMRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jfKaMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jfZqwBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_jfZqwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jfZqwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jfZqwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfZqxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jfZqwRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jfZqwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m9-qcBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m9-qcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m9-qcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m9-qcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m9-qdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m9-qcRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m9-qchpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m-NT8BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m-N7ARpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m-N7ARpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m-NT8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m-N7AhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m-NT8RpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m-N7ABpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m-ckgBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m-ckgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m-ckgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m-ckgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m-ckhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m-ckgRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m-ckghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m-rOABpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m-rOAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m-rOAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m-rOABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m-rOBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m-rOARpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m-rOAhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n8ycEBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n8ycExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n8ycExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n8ycEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n8ycFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n8ycERpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n8ycEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oEveMBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oEveMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oEveMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oEveMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEveNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEveMRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEveMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ok92YBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ok92YxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ok92YxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ok92YBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ok92ZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ok92YRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ok92YhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_T0sngJLKEeGM5Pa1LbomZA" name="Microbiology Specimen Finding">
      <ownedComment xmi:id="_QF_PMJLMEeGM5Pa1LbomZA">
        <body>The template is used to store microbiololgy findings that include organisms found, gram stain results, and organism growth status.</body>
      </ownedComment>
      <ownedRule xmi:id="_jfqwgBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingTemplateId" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfrXkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.53')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jf6oIBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingClassCode" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jf6oIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgQmYBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingMoodCode" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgQmYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgkIYBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingId" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgkIYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhYAsBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingCodeP" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhYnwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jg-YEBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingCode" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jg-_IBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknown' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jh6zQBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingStatusCode" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jh6zQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jiT00BpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingValue" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiT00RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjIUMBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingMethodCodeP" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjIUMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jiuEgBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingMethodCode" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiuEgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkLdEBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingInterpretationCodeP" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkLdERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjx0cBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingInterpretationCode" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjx0cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jktBgBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingGroup Identifier" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jktBgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jk6c4BpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingStudy Test Performer" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jk7D8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlJGYBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingNonPerformanceReason" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlJGYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlXv4BpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingSpecimen Information" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlXv4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mu5soBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingComment" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mu5soRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mvIWIBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingDomain Assignment" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mvIWIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mvW_oBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingRelated Record" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mvW_oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mvmQMBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingSupplemental Value" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mvmQMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n6hyQBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingCategory" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n6iZUBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oB9P8BpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingSub-Category" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oB9P8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oODyQBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingResult Category" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oODyQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ResultCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oii0gBpQEeSd5OoVIuDNwg" name="Microbiology Specimen FindingFinding About" constrainedElement="_T0sngJLKEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oii0gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_T0sngZLKEeGM5Pa1LbomZA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jk2LcBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_jk2yghpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jk2yghpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jk2LcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jk2ygxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jk2ygBpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jk2ygRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jlSQUBpQEeSd5OoVIuDNwg" name="getNonPerformanceReason" bodyCondition="_jlSQUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jlSQUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jlSQUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlSQVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jlSQURpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jlSQUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jlg50BpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_jlg50xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jlg50xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jlg50BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlg51BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jlg50RpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jlg50hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mvDdoBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mvDdoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mvDdoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mvDdoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mvDdpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mvDdoRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mvDdohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mvSHIBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mvSHIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mvSHIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mvSHIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mvSHJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mvSHIRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mvSHIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mvgwoBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mvgwoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mvgwoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mvgwoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mvgwpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mvgwoRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mvgwohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mvwBMBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mvwBMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mvwBMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mvwBMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mvwBNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mvwBMRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mvwBMhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n6sKUBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n6sKUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n6sKUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n6sKUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n6sxYBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n6sKURpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6sKUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oCHA8BpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oCHA8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oCHA8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oCHA8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oCHA9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCHA8RpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oCHA8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oONjQBpQEeSd5OoVIuDNwg" name="getResult Category" bodyCondition="_oONjQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oONjQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oONjQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oONjRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ResultCategory))->asSequence()->any(true).oclAsType(sdtm::ResultCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oONjQRpQEeSd5OoVIuDNwg" type="_2TrjZLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oONjQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oitMkBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_oitMkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oitMkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oitMkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oitMlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oitMkRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oitMkhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zXC1IJLkEeGM5Pa1LbomZA" name="Microbiology Susceptibility">
      <ownedComment xmi:id="_zXC1IZLkEeGM5Pa1LbomZA">
        <body>The template defines the structure used to store any findings related to the organisms found and submitted under the heading of microbiology specimen. This will usually consist of susceptibility testing results, but can also be other organism-related findings such as extent of growth of an organism.</body>
      </ownedComment>
      <ownedRule xmi:id="_jlx_kBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityTemplateId" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlymoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.54')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmB3MBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityClassCode" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmB3MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmXOYBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityMoodCode" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmXOYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmqwYBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityId" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmqwYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnfPwBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityCodeP" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnfPwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnFAEBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityCode" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnFAERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_joBbQBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityStatusCode" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_joBbQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jobD4BpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityEffectiveTime" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jobD4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jot-0BpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityValue" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jot-0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpjFQBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityMethodCodeP" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpjFQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpI1kBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityMethodCode" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpI1kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqm1MBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityInterpretationCodeP" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqm1MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqNMkBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityInterpretationCode" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqNMkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrXqMBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityEvent Study Day" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrXqMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrmTsBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityTiming Reference" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrmTsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kJSVQBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityGroup Identifier" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kJSVQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kJgXsBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityStudy Test Performer" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kJgXsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kJuaIBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityNon Performance Reason" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kJuaIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mv05sBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityComment" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mv05sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mwDjMBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityDomain Assignment" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mwDjMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mwSMsBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityRelated Record" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mwSMsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mwg2MBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilitySupplemental Value" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mwg2MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n6xp4BpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityCategory" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n6xp4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oCMggBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilitySub-Category" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oCMggRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOSbwBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityResult Category" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOSbwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ResultCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oiysIBpQEeSd5OoVIuDNwg" name="Microbiology SusceptibilityFinding About" constrainedElement="_zXC1IJLkEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oiysIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zXC1IpLkEeGM5Pa1LbomZA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jrhbMBpQEeSd5OoVIuDNwg" name="getEvent Study Day" bodyCondition="_jrhbMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jrhbMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jrhbMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrhbNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventStudyDay))->asSequence()->any(true).oclAsType(sdtm::EventStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jrhbMRpQEeSd5OoVIuDNwg" type="_j42pwGerEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jrhbMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jrwEsBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_jrwEsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_jrwEsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_jrwEsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrwEtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jrwEsRpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jrwEshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kJcGQBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_kJcGQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kJcGQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kJcGQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kJcGRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kJcGQRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kJcGQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kJ4LIBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_kJ4LIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kJ4LIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kJ4LIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kJ4LJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kJ4LIRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kJ4LIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mv-qsBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mv-qsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mv-qsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mv-qsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mv-qtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mv-qsRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mv-qshpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mwNUMBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mwNUMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mwNUMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mwNUMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mwNUNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mwNUMRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mwNUMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mwb9sBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mwb9sxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mwb9sxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mwb9sBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mwb9tBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mwb9sRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mwb9shpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mwqnMBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mwqnMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mwqnMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mwqnMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mwqnNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mwqnMRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mwqnMhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n67a4BpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n67a4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n67a4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n67a4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n67a5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n67a4RpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n67a4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oCVqcBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oCWRgRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oCWRgRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oCVqcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oCWRghpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oCVqcRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oCWRgBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oOcz0BpQEeSd5OoVIuDNwg" name="getResult Category" bodyCondition="_oOcz0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oOcz0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oOcz0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOcz1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ResultCategory))->asSequence()->any(true).oclAsType(sdtm::ResultCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oOcz0RpQEeSd5OoVIuDNwg" type="_2TrjZLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOcz0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oi8dIBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_oi9EMRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oi9EMRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oi8dIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oi9EMhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oi8dIRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oi9EMBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CwmU4JLsEeGM5Pa1LbomZA" name="Pharmacokinetic Concentration Finding">
      <ownedComment xmi:id="_CwmU4ZLsEeGM5Pa1LbomZA">
        <body>The template is used to record data collected about tissue concentrations of anylytes( usually study drugs and/or their metabolites) as a function of time after dosing the study drug.</body>
      </ownedComment>
      <ownedRule xmi:id="_jryg8BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingTemplateId" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrzvEBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.65')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jsC_oBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingClassCode" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jsC_oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jsY94BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingMoodCode" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jsY94RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jstG8BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingId" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jstG8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jthmUBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingCodeP" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jthmURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtHWoBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingCode" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtHWoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juDx0BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingStatusCode" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juDx0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juczYBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingValue" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juczYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvRSwBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingMethodCodeP" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvRSwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ju3qIBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingMethodCode" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ju3qIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwbJUBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingInterpretationCodeP" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwbJURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwBgsBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingInterpretationCode" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwBgsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jz-zoBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingGroup Identifier" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jz-zoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0ctsBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingSpecimen Information" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0ctsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0r-QBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingNon Performance Reason" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0r-QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j06nwBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingStudy Test Performer" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j06nwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mEFOABpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingPlanned Study Day" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mEFOARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PlannedStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mJ-aoBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingExclusion Reason" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mJ-aoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ExclusionReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m2eUQBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingComment" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m2e7UBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m2tk0BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingDomain Assignment" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m2tk0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m28OUBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingRelated Record" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m28OURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m3Le4BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingSupplemental Value" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m3Le4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n7eNcBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingCategory" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n7eNcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oCsPwBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingSub-Category" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oCsPwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oRwmgBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingFasting Status" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oRxNkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FastingStatus) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oXvSsBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingAssay Quantitation" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXvSsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::AssayQuantitation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ogOgUBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Concentration FindingFinding About" constrainedElement="_CwmU4JLsEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ogOgURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CwmU4pLsEeGM5Pa1LbomZA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_j0IkoBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_j0JLsBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j0JLsBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j0IkoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0JLsRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j0IkoRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j0IkohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j0nFwBpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_j0nFwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j0nFwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j0nFwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0nFxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j0nFwRpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j0nFwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j02WUBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_j02WUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j02WUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j02WUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j02WVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j02WURpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j02WUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mEO_ABpQEeSd5OoVIuDNwg" name="getPlanned Study Day" bodyCondition="_mEO_AxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mEO_AxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mEO_ABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mEO_BBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PlannedStudyDay))->asSequence()->any(true).oclAsType(sdtm::PlannedStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mEO_ARpQEeSd5OoVIuDNwg" type="_li9xQGeiEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mEO_AhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mKILoBpQEeSd5OoVIuDNwg" name="getExclusion Reason" bodyCondition="_mKILoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mKILoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mKILoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mKILpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ExclusionReason))->asSequence()->any(true).oclAsType(sdtm::ExclusionReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mKILoRpQEeSd5OoVIuDNwg" type="_mZNiwLWAEeGLXdg8xIiGrA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mKILohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m2oFQBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m2osUBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m2osUBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m2oFQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m2osURpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m2oFQRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m2oFQhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m23V0BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m23V0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m23V0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m23V0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m23V1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m23V0RpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m23V0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m3F_UBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m3F_UxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m3F_UxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m3F_UBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m3F_VBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m3F_URpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m3F_UhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m3VP4BpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m3VP4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m3VP4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m3VP4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m3VP5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m3VP4RpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m3VP4hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n7n-cBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n7n-cxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n7n-cxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n7n-cBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n7n-dBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n7n-cRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n7n-chpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oC2AwBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oC2AwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oC2AwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oC2AwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oC2AxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oC2AwRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oC2AwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oR6XgBpQEeSd5OoVIuDNwg" name="getFasting Status" bodyCondition="_oR6XgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oR6XgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oR6XgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oR6-kBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FastingStatus))->asSequence()->any(true).oclAsType(sdtm::FastingStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oR6XgRpQEeSd5OoVIuDNwg" type="_2TrjOLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oR6XghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oX5DsBpQEeSd5OoVIuDNwg" name="getAssay Quantitation" bodyCondition="_oX5qwhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oX5qwhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oX5DsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oX5qwxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::AssayQuantitation))->asSequence()->any(true).oclAsType(sdtm::AssayQuantitation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oX5qwBpQEeSd5OoVIuDNwg" type="_GzShcJOgEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oX5qwRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ogYRUBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ogY4YhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ogY4YhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ogYRUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ogY4YxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ogY4YBpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ogY4YRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_olGlMJOXEeGM5Pa1LbomZA" name="Pharmacokinetic Parameter Finding">
      <ownedComment xmi:id="_olGlMZOXEeGM5Pa1LbomZA">
        <body>The template records data collected for relevant parameters of tissue concentrations of anylytes.</body>
      </ownedComment>
      <ownedRule xmi:id="_jw3OMBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingTemplateId" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jw4cUBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.66')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxHs4BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingClassCode" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxHs4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxdEEBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingMoodCode" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxdEERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxwmEBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingId" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxwmERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jylsgBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingCodeP" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jylsgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyLc0BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingCode" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyLc0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzH4ABpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingStatusCode" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzH4ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzg5kBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingValue" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzg5kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0OEMBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingGroup Identifier" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0OEMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1IqMBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingSpecimen Information" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1JRQBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1X6wBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingNon Performance Reason" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1X6wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1l9MBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingTiming Reference" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1mkQBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m3aIYBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingComment" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m3aIYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m3ox4BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingDomain Assignment" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m3ox4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m33bYBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingRelated Record" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m33bYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m4GE4BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingSupplemental Value" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m4GE4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n7s28BpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingCategory" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n7s28RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oC65QBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingSub-Category" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oC65QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ojB8sBpQEeSd5OoVIuDNwg" name="Pharmacokinetic Parameter FindingFinding About" constrainedElement="_olGlMJOXEeGM5Pa1LbomZA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ojB8sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_olGlMpOXEeGM5Pa1LbomZA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_j0X1MBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_j0X1MxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j0X1MxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j0X1MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0X1NBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j0X1MRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j0X1MhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j1SbMBpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_j1SbMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j1SbMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j1SbMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1SbNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j1SbMRpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j1SbMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j1hEsBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_j1hEsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j1hEsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j1hEsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1hEtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j1hEsRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j1hEshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j1vuMBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_j1vuMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j1vuMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j1vuMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1vuNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j1vuMRpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j1vuMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m3j5YBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m3j5YxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m3j5YxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m3j5YBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m3j5ZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m3j5YRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m3j5YhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m3yi4BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m3yi4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m3yi4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m3yi4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m3yi5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m3yi4RpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m3yi4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m4BMYBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m4BMYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m4BMYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m4BMYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m4BMZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m4BMYRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m4BMYhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m4P14BpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m4Qc8hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m4Qc8hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m4P14BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m4Qc8xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m4Qc8BpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m4Qc8RpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n72n8BpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n73PABpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n73PABpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n72n8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n73PARpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n72n8RpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n72n8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oDEqQBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oDEqQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oDEqQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oDEqQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oDEqRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oDEqQRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oDEqQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ojMUwBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ojMUwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ojMUwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ojMUwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ojMUxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ojMUwRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ojMUwhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_x1wssJOhEeG_Gqo8Ix5ECw" name="Finding About">
      <ownedComment xmi:id="_MsoogJOiEeG_Gqo8Ix5ECw">
        <body>The Findings About template is used to capture information about an event or intervention that is cannot be included within the data structures directly associated with the event or intervention type.   This structure is captured as a template to facilitate its reuse across the various domains of clinical and non-clincial trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_j1yKcBpQEeSd5OoVIuDNwg" name="Finding AboutTemplateId" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1zYkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.40')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2CCEBpQEeSd5OoVIuDNwg" name="Finding AboutClassCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2CpIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2YAUBpQEeSd5OoVIuDNwg" name="Finding AboutMoodCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2YAURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2riUBpQEeSd5OoVIuDNwg" name="Finding AboutEffectiveTime" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2riURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j292MBpQEeSd5OoVIuDNwg" name="Finding AboutId" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j292MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3PjABpQEeSd5OoVIuDNwg" name="Finding AboutStatusCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3PjARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j4ECYBpQEeSd5OoVIuDNwg" name="Finding AboutCodeP" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j4ECYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3pysBpQEeSd5OoVIuDNwg" name="Finding AboutCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3pysRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j4eSEBpQEeSd5OoVIuDNwg" name="Finding AboutValue" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j4eSERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j5SKYBpQEeSd5OoVIuDNwg" name="Finding AboutTargetSiteCodeP" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j5SKYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j44hwBpQEeSd5OoVIuDNwg" name="Finding AboutTargetSiteCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j44hwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j6V6UBpQEeSd5OoVIuDNwg" name="Finding AboutInterpretationCodeP" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j6V6URpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j57qoBpQEeSd5OoVIuDNwg" name="Finding AboutInterpretationCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j57qoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j9bqkBpQEeSd5OoVIuDNwg" name="Finding AboutGroup Identifier" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j9bqkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j9y28BpQEeSd5OoVIuDNwg" name="Finding AboutFindingObservationObjectAssociation" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j9y28RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j9_rQBpQEeSd5OoVIuDNwg" name="Finding AboutNon Performance Reason" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j9_rQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j-rnwBpQEeSd5OoVIuDNwg" name="Finding AboutData Collection" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j-rnwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kA6cYBpQEeSd5OoVIuDNwg" name="Finding AboutStudy Finding Evaluator" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kA6cYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n5CkgBpQEeSd5OoVIuDNwg" name="Finding AboutCategory" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n5DLkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oAkI0BpQEeSd5OoVIuDNwg" name="Finding AboutSub-Category" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oAkI0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ob29sBpQEeSd5OoVIuDNwg" name="Finding AboutDomain Assignment" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ob29sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8flkBpQEeSd5OoVIuDNwg" name="Finding AboutfindingObservationObjectAssociationfindingObservationObjectClassCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8flkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8iB0BpQEeSd5OoVIuDNwg" name="Finding AboutfindingObservationObjectAssociationfindingObservationObjectCodeP" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8iB0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8lFIBpQEeSd5OoVIuDNwg" name="Finding AboutfindingObservationObjectAssociationfindingObservationObjectCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8lFIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8nhYBpQEeSd5OoVIuDNwg" name="Finding AboutfindingObservationObjectAssociationfindingObservationObjectMoodCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8nhYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::DEF)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8qksBpQEeSd5OoVIuDNwg" name="Finding AboutfindingObservationObjectAssociationfindingObservationObjectValue" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8qksRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8tA8BpQEeSd5OoVIuDNwg" name="Finding AboutfindingObservationObjectAssociationfindingObservationObjectValueP" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8tA8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8wEQBpQEeSd5OoVIuDNwg" name="Finding AboutfindingObservationObjectAssociationTypeCode" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8wEQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o8yggBpQEeSd5OoVIuDNwg" name="Finding AboutfindingObservationObjectAssociationObservation" constrainedElement="_x1wssJOhEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o8yggRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_x1wssZOhEeG_Gqo8Ix5ECw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_j9lbkBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_j9lbkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j9lbkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j9lbkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j9mCoBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j9lbkRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j9lbkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j-JcQBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_j-JcQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j-JcQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j-JcQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j-JcRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j-JcQRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j-JcQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j-1_0BpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_j-1_0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_j-1_0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_j-1_0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j-1_1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j-1_0RpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j-1_0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n5M8kBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n5M8kxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n5M8kxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n5M8kBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n5M8lBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n5M8kRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n5M8khpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAt50BpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oAt50xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oAt50xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oAt50BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oAt51BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAt50RpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oAt50hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ocAHoBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_ocAusBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ocAusBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ocAHoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ocAusRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ocAHoRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ocAHohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wllcQJO3EeG_Gqo8Ix5ECw" name="Study Finding Evaluator">
      <ownedComment xmi:id="_wllcQZO3EeG_Gqo8Ix5ECw">
        <body>The template provides a resusable structure to capture information on the role of a person who evaluates a study finding.</body>
      </ownedComment>
      <ownedRule xmi:id="_j-31ABpQEeSd5OoVIuDNwg" name="Study Finding EvaluatorTemplateId" constrainedElement="_wllcQJO3EeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j-5DIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.84')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j_ITsBpQEeSd5OoVIuDNwg" name="Study Finding EvaluatorTypeCode" constrainedElement="_wllcQJO3EeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j_ITsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.typeCode=vocab::ParticipationType::PRF</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mGx8sBpQEeSd5OoVIuDNwg" name="Study Finding EvaluatorRoleOfEvaluator" constrainedElement="_wllcQJO3EeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mGx8sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wllcQpO3EeG_Gqo8Ix5ECw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_51DLwEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dj3ekJSREeGlSMYQDPvGqQ" name="Drug Accountability">
      <ownedComment xmi:id="_j5vZsJSREeGlSMYQDPvGqQ">
        <body>The template supports the content sof the Drug Accountability domain.  It allows entry of a wide range of data related to the drugs used in a study.   It is intended for use in tracking the receipt, dispensing, return, and packaging of the study drug.  However, the SDTM IG notes that a) one way a sponsor may choose to distinguish between different types of medications (e.g., study medication, rescue medication, run-in medication) is to use DACAT, and b) DAREFID and DASPID are both available for capturing label information.</body>
      </ownedComment>
      <ownedRule xmi:id="_kBTd8BpQEeSd5OoVIuDNwg" name="Drug AccountabilityTemplateId" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kBUFABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.32')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kBjVkBpQEeSd5OoVIuDNwg" name="Drug AccountabilityClassCode" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kBj8oBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kB5T0BpQEeSd5OoVIuDNwg" name="Drug AccountabilityMoodCode" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kB5T0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kCNc4BpQEeSd5OoVIuDNwg" name="Drug AccountabilityId" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kCNc4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kDB8QBpQEeSd5OoVIuDNwg" name="Drug AccountabilityCodeP" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kDB8QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kCoToBpQEeSd5OoVIuDNwg" name="Drug AccountabilityCode" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kCoToRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kDczABpQEeSd5OoVIuDNwg" name="Drug AccountabilityStatusCode" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kDczARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kDvG4BpQEeSd5OoVIuDNwg" name="Drug AccountabilityEffectiveTime" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kDvG4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kECB0BpQEeSd5OoVIuDNwg" name="Drug AccountabilityValue" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kECB0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kEt-UBpQEeSd5OoVIuDNwg" name="Drug AccountabilityGroup Identifier" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kEt-URpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kE9O4BpQEeSd5OoVIuDNwg" name="Drug AccountabilityNon Performance Reason" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kE9O4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kFMfcBpQEeSd5OoVIuDNwg" name="Drug AccountabilityEvent Study Day" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kFMfcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n4i1QBpQEeSd5OoVIuDNwg" name="Drug AccountabilityCategory" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n4i1QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oAG10BpQEeSd5OoVIuDNwg" name="Drug AccountabilitySub-Category" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oAG10RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oa6igBpQEeSd5OoVIuDNwg" name="Drug AccountabilityComment" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oa6igRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_obntIBpQEeSd5OoVIuDNwg" name="Drug AccountabilityDomain Assignment" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_obntIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ocXUABpQEeSd5OoVIuDNwg" name="Drug AccountabilityRelated Record" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ocXUARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oc0nABpQEeSd5OoVIuDNwg" name="Drug AccountabilitySupplemental Value" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oc0nARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ogeX8BpQEeSd5OoVIuDNwg" name="Drug AccountabilityFinding About" constrainedElement="_Dj3ekJSREeGlSMYQDPvGqQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ogeX8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Dj4FoJSREeGlSMYQDPvGqQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_kE3vUBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_kE3vUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kE3vUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kE3vUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kE4WYBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kE3vURpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kE3vUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kFHm8BpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_kFHm8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kFHm8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kFHm8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kFHm9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kFHm8RpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kFHm8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_kFWQcBpQEeSd5OoVIuDNwg" name="getEvent Study Day" bodyCondition="_kFWQcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_kFWQcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_kFWQcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_kFWQdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventStudyDay))->asSequence()->any(true).oclAsType(sdtm::EventStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_kFWQcRpQEeSd5OoVIuDNwg" type="_j42pwGerEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_kFWQchpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n4t0YBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n4t0YxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n4t0YxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n4t0YBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n4t0ZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n4t0YRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n4t0YhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oAP_wBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oAQm0RpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oAQm0RpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oAP_wBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oAQm0hpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oAP_wRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oAQm0BpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_obETgBpQEeSd5OoVIuDNwg" name="getComment" bodyCondition="_obETgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_obETgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_obETgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obEThBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment))->asSequence()->any(true).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obETgRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obETghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_obxeIBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_obxeIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_obxeIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_obxeIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obxeJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obxeIRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obxeIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ocgd8BpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_ochFABpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ochFABpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ocgd8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ochFARpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ocgd8RpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ocgd8hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oc-YABpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_oc-YAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oc-YAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oc-YABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oc-YBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oc-YARpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oc-YAhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ogoI8BpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ogowABpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ogowABpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ogoI8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ogowARpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ogoI8RpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ogoI8hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1TzacJk_EeGGPbk7a3RIVg" name="Study Day Period">
      <ownedComment xmi:id="_1TzacZk_EeGGPbk7a3RIVg">
        <body>The template contains information to identify the beginning and end study days on which the prolonged event it is related to occurred.  &quot;Study Day&quot; refers to the relative day of an observation or other event with respect to the designated reference day for the study - which is labled as &quot;Day 1&quot;.   Note, dates prior to the reference data are decremented by 1, with the day preceeding the reference day designated as &quot;Study Day -1&quot;.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within study reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_kFn9QBpQEeSd5OoVIuDNwg" name="Study Day PeriodTemplateId" constrainedElement="_1TzacJk_EeGGPbk7a3RIVg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kFokUBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.82')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kF304BpQEeSd5OoVIuDNwg" name="Study Day PeriodClassCode" constrainedElement="_1TzacJk_EeGGPbk7a3RIVg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kF304RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kGNMEBpQEeSd5OoVIuDNwg" name="Study Day PeriodMoodCode" constrainedElement="_1TzacJk_EeGGPbk7a3RIVg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kGNMERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kHBrcBpQEeSd5OoVIuDNwg" name="Study Day PeriodCodeP" constrainedElement="_1TzacJk_EeGGPbk7a3RIVg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kHBrcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kGnbwBpQEeSd5OoVIuDNwg" name="Study Day PeriodCode" constrainedElement="_1TzacJk_EeGGPbk7a3RIVg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kGnbwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'STPtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kHbUEBpQEeSd5OoVIuDNwg" name="Study Day PeriodValue" constrainedElement="_1TzacJk_EeGGPbk7a3RIVg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kHbUERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::IVL_INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1Tzacpk_EeGGPbk7a3RIVg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YK0sgJoYEeG78ZMLtGK0RQ" name="Subject Data Non-Clinical Trials">
      <ownedComment xmi:id="_YK0sgZoYEeG78ZMLtGK0RQ">
        <body>This fundamental template contains the core document related information for reporting the experience of a non-human subject within a trial.</body>
      </ownedComment>
      <ownedRule xmi:id="_kJ6nYBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsTemplateId" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kJ7OcBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kKKfABpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsClassCode" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kKKfARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::ActClinicalDocument::DOCCLIN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kKhEUBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsMoodCode" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kKhEURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode') and self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kLX_8BpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsCodeP" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kLX_8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kK6s8BpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsCode" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kK6s8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = 'TBD' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kMR-4BpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsConfidentialityCodeP" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kMR-4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kL3IIBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsConfidentialityCode" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kL3vMBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined() and self.confidentialityCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.confidentialityCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.5.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kMrAcBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsEffectiveTime" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kMrAcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.effectiveTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kM8tQBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsId" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kM9UUBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.id.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNPBIBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsLanguageCode" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kNPBIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.languageCode.oclIsUndefined() or self.languageCode.isNullFlavorUndefined()) implies (not self.languageCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNhVABpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsRealmCode" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kNhVARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.realmCode->isEmpty() or self.realmCode->exists(element | element.isNullFlavorUndefined())) implies (not self.realmCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kNzB0BpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsSetId" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kNzo4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.setId.oclIsUndefined() or self.setId.isNullFlavorUndefined()) implies (not self.setId.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kOFVsBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsVersionNumber" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kOFVsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.versionNumber.oclIsUndefined() or self.versionNumber.isNullFlavorUndefined()) implies (not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lRHgABpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsNon-human Subject Data Document Body" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lRHgARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->exists(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(sdtm::NonhumanSubjectDataDocumentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mHbc8BpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsStudyRelationship2" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mHbc8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mHmcEBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsSubjectParticipation2" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mHmcERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oluEUBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsCustodian" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oluEURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ol6RkBpQEeSd5OoVIuDNwg" name="Subject Data Non-Clinical TrialsAuthor" constrainedElement="_YK0sgJoYEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ol6RkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YK0sgpoYEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_lRTGMBpQEeSd5OoVIuDNwg" name="getNon-human Subject Data Document Bodies" bodyCondition="_lRTGMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lRTGMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lRTGMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lRTGNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(sdtm::NonhumanSubjectDataDocumentSection)).oclAsType(sdtm::NonhumanSubjectDataDocumentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lRTGMRpQEeSd5OoVIuDNwg" type="_phIKAKaaEeGlCYcoCUv7-w" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lRTGMhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eh5t4JoZEeG78ZMLtGK0RQ" name="Non-human Exposure">
      <ownedComment xmi:id="_eh5t4ZoZEeG78ZMLtGK0RQ">
        <body>The template captures details of a non-human subject's exposure to protocol-specified study treatment. Study treatment may be any intervention that is prospectively defined as a test material within a study, and is typically but not always supplied to the subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_kXmeEBpQEeSd5OoVIuDNwg" name="Non-human ExposureTemplateId" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kXnFIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.58')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kX2VsBpQEeSd5OoVIuDNwg" name="Non-human ExposureClassCode" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kX2VsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kYLs4BpQEeSd5OoVIuDNwg" name="Non-human ExposureMoodCode" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kYLs4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kYfO4BpQEeSd5OoVIuDNwg" name="Non-human ExposureDoseQuantity" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kYfO4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kYw7sBpQEeSd5OoVIuDNwg" name="Non-human ExposureEffectiveTime" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kYw7sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kZDPkBpQEeSd5OoVIuDNwg" name="Non-human ExposureId" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kZDPkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kZdfQBpQEeSd5OoVIuDNwg" name="Non-human ExposureRouteCode" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kZdfQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kZ2g0BpQEeSd5OoVIuDNwg" name="Non-human ExposureRouteCodeP" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kZ2g0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kaQJcBpQEeSd5OoVIuDNwg" name="Non-human ExposureMaxDoseQuantity" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kaQJcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kah2QBpQEeSd5OoVIuDNwg" name="Non-human ExposureText" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kah2QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ka8F8BpQEeSd5OoVIuDNwg" name="Non-human ExposureApproachSiteCode" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ka8F8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kbVukBpQEeSd5OoVIuDNwg" name="Non-human ExposureApproachSiteCodeP" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kbVukRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | element.oclIsTypeOf(datatypes::CE)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_leEW4BpQEeSd5OoVIuDNwg" name="Non-human ExposureConsumable Material" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_leEW4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(sdtm::ConsumableMaterial))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lh4f4BpQEeSd5OoVIuDNwg" name="Non-human ExposureTiming Reference" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lh4f4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_liHJYBpQEeSd5OoVIuDNwg" name="Non-human ExposureStudy Day Period" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_liHJYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_myl50BpQEeSd5OoVIuDNwg" name="Non-human ExposureComment" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_myl50RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_my0jUBpQEeSd5OoVIuDNwg" name="Non-human ExposureDomain Assignment" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_my0jURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mzDM0BpQEeSd5OoVIuDNwg" name="Non-human ExposureRelated Record" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mzDM0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mzR2UBpQEeSd5OoVIuDNwg" name="Non-human ExposureSupplemental Value" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mzR2URpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nV9FkBpQEeSd5OoVIuDNwg" name="Non-human ExposureDose Adjustment Reason" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nV9FkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DoseAdjustmentReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n7ATYBpQEeSd5OoVIuDNwg" name="Non-human ExposureCategory" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n7ATYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_obJMABpQEeSd5OoVIuDNwg" name="Non-human ExposureSub-Category" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_obJMARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oqi58BpQEeSd5OoVIuDNwg" name="Non-human ExposureEvent Duration" constrainedElement="_eh5t4JoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oqi58RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventDuration) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_eh5t4poZEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_liBp0BpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_liCQ4RpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_liCQ4RpQEeSd5OoVIuDNwg" name="body" constrainedElement="_liBp0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_liCQ4hpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_liBp0RpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_liCQ4BpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_liQTUBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_liQ6YhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_liQ6YhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_liQTUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_liQ6YxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_liQ6YBpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_liQ6YRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_myvDwBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_myvq0hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_myvq0hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_myvDwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_myvq0xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_myvq0BpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_myvq0RpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_my-UUBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_my-UUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_my-UUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_my-UUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_my-UVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_my-UURpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_my-UUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mzMWwBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mzM90hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mzM90hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mzMWwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mzM90xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mzM90BpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mzM90RpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mzbAQBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mzbnUhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mzbnUhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mzbAQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mzbnUxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mzbnUBpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mzbnURpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nWG2kBpQEeSd5OoVIuDNwg" name="getDose Adjustment Reason" bodyCondition="_nWG2kxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nWG2kxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nWG2kBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nWG2lBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DoseAdjustmentReason))->asSequence()->any(true).oclAsType(sdtm::DoseAdjustmentReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nWG2kRpQEeSd5OoVIuDNwg" type="_YbytoLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nWG2khpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n7KEYBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n7KEYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n7KEYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n7KEYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n7KEZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n7KEYRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n7KEYhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_obS9ABpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_obTkERpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_obTkERpQEeSd5OoVIuDNwg" name="body" constrainedElement="_obS9ABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obTkEhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obS9ARpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obTkEBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oqtSABpQEeSd5OoVIuDNwg" name="getEvent Duration" bodyCondition="_oqt5ERpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oqt5ERpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oqtSABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oqt5EhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventDuration))->asSequence()->any(true).oclAsType(sdtm::EventDuration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oqtSARpQEeSd5OoVIuDNwg" type="_-HQWMPj8EeG7pMUQbTahtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oqt5EBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6IIqEJoZEeG78ZMLtGK0RQ" name="Non-human Disposition">
      <ownedComment xmi:id="_6IIqEZoZEeG78ZMLtGK0RQ">
        <body>The template provides a structure to capture disposition information in non-clinical trials.  Disposition information provides an accounting for all subjects who entered the study and may include protocol milestones, such as randomization, as well as the subject's completion status or reason for discontinuation for the entire study or each phase or segment of the study, including screening and post-treatment follow-up.</body>
      </ownedComment>
      <ownedRule xmi:id="_kb36EBpQEeSd5OoVIuDNwg" name="Non-human DispositionTemplateId" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kb4hIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.57')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kcHxsBpQEeSd5OoVIuDNwg" name="Non-human DispositionClassCode" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kcHxsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kcdI4BpQEeSd5OoVIuDNwg" name="Non-human DispositionMoodCode" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kcdI4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kcxR8BpQEeSd5OoVIuDNwg" name="Non-human DispositionId" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kcxR8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kdK6kBpQEeSd5OoVIuDNwg" name="Non-human DispositionCode" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kdK6kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kdmYYBpQEeSd5OoVIuDNwg" name="Non-human DispositionEffectiveTime" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kdmYYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lfONcBpQEeSd5OoVIuDNwg" name="Non-human DispositionStudy Day Period" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lfONcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lkquIBpQEeSd5OoVIuDNwg" name="Non-human DispositionPlanned Study Day" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lkrVMBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PlannedStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mxrT0BpQEeSd5OoVIuDNwg" name="Non-human DispositionComment" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mxrT0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mx59UBpQEeSd5OoVIuDNwg" name="Non-human DispositionDomain Assignment" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mx59URpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_myIm0BpQEeSd5OoVIuDNwg" name="Non-human DispositionRelated Record" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_myIm0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_myXQUBpQEeSd5OoVIuDNwg" name="Non-human DispositionSupplemental Value" constrainedElement="_6IIqEJoZEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_myXQURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6IIqEpoZEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_lfX-cBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_lfX-cxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lfX-cxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lfX-cBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lfX-dBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lfX-cRpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lfX-chpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lk0fIBpQEeSd5OoVIuDNwg" name="getPlanned Study Day" bodyCondition="_lk0fIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lk0fIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lk0fIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lk0fJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PlannedStudyDay))->asSequence()->any(true).oclAsType(sdtm::PlannedStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lk0fIRpQEeSd5OoVIuDNwg" type="_li9xQGeiEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lk0fIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mx0dwBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mx1E0hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mx1E0hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mx0dwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mx1E0xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mx1E0BpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mx1E0RpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_myDHQBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_myDuUhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_myDuUhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_myDHQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_myDuUxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_myDuUBpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_myDuURpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_myRwwBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mySX0RpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mySX0RpQEeSd5OoVIuDNwg" name="body" constrainedElement="_myRwwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mySX0hpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_myRwwRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mySX0BpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mygaQBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_myhBURpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_myhBURpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mygaQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_myhBUhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mygaQRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_myhBUBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jQ-2sJoaEeG78ZMLtGK0RQ" name="Human Clinical Laboratory Test Result">
      <ownedComment xmi:id="_jQ-2sZoaEeG78ZMLtGK0RQ">
        <body>The template includes information on laboratory data collected on a reporting form or received from a central provider or vendor.</body>
      </ownedComment>
      <ownedRule xmi:id="_kd89sBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultTemplateId" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kd9kwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_keNcYBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultClassCode" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_keNcYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kejaoBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultMoodCode" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kejaoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ke3jsBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultId" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ke3jsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kfrcABpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultCodeP" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kfrcARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kfRzYBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultCode" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kfRzYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kgNngBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultStatusCode" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kgNngRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kgnQIBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultValue" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kgnQIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_khbvgBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultMethodCodeP" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_khbvgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_khBf0BpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultMethodCode" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_khBf0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kijw4BpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultInterpretationCodeP" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kijw4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kiKIQBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultInterpretationCode" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kiKIQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C78802' or value.code = 'C78800' or value.code = '78801' or value.code = '78727' or value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lhal0BpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultGroup Identifier" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lhbM4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lhp2YBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultSpecimen Information" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lhp2YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mIYfMBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultNon Performance Reason" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mIYfMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mIl6kBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultStudy Test Organization" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mIl6kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mI0kEBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultTiming Reference" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mI0kERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mqFeEBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultComment" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mqFeERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mqUHkBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultDomain Assignment" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mqUHkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mqixEBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultRelated Record" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mqixERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mqxakBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultSupplemental Value" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mqxakRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nzlcwBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultToxicity" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzlcwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Toxicity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n50AkBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultCategory" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n50AkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oBQsYBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultSub-Category" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBQsYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oRikEBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultFasting Status" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oRikERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FastingStatus) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ohgSsBpQEeSd5OoVIuDNwg" name="Human Clinical Laboratory Test ResultFinding About" constrainedElement="_jQ-2sJoaEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ohgSsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jQ-2spoaEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_lhkW0BpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_lhkW0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lhkW0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lhkW0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lhkW1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lhkW0RpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lhkW0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lhzAUBpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_lhzAUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lhzAUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lhzAUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lhzAVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lhzAURpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lhzAUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mIhpIBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_mIhpIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mIhpIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mIhpIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mIiQMBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mIhpIRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mIhpIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mI9uABpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_mI-VEhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mI-VEhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mI9uABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mI-VExpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mI-VEBpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mI-VERpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mqPPEBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mqPPExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mqPPExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mqPPEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mqPPFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mqPPERpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mqPPEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mqd4kBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mqd4kxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mqd4kxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mqd4kBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mqd4lBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mqd4kRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mqd4khpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mqsiEBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mqsiExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mqsiExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mqsiEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mqsiFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mqsiERpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mqsiEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mq7LkBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mq7LkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mq7LkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mq7LkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mq7LlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mq7LkRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mq7LkhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nzvNwBpQEeSd5OoVIuDNwg" name="getToxicity" bodyCondition="_nzvNwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nzvNwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nzvNwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzvNxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Toxicity))->asSequence()->any(true).oclAsType(sdtm::Toxicity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nzvNwRpQEeSd5OoVIuDNwg" type="_sYRDz7ZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nzvNwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n59xkBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n59xkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n59xkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n59xkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n59xlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n59xkRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n59xkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oBadYBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oBadYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oBadYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oBadYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oBadZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oBadYRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oBadYhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oRruABpQEeSd5OoVIuDNwg" name="getFasting Status" bodyCondition="_oRruAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oRruAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oRruABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oRsVEBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FastingStatus))->asSequence()->any(true).oclAsType(sdtm::FastingStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oRruARpQEeSd5OoVIuDNwg" type="_2TrjOLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRruAhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ohqDsBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_ohqqwhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ohqqwhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ohqDsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ohqqwxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ohqqwBpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ohqqwRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ue9XYJobEeG78ZMLtGK0RQ" name="Body Weight">
      <ownedComment xmi:id="_d58EEJobEeG78ZMLtGK0RQ">
        <body>The template captures information that SEND organizes into the body weight domain.  It supports collecting the weight of a study subject at different points during a study.</body>
      </ownedComment>
      <ownedRule xmi:id="_kjAc0BpQEeSd5OoVIuDNwg" name="Body WeightTemplateId" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kjBD4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kjQUcBpQEeSd5OoVIuDNwg" name="Body WeightClassCode" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kjQUcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kjlroBpQEeSd5OoVIuDNwg" name="Body WeightMoodCode" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kjlroRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kj5NoBpQEeSd5OoVIuDNwg" name="Body WeightId" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kj5NoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kktF8BpQEeSd5OoVIuDNwg" name="Body WeightCodeP" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kktF8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kkTdUBpQEeSd5OoVIuDNwg" name="Body WeightCode" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kkTdURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_klOqYBpQEeSd5OoVIuDNwg" name="Body WeightStatusCode" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_klPRcBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kloTABpQEeSd5OoVIuDNwg" name="Body WeightValue" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kloTARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kmgcwBpQEeSd5OoVIuDNwg" name="Body WeightInterpretationCodeP" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kmgcwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kmFmABpQEeSd5OoVIuDNwg" name="Body WeightInterpretationCode" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kmGNEBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lfc28BpQEeSd5OoVIuDNwg" name="Body WeightNon Performance Reason" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lfc28RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lfrgcBpQEeSd5OoVIuDNwg" name="Body WeightData Collection" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lfrgcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mJR3EBpQEeSd5OoVIuDNwg" name="Body WeightExclusion Reason" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mJR3ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ExclusionReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mgonIBpQEeSd5OoVIuDNwg" name="Body WeightComment" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mgonIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mg3QoBpQEeSd5OoVIuDNwg" name="Body WeightDomain Assignment" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mg3QoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mhF6IBpQEeSd5OoVIuDNwg" name="Body WeightRelated Record" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mhF6IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mhUjoBpQEeSd5OoVIuDNwg" name="Body WeightSupplemental Value" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mhUjoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oR_3EBpQEeSd5OoVIuDNwg" name="Body WeightFasting Status" constrainedElement="_Ue9XYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oR_3ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FastingStatus) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ue9XYZobEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_lfmn8BpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_lfmn8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lfmn8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lfmn8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lfmn9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lfmn8RpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lfmn8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lf1RcBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_lf1RcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lf1RcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lf1RcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lf1RdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lf1RcRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lf1RchpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mJcPIBpQEeSd5OoVIuDNwg" name="getExclusion Reason" bodyCondition="_mJcPIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mJcPIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mJcPIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mJcPJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ExclusionReason))->asSequence()->any(true).oclAsType(sdtm::ExclusionReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mJcPIRpQEeSd5OoVIuDNwg" type="_mZNiwLWAEeGLXdg8xIiGrA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mJcPIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mgyYIBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mgyYIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mgyYIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mgyYIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mgyYJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mgyYIRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mgyYIhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mhBBoBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mhBBoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mhBBoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mhBBoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mhBBpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mhBBoRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mhBBohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mhPrIBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mhPrIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mhPrIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mhPrIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mhPrJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mhPrIRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mhPrIhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mheUoBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mheUoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mheUoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mheUoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mheUpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mheUoRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mheUohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oSJoEBpQEeSd5OoVIuDNwg" name="getFasting Status" bodyCondition="_oSJoExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oSJoExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oSJoEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSJoFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FastingStatus))->asSequence()->any(true).oclAsType(sdtm::FastingStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSJoERpQEeSd5OoVIuDNwg" type="_2TrjOLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSJoEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_e9VawJobEeG78ZMLtGK0RQ" name="Body Weight Gain">
      <ownedComment xmi:id="_e9VawZobEeG78ZMLtGK0RQ">
        <body>The template captures information for the SEND Body Weight Gain domain.  It is used to record changes in the body weight of a study subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_km9IsBpQEeSd5OoVIuDNwg" name="Body Weight GainTemplateId" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_km-W0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.19')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_knNnYBpQEeSd5OoVIuDNwg" name="Body Weight GainClassCode" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_knNnYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kni-kBpQEeSd5OoVIuDNwg" name="Body Weight GainMoodCode" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kni-kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kn2gkBpQEeSd5OoVIuDNwg" name="Body Weight GainId" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kn2gkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_koqY4BpQEeSd5OoVIuDNwg" name="Body Weight GainCodeP" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_koqY4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_koQwQBpQEeSd5OoVIuDNwg" name="Body Weight GainCode" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_koQwQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kpMkYBpQEeSd5OoVIuDNwg" name="Body Weight GainStatusCode" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kpMkYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kpk-4BpQEeSd5OoVIuDNwg" name="Body Weight GainEffectiveTime" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kpll8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kp350BpQEeSd5OoVIuDNwg" name="Body Weight GainValue" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kp350RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kqx4wBpQEeSd5OoVIuDNwg" name="Body Weight GainInterpretationCodeP" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kqx4wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kqXpEBpQEeSd5OoVIuDNwg" name="Body Weight GainInterpretationCode" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kqYQIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lnUZgBpQEeSd5OoVIuDNwg" name="Body Weight GainNon Performance Reason" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lnUZgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lnjqEBpQEeSd5OoVIuDNwg" name="Body Weight GainStudy Day Period" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lnjqERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lnzhsBpQEeSd5OoVIuDNwg" name="Body Weight GainTiming Reference" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lnzhsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mJhHoBpQEeSd5OoVIuDNwg" name="Body Weight GainExclusion Reason" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mJhHoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ExclusionReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mhjNIBpQEeSd5OoVIuDNwg" name="Body Weight GainComment" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mhjNIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mhx2oBpQEeSd5OoVIuDNwg" name="Body Weight GainDomain Assignment" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mhx2oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_miAgIBpQEeSd5OoVIuDNwg" name="Body Weight GainRelated Record" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_miAgIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_miPJoBpQEeSd5OoVIuDNwg" name="Body Weight GainSupplemental Value" constrainedElement="_e9VawJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_miPJoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_e9VawpobEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_lneKgBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_lneKgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lneKgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lneKgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lnexkBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lneKgRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lneKghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lnuCIBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_lnuCIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lnuCIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lnuCIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lnuCJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lnuCIRpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lnuCIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ln8roBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_ln9SshpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ln9SshpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ln8roBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ln9SsxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ln9SsBpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ln9SsRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mJq4oBpQEeSd5OoVIuDNwg" name="getExclusion Reason" bodyCondition="_mJq4oxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mJq4oxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mJq4oBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mJq4pBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ExclusionReason))->asSequence()->any(true).oclAsType(sdtm::ExclusionReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mJq4oRpQEeSd5OoVIuDNwg" type="_mZNiwLWAEeGLXdg8xIiGrA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mJq4ohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mhs-IBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mhs-IxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mhs-IxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mhs-IBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mhs-JBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mhs-IRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mhs-IhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mh7AkBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mh7noBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mh7noBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mh7AkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mh7noRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mh7AkRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mh7AkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_miJqEBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_miJqExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_miJqExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_miJqEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_miJqFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_miJqERpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_miJqEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_miYTkBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_miYTkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_miYTkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_miYTkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_miYTlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_miYTkRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_miYTkhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l-7OMJobEeG78ZMLtGK0RQ" name="Clinical Observation">
      <ownedComment xmi:id="_l-7OMZobEeG78ZMLtGK0RQ">
        <body>The template supports content of the clinical observation domain.   This includes the capture of clinical observations, not more specifically defined and assigned to a particular domain, that are associated with a study subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_krMvgBpQEeSd5OoVIuDNwg" name="Clinical ObservationTemplateId" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_krN9oBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_krdOMBpQEeSd5OoVIuDNwg" name="Clinical ObservationClassCode" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_krdOMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_krylYBpQEeSd5OoVIuDNwg" name="Clinical ObservationMoodCode" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_krylYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ksnr0BpQEeSd5OoVIuDNwg" name="Clinical ObservationCodeP" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ksnr0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ksOqQBpQEeSd5OoVIuDNwg" name="Clinical ObservationCode" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ksOqQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknown' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ktB7gBpQEeSd5OoVIuDNwg" name="Clinical ObservationId" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ktB7gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ktToUBpQEeSd5OoVIuDNwg" name="Clinical ObservationValue" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ktUPYBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kt1MwBpQEeSd5OoVIuDNwg" name="Clinical ObservationStatusCode" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kt1MwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kuxA4BpQEeSd5OoVIuDNwg" name="Clinical ObservationTargetSiteCodeP" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kuxA4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kuWxMBpQEeSd5OoVIuDNwg" name="Clinical ObservationTargetSiteCode" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kuWxMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kvxGcBpQEeSd5OoVIuDNwg" name="Clinical ObservationInterpretationCodeP" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kvxGcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kvXd0BpQEeSd5OoVIuDNwg" name="Clinical ObservationInterpretationCode" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kvXd0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_loCLMBpQEeSd5OoVIuDNwg" name="Clinical ObservationGroup Identifier" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_loCLMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lpjOIBpQEeSd5OoVIuDNwg" name="Clinical ObservationBody System or Organ Class" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lpjOIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::BodySystemorOrganClass) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lpyesBpQEeSd5OoVIuDNwg" name="Clinical ObservationNon Performance Reason" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lpyesRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l7IGUBpQEeSd5OoVIuDNwg" name="Clinical ObservationStudy Finding Evaluator" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l7IGURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l7WIwBpQEeSd5OoVIuDNwg" name="Clinical ObservationEvent Severity" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l7WIwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventorFindingSeverity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l7kyQBpQEeSd5OoVIuDNwg" name="Clinical ObservationPlanned Study Day" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l7kyQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PlannedStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l7zbwBpQEeSd5OoVIuDNwg" name="Clinical ObservationData Collection" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l7zbwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l8CFQBpQEeSd5OoVIuDNwg" name="Clinical ObservationTiming Reference" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l8CFQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l-7BMBpQEeSd5OoVIuDNwg" name="Clinical ObservationMass Identification" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l-7BMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::MassIdentification))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mJvxIBpQEeSd5OoVIuDNwg" name="Clinical ObservationExclusion Reason" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mJvxIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ExclusionReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mjXyEBpQEeSd5OoVIuDNwg" name="Clinical ObservationComment" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mjXyERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mjmbkBpQEeSd5OoVIuDNwg" name="Clinical ObservationDomain Assignment" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mjmbkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mj1FEBpQEeSd5OoVIuDNwg" name="Clinical ObservationRelated Record" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mj1FERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mkEVoBpQEeSd5OoVIuDNwg" name="Clinical ObservationSupplemental Value" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mkEVoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n31DkBpQEeSd5OoVIuDNwg" name="Clinical ObservationCategory" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n31DkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n_o7wBpQEeSd5OoVIuDNwg" name="Clinical ObservationSub-Category" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n_o7wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNz6oBpQEeSd5OoVIuDNwg" name="Clinical ObservationResult Category" constrainedElement="_l-7OMJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNz6oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ResultCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_l-7OMpobEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_loL8MBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_loL8MxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_loL8MxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_loL8MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_loL8NBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_loL8MRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_loL8MhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lps_IBpQEeSd5OoVIuDNwg" name="getBody System or Organ Class" bodyCondition="_lptmMBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lptmMBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lps_IBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lptmMRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodySystemorOrganClass))->asSequence()->any(true).oclAsType(sdtm::BodySystemorOrganClass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lps_IRpQEeSd5OoVIuDNwg" type="_QmoEwGoUEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lps_IhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lp8PsBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_lp8PsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lp8PsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lp8PsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lp8PtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lp8PsRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lp8PshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l7f5wBpQEeSd5OoVIuDNwg" name="getEvent Severity" bodyCondition="_l7f5wxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l7f5wxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l7f5wBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l7f5xBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventorFindingSeverity))->asSequence()->any(true).oclAsType(sdtm::EventorFindingSeverity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l7f5wRpQEeSd5OoVIuDNwg" type="_nrFiEGoYEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l7f5whpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l7ujQBpQEeSd5OoVIuDNwg" name="getPlanned Study Day" bodyCondition="_l7ujQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l7ujQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l7ujQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l7ujRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PlannedStudyDay))->asSequence()->any(true).oclAsType(sdtm::PlannedStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l7ujQRpQEeSd5OoVIuDNwg" type="_li9xQGeiEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l7ujQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l79MwBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_l79MwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l79MwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l79MwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l79MxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l79MwRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l79MwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l8L2QBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_l8L2QxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l8L2QxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l8L2QBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l8L2RBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l8L2QRpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l8L2QhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mJ5iIBpQEeSd5OoVIuDNwg" name="getExclusion Reason" bodyCondition="_mJ5iIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mJ5iIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mJ5iIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mJ5iJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ExclusionReason))->asSequence()->any(true).oclAsType(sdtm::ExclusionReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mJ5iIRpQEeSd5OoVIuDNwg" type="_mZNiwLWAEeGLXdg8xIiGrA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mJ5iIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mjhjEBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mjhjExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mjhjExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mjhjEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mjhjFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mjhjERpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mjhjEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mjwMkBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mjwMkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mjwMkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mjwMkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mjwMlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mjwMkRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mjwMkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mj-2EBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mj-2ExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mj-2ExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mj-2EBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mj-2FBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mj-2ERpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mj-2EhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mkNfkBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mkNfkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mkNfkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mkNfkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mkNflBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mkNfkRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mkNfkhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n3_boBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n4ACsRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n4ACsRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n3_boBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n4ACshpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n3_boRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n4ACsBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n_yswBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_n_yswxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n_yswxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n_yswBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n_ysxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n_yswRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n_yswhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oN-SsBpQEeSd5OoVIuDNwg" name="getResult Category" bodyCondition="_oN-SsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oN-SsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oN-SsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oN-StBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ResultCategory))->asSequence()->any(true).oclAsType(sdtm::ResultCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oN-SsRpQEeSd5OoVIuDNwg" type="_2TrjZLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oN-SshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_voyEYJobEeG78ZMLtGK0RQ" name="Death Diagnosis">
      <ownedComment xmi:id="_voyEYZobEeG78ZMLtGK0RQ">
        <body>The template captures the content of the Death Diagnosis Domain.  It includes diagnostic information linked to the death of a study subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_kwPnkBpQEeSd5OoVIuDNwg" name="Death DiagnosisTemplateId" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kwQOoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kwffMBpQEeSd5OoVIuDNwg" name="Death DiagnosisClassCode" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kwffMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kw1dcBpQEeSd5OoVIuDNwg" name="Death DiagnosisMoodCode" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kw1dcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kxI_cBpQEeSd5OoVIuDNwg" name="Death DiagnosisId" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kxI_cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kx7poBpQEeSd5OoVIuDNwg" name="Death DiagnosisCodeP" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kx7poRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kxgy4BpQEeSd5OoVIuDNwg" name="Death DiagnosisCode" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kxgy4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C95087' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kydOEBpQEeSd5OoVIuDNwg" name="Death DiagnosisValue" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kydOERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknown' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ky2PoBpQEeSd5OoVIuDNwg" name="Death DiagnosisValueP" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ky22sBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l8QHsBpQEeSd5OoVIuDNwg" name="Death DiagnosisStudy Finding Evaluator" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l8QHsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l8eKIBpQEeSd5OoVIuDNwg" name="Death DiagnosisData Collection" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l8eKIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mlbnkBpQEeSd5OoVIuDNwg" name="Death DiagnosisComment" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mlbnkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mlq4IBpQEeSd5OoVIuDNwg" name="Death DiagnosisDomain Assignment" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mlq4IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ml8k8BpQEeSd5OoVIuDNwg" name="Death DiagnosisRelated Record" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ml8k8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mmLOcBpQEeSd5OoVIuDNwg" name="Death DiagnosisSupplemental Value" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mmLOcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOhsUBpQEeSd5OoVIuDNwg" name="Death DiagnosisResult Category" constrainedElement="_voyEYJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOhsURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ResultCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_voyEYpobEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_l8n7IBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_l8n7IxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l8n7IxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l8n7IBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l8n7JBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l8n7IRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l8n7IhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mllYkBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mllYkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mllYkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mllYkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mllYlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mllYkRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mllYkhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ml13QBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_ml13QxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ml13QxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ml13QBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ml13RBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ml13QRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ml13QhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mmGV8BpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mmGV8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mmGV8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mmGV8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mmGV9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mmGV8RpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mmGV8hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mmU_cBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mmU_cxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mmU_cxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mmU_cBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mmU_dBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mmU_cRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mmU_chpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oOrdUBpQEeSd5OoVIuDNwg" name="getResult Category" bodyCondition="_oOrdUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oOrdUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oOrdUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOrdVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ResultCategory))->asSequence()->any(true).oclAsType(sdtm::ResultCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oOrdURpQEeSd5OoVIuDNwg" type="_2TrjZLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oOrdUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__eYEEJobEeG78ZMLtGK0RQ" name="Food and Water Consumption">
      <ownedComment xmi:id="__eYEEZobEeG78ZMLtGK0RQ">
        <body>The templated is used to capture information stored in the Food and Wather Consumtion Domain.  It includes information on the  study subject's consumption of food and/or water.</body>
      </ownedComment>
      <ownedRule xmi:id="_kzUJsBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionTemplateId" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kzVX0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kzlPcBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionClassCode" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kzlPcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_kz7NsBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionMoodCode" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_kz70wBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k0P90BpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionId" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k0P90RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k1D2IBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionCodeP" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k1D2IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k0qNgBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionCode" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k0qNgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k1es4BpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionStatusCode" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k1es4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k1wZsBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionEffectiveTime" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k1wZsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k2CGgBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionValue" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k2CtkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k2-hsBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionInterpretationCodeP" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k2-hsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k2k5EBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionInterpretationCode" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k2k5ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l8szoBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionNon Performance Reason" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l8szoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l88EMBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionStudy Day Period" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l88EMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mJDNkBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionExclusion Reason" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mJDNkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ExclusionReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mN9iwBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionGroup Identifier" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mN9iwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mnVFABpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionComment" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mnVsEBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mnkVkBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionDomain Assignment" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mnkVkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mny_EBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionRelated Record" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mny_ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_moBokBpQEeSd5OoVIuDNwg" name="Food and Water ConsumptionSupplemental Value" constrainedElement="__eYEEJobEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_moBokRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__eYEEpobEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_l82koBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_l82koxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l82koxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l82koBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l82kpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l82koRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l82kohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l9F1MBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_l9F1MxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l9F1MxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l9F1MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l9F1NBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l9F1MRpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l9F1MhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mJM-kBpQEeSd5OoVIuDNwg" name="getExclusion Reason" bodyCondition="_mJM-kxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mJM-kxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mJM-kBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mJM-lBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ExclusionReason))->asSequence()->any(true).oclAsType(sdtm::ExclusionReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mJM-kRpQEeSd5OoVIuDNwg" type="_mZNiwLWAEeGLXdg8xIiGrA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mJM-khpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mOHTwBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_mOHTwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mOHTwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mOHTwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mOHTxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mOHTwRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mOHTwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mne2ABpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mnfdEBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mnfdEBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mne2ABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mnfdERpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mne2ARpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mne2AhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mntfgBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mnuGkBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mnuGkBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mntfgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mnuGkRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mntfgRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mntfghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mn8wEBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mn8wExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mn8wExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mn8wEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mn8wFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mn8wERpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mn8wEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_moLZkBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_moLZkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_moLZkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_moLZkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_moLZlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_moLZkRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_moLZkhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Lrb20JocEeG78ZMLtGK0RQ" name="Macroscopic Finding">
      <ownedComment xmi:id="_Lrb20ZocEeG78ZMLtGK0RQ">
        <body>The template is used to record macrosopic findings for a study subject</body>
      </ownedComment>
      <ownedRule xmi:id="_k3ZYcBpQEeSd5OoVIuDNwg" name="Macroscopic FindingTemplateId" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k3Z_gBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.50')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k3pQEBpQEeSd5OoVIuDNwg" name="Macroscopic FindingClassCode" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k3pQERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k3-AMBpQEeSd5OoVIuDNwg" name="Macroscopic FindingMoodCode" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k3-AMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k40UwBpQEeSd5OoVIuDNwg" name="Macroscopic FindingCodeP" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k40UwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k4asIBpQEeSd5OoVIuDNwg" name="Macroscopic FindingCode" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k4asIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknown' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k5RAsBpQEeSd5OoVIuDNwg" name="Macroscopic FindingId" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k5RAsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k5jUkBpQEeSd5OoVIuDNwg" name="Macroscopic FindingValue" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k5jUkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k6HVQBpQEeSd5OoVIuDNwg" name="Macroscopic FindingStatusCode" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k6HVQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l_IckBpQEeSd5OoVIuDNwg" name="Macroscopic FindingMass Identification" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l_IckRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::MassIdentification))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l_XGEBpQEeSd5OoVIuDNwg" name="Macroscopic FindingGroup Identifier" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l_XGERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l_lvkBpQEeSd5OoVIuDNwg" name="Macroscopic FindingSpecimen Information" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l_lvkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l_0ZEBpQEeSd5OoVIuDNwg" name="Macroscopic FindingBody System or Organ Class" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l_0ZERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::BodySystemorOrganClass) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mADpoBpQEeSd5OoVIuDNwg" name="Macroscopic FindingNon Performance Reason" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mADpoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mARFABpQEeSd5OoVIuDNwg" name="Macroscopic FindingStudy Test Performer" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mARFARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mAegYBpQEeSd5OoVIuDNwg" name="Macroscopic FindingStudy Finding Evaluator" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mAegYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mAtJ4BpQEeSd5OoVIuDNwg" name="Macroscopic FindingEvent Severity" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mAtJ4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventorFindingSeverity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mA7zYBpQEeSd5OoVIuDNwg" name="Macroscopic FindingData Collection" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mA7zYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mtD5kBpQEeSd5OoVIuDNwg" name="Macroscopic FindingComment" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mtD5kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mtTKIBpQEeSd5OoVIuDNwg" name="Macroscopic FindingDomain Assignment" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mtTKIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mthzoBpQEeSd5OoVIuDNwg" name="Macroscopic FindingRelated Record" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mthzoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mtwdIBpQEeSd5OoVIuDNwg" name="Macroscopic FindingSupplemental Value" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mtwdIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oYNz0BpQEeSd5OoVIuDNwg" name="Macroscopic FindingDeath Relationship" constrainedElement="_Lrb20JocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYNz0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DeathRelationship) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Lrb20pocEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_l_gQABpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_l_gQAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l_gQAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l_gQABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l_g3EBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l_gQARpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l_gQAhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l_u5gBpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_l_vgkhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l_vgkhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l_u5gBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l_vgkxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l_vgkBpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l_vgkRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_l_-KEBpQEeSd5OoVIuDNwg" name="getBody System or Organ Class" bodyCondition="_l_-xIBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_l_-xIBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_l_-KEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_l_-xIRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodySystemorOrganClass))->asSequence()->any(true).oclAsType(sdtm::BodySystemorOrganClass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_l_-KERpQEeSd5OoVIuDNwg" type="_QmoEwGoUEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_l_-KEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mANaoBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_mANaoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mANaoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mANaoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mANapBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mANaoRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mANaohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mA264BpQEeSd5OoVIuDNwg" name="getEvent Severity" bodyCondition="_mA264xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mA264xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mA264BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mA265BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventorFindingSeverity))->asSequence()->any(true).oclAsType(sdtm::EventorFindingSeverity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mA264RpQEeSd5OoVIuDNwg" type="_nrFiEGoYEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mA264hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mBFkYBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_mBFkYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mBFkYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mBFkYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mBFkZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mBFkYRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mBFkYhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mtNqkBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mtORoRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mtORoRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mtNqkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mtORohpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mtNqkRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mtORoBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mtcUEBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mtc7IBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mtc7IBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mtcUEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mtc7IRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mtcUERpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mtcUEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mtrkoBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mtrkoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mtrkoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mtrkoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mtrkpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mtrkoRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mtrkohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mt5nEBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mt6OIBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mt6OIBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mt5nEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mt6OIRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mt5nERpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mt5nEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oYXk0BpQEeSd5OoVIuDNwg" name="getDeath Relationship" bodyCondition="_oYXk0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oYXk0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oYXk0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYXk1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DeathRelationship))->asSequence()->any(true).oclAsType(sdtm::DeathRelationship)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oYXk0RpQEeSd5OoVIuDNwg" type="_P_ecgLc0EeGbTfv2pIp07Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYXk0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mxZXgJocEeG78ZMLtGK0RQ" name="Microscopic Finding">
      <ownedComment xmi:id="_mxZXgZocEeG78ZMLtGK0RQ">
        <body>The template provides a structure to record microscopic findings for a study subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_k6izEBpQEeSd5OoVIuDNwg" name="Microscopic FindingTemplateId" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k6jaIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.55')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k6zRwBpQEeSd5OoVIuDNwg" name="Microscopic FindingClassCode" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k6zRwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k7JQABpQEeSd5OoVIuDNwg" name="Microscopic FindingMoodCode" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k7JQARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k7dZEBpQEeSd5OoVIuDNwg" name="Microscopic FindingId" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k7dZERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k8R4cBpQEeSd5OoVIuDNwg" name="Microscopic FindingCodeP" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k8R4cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k74P0BpQEeSd5OoVIuDNwg" name="Microscopic FindingCode" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k74P0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknown' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k80rABpQEeSd5OoVIuDNwg" name="Microscopic FindingStatusCode" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k80rARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k9O6sBpQEeSd5OoVIuDNwg" name="Microscopic FindingValue" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k9O6sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k-PAQBpQEeSd5OoVIuDNwg" name="Microscopic FindingMethodCodeP" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k-PAQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k90wkBpQEeSd5OoVIuDNwg" name="Microscopic FindingMethodCode" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k90wkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mBKc4BpQEeSd5OoVIuDNwg" name="Microscopic FindingNon Performance Reason" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mBLD8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mBYfUBpQEeSd5OoVIuDNwg" name="Microscopic FindingStudy Test Performer" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mBYfURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mBmhwBpQEeSd5OoVIuDNwg" name="Microscopic FindingSpecimen Information" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mBmhwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mB0kMBpQEeSd5OoVIuDNwg" name="Microscopic FindingStudy Finding Evaluator" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mB0kMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mCCmoBpQEeSd5OoVIuDNwg" name="Microscopic FindingEvent Severity" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mCCmoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventorFindingSeverity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mCRQIBpQEeSd5OoVIuDNwg" name="Microscopic FindingData Collection" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mCRQIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mOMzUBpQEeSd5OoVIuDNwg" name="Microscopic FindingGroup Identifier" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mOMzURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mOaOsBpQEeSd5OoVIuDNwg" name="Microscopic FindingMass Identification" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mOaOsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::MassIdentification))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mOoRIBpQEeSd5OoVIuDNwg" name="Microscopic FindingBody System or Organ Class" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mOo4MBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::BodySystemorOrganClass) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mwwGwBpQEeSd5OoVIuDNwg" name="Microscopic FindingComment" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mwwGwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mw-wQBpQEeSd5OoVIuDNwg" name="Microscopic FindingDomain Assignment" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mw-wQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mxNZwBpQEeSd5OoVIuDNwg" name="Microscopic FindingRelated Record" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mxNZwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mxcqUBpQEeSd5OoVIuDNwg" name="Microscopic FindingSupplemental Value" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mxcqURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oOwV0BpQEeSd5OoVIuDNwg" name="Microscopic FindingResult Category" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oOwV0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ResultCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oU6BIBpQEeSd5OoVIuDNwg" name="Microscopic FindingDeath Relationship" constrainedElement="_mxZXgJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oU6BIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DeathRelationship) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mxZXgpocEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_mBUN4BpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_mBUN4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mBUN4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mBUN4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mBUN5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mBUN4RpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mBUN4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mBwSwBpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_mBwSwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mBwSwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mBwSwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mBwSxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mBwSwRpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mBwSwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mCMXoBpQEeSd5OoVIuDNwg" name="getEvent Severity" bodyCondition="_mCMXoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mCMXoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mCMXoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mCMXpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventorFindingSeverity))->asSequence()->any(true).oclAsType(sdtm::EventorFindingSeverity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mCMXoRpQEeSd5OoVIuDNwg" type="_nrFiEGoYEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mCMXohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mCbBIBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_mCbBIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mCbBIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mCbBIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mCbBJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mCbBIRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mCbBIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mOV9QBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_mOWkUBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mOWkUBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mOV9QBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mOWkURpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mOV9QRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mOV9QhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mOyCIBpQEeSd5OoVIuDNwg" name="getBody System or Organ Class" bodyCondition="_mOyCIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mOyCIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mOyCIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mOyCJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodySystemorOrganClass))->asSequence()->any(true).oclAsType(sdtm::BodySystemorOrganClass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mOyCIRpQEeSd5OoVIuDNwg" type="_QmoEwGoUEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mOyCIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mw5QsBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_mw53whpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mw53whpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mw5QsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mw53wxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mw53wBpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mw53wRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mxIhQBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_mxIhQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mxIhQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mxIhQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mxIhRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mxIhQRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mxIhQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mxXKwBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_mxXKwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mxXKwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mxXKwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mxXKxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mxXKwRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mxXKwhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mxl0QBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_mxmbUBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mxmbUBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mxl0QBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mxmbURpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mxl0QRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mxl0QhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oO6t4BpQEeSd5OoVIuDNwg" name="getResult Category" bodyCondition="_oO6t4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oO6t4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oO6t4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO6t5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ResultCategory))->asSequence()->any(true).oclAsType(sdtm::ResultCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oO6t4RpQEeSd5OoVIuDNwg" type="_2TrjZLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oO6t4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oVEZMBpQEeSd5OoVIuDNwg" name="getDeath Relationship" bodyCondition="_oVEZMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oVEZMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oVEZMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVEZNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DeathRelationship))->asSequence()->any(true).oclAsType(sdtm::DeathRelationship)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oVEZMRpQEeSd5OoVIuDNwg" type="_P_ecgLc0EeGbTfv2pIp07Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVEZMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0P_DkJocEeG78ZMLtGK0RQ" name="Organ Measurement">
      <ownedComment xmi:id="_0P_DkZocEeG78ZMLtGK0RQ">
        <body>The template is used to record measurments of organs belonging to the study subject</body>
      </ownedComment>
      <ownedRule xmi:id="_k-rsMBpQEeSd5OoVIuDNwg" name="Organ MeasurementTemplateId" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k-s6UBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.62')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k-8K4BpQEeSd5OoVIuDNwg" name="Organ MeasurementClassCode" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k-8K4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k_SJIBpQEeSd5OoVIuDNwg" name="Organ MeasurementMoodCode" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k_SJIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k_lrIBpQEeSd5OoVIuDNwg" name="Organ MeasurementId" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k_lrIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lAZjcBpQEeSd5OoVIuDNwg" name="Organ MeasurementCodeP" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lAaKgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_k__60BpQEeSd5OoVIuDNwg" name="Organ MeasurementCode" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_k__60RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknonw' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lA8WABpQEeSd5OoVIuDNwg" name="Organ MeasurementStatusCode" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lA8WARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lBVXkBpQEeSd5OoVIuDNwg" name="Organ MeasurementValue" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lBVXkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lCP9kBpQEeSd5OoVIuDNwg" name="Organ MeasurementInterpretationCodeP" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lCP9kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lB1t4BpQEeSd5OoVIuDNwg" name="Organ MeasurementInterpretationCode" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lB1t4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mCf5oBpQEeSd5OoVIuDNwg" name="Organ MeasurementNon Performance Reason" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mCf5oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mCujIBpQEeSd5OoVIuDNwg" name="Organ MeasurementSpecimen Information" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mCujIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mC9MoBpQEeSd5OoVIuDNwg" name="Organ MeasurementData Collection" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mC9MoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_obYckBpQEeSd5OoVIuDNwg" name="Organ MeasurementComment" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_obYckRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ocIqgBpQEeSd5OoVIuDNwg" name="Organ MeasurementExclusion Reason" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ocIqgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ExclusionReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ocl9gBpQEeSd5OoVIuDNwg" name="Organ MeasurementRelated Record" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ocl9gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_odDQgBpQEeSd5OoVIuDNwg" name="Organ MeasurementSupplemental Value" constrainedElement="_0P_DkJocEeG78ZMLtGK0RQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_odDQgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0P_DkpocEeG78ZMLtGK0RQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_mCpqoBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_mCpqoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mCpqoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mCpqoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mCpqpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mCpqoRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mCpqohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mC4UIBpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_mC4UIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mC4UIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mC4UIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mC4UJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mC4UIRpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mC4UIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mDG9oBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_mDG9oxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mDG9oxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mDG9oBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mDG9pBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mDG9oRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mDG9ohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_obiNkBpQEeSd5OoVIuDNwg" name="getComment" bodyCondition="_obi0oBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_obi0oBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_obiNkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_obi0oRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment))->asSequence()->any(true).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_obiNkRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_obiNkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ocDK8BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_ocDyAhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ocDyAhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ocDK8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ocDyAxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ocDyABpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ocDyARpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ocR0cBpQEeSd5OoVIuDNwg" name="getExclusion Reason" bodyCondition="_ocSbgRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ocSbgRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ocR0cBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ocSbghpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ExclusionReason))->asSequence()->any(true).oclAsType(sdtm::ExclusionReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ocR0cRpQEeSd5OoVIuDNwg" type="_mZNiwLWAEeGLXdg8xIiGrA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ocSbgBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ocvHcBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_ocvughpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ocvughpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ocvHcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ocvugxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ocvugBpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ocvugRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_odNBgBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_odNBgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_odNBgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_odNBgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_odNBhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_odNBgRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_odNBghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0rD0wJrGEeGpk_Q1ImbEig" name="Palpable Mass">
      <ownedComment xmi:id="_0rD0wZrGEeGpk_Q1ImbEig">
        <body>The template is used to record information for plapable masses which are detected during the study.</body>
      </ownedComment>
      <ownedRule xmi:id="_lCq0UBpQEeSd5OoVIuDNwg" name="Palpable MassTemplateId" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lCsCcBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.64')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lC7TABpQEeSd5OoVIuDNwg" name="Palpable MassClassCode" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lC7TARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lDQqMBpQEeSd5OoVIuDNwg" name="Palpable MassMoodCode" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lDQqMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lDkzQBpQEeSd5OoVIuDNwg" name="Palpable MassId" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lDkzQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lEYrkBpQEeSd5OoVIuDNwg" name="Palpable MassCodeP" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lEYrkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lD_C8BpQEeSd5OoVIuDNwg" name="Palpable MassCode" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lD_C8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknown' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lE7eIBpQEeSd5OoVIuDNwg" name="Palpable MassStatusCode" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lE7eIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lFVGwBpQEeSd5OoVIuDNwg" name="Palpable MassValue" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lFVGwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lGN3kBpQEeSd5OoVIuDNwg" name="Palpable MassTargetSiteCodeP" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lGOeoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lFzA0BpQEeSd5OoVIuDNwg" name="Palpable MassTargetSiteCode" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lFzA0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mDMdMBpQEeSd5OoVIuDNwg" name="Palpable MassNon Performance Reason" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mDMdMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mDZ4kBpQEeSd5OoVIuDNwg" name="Palpable MassStudy Finding Evaluator" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mDZ4kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mDn7ABpQEeSd5OoVIuDNwg" name="Palpable MassPlanned Study Day" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mDn7ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PlannedStudyDay) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mD2kgBpQEeSd5OoVIuDNwg" name="Palpable MassData Collection" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mD2kgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mO2TkBpQEeSd5OoVIuDNwg" name="Palpable MassMass Identification" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mO2TkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::MassIdentification))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m1kVUBpQEeSd5OoVIuDNwg" name="Palpable MassComment" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m1kVURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m1y-0BpQEeSd5OoVIuDNwg" name="Palpable MassDomain Assignment" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m1y-0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m2BBQBpQEeSd5OoVIuDNwg" name="Palpable MassRelated Record" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m2BBQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m2PqwBpQEeSd5OoVIuDNwg" name="Palpable MassSupplemental Value" constrainedElement="_0rD0wJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m2PqwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0rD0wprGEeGpk_Q1ImbEig">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_mDVnIBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_mDVnIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mDVnIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mDVnIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mDVnJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mDVnIRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mDVnIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mDxsABpQEeSd5OoVIuDNwg" name="getPlanned Study Day" bodyCondition="_mDxsAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mDxsAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mDxsABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mDxsBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PlannedStudyDay))->asSequence()->any(true).oclAsType(sdtm::PlannedStudyDay)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mDxsARpQEeSd5OoVIuDNwg" type="_li9xQGeiEeGFKaG0B9CEsg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mDxsAhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mEAVgBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_mEAVgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mEAVgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mEAVgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mEAVhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mEAVgRpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mEAVghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m1tfQBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m1tfQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m1tfQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m1tfQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m1tfRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m1tfQRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m1tfQhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m18IwBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m18IwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m18IwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m18IwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m18IxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m18IwRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m18IwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m2KyQBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m2KyQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m2KyQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m2KyQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m2KyRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m2KyQRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m2KyQhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m2ZbwBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m2ZbwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m2ZbwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m2ZbwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m2ZbxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m2ZbwRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m2ZbwhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1B8qwJrGEeGpk_Q1ImbEig" name="Tumor Finding">
      <ownedComment xmi:id="_1B8qwZrGEeGpk_Q1ImbEig">
        <body>The template is used to represent findings for tumors related to the study subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_lGsYsBpQEeSd5OoVIuDNwg" name="Tumor FindingTemplateId" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lGs_wBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.99')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lHBI0BpQEeSd5OoVIuDNwg" name="Tumor FindingId" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lHBI0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lH1BIBpQEeSd5OoVIuDNwg" name="Tumor FindingCodeP" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lH1BIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lHbYgBpQEeSd5OoVIuDNwg" name="Tumor FindingCode" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lHbYgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknown' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lIXzsBpQEeSd5OoVIuDNwg" name="Tumor FindingStatusCode" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lIXzsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lIw1QBpQEeSd5OoVIuDNwg" name="Tumor FindingValue" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lIw1QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lJtQcBpQEeSd5OoVIuDNwg" name="Tumor FindingMethodCodeP" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lJtQcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lJSZsBpQEeSd5OoVIuDNwg" name="Tumor FindingMethodCode" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lJSZsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mET3gBpQEeSd5OoVIuDNwg" name="Tumor FindingGroup Identifier" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mET3gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mEjIEBpQEeSd5OoVIuDNwg" name="Tumor FindingSpecimen Information" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mEjIERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mEwjcBpQEeSd5OoVIuDNwg" name="Tumor FindingMass Identification" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mExKgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::MassIdentification))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mE_M8BpQEeSd5OoVIuDNwg" name="Tumor FindingNon Performance Reason" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mE_M8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mFMoUBpQEeSd5OoVIuDNwg" name="Tumor FindingStudy Test Performer" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mFNPYBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mFaDsBpQEeSd5OoVIuDNwg" name="Tumor FindingDetectionDelayAssociation" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mFaDsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nAl5kBpQEeSd5OoVIuDNwg" name="Tumor FindingComment" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nAl5kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nA0jEBpQEeSd5OoVIuDNwg" name="Tumor FindingDomain Assignment" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nA0jERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nBDMkBpQEeSd5OoVIuDNwg" name="Tumor FindingRelated Record" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nBDMkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nBSdIBpQEeSd5OoVIuDNwg" name="Tumor FindingSupplemental Value" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nBSdIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oO_mYBpQEeSd5OoVIuDNwg" name="Tumor FindingResult Category" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oO_mYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ResultCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVZwYBpQEeSd5OoVIuDNwg" name="Tumor FindingDeath Relationship" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVZwYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DeathRelationship) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-Yb8BpQEeSd5OoVIuDNwg" name="Tumor FindingdetectionDelayAssociationdetectionDelayClassCode" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-Yb8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-bfQBpQEeSd5OoVIuDNwg" name="Tumor FindingdetectionDelayAssociationdetectionDelayCode" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-bfQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-d7gBpQEeSd5OoVIuDNwg" name="Tumor FindingdetectionDelayAssociationdetectionDelayMoodCode" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-d7gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-g-0BpQEeSd5OoVIuDNwg" name="Tumor FindingdetectionDelayAssociationdetectionDelayValue" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-g-0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o-jbEBpQEeSd5OoVIuDNwg" name="Tumor FindingdetectionDelayAssociationTypeCode" constrainedElement="_1B8qwJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o-jbERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1B8qwprGEeGpk_Q1ImbEig">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_mEdogBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_mEePkhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mEePkhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mEdogBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mEePkxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mEePkBpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mEePkRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mEs5EBpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_mEs5ExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mEs5ExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mEs5EBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mEs5FBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mEs5ERpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mEs5EhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mFI98BpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_mFI98xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mFI98xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mFI98BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mFI99BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mFI98RpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mFI98hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nAvqkBpQEeSd5OoVIuDNwg" name="getComment" bodyCondition="_nAvqkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nAvqkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nAvqkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nAvqlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment))->asSequence()->any(true).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nAvqkRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nAvqkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nA-UEBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_nA-UExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nA-UExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nA-UEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nA-UFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nA-UERpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nA-UEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nBM9kBpQEeSd5OoVIuDNwg" name="getRelated Record" bodyCondition="_nBM9kxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nBM9kxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nBM9kBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nBNkoBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord))->asSequence()->any(true).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nBM9kRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nBM9khpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nBcOIBpQEeSd5OoVIuDNwg" name="getSupplemental Value" bodyCondition="_nBcOIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nBcOIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nBcOIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nBcOJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue))->asSequence()->any(true).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nBcOIRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nBcOIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oPJXYBpQEeSd5OoVIuDNwg" name="getResult Category" bodyCondition="_oPJXYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oPJXYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oPJXYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPJXZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ResultCategory))->asSequence()->any(true).oclAsType(sdtm::ResultCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oPJXYRpQEeSd5OoVIuDNwg" type="_2TrjZLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oPJXYhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oVjhYBpQEeSd5OoVIuDNwg" name="getDeath Relationship" bodyCondition="_oVkIchpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oVkIchpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oVjhYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVkIcxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DeathRelationship))->asSequence()->any(true).oclAsType(sdtm::DeathRelationship)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oVkIcBpQEeSd5OoVIuDNwg" type="_P_ecgLc0EeGbTfv2pIp07Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVkIcRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1gqAAJrGEeGpk_Q1ImbEig" name="Subject Pool">
      <ownedComment xmi:id="_1gqAAZrGEeGpk_Q1ImbEig">
        <body>The template supports the definition of a pool (group) that is created in order to allow findings that refer to a group of subjects rather than to a single one.  When a pool is defined, it may be the subject of the report.</body>
      </ownedComment>
      <ownedRule xmi:id="_lLrmYBpQEeSd5OoVIuDNwg" name="Subject PoolTemplateId" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lLsNcBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.94')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lL-hUBpQEeSd5OoVIuDNwg" name="Subject PoolMoodCode" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lL-hURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lMznwBpQEeSd5OoVIuDNwg" name="Subject PoolCodeP" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lMznwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lMYxABpQEeSd5OoVIuDNwg" name="Subject PoolCode" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lMYxARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'SPtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lNMpUBpQEeSd5OoVIuDNwg" name="Subject PoolId" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lNMpURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_omGe0BpQEeSd5OoVIuDNwg" name="Subject PoolParticipant" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_omHF4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->exists(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o--R0BpQEeSd5OoVIuDNwg" name="Subject PoolPoolParticipantSubjectMemberClassCode" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o--R0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject(isDefined('classCode') and classCode=vocab::RoleClassRoot::IDENT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_AuEBpQEeSd5OoVIuDNwg" name="Subject PoolPoolParticipantSubjectMemberId" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_AuERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->excluding(null).participantRole->excluding(null)->reject((id->isEmpty() or id->exists(element | element.isNullFlavorUndefined())) implies (id->size() = 1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_DxYBpQEeSd5OoVIuDNwg" name="Subject PoolPoolParticipantTypeCode" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_DxYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(typeCode=vocab::ParticipationType::RCT)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_GNoBpQEeSd5OoVIuDNwg" name="Subject PoolPoolParticipantParticipantRole" constrainedElement="_1gqAAJrGEeGpk_Q1ImbEig">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_GNoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->excluding(null)->reject(participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1gqAAprGEeGpk_Q1ImbEig">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_phIKAKaaEeGlCYcoCUv7-w" name="Non-human Subject Data Document Section">
      <ownedComment xmi:id="_7Uh6MKaaEeGlCYcoCUv7-w">
        <body>The document is divided into sections as defined by the user.  It is reccomended that each section contain a single type of the possible listed templates.  Comments, related records and supplemental qualifiers may be added to any domain.  The user is also free to create custom sections based on use of the included generic templates: Study Subject Finding, Study Subject Event, Study Subject Intervention.</body>
      </ownedComment>
      <ownedRule xmi:id="_lOV40BpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionTemplateId" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lOXG8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lOlwcBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionClassCode" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lOlwcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::DOCSECT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lO7usBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionMoodCode" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lO7usRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lPwOEBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionCodeP" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lPwOERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lPVXUBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionCode" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lPVXURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = 'NHStbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lQkGYBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionText" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lQkGYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lQ2aQBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionTitle" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lQ2aQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ldHUoBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionNon-human Subject Demographics" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ldHUoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(sdtm::NonhumanSubjectDemographics) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ldYaYBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionNon-human Disposition" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ldYaYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(sdtm::NonhumanDisposition) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ldnq8BpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionSubject Element" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ldnq8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(sdtm::SubjectElement) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ld2UcBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionNon-human Exposure" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ld2UcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(sdtm::NonhumanExposure) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_leTAYBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionBody Weight" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_leTAYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::BodyWeight) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_leiQ8BpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionBody Weight Gain" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_leiQ8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::BodyWeightGain) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lew6cBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionClinical Observation" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lew6cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::ClinicalObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_le_j8BpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionDeath Diagnosis" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_le_j8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::DeathDiagnosis) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lf6J8BpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionFood and Water Consumption" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lf6J8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::FoodandWaterConsumption) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lgIzcBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionNon-human Laboratory Test Result" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lgIzcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::NonhumanLaboratoryTestResult) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lgW14BpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionMacroscopic Finding" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lgXc8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::MacroscopicFinding) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lgmGcBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionMicroscopic Findings" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lgmGcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::MicroscopicFinding) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lg0I4BpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionOrgan Measurement" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lg0v8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::OrganMeasurement) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lhCyYBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionPalpable Mass" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lhCyYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::PalpableMass) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ljiFsBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionPharmacokinetic Concentration Finding" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ljiFsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::PharmacokineticConcentrationFinding) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ljwvMBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionSubject Characteristic" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ljwvMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::SubjectCharacteristic) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lj_YsBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionTumor Finding" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lj_YsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::TumorFinding) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lkOCMBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionVital Sign" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lkOCMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::VitalSign) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lkcrsBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionECG Test Result" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lkcrsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::ECGTestResult) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mQmAABpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionStudy Subject Event" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mQmAARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::StudySubjectEvent) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mQ1QkBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionStudy Subject Finding" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mQ1QkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::StudySubjectFinding) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mRD6EBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionStudy Subject Intervention" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mRD6ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(sdtm::StudySubjectIntervention) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m0bF0BpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionComment" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m0bF0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::Comment) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oabaUBpQEeSd5OoVIuDNwg" name="Non-human Subject Data Document SectionPharmacokinetic Parameter Finding" constrainedElement="_phIKAKaaEeGlCYcoCUv7-w">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oabaURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(sdtm::PharmacokineticParameterFinding) and entry.typeCode = vocab::x_ActRelationshipEntry::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_phIKAaaaEeGlCYcoCUv7-w">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_ldQekBpQEeSd5OoVIuDNwg" name="getNon-human Subject Demographics" bodyCondition="_ldQekxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ldQekxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ldQekBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ldQelBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::NonhumanSubjectDemographics))->asSequence()->any(true).oclAsType(sdtm::NonhumanSubjectDemographics)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ldQekRpQEeSd5OoVIuDNwg" type="_ohZpkKmTEeGQftsict2bpw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ldQekhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ldiLYBpQEeSd5OoVIuDNwg" name="getNon-human Disposition" bodyCondition="_ldiLYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ldiLYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ldiLYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ldiLZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::NonhumanDisposition))->asSequence()->any(true).oclAsType(sdtm::NonhumanDisposition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ldiLYRpQEeSd5OoVIuDNwg" type="_6IIqEJoZEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ldiLYhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ldw04BpQEeSd5OoVIuDNwg" name="getSubject Elements" bodyCondition="_ldw04xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ldw04xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ldw04BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ldw05BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::SubjectElement)).oclAsType(sdtm::SubjectElement)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ldw04RpQEeSd5OoVIuDNwg" type="_iOsK4H9NEeG03tOkpWkfyg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ldw04hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_leAFcBpQEeSd5OoVIuDNwg" name="getNon-human Exposures" bodyCondition="_leAFcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_leAFcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_leAFcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_leAFdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(sdtm::NonhumanExposure)).oclAsType(sdtm::NonhumanExposure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_leAFcRpQEeSd5OoVIuDNwg" type="_eh5t4JoZEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_leAFchpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lecxYBpQEeSd5OoVIuDNwg" name="getBody Weights" bodyCondition="_lecxYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lecxYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lecxYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lecxZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodyWeight)).oclAsType(sdtm::BodyWeight)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lecxYRpQEeSd5OoVIuDNwg" type="_Ue9XYJobEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lecxYhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lesB8BpQEeSd5OoVIuDNwg" name="getBody Weight Gains" bodyCondition="_lesB8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lesB8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lesB8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lesB9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodyWeightGain)).oclAsType(sdtm::BodyWeightGain)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lesB8RpQEeSd5OoVIuDNwg" type="_e9VawJobEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lesB8hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_le6rcBpQEeSd5OoVIuDNwg" name="getClinical Observations" bodyCondition="_le6rcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_le6rcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_le6rcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_le6rdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ClinicalObservation)).oclAsType(sdtm::ClinicalObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_le6rcRpQEeSd5OoVIuDNwg" type="_l-7OMJobEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_le6rchpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lfIt4BpQEeSd5OoVIuDNwg" name="getDeath Diagnosis" bodyCondition="_lfJU8hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lfJU8hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lfIt4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lfJU8xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DeathDiagnosis))->asSequence()->any(true).oclAsType(sdtm::DeathDiagnosis)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lfJU8BpQEeSd5OoVIuDNwg" type="_voyEYJobEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lfJU8RpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lgDT4BpQEeSd5OoVIuDNwg" name="getFood and Water Consumptions" bodyCondition="_lgD68hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lgD68hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lgDT4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lgD68xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FoodandWaterConsumption)).oclAsType(sdtm::FoodandWaterConsumption)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lgD68BpQEeSd5OoVIuDNwg" type="__eYEEJobEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lgD68RpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lgR9YBpQEeSd5OoVIuDNwg" name="getNon-human Laboratory Test Results" bodyCondition="_lgR9YxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lgR9YxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lgR9YBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lgR9ZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonhumanLaboratoryTestResult)).oclAsType(sdtm::NonhumanLaboratoryTestResult)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lgR9YRpQEeSd5OoVIuDNwg" type="_L1vSUI-oEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lgR9YhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lggm4BpQEeSd5OoVIuDNwg" name="getMacroscopic Findings" bodyCondition="_lggm4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lggm4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lggm4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lggm5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::MacroscopicFinding)).oclAsType(sdtm::MacroscopicFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lggm4RpQEeSd5OoVIuDNwg" type="_Lrb20JocEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lggm4hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lgvQYBpQEeSd5OoVIuDNwg" name="getMicroscopic Findingss" bodyCondition="_lgvQYxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lgvQYxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lgvQYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lgvQZBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::MicroscopicFinding)).oclAsType(sdtm::MicroscopicFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lgvQYRpQEeSd5OoVIuDNwg" type="_mxZXgJocEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lgvQYhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lg954BpQEeSd5OoVIuDNwg" name="getOrgan Measurements" bodyCondition="_lg954xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lg954xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lg954BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lg955BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::OrganMeasurement)).oclAsType(sdtm::OrganMeasurement)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lg954RpQEeSd5OoVIuDNwg" type="_0P_DkJocEeG78ZMLtGK0RQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lg954hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lhL8UBpQEeSd5OoVIuDNwg" name="getPalpable Masss" bodyCondition="_lhMjYhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lhMjYhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lhL8UBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lhMjYxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PalpableMass)).oclAsType(sdtm::PalpableMass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lhMjYBpQEeSd5OoVIuDNwg" type="_0rD0wJrGEeGpk_Q1ImbEig" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lhMjYRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ljrPoBpQEeSd5OoVIuDNwg" name="getPharmacokinetic Concentration Findings" bodyCondition="_ljr2sRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ljr2sRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ljrPoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ljr2shpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PharmacokineticConcentrationFinding)).oclAsType(sdtm::PharmacokineticConcentrationFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ljrPoRpQEeSd5OoVIuDNwg" type="_CwmU4JLsEeGM5Pa1LbomZA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ljr2sBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lj55IBpQEeSd5OoVIuDNwg" name="getSubject Characteristics" bodyCondition="_lj6gMhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lj6gMhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lj55IBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lj6gMxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubjectCharacteristic)).oclAsType(sdtm::SubjectCharacteristic)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lj6gMBpQEeSd5OoVIuDNwg" type="_KzX_4JB4EeGHg6ZmktWLJQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lj6gMRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lkIioBpQEeSd5OoVIuDNwg" name="getTumor Findings" bodyCondition="_lkJJsRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lkJJsRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lkIioBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lkJJshpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::TumorFinding)).oclAsType(sdtm::TumorFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lkIioRpQEeSd5OoVIuDNwg" type="_1B8qwJrGEeGpk_Q1ImbEig" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lkJJsBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lkXMIBpQEeSd5OoVIuDNwg" name="getVital Signs" bodyCondition="_lkXMIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lkXMIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lkXMIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lkXMJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::VitalSign)).oclAsType(sdtm::VitalSign)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lkXMIRpQEeSd5OoVIuDNwg" type="_pxvVsGSrEeGaWrlBtEAvSQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lkXMIhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_lkl1oBpQEeSd5OoVIuDNwg" name="getECG Test Results" bodyCondition="_lkl1oxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_lkl1oxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_lkl1oBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_lkl1pBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ECGTestResult)).oclAsType(sdtm::ECGTestResult)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_lkl1oRpQEeSd5OoVIuDNwg" type="_CPm5YIslEeGEXvbgIb1duQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_lkl1ohpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mQvxABpQEeSd5OoVIuDNwg" name="getStudy Subject Events" bodyCondition="_mQwYERpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mQwYERpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mQvxABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mQwYEhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudySubjectEvent)).oclAsType(sdtm::StudySubjectEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mQvxARpQEeSd5OoVIuDNwg" type="_sYRCoLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mQwYEBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mQ-agBpQEeSd5OoVIuDNwg" name="getStudy Subject Findings" bodyCondition="_mQ-agxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mQ-agxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mQ-agBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mQ_BkBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudySubjectFinding)).oclAsType(sdtm::StudySubjectFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mQ-agRpQEeSd5OoVIuDNwg" type="_2Tri4LZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mQ-aghpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mROSIBpQEeSd5OoVIuDNwg" name="getStudy Subject Interventions" bodyCondition="_mROSIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mROSIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mROSIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mROSJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(sdtm::StudySubjectIntervention)).oclAsType(sdtm::StudySubjectIntervention)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mROSIRpQEeSd5OoVIuDNwg" type="_YbytILZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mROSIhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m0kPwBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m0kPwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m0kPwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m0kPwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m0kPxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m0kPwRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m0kPwhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oalLUBpQEeSd5OoVIuDNwg" name="getPharmacokinetic Parameter Findings" bodyCondition="_oalyYRpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oalyYRpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oalLUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oalyYhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PharmacokineticParameterFinding)).oclAsType(sdtm::PharmacokineticParameterFinding)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oalLURpQEeSd5OoVIuDNwg" type="_olGlMJOXEeGM5Pa1LbomZA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oalyYBpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ohZpkKmTEeGQftsict2bpw" name="Non-human Subject Demographics">
      <ownedComment xmi:id="_ohZpkamTEeGQftsict2bpw">
        <body>The template is used to record demographic information for a non-human study subject.  The section includes that data which is not accommodated within the recordTarget structure.</body>
      </ownedComment>
      <ownedRule xmi:id="_lRVicBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsTemplateId" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lRWJgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.60')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lRlaEBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsClassCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lRlaERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lR6xQBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsMoodCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lR6xQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lSv3sBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsCodeP" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lSv3sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lSVA8BpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lSVA8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'DMGtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mQQo0BpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsStudy Arm" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mQQo0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->select(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::StudyArm) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)->size() = 2</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m0pIQBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsComment" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m0pIQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m03xwBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsDomain Assignment" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m03xwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m1GbQBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsRelated Record" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m1GbQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m1Vr0BpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsSupplemental Value" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m1Vr0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nFtDEBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsReference Period" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nFtDERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::ReferencePeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_w8ABpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsstrainAssociationsubjectStrainClassCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_w8ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_zYQBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsstrainAssociationsubjectStrainCodeP" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_zYQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_2bkBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsstrainAssociationsubjectStrainCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_2bkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'SStbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_430BpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsstrainAssociationsubjectStrainMoodCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_430RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_77IBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsstrainAssociationsubjectStrainValue" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_77IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_o_-XYBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsstrainAssociationsubjectStrainValueP" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_o_-XYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pABasBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsstrainAssociationsubjectStrainText" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pABasRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((text.oclIsUndefined() or text.isNullFlavorUndefined()) implies (not text.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAD28BpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsstrainAssociationTypeCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAD28RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAG6QBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsstrainAssociationSubjectStrain" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAG6QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAeGoBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsageAssociationSubjectAgeClassCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAeGoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAhJ8BpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsageAssociationSubjectAgeCodeP" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAhJ8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAjmMBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsageAssociationSubjectAgeCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAjmMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'C25150' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAmpgBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsageAssociationSubjectAgeMoodCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAmpgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pApFwBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsageAssociationSubjectAgeValue" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pApFwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::PQ))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAsJEBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsageAssociationTypeCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAsJERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pAulUBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsageAssociationSubjectAge" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pAulURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBG_0BpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsspeciesAssociationsubjectSpeciesClassCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBG_0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBJcEBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsspeciesAssociationsubjectSpeciesMoodCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBJcERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBMfYBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCodeP" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBMfYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBO7oBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBO7oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'SPCtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBR-8BpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValue" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBR-8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBUbMBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValueP" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBUbMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBW3cBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsspeciesAssociationTypeCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBXegBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBZ6wBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicsspeciesAssociationSubjectSpecies" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBZ6wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pBy8UBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicssetMembershipAssociationsetMembershipClassCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pBzjYBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(classCode=vocab::ActClassObservation::OBS)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pB1_oBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicssetMembershipAssociationsetMembershipCodeP" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pB1_oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pB4b4BpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicssetMembershipAssociationsetMembershipCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pB4b4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'TBD' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pB7fMBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicssetMembershipAssociationsetMembershipMoodCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pB7fMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pB-igBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicssetMembershipAssociationsetMembershipValue" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pB-igRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self..observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pCA-wBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicssetMembershipAssociationTypeCode" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pCA-wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(isDefined('typeCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pCECEBpQEeSd5OoVIuDNwg" name="Non-human Subject DemographicssetMembershipAssociationSetMembership" constrainedElement="_ohZpkKmTEeGQftsict2bpw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pCECERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ohZpkqmTEeGQftsict2bpw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_mQerQBpQEeSd5OoVIuDNwg" name="getStudy Arms" bodyCondition="_mQerQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mQerQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mQerQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mQerRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::StudyArm)).oclAsType(sdtm::StudyArm)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mQerQRpQEeSd5OoVIuDNwg" type="_NPsncGbuEeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mQerQhpQEeSd5OoVIuDNwg" value="2"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m0y5QBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m0y5QxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m0y5QxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m0y5QBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m0y5RBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m0y5QRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m0y5QhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m1BiwBpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m1BiwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m1BiwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m1BiwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m1BixBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m1BiwRpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m1BiwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m1QMQBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m1QMQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m1QMQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m1QMQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m1QzUBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m1QMQRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m1QMQhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m1e1wBpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m1e1wxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m1e1wxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m1e1wBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m1fc0BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m1e1wRpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m1e1whpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nF20EBpQEeSd5OoVIuDNwg" name="getReference Period" bodyCondition="_nF20ExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nF20ExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nF20EBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nF20FBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::ReferencePeriod))->asSequence()->any(true).oclAsType(sdtm::ReferencePeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nF20ERpQEeSd5OoVIuDNwg" type="_XrR40NW4EeGKmsh0mvGT9Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nF20EhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mZNiwLWAEeGLXdg8xIiGrA" name="Exclusion Reason">
      <ownedComment xmi:id="_mZNiwbWAEeGLXdg8xIiGrA">
        <body>A resusable structure that indicates the reason for excluding a reported value from calculations.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of event within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_lk27YBpQEeSd5OoVIuDNwg" name="Exclusion ReasonTemplateId" constrainedElement="_mZNiwLWAEeGLXdg8xIiGrA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lk4JgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_llKdYBpQEeSd5OoVIuDNwg" name="Exclusion ReasonMoodCode" constrainedElement="_mZNiwLWAEeGLXdg8xIiGrA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_llKdYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ll_j0BpQEeSd5OoVIuDNwg" name="Exclusion ReasonCodeP" constrainedElement="_mZNiwLWAEeGLXdg8xIiGrA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ll_j0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_llktEBpQEeSd5OoVIuDNwg" name="Exclusion ReasonCode" constrainedElement="_mZNiwLWAEeGLXdg8xIiGrA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_llktERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'EXCtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lmhIQBpQEeSd5OoVIuDNwg" name="Exclusion ReasonValue" constrainedElement="_mZNiwLWAEeGLXdg8xIiGrA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lmhIQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lm6w4BpQEeSd5OoVIuDNwg" name="Exclusion ReasonValueP" constrainedElement="_mZNiwLWAEeGLXdg8xIiGrA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lm6w4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mZNiwrWAEeGLXdg8xIiGrA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VqsWALWLEeGLXdg8xIiGrA" name="Mass Identification">
      <ownedComment xmi:id="_fp-poLWLEeGLXdg8xIiGrA">
        <body>The template is used to record a mass identifier such as MASS 1 or MASS A.   It is used when the mass was discovered during the in-life phase or during pathology and assigned a mass identifier. The mass identification should be unique within the subject, regardless of mass location.</body>
      </ownedComment>
      <ownedRule xmi:id="_loOYcBpQEeSd5OoVIuDNwg" name="Mass IdentificationTemplateId" constrainedElement="_VqsWALWLEeGLXdg8xIiGrA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_loO_gBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.51')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lofeMBpQEeSd5OoVIuDNwg" name="Mass IdentificationTypeCode" constrainedElement="_VqsWALWLEeGLXdg8xIiGrA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lofeMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.typeCode=vocab::ParticipationType::SBJ</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lpVywBpQEeSd5OoVIuDNwg" name="Mass IdentificationParticipantRole" constrainedElement="_VqsWALWLEeGLXdg8xIiGrA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lpVywRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participantRole->one(participantRole : cda::ParticipantRole | not participantRole.oclIsUndefined() and participantRole.oclIsKindOf(cda::ParticipantRole))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VqsWAbWLEeGLXdg8xIiGrA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_51DLwEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YbytILZmEeGvx_6yr-0T9g" name="Study Subject Intervention">
      <ownedComment xmi:id="_YbytIbZmEeGvx_6yr-0T9g">
        <body>The template captures investigational, therapeutic and other treatments that are administered to the subject (with some actual or expected physiological effect) either as specified by the study protocol (e.g., &quot;exposure&quot;), coincident with the study assessment period (e.g., &quot;concomitant medications&quot;), or other substances self-administered by the subject (such as alcohol, tobacco, or caffeine).   It is included to make allowances for the creation of intervention based domains that are not currently modeled within SEND or SDTM.   If a custom domain is added, an appropriate domain designation must be assigned.</body>
      </ownedComment>
      <ownedRule xmi:id="_lp-r8BpQEeSd5OoVIuDNwg" name="Study Subject InterventionTemplateId" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lp_6EBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.87')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lqPKoBpQEeSd5OoVIuDNwg" name="Study Subject InterventionClassCode" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lqPKoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClass::SBADM</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lqlI4BpQEeSd5OoVIuDNwg" name="Study Subject InterventionMoodCode" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lqlI4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentSubstanceMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lq4q4BpQEeSd5OoVIuDNwg" name="Study Subject InterventionId" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lq5R8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lrS6kBpQEeSd5OoVIuDNwg" name="Study Subject InterventionStatusCode" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lrS6kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lrr8IBpQEeSd5OoVIuDNwg" name="Study Subject InterventionText" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lrsjMBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lr-3EBpQEeSd5OoVIuDNwg" name="Study Subject InterventionEffectiveTime" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lr-3ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (not self.effectiveTime->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lsRyABpQEeSd5OoVIuDNwg" name="Study Subject InterventionDoseQuantity" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lsRyARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ltHfgBpQEeSd5OoVIuDNwg" name="Study Subject InterventionRouteCodeP" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ltHfgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lssowBpQEeSd5OoVIuDNwg" name="Study Subject InterventionRouteCode" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lssowRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lti9UBpQEeSd5OoVIuDNwg" name="Study Subject InterventionMaxDoseQuantity" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lti9URpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.maxDoseQuantity.oclIsUndefined() or self.maxDoseQuantity.isNullFlavorUndefined()) implies (not self.maxDoseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lt90EBpQEeSd5OoVIuDNwg" name="Study Subject InterventionApproachSiteCode" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lt90ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_luXcsBpQEeSd5OoVIuDNwg" name="Study Subject InterventionApproachSiteCodeP" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_luXcsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | element.oclIsTypeOf(datatypes::CE)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mM39oBpQEeSd5OoVIuDNwg" name="Study Subject InterventionGroup Identifier" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mM39oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mNGnIBpQEeSd5OoVIuDNwg" name="Study Subject InterventionStudy Epoch" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mNGnIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::StudyEpoch) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mNTbcBpQEeSd5OoVIuDNwg" name="Study Subject InterventionElementOrderAssociation" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mNTbcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mNgPwBpQEeSd5OoVIuDNwg" name="Study Subject InterventionTiming Reference" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mNgPwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::TimingReference) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mNu5QBpQEeSd5OoVIuDNwg" name="Study Subject InterventionStudy Day Period" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mNu5QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mPfz0BpQEeSd5OoVIuDNwg" name="Study Subject InterventionPre-Specified Event" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mPfz0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PreSpecifiedEvent) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mPudUBpQEeSd5OoVIuDNwg" name="Study Subject InterventionData Collection" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mPudURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mP9t4BpQEeSd5OoVIuDNwg" name="Study Subject InterventionNon Performance Reason" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mP9t4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m86TcBpQEeSd5OoVIuDNwg" name="Study Subject InterventionComment" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m86TcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m9I88BpQEeSd5OoVIuDNwg" name="Study Subject InterventionDomain Assignment" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m9I88RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m9XmcBpQEeSd5OoVIuDNwg" name="Study Subject InterventionRelated Record" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m9XmcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m9mP8BpQEeSd5OoVIuDNwg" name="Study Subject InterventionSupplemental Value" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m9mP8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nQQGMBpQEeSd5OoVIuDNwg" name="Study Subject InterventionIndication" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nQQtQBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Indication) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nSxOsBpQEeSd5OoVIuDNwg" name="Study Subject InterventionIntended Regimen" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nSxOsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::IntendedRegimen) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nVfLgBpQEeSd5OoVIuDNwg" name="Study Subject InterventionDose Adjustment Reason" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nVfLgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DoseAdjustmentReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n3DngBpQEeSd5OoVIuDNwg" name="Study Subject InterventionCategory" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n3DngRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEFW4BpQEeSd5OoVIuDNwg" name="Study Subject InterventionSub-Category" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEFW4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_okiYkBpQEeSd5OoVIuDNwg" name="Study Subject InterventionFinding About" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oki_oBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_orCpMBpQEeSd5OoVIuDNwg" name="Study Subject InterventionEvent Duration" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_orCpMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventDuration) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_orgjQBpQEeSd5OoVIuDNwg" name="Study Subject InterventionConsumable Material" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_orgjQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(sdtm::ConsumableMaterial))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDHyABpQEeSd5OoVIuDNwg" name="Study Subject InterventionelementOrderAssociationelementOrderClassCode" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDHyARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDKOQBpQEeSd5OoVIuDNwg" name="Study Subject InterventionelementOrderAssociationelementOrderCodeP" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDK1UBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDNRkBpQEeSd5OoVIuDNwg" name="Study Subject InterventionelementOrderAssociationelementOrderCode" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDNRkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'ELOtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDPt0BpQEeSd5OoVIuDNwg" name="Study Subject InterventionelementOrderAssociationelementOrderMoodCode" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDPt0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDSxIBpQEeSd5OoVIuDNwg" name="Study Subject InterventionelementOrderAssociationelementOrderValue" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDSxIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->forAll(element | element.oclIsTypeOf(datatypes::INT))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDV0cBpQEeSd5OoVIuDNwg" name="Study Subject InterventionelementOrderAssociationTypeCode" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDV0cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pDYQsBpQEeSd5OoVIuDNwg" name="Study Subject InterventionelementOrderAssociationElementOrder" constrainedElement="_YbytILZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pDYQsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YbytIrZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_mNBHkBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_mNBHkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mNBHkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mNBHkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mNBHlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mNBHkRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNBHkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mNPxEBpQEeSd5OoVIuDNwg" name="getStudy Epoch" bodyCondition="_mNPxExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mNPxExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mNPxEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mNQYIBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::StudyEpoch))->asSequence()->any(true).oclAsType(sdtm::StudyEpoch)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mNPxERpQEeSd5OoVIuDNwg" type="_HJE2EH5pEeGbfrTsVlSE3Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNPxEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mNqAwBpQEeSd5OoVIuDNwg" name="getTiming Reference" bodyCondition="_mNqAwxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mNqAwxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mNqAwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mNqAxBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::TimingReference))->asSequence()->any(true).oclAsType(sdtm::TimingReference)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mNqAwRpQEeSd5OoVIuDNwg" type="_IWO1oGiEEeG7jNHx5OkAWw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mNqAwhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mN4qQBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_mN4qQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mN4qQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mN4qQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mN4qRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mN4qQRpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mN4qQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mPpk0BpQEeSd5OoVIuDNwg" name="getPre-Specified Event" bodyCondition="_mPpk0xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mPpk0xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mPpk0BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mPpk1BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PreSpecifiedEvent))->asSequence()->any(true).oclAsType(sdtm::PreSpecifiedEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mPpk0RpQEeSd5OoVIuDNwg" type="__G5heXIJEeGL-K1S1E9LrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mPpk0hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mP4OUBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_mP4OUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mP4OUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mP4OUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mP4OVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mP4OURpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mP4OUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mQHe4BpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_mQHe4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mQHe4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mQHe4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mQHe5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mQHe4RpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mQHe4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m9EEcBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m9EEcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m9EEcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m9EEcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m9EEdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m9EEcRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m9EEchpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m9St8BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m9St8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m9St8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m9St8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m9St9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m9St8RpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m9St8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m9hXcBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m9hXcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m9hXcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m9hXcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m9hXdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m9hXcRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m9hXchpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m9vZ4BpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m9wA8hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m9wA8hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m9vZ4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m9wA8xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m9wA8BpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m9wA8RpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nQZ3MBpQEeSd5OoVIuDNwg" name="getIndication" bodyCondition="_nQaeQBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nQaeQBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nQZ3MBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nQaeQRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Indication))->asSequence()->any(true).oclAsType(sdtm::Indication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nQZ3MRpQEeSd5OoVIuDNwg" type="_zDVFEHINEeGL-K1S1E9LrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nQZ3MhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nS6_sBpQEeSd5OoVIuDNwg" name="getIntended Regimen" bodyCondition="_nS6_sxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nS6_sxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nS6_sBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nS6_tBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::IntendedRegimen))->asSequence()->any(true).oclAsType(sdtm::IntendedRegimen)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nS6_sRpQEeSd5OoVIuDNwg" type="_YbytjLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nS6_shpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nVo8gBpQEeSd5OoVIuDNwg" name="getDose Adjustment Reason" bodyCondition="_nVo8gxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nVo8gxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nVo8gBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nVpjkBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DoseAdjustmentReason))->asSequence()->any(true).oclAsType(sdtm::DoseAdjustmentReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nVo8gRpQEeSd5OoVIuDNwg" type="_YbytoLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nVo8ghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n3NYgBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n3N_khpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n3N_khpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n3NYgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n3N_kxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n3N_kBpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n3N_kRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oEQ9EBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oERkIBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oERkIBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oEQ9EBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oERkIRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEQ9ERpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEQ9EhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_okt-wBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_okt-wxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_okt-wxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_okt-wBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_okt-xBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_okt-wRpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_okt-whpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_orNBQBpQEeSd5OoVIuDNwg" name="getEvent Duration" bodyCondition="_orNBQxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_orNBQxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_orNBQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_orNBRBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventDuration))->asSequence()->any(true).oclAsType(sdtm::EventDuration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_orNBQRpQEeSd5OoVIuDNwg" type="_-HQWMPj8EeG7pMUQbTahtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_orNBQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRCoLZmEeGvx_6yr-0T9g" name="Study Subject Event">
      <ownedComment xmi:id="_sYRCobZmEeGvx_6yr-0T9g">
        <body>The template captures planned protocol milestones such as randomization and study completion, and occurrences, conditions, or incidents independent of planned study evaluations occurring during the trial (e.g., adverse events) or prior to the trial (e.g., medical history).  It is included to make allowances for the creation of event based domains that are not currently modeled within the SEND or SDTM implementation guides.  If a custom domain is added, an appropriate domain designation must be assigned.</body>
      </ownedComment>
      <ownedRule xmi:id="_lxHOsBpQEeSd5OoVIuDNwg" name="Study Subject EventTemplateId" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lxH1wBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.85')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lxaJoBpQEeSd5OoVIuDNwg" name="Study Subject EventMoodCode" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lxaJoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lxuSsBpQEeSd5OoVIuDNwg" name="Study Subject EventId" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lxuSsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lyiyEBpQEeSd5OoVIuDNwg" name="Study Subject EventCodeP" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lyiyERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lyJJcBpQEeSd5OoVIuDNwg" name="Study Subject EventCode" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lyJJcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C78802' or value.code = 'C78800' or value.code = '78801' or value.code = '78727' or value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ly9o0BpQEeSd5OoVIuDNwg" name="Study Subject EventEffectiveTime" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ly9o0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lzX4gBpQEeSd5OoVIuDNwg" name="Study Subject EventStatusCode" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lzX4gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_lzw6EBpQEeSd5OoVIuDNwg" name="Study Subject EventValue" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_lzw6ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l0mAgBpQEeSd5OoVIuDNwg" name="Study Subject EventTargetSiteCodeP" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l0mAgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l0Lw0BpQEeSd5OoVIuDNwg" name="Study Subject EventTargetSiteCode" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l0Lw0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mKNrMBpQEeSd5OoVIuDNwg" name="Study Subject EventGroup Identifier" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mKNrMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mKq-MBpQEeSd5OoVIuDNwg" name="Study Subject EventEvent Severity" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mKq-MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventorFindingSeverity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mLW6sBpQEeSd5OoVIuDNwg" name="Study Subject EventPre-Specified Event" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mLW6sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PreSpecifiedEvent) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mLmLQBpQEeSd5OoVIuDNwg" name="Study Subject EventStudy Day Period" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mLmLQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyDayPeriod) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mPQjQBpQEeSd5OoVIuDNwg" name="Study Subject EventBody System or Organ Class" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mPQjQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::BodySystemorOrganClass) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m7FugBpQEeSd5OoVIuDNwg" name="Study Subject EventComment" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7FugRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m7Tw8BpQEeSd5OoVIuDNwg" name="Study Subject EventDomain Assignment" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7UYABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m7iacBpQEeSd5OoVIuDNwg" name="Study Subject EventRelated Record" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7jBgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m7xD8BpQEeSd5OoVIuDNwg" name="Study Subject EventSupplemental Value" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7xD8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nWLvEBpQEeSd5OoVIuDNwg" name="Study Subject EventData Collection" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nWLvERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::DataCollection) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nWaYkBpQEeSd5OoVIuDNwg" name="Study Subject EventNon Performance Reason" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nWa_oBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nbXKABpQEeSd5OoVIuDNwg" name="Study Subject EventSerious Event" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nbXKARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SeriousEvent) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_negkoBpQEeSd5OoVIuDNwg" name="Study Subject EventStudy Treatment Action Taken" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_negkoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyTreatmentActionTaken) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nhAfABpQEeSd5OoVIuDNwg" name="Study Subject EventOther Treatment Action Taken" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nhAfARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::OtherTreatmentActionTaken) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nkKgsBpQEeSd5OoVIuDNwg" name="Study Subject EventStudy Treatment Causality" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nkKgsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::StudyTreatmentCausality) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nmrCIBpQEeSd5OoVIuDNwg" name="Study Subject EventNon-Study Treatment Relationship" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nmrCIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonStudyTreatmentRelationship) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_np1q4BpQEeSd5OoVIuDNwg" name="Study Subject EventEvent Pattern" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_np1q4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventPattern) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ns_skBpQEeSd5OoVIuDNwg" name="Study Subject EventEvent Outcome" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ns_skRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventOutcome) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nvjRUBpQEeSd5OoVIuDNwg" name="Study Subject EventConcomitant Treatment" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nvjRURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::ConcomitantTreatment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nzGUkBpQEeSd5OoVIuDNwg" name="Study Subject EventToxicity" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzG7oBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Toxicity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n2lGYBpQEeSd5OoVIuDNwg" name="Study Subject EventCategory" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n2ltcBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oEXDsBpQEeSd5OoVIuDNwg" name="Study Subject EventSub-Category" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEXDsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_okDQYBpQEeSd5OoVIuDNwg" name="Study Subject EventFinding About" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_okDQYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oqyxkBpQEeSd5OoVIuDNwg" name="Study Subject EventEvent Duration" constrainedElement="_sYRCoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oqyxkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventDuration) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRCqrZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_mKW1IBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_mKW1IxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mKW1IxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mKW1IBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mKW1JBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mKW1IRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mKW1IhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mK0IIBpQEeSd5OoVIuDNwg" name="getEvent Severity" bodyCondition="_mK0vMhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mK0vMhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mK0IIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mK0vMxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventorFindingSeverity))->asSequence()->any(true).oclAsType(sdtm::EventorFindingSeverity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mK0vMBpQEeSd5OoVIuDNwg" type="_nrFiEGoYEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mK0vMRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mLgrsBpQEeSd5OoVIuDNwg" name="getPre-Specified Event" bodyCondition="_mLgrsxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mLgrsxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mLgrsBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mLgrtBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PreSpecifiedEvent))->asSequence()->any(true).oclAsType(sdtm::PreSpecifiedEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mLgrsRpQEeSd5OoVIuDNwg" type="__G5heXIJEeGL-K1S1E9LrQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLgrshpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mLvVMBpQEeSd5OoVIuDNwg" name="getStudy Day Period" bodyCondition="_mLvVMxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mLvVMxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mLvVMBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mLvVNBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyDayPeriod))->asSequence()->any(true).oclAsType(sdtm::StudyDayPeriod)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mLvVMRpQEeSd5OoVIuDNwg" type="_1TzacJk_EeGGPbk7a3RIVg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mLvVMhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mPaUQBpQEeSd5OoVIuDNwg" name="getBody System or Organ Class" bodyCondition="_mPa7UBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mPa7UBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mPaUQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mPa7URpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodySystemorOrganClass))->asSequence()->any(true).oclAsType(sdtm::BodySystemorOrganClass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mPaUQRpQEeSd5OoVIuDNwg" type="_QmoEwGoUEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mPaUQhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m7O4cBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m7O4cxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m7O4cxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m7O4cBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7PfgBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m7O4cRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m7O4chpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m7dh8BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m7dh8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m7dh8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m7dh8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7dh9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m7dh8RpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m7dh8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m7sLcBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m7sLcxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m7sLcxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m7sLcBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7sLdBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m7sLcRpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m7sLchpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m7608BpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m7608xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m7608xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m7608BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7609BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m7608RpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m7608hpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nWVgEBpQEeSd5OoVIuDNwg" name="getData Collection" bodyCondition="_nWVgExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nWVgExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nWVgEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nWVgFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::DataCollection))->asSequence()->any(true).oclAsType(sdtm::DataCollection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nWVgERpQEeSd5OoVIuDNwg" type="_YOwMEIjGEeGwjb3wu_tBLA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nWVgEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nWkJkBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_nWkJkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nWkJkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nWkJkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nWkJlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nWkJkRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nWkJkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nbg7ABpQEeSd5OoVIuDNwg" name="getSerious Event" bodyCondition="_nbg7AxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nbg7AxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nbg7ABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nbg7BBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SeriousEvent))->asSequence()->any(true).oclAsType(sdtm::SeriousEvent)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nbg7ARpQEeSd5OoVIuDNwg" type="_sYRDArZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nbg7AhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_neqVoBpQEeSd5OoVIuDNwg" name="getStudy Treatment Action Taken" bodyCondition="_neqVoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_neqVoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_neqVoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_neqVpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyTreatmentActionTaken))->asSequence()->any(true).oclAsType(sdtm::StudyTreatmentActionTaken)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_neqVoRpQEeSd5OoVIuDNwg" type="_sYRDL7ZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_neqVohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nhKQABpQEeSd5OoVIuDNwg" name="getOther Treatment Action Taken" bodyCondition="_nhKQAxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nhKQAxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nhKQABpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nhKQBBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::OtherTreatmentActionTaken))->asSequence()->any(true).oclAsType(sdtm::OtherTreatmentActionTaken)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nhKQARpQEeSd5OoVIuDNwg" type="_sYRDRbZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nhKQAhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nkTqoBpQEeSd5OoVIuDNwg" name="getStudy Treatment Causality" bodyCondition="_nkURshpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nkURshpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nkTqoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nkURsxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::StudyTreatmentCausality))->asSequence()->any(true).oclAsType(sdtm::StudyTreatmentCausality)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nkURsBpQEeSd5OoVIuDNwg" type="_sYRDXLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nkURsRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nm0zIBpQEeSd5OoVIuDNwg" name="getNon-Study Treatment Relationship" bodyCondition="_nm0zIxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nm0zIxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nm0zIBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nm0zJBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonStudyTreatmentRelationship))->asSequence()->any(true).oclAsType(sdtm::NonStudyTreatmentRelationship)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nm0zIRpQEeSd5OoVIuDNwg" type="_sYRDc7ZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nm0zIhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_np_b4BpQEeSd5OoVIuDNwg" name="getEvent Pattern" bodyCondition="_np_b4xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_np_b4xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_np_b4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_np_b5BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventPattern))->asSequence()->any(true).oclAsType(sdtm::EventPattern)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_np_b4RpQEeSd5OoVIuDNwg" type="_sYRDirZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_np_b4hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ntJdkBpQEeSd5OoVIuDNwg" name="getEvent Outcome" bodyCondition="_ntJdkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_ntJdkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_ntJdkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ntJdlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventOutcome))->asSequence()->any(true).oclAsType(sdtm::EventOutcome)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ntJdkRpQEeSd5OoVIuDNwg" type="_sYRDobZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ntJdkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nvtCUBpQEeSd5OoVIuDNwg" name="getConcomitant Treatment" bodyCondition="_nvtCUxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nvtCUxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nvtCUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nvtCVBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::ConcomitantTreatment))->asSequence()->any(true).oclAsType(sdtm::ConcomitantTreatment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nvtCURpQEeSd5OoVIuDNwg" type="_sYRDuLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nvtCUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_nzQsoBpQEeSd5OoVIuDNwg" name="getToxicity" bodyCondition="_nzQsoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_nzQsoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_nzQsoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_nzQspBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Toxicity))->asSequence()->any(true).oclAsType(sdtm::Toxicity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_nzQsoRpQEeSd5OoVIuDNwg" type="_sYRDz7ZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_nzQsohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n2vecBpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n2vecxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n2vecxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n2vecBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n2vedBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n2vecRpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n2vechpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oEg0sBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oEg0sxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oEg0sxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oEg0sBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEg0tBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEg0sRpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEg0shpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_okNBYBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_okNochpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_okNochpQEeSd5OoVIuDNwg" name="body" constrainedElement="_okNBYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_okNocxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_okNocBpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_okNocRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oq9JoBpQEeSd5OoVIuDNwg" name="getEvent Duration" bodyCondition="_oq9JoxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oq9JoxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oq9JoBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oq9JpBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventDuration))->asSequence()->any(true).oclAsType(sdtm::EventDuration)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oq9JoRpQEeSd5OoVIuDNwg" type="_-HQWMPj8EeG7pMUQbTahtA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oq9JohpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2Tri4LZmEeGvx_6yr-0T9g" name="Study Subject Finding">
      <ownedComment xmi:id="_2Tri4bZmEeGvx_6yr-0T9g">
        <body>The template captures the observations resulting from planned evaluations to address specific tests or questions such as laboratory tests, ECG testing, and questions listed on questionnaires.   It is included to make allowances for the creation of finding based domains that are not currently modeled within the SEND or SDTM implementation guides.   If a custom domain is added, an appropriate domain designation must be assigned.  There is no set of valid codes defined, since the applicable value set is the sum of the value sets for all possible finding domains.</body>
      </ownedComment>
      <ownedRule xmi:id="_l1YqsBpQEeSd5OoVIuDNwg" name="Study Subject FindingTemplateId" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l1ZRwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.86')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l1oiUBpQEeSd5OoVIuDNwg" name="Study Subject FindingClassCode" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l1oiURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l195gBpQEeSd5OoVIuDNwg" name="Study Subject FindingMoodCode" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l1-gkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l2SpoBpQEeSd5OoVIuDNwg" name="Study Subject FindingId" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l2SpoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l2k9gBpQEeSd5OoVIuDNwg" name="Study Subject FindingCode" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l2k9gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l23RYBpQEeSd5OoVIuDNwg" name="Study Subject FindingText" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l23RYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l3Q6ABpQEeSd5OoVIuDNwg" name="Study Subject FindingStatusCode" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l3Q6ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l3p7kBpQEeSd5OoVIuDNwg" name="Study Subject FindingValue" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l3p7kRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l4ea8BpQEeSd5OoVIuDNwg" name="Study Subject FindingMethodCodeP" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l4ea8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (not self.methodCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l4ELQBpQEeSd5OoVIuDNwg" name="Study Subject FindingMethodCode" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l4ELQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l5crUBpQEeSd5OoVIuDNwg" name="Study Subject FindingInterpretationCodeP" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l5crURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (not self.interpretationCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l5CboBpQEeSd5OoVIuDNwg" name="Study Subject FindingInterpretationCode" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l5CboRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode->isEmpty() or self.interpretationCode->exists(element | element.isNullFlavorUndefined())) implies (self.interpretationCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C78802' or value.code = 'C78800' or value.code = '78801' or value.code = '78727' or value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l6d_ABpQEeSd5OoVIuDNwg" name="Study Subject FindingTargetSiteCodeP" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l6d_ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.targetSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_l6EWYBpQEeSd5OoVIuDNwg" name="Study Subject FindingTargetSiteCode" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_l6E9cBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mL0NsBpQEeSd5OoVIuDNwg" name="Study Subject FindingNon Performance Reason" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mL00wBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::NonPerformanceReason) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mMCQIBpQEeSd5OoVIuDNwg" name="Study Subject FindingStudy Test Organization" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mMCQIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyTestOrganization))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mMQSkBpQEeSd5OoVIuDNwg" name="Study Subject FindingGroup Identifier" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mMQ5oBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::GroupIdentifier) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mMfjIBpQEeSd5OoVIuDNwg" name="Study Subject FindingSpecimen Information" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mMfjIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.procedure.oclIsUndefined() and entryRelationship.procedure.oclIsKindOf(sdtm::SpecimenInformation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m7_tcBpQEeSd5OoVIuDNwg" name="Study Subject FindingComment" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m7_tcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m8OW8BpQEeSd5OoVIuDNwg" name="Study Subject FindingDomain Assignment" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m8OW8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DomainAssignment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m8dAcBpQEeSd5OoVIuDNwg" name="Study Subject FindingRelated Record" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m8dAcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(sdtm::RelatedRecord) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_m8rp8BpQEeSd5OoVIuDNwg" name="Study Subject FindingSupplemental Value" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_m8rp8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SupplementalValue) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n0DW0BpQEeSd5OoVIuDNwg" name="Study Subject FindingToxicity" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n0DW0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Toxicity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n20W8BpQEeSd5OoVIuDNwg" name="Study Subject FindingCategory" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n20W8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::Category) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oD2tYBpQEeSd5OoVIuDNwg" name="Study Subject FindingSub-Category" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oD2tYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::SubCategory) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oH_mgBpQEeSd5OoVIuDNwg" name="Study Subject FindingPosition of Subject" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oH_mgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::PositionofSubject) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oIt_QBpQEeSd5OoVIuDNwg" name="Study Subject FindingBody System or Organ Class" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIt_QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::BodySystemorOrganClass) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oRTTgBpQEeSd5OoVIuDNwg" name="Study Subject FindingFasting Status" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oRTTgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FastingStatus) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oSN5gBpQEeSd5OoVIuDNwg" name="Study Subject FindingStudy Finding Evaluator" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSN5gRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oSb78BpQEeSd5OoVIuDNwg" name="Study Subject FindingEvent or Finding Severity" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSb78RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::EventorFindingSeverity) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oVJ4wBpQEeSd5OoVIuDNwg" name="Study Subject FindingDeath Relationship" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVJ4wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::DeathRelationship) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oX-jQBpQEeSd5OoVIuDNwg" name="Study Subject FindingAssay Quantitation" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oX-jQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::AssayQuantitation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_okTIABpQEeSd5OoVIuDNwg" name="Study Subject FindingFinding About" constrainedElement="_2Tri4LZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_okTIARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(sdtm::FindingAbout) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2Tri4rZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_mL9-sBpQEeSd5OoVIuDNwg" name="getNon Performance Reason" bodyCondition="_mL9-sxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mL9-sxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mL9-sBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mL9-tBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::NonPerformanceReason))->asSequence()->any(true).oclAsType(sdtm::NonPerformanceReason)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mL9-sRpQEeSd5OoVIuDNwg" type="_xvcSQGb_EeGjiJmz4TzZew" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mL9-shpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mMaDkBpQEeSd5OoVIuDNwg" name="getGroup Identifier" bodyCondition="_mMaDkxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mMaDkxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mMaDkBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mMaDlBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::GroupIdentifier))->asSequence()->any(true).oclAsType(sdtm::GroupIdentifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mMaDkRpQEeSd5OoVIuDNwg" type="_8Ae3QGn_EeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMaDkhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_mMotEBpQEeSd5OoVIuDNwg" name="getSpecimen Information" bodyCondition="_mMpUIBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_mMpUIBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_mMotEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_mMpUIRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(sdtm::SpecimenInformation))->asSequence()->any(true).oclAsType(sdtm::SpecimenInformation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_mMotERpQEeSd5OoVIuDNwg" type="_mLJN4I-qEeGSf7-C4p-dMA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_mMotEhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m8JecBpQEeSd5OoVIuDNwg" name="getComments" bodyCondition="_m8JecxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m8JecxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m8JecBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m8JedBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Comment)).oclAsType(sdtm::Comment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m8JecRpQEeSd5OoVIuDNwg" type="_FydD4NKIEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m8JechpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m8YH8BpQEeSd5OoVIuDNwg" name="getDomain Assignment" bodyCondition="_m8YH8xpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m8YH8xpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m8YH8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m8YH9BpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DomainAssignment))->asSequence()->any(true).oclAsType(sdtm::DomainAssignment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m8YH8RpQEeSd5OoVIuDNwg" type="_ys8oENKGEeGO8bQEpB8bpQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m8YH8hpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m8mKYBpQEeSd5OoVIuDNwg" name="getRelated Records" bodyCondition="_m8mxchpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m8mxchpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m8mKYBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m8mxcxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(sdtm::RelatedRecord)).oclAsType(sdtm::RelatedRecord)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m8mxcBpQEeSd5OoVIuDNwg" type="_iMrPgNKNEeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m8mxcRpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_m80z4BpQEeSd5OoVIuDNwg" name="getSupplemental Values" bodyCondition="_m81a8hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_m81a8hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_m80z4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_m81a8xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SupplementalValue)).oclAsType(sdtm::SupplementalValue)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_m81a8BpQEeSd5OoVIuDNwg" type="_MltKQNKREeGX6v8HTY_PeQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_m81a8RpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n0MgwBpQEeSd5OoVIuDNwg" name="getToxicity" bodyCondition="_n0NH0RpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n0NH0RpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n0MgwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n0NH0hpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Toxicity))->asSequence()->any(true).oclAsType(sdtm::Toxicity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n0MgwRpQEeSd5OoVIuDNwg" type="_sYRDz7ZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n0NH0BpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_n2-H8BpQEeSd5OoVIuDNwg" name="getCategory" bodyCondition="_n2-vAhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_n2-vAhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_n2-H8BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_n2-vAxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::Category))->asSequence()->any(true).oclAsType(sdtm::Category)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_n2-vABpQEeSd5OoVIuDNwg" type="_sYRD5rZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n2-vARpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oD_3UBpQEeSd5OoVIuDNwg" name="getSub-Category" bodyCondition="_oEAeYhpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oEAeYhpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oD_3UBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oEAeYxpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::SubCategory))->asSequence()->any(true).oclAsType(sdtm::SubCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oEAeYBpQEeSd5OoVIuDNwg" type="_EtyC8Nf7EeGEv9qe5Ch_sQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oEAeYRpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oIJXgBpQEeSd5OoVIuDNwg" name="getPosition of Subject" bodyCondition="_oIJXgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oIJXgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oIJXgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oIJXhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::PositionofSubject))->asSequence()->any(true).oclAsType(sdtm::PositionofSubject)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oIJXgRpQEeSd5OoVIuDNwg" type="_FhxtaYsoEeGEXvbgIb1duQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oIJXghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oI4XUBpQEeSd5OoVIuDNwg" name="getBody System or Organ Class" bodyCondition="_oI4-YBpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oI4-YBpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oI4XUBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oI4-YRpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::BodySystemorOrganClass))->asSequence()->any(true).oclAsType(sdtm::BodySystemorOrganClass)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oI4XURpQEeSd5OoVIuDNwg" type="_QmoEwGoUEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oI4XUhpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oRdEgBpQEeSd5OoVIuDNwg" name="getFasting Status" bodyCondition="_oRdEgxpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oRdEgxpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oRdEgBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oRdEhBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FastingStatus))->asSequence()->any(true).oclAsType(sdtm::FastingStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oRdEgRpQEeSd5OoVIuDNwg" type="_2TrjOLZmEeGvx_6yr-0T9g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oRdEghpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oSlF4BpQEeSd5OoVIuDNwg" name="getEvent or Finding Severity" bodyCondition="_oSls8hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oSls8hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oSlF4BpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSls8xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::EventorFindingSeverity))->asSequence()->any(true).oclAsType(sdtm::EventorFindingSeverity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oSls8BpQEeSd5OoVIuDNwg" type="_nrFiEGoYEeGH0KSwdtr7gA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oSls8RpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oVTpwBpQEeSd5OoVIuDNwg" name="getDeath Relationship" bodyCondition="_oVUQ0hpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oVUQ0hpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oVTpwBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVUQ0xpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::DeathRelationship))->asSequence()->any(true).oclAsType(sdtm::DeathRelationship)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oVUQ0BpQEeSd5OoVIuDNwg" type="_P_ecgLc0EeGbTfv2pIp07Q" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oVUQ0RpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_oYIUQBpQEeSd5OoVIuDNwg" name="getAssay Quantitation" bodyCondition="_oYI7URpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_oYI7URpQEeSd5OoVIuDNwg" name="body" constrainedElement="_oYIUQBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_oYI7UhpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::AssayQuantitation))->asSequence()->any(true).oclAsType(sdtm::AssayQuantitation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_oYIUQRpQEeSd5OoVIuDNwg" type="_GzShcJOgEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_oYI7UBpQEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_okdgEBpQEeSd5OoVIuDNwg" name="getFinding Abouts" bodyCondition="_okdgExpQEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_okdgExpQEeSd5OoVIuDNwg" name="body" constrainedElement="_okdgEBpQEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_okdgFBpQEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(sdtm::FindingAbout)).oclAsType(sdtm::FindingAbout)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_okdgERpQEeSd5OoVIuDNwg" type="_x1wssJOhEeG_Gqo8Ix5ECw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_okdgEhpQEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ys8oENKGEeGO8bQEpB8bpQ" name="Domain Assignment">
      <ownedComment xmi:id="_gxWIsNKHEeGO8bQEpB8bpQ">
        <body>The template provides information on the domain - general information category - that an information item is assigned to.  The current list of domains is drawn from the SEND and SDTM implementation guides.  Each discrete information item will be assigned to at least one domain.  The is defined as a template to allow its reuse.  In addition, there is a possiblity that - going forward - more than one domain could be assigned to a data item; use of this structure makes it easier to introduce such a change.</body>
      </ownedComment>
      <ownedRule xmi:id="_mSMigBpQEeSd5OoVIuDNwg" name="Domain AssignmentTemplateId" constrainedElement="_ys8oENKGEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mSNwoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mScaIBpQEeSd5OoVIuDNwg" name="Domain AssignmentMoodCode" constrainedElement="_ys8oENKGEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mSdBMBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mSyYYBpQEeSd5OoVIuDNwg" name="Domain AssignmentClassCode" constrainedElement="_ys8oENKGEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mSyYYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mTp7EBpQEeSd5OoVIuDNwg" name="Domain AssignmentCodeP" constrainedElement="_ys8oENKGEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mTp7ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mTN2MBpQEeSd5OoVIuDNwg" name="Domain AssignmentCode" constrainedElement="_ys8oENKGEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mTN2MRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C66734' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mUH1IBpQEeSd5OoVIuDNwg" name="Domain AssignmentValue" constrainedElement="_ys8oENKGEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mUH1IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ytjFANKGEeGO8bQEpB8bpQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_FydD4NKIEeGO8bQEpB8bpQ" name="Comment">
      <ownedComment xmi:id="_ikazYNKIEeGO8bQEpB8bpQ">
        <body>The template is used for submitting free-text comments.  A comment may be related to a particular data item or collected seperately on a form dedicated to comments.  Comments are generally not responses to specific questions; instead, comments usually consist of voluntary, free-text or unsolicited observations.   This structure is captured as a template to facilitate its reuse as a general mechanism for attaching comments.</body>
      </ownedComment>
      <ownedRule xmi:id="_mUclQBpQEeSd5OoVIuDNwg" name="CommentTemplateId" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mUdMUBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mUsc4BpQEeSd5OoVIuDNwg" name="CommentClassCode" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mUsc4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mVB0EBpQEeSd5OoVIuDNwg" name="CommentMoodCode" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mVB0ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mVV9IBpQEeSd5OoVIuDNwg" name="CommentId" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mVV9IRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mWJOYBpQEeSd5OoVIuDNwg" name="CommentCodeP" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mWJOYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mVtwkBpQEeSd5OoVIuDNwg" name="CommentCode" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mVtwkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C49569' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mWi3ABpQEeSd5OoVIuDNwg" name="CommentEffectiveTime" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mWi3ARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mW1x8BpQEeSd5OoVIuDNwg" name="CommentValue" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mW1x8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ED)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mYCr0BpQEeSd5OoVIuDNwg" name="CommentStudy Finding Evaluator" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mYCr0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mY19EBpQEeSd5OoVIuDNwg" name="CommentReferenceAssociation" constrainedElement="_FydD4NKIEeGO8bQEpB8bpQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mY19ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FydD4dKIEeGO8bQEpB8bpQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iMrPgNKNEeGX6v8HTY_PeQ" name="Related Record">
      <ownedComment xmi:id="_u78-gNKNEeGX6v8HTY_PeQ">
        <body>The template is used to define the relationship between an information item and another item or group of items.  This structure is captured as a template to facilitate its reuse as a generic mechanism for documenting relationships.</body>
      </ownedComment>
      <ownedRule xmi:id="_mZAVIBpQEeSd5OoVIuDNwg" name="Related RecordTemplateId" constrainedElement="_iMrPgNKNEeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mZA8MBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.75')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mZQMwBpQEeSd5OoVIuDNwg" name="Related RecordClassCode" constrainedElement="_iMrPgNKNEeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mZQMwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mZmLABpQEeSd5OoVIuDNwg" name="Related RecordMoodCode" constrainedElement="_iMrPgNKNEeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mZmLARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mZ5tABpQEeSd5OoVIuDNwg" name="Related RecordId" constrainedElement="_iMrPgNKNEeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mZ5tARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (self.id->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mas-QBpQEeSd5OoVIuDNwg" name="Related RecordCodeP" constrainedElement="_iMrPgNKNEeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mas-QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_maSHgBpQEeSd5OoVIuDNwg" name="Related RecordCode" constrainedElement="_iMrPgNKNEeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_maSHgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'RRtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iMrPgdKNEeGX6v8HTY_PeQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MltKQNKREeGX6v8HTY_PeQ" name="Supplemental Value">
      <ownedComment xmi:id="_jiTo4NKREeGX6v8HTY_PeQ">
        <body>The template will allow the addition of supplemental information to a particular data item.  This general purpose structure makes it possible to capture unexpected (non-standard) data items, and to relate them to the appropriate record within one of the previously defined domains.  It is is captured as a template to facilitate its reuse as a generic capability.</body>
      </ownedComment>
      <ownedRule xmi:id="_mbRmABpQEeSd5OoVIuDNwg" name="Supplemental ValueTemplateId" constrainedElement="_MltKQNKREeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mbS0IBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.96')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mbhdoBpQEeSd5OoVIuDNwg" name="Supplemental ValueClassCode" constrainedElement="_MltKQNKREeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mbiEsBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mb200BpQEeSd5OoVIuDNwg" name="Supplemental ValueMoodCode" constrainedElement="_MltKQNKREeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mb3b4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mctJYBpQEeSd5OoVIuDNwg" name="Supplemental ValueCodeP" constrainedElement="_MltKQNKREeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mctJYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mcS5sBpQEeSd5OoVIuDNwg" name="Supplemental ValueCode" constrainedElement="_MltKQNKREeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mcS5sRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = 'locally defined' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mdHZEBpQEeSd5OoVIuDNwg" name="Supplemental ValueValue" constrainedElement="_MltKQNKREeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mdHZERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mgNJUBpQEeSd5OoVIuDNwg" name="Supplemental ValueOrigenAssociation" constrainedElement="_MltKQNKREeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mgNJURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_mlM-EBpQEeSd5OoVIuDNwg" name="Supplemental ValueStudy Finding Evaluator" constrainedElement="_MltKQNKREeGX6v8HTY_PeQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_mlM-ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(sdtm::StudyFindingEvaluator))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_MltKQdKREeGX6v8HTY_PeQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_XrR40NW4EeGKmsh0mvGT9Q" name="Reference Period">
      <ownedComment xmi:id="_fbcCcNW4EeGKmsh0mvGT9Q">
        <body>The template records the reference start and stop time for the subject's particiaption in the trial.  This is normally recorded as the period starting with the subjects first exposure to study treatment, and ending at the point that the subject was determined to have ended the trial.  The information is captured as a template to allow resuse across several SDTM and SEND domains.</body>
      </ownedComment>
      <ownedRule xmi:id="_nDWSoBpQEeSd5OoVIuDNwg" name="Reference PeriodTemplateId" constrainedElement="_XrR40NW4EeGKmsh0mvGT9Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nDW5sBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.73')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nDmxUBpQEeSd5OoVIuDNwg" name="Reference PeriodClassCode" constrainedElement="_XrR40NW4EeGKmsh0mvGT9Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nDmxURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nD8IgBpQEeSd5OoVIuDNwg" name="Reference PeriodMoodCode" constrainedElement="_XrR40NW4EeGKmsh0mvGT9Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nD8IgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nExO8BpQEeSd5OoVIuDNwg" name="Reference PeriodCodeP" constrainedElement="_XrR40NW4EeGKmsh0mvGT9Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nExO8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nEWYMBpQEeSd5OoVIuDNwg" name="Reference PeriodCode" constrainedElement="_XrR40NW4EeGKmsh0mvGT9Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nEWYMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'RPtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nFLeoBpQEeSd5OoVIuDNwg" name="Reference PeriodEffectiveTime" constrainedElement="_XrR40NW4EeGKmsh0mvGT9Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nFLeoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XrR40dW4EeGKmsh0mvGT9Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_w_aIINW7EeGJ8IViYnBfBA" name="Start Relative to Reference Period">
      <ownedComment xmi:id="_78Ml0NW7EeGJ8IViYnBfBA">
        <body>The template captures the qualitative relationship between the start of an activity and the reference period defined within the demographics domain.  This structure is captured as a template to facilitate its reuse as a significant relationship between an event and the conduct of the study.</body>
      </ownedComment>
      <ownedRule xmi:id="_nF5QUBpQEeSd5OoVIuDNwg" name="Start Relative to Reference PeriodTemplateId" constrainedElement="_w_aIINW7EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nF6ecBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.79')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nGJvABpQEeSd5OoVIuDNwg" name="Start Relative to Reference PeriodClassCode" constrainedElement="_w_aIINW7EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nGJvARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nGfGMBpQEeSd5OoVIuDNwg" name="Start Relative to Reference PeriodMoodCode" constrainedElement="_w_aIINW7EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nGfGMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nHTlkBpQEeSd5OoVIuDNwg" name="Start Relative to Reference PeriodCodeP" constrainedElement="_w_aIINW7EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nHUMoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nG4u0BpQEeSd5OoVIuDNwg" name="Start Relative to Reference PeriodCode" constrainedElement="_w_aIINW7EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nG5V4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'STRPtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nH1xEBpQEeSd5OoVIuDNwg" name="Start Relative to Reference PeriodValue" constrainedElement="_w_aIINW7EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nH1xERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C78802' or value.code = 'C78800' or value.code = '78801' or value.code = '78727' or value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nIPZsBpQEeSd5OoVIuDNwg" name="Start Relative to Reference PeriodValueP" constrainedElement="_w_aIINW7EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nIPZsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_w_aIIdW7EeGJ8IViYnBfBA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_PTdgANW9EeGJ8IViYnBfBA" name="Stop Relative to Reference Period">
      <ownedComment xmi:id="_PTdgAdW9EeGJ8IViYnBfBA">
        <body>The template captures the qualitative relationship between the ending of an activity and the reference period defined within the demographics domain.  This structure is captured as a template to facilitate its reuse as a significant relationship between an event and the conduct of the study.</body>
      </ownedComment>
      <ownedRule xmi:id="_nIl_ABpQEeSd5OoVIuDNwg" name="Stop Relative to Reference PeriodTemplateId" constrainedElement="_PTdgANW9EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nInNIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.80')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nI2dsBpQEeSd5OoVIuDNwg" name="Stop Relative to Reference PeriodClassCode" constrainedElement="_PTdgANW9EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nI2dsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nJL04BpQEeSd5OoVIuDNwg" name="Stop Relative to Reference PeriodMoodCode" constrainedElement="_PTdgANW9EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nJL04RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nKBiYBpQEeSd5OoVIuDNwg" name="Stop Relative to Reference PeriodCodeP" constrainedElement="_PTdgANW9EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nKBiYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nJmEkBpQEeSd5OoVIuDNwg" name="Stop Relative to Reference PeriodCode" constrainedElement="_PTdgANW9EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nJmEkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ENRPtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nKjG0BpQEeSd5OoVIuDNwg" name="Stop Relative to Reference PeriodValue" constrainedElement="_PTdgANW9EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nKjt4BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C78802' or value.code = 'C78800' or value.code = '78801' or value.code = '78727' or value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nK8vcBpQEeSd5OoVIuDNwg" name="Stop Relative to Reference PeriodValueP" constrainedElement="_PTdgANW9EeGJ8IViYnBfBA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nK8vcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PTdgAtW9EeGJ8IViYnBfBA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zDVFEHINEeGL-K1S1E9LrQ" name="Indication">
      <ownedComment xmi:id="_ILwa4HIPEeGL-K1S1E9LrQ">
        <body>The template provides a reusable structure to include information on the indication for an intevention.</body>
      </ownedComment>
      <ownedRule xmi:id="_nNlMsBpQEeSd5OoVIuDNwg" name="IndicationTemplateId" constrainedElement="_zDVFEHINEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nNma0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.48')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nN1EUBpQEeSd5OoVIuDNwg" name="IndicationClassCode" constrainedElement="_zDVFEHINEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nN1rYBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nOKbgBpQEeSd5OoVIuDNwg" name="IndicationMoodCode" constrainedElement="_zDVFEHINEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nOKbgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nO-64BpQEeSd5OoVIuDNwg" name="IndicationCodeP" constrainedElement="_zDVFEHINEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nO-64RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nOkrMBpQEeSd5OoVIuDNwg" name="IndicationCode" constrainedElement="_zDVFEHINEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nOkrMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C83085' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nPeDEBpQEeSd5OoVIuDNwg" name="IndicationValue" constrainedElement="_zDVFEHINEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nPeDERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = 'unknown'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nP450BpQEeSd5OoVIuDNwg" name="IndicationValueP" constrainedElement="_zDVFEHINEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nP450RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_20xWYHINEeGL-K1S1E9LrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YbytjLZmEeGvx_6yr-0T9g" name="Intended Regimen">
      <ownedComment xmi:id="_YbytjbZmEeGvx_6yr-0T9g">
        <body>The template provides a reusable structure for including a text description of the intended schedule or regimen for an intervention or treatment.  It is used to supplement frequency information provided using the effectiveTime element.</body>
      </ownedComment>
      <ownedRule xmi:id="_nQrkABpQEeSd5OoVIuDNwg" name="Intended RegimenTemplateId" constrainedElement="_YbytjLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nQsLEBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.49')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nQ7boBpQEeSd5OoVIuDNwg" name="Intended RegimenClassCode" constrainedElement="_YbytjLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nQ7boRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nRRZ4BpQEeSd5OoVIuDNwg" name="Intended RegimenMoodCode" constrainedElement="_YbytjLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nRRZ4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nSF5QBpQEeSd5OoVIuDNwg" name="Intended RegimenCodeP" constrainedElement="_YbytjLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nSF5QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nRrpkBpQEeSd5OoVIuDNwg" name="Intended RegimenCode" constrainedElement="_YbytjLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nRrpkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'IRtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nSfh4BpQEeSd5OoVIuDNwg" name="Intended RegimenValue" constrainedElement="_YbytjLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nSfh4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ED)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YbytjrZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YbytoLZmEeGvx_6yr-0T9g" name="Dose Adjustment Reason">
      <ownedComment xmi:id="_YbytobZmEeGvx_6yr-0T9g">
        <body>The template is used to provide a description of the reason for, or explanation of, an adjustment to the administered dosage.</body>
      </ownedComment>
      <ownedRule xmi:id="_nTmVIBpQEeSd5OoVIuDNwg" name="Dose Adjustment ReasonTemplateId" constrainedElement="_YbytoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nTm8MBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.31')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nT3a4BpQEeSd5OoVIuDNwg" name="Dose Adjustment ReasonClassCode" constrainedElement="_YbytoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nT3a4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nUyn8BpQEeSd5OoVIuDNwg" name="Dose Adjustment ReasonCodeP" constrainedElement="_YbytoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nUyn8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nUWjEBpQEeSd5OoVIuDNwg" name="Dose Adjustment ReasonCode" constrainedElement="_YbytoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nUWjERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'DARtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nVNesBpQEeSd5OoVIuDNwg" name="Dose Adjustment ReasonValue" constrainedElement="_YbytoLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nVNesRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ED)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YbytorZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRDArZmEeGvx_6yr-0T9g" name="Serious Event">
      <ownedComment xmi:id="_sYRDA7ZmEeGvx_6yr-0T9g">
        <body>The template is used to record nformation whether or not this is a serious event.  It is also possible to record different aspects of the event, e.g., whether it was life threatening, that bear on its seriousness.  It is is captured as a template to facilitate its reuse as a characteristic of different types of event within clinical and non-clinical trial reporting.  [SDTM: ]. [Study Data Tabulation Model; -SER]</body>
      </ownedComment>
      <ownedRule xmi:id="_nWml0BpQEeSd5OoVIuDNwg" name="Serious EventTemplateId" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nWnz8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.77')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nW2dcBpQEeSd5OoVIuDNwg" name="Serious EventClassCode" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nW3EgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nXMbsBpQEeSd5OoVIuDNwg" name="Serious EventMoodCode" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nXMbsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nYAUABpQEeSd5OoVIuDNwg" name="Serious EventCodeP" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nYAUARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nXmEUBpQEeSd5OoVIuDNwg" name="Serious EventCode" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nXmEURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'SEtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nYZ8oBpQEeSd5OoVIuDNwg" name="Serious EventValue" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nYZ8oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n4Uy0BpQEeSd5OoVIuDNwg" name="Serious EventSeriousEventTypeAssociation" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n4Uy0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEXIIBpQEeSd5OoVIuDNwg" name="Serious EventSeriousEventTypeAssociationSeriousEventTypeClassCode" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEXIIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(isDefined('classCode'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEaLcBpQEeSd5OoVIuDNwg" name="Serious EventSeriousEventTypeAssociationSeriousEventTypeMoodCode" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEaLcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject(moodCode=vocab::x_ActMoodDocumentObservation::EVN)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEcnsBpQEeSd5OoVIuDNwg" name="Serious EventSeriousEventTypeAssociationSeriousEventTypeCodeP" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEcnsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEfrABpQEeSd5OoVIuDNwg" name="Serious EventSeriousEventTypeAssociationSeriousEventTypeCode" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEfrARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((code.oclIsUndefined() or code.isNullFlavorUndefined()) implies (not code.oclIsUndefined() and code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = code.oclAsType(datatypes::CD) in 
value.code = 'SETtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEiHQBpQEeSd5OoVIuDNwg" name="Serious EventSeriousEventTypeAssociationSeriousEventTypeValue" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEiHQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'CA' or value.code = 'BD' or value.code = 'DIS' or value.code = 'DTH' or value.code = 'HOSP' or value.code = 'LT' or value.code = 'OD' or value.code = 'OTH'))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pElKkBpQEeSd5OoVIuDNwg" name="Serious EventSeriousEventTypeAssociationSeriousEventTypeValueP" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pElKkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null).observation->excluding(null)->reject((value->isEmpty() or value->exists(element | element.isNullFlavorUndefined())) implies (value->size() = 1 and value->forAll(element | element.oclIsTypeOf(datatypes::CD))))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEnm0BpQEeSd5OoVIuDNwg" name="Serious EventSeriousEventTypeAssociationTypeCode" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEnm0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(typeCode=vocab::x_ActRelationshipEntryRelationship::COMP)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_pEqqIBpQEeSd5OoVIuDNwg" name="Serious EventSeriousEventTypeAssociationSeriousEventType" constrainedElement="_sYRDArZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_pEqqIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->excluding(null)->reject(observation->one(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(cda::Observation)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRDBLZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRDL7ZmEeGvx_6yr-0T9g" name="Study Treatment Action Taken">
      <ownedComment xmi:id="_sYRDMLZmEeGvx_6yr-0T9g">
        <body>A description of any changes made to the study treatment as a result of the event.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical  and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_nbyAwBpQEeSd5OoVIuDNwg" name="Study Treatment Action TakenTemplateId" constrainedElement="_sYRDL7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nbyn0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.89')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ncB4YBpQEeSd5OoVIuDNwg" name="Study Treatment Action TakenClassCode" constrainedElement="_sYRDL7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ncB4YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ncX2oBpQEeSd5OoVIuDNwg" name="Study Treatment Action TakenMoodCode" constrainedElement="_sYRDL7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ncX2oRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ndMWABpQEeSd5OoVIuDNwg" name="Study Treatment Action TakenCodeP" constrainedElement="_sYRDL7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ndMWARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ncxfQBpQEeSd5OoVIuDNwg" name="Study Treatment Action TakenCode" constrainedElement="_sYRDL7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ncxfQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C66767' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nduhgBpQEeSd5OoVIuDNwg" name="Study Treatment Action TakenValue" constrainedElement="_sYRDL7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nduhgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_neIKIBpQEeSd5OoVIuDNwg" name="Study Treatment Action TakenValueP" constrainedElement="_sYRDL7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_neIKIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRDMbZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRDRbZmEeGvx_6yr-0T9g" name="Other Treatment Action Taken">
      <ownedComment xmi:id="_sYRDRrZmEeGvx_6yr-0T9g">
        <body>The template provides a description of other actions - aside from changes to the study treatment - that were taken as a response to the event.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_ne7bYBpQEeSd5OoVIuDNwg" name="Other Treatment Action TakenTemplateId" constrainedElement="_sYRDRbZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ne8pgBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.63')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nfL6EBpQEeSd5OoVIuDNwg" name="Other Treatment Action TakenClassCode" constrainedElement="_sYRDRbZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nfL6ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nfhRQBpQEeSd5OoVIuDNwg" name="Other Treatment Action TakenMoodCode" constrainedElement="_sYRDRbZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nfh4UBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ngVwoBpQEeSd5OoVIuDNwg" name="Other Treatment Action TakenCodeP" constrainedElement="_sYRDRbZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ngVwoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nf7g8BpQEeSd5OoVIuDNwg" name="Other Treatment Action TakenCode" constrainedElement="_sYRDRbZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nf7g8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'OATtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ngvZQBpQEeSd5OoVIuDNwg" name="Other Treatment Action TakenValue" constrainedElement="_sYRDRbZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ngvZQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ED)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRDR7ZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRDXLZmEeGvx_6yr-0T9g" name="Study Treatment Causality">
      <ownedComment xmi:id="_sYRDXbZmEeGvx_6yr-0T9g">
        <body>A record of the investigator's opinion with regard to the causal relationship between the event and the prior study treatment.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of event within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_nhbVwBpQEeSd5OoVIuDNwg" name="Study Treatment CausalityTemplateId" constrainedElement="_sYRDXLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nhb80BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.90')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nhrNYBpQEeSd5OoVIuDNwg" name="Study Treatment CausalityClassCode" constrainedElement="_sYRDXLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nhrNYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_niBLoBpQEeSd5OoVIuDNwg" name="Study Treatment CausalityMoodCode" constrainedElement="_sYRDXLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_niBLoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ni1rABpQEeSd5OoVIuDNwg" name="Study Treatment CausalityCodeP" constrainedElement="_sYRDXLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ni1rARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nia0QBpQEeSd5OoVIuDNwg" name="Study Treatment CausalityCode" constrainedElement="_sYRDXLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nia0QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'STCtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_njXPcBpQEeSd5OoVIuDNwg" name="Study Treatment CausalityValue" constrainedElement="_sYRDXLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_njXPcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_njw4EBpQEeSd5OoVIuDNwg" name="Study Treatment CausalityValueP" constrainedElement="_sYRDXLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_njxfIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRDXrZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRDc7ZmEeGvx_6yr-0T9g" name="Non-Study Treatment Relationship">
      <ownedComment xmi:id="_sYRDdLZmEeGvx_6yr-0T9g">
        <body>The template is used to record an opinion as to whether the event may be associated with a treatment or other occurrence that is different from the study drug.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical  and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_nklXcBpQEeSd5OoVIuDNwg" name="Non-Study Treatment RelationshipTemplateId" constrainedElement="_sYRDc7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nkl-gBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.61')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nk1PEBpQEeSd5OoVIuDNwg" name="Non-Study Treatment RelationshipClassCode" constrainedElement="_sYRDc7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nk1PERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nlqVgBpQEeSd5OoVIuDNwg" name="Non-Study Treatment RelationshipCodeP" constrainedElement="_sYRDc7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nlqVgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nlPewBpQEeSd5OoVIuDNwg" name="Non-Study Treatment RelationshipCode" constrainedElement="_sYRDc7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nlPewRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'NSTtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nmFzUBpQEeSd5OoVIuDNwg" name="Non-Study Treatment RelationshipMoodCode" constrainedElement="_sYRDc7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nmFzURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nmZ8YBpQEeSd5OoVIuDNwg" name="Non-Study Treatment RelationshipValue" constrainedElement="_sYRDc7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nmZ8YRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ED)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRDdbZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRDirZmEeGvx_6yr-0T9g" name="Event Pattern">
      <ownedComment xmi:id="_sYRDi7ZmEeGvx_6yr-0T9g">
        <body>The templated is used to provide information that indicates the pattern of an event over time.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of event within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_nnF44BpQEeSd5OoVIuDNwg" name="Event PatternTemplateId" constrainedElement="_sYRDirZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nnHHABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nnVwgBpQEeSd5OoVIuDNwg" name="Event PatternClassCode" constrainedElement="_sYRDirZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nnWXkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nnruwBpQEeSd5OoVIuDNwg" name="Event PatternMoodCode" constrainedElement="_sYRDirZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nnruwRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nogOIBpQEeSd5OoVIuDNwg" name="Event PatternCodeP" constrainedElement="_sYRDirZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nog1MBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_noF-cBpQEeSd5OoVIuDNwg" name="Event PatternCode" constrainedElement="_sYRDirZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_noF-cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C83208' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_npDAsBpQEeSd5OoVIuDNwg" name="Event PatternValue" constrainedElement="_sYRDirZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_npDAsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_npcpUBpQEeSd5OoVIuDNwg" name="Event PatternValueP" constrainedElement="_sYRDirZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_npcpURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRDjLZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRDobZmEeGvx_6yr-0T9g" name="Event Outcome">
      <ownedComment xmi:id="_sYRDorZmEeGvx_6yr-0T9g">
        <body>The template is used to provide a description of the outcome of an event.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of event within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_nqRIsBpQEeSd5OoVIuDNwg" name="Event OutcomeTemplateId" constrainedElement="_sYRDobZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nqRvwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nqhAUBpQEeSd5OoVIuDNwg" name="Event OutcomeClassCode" constrainedElement="_sYRDobZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nqhAURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nq2XgBpQEeSd5OoVIuDNwg" name="Event OutcomeMoodCode" constrainedElement="_sYRDobZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nq2XgRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nrrd8BpQEeSd5OoVIuDNwg" name="Event OutcomeCodeP" constrainedElement="_sYRDobZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nrrd8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nrROQBpQEeSd5OoVIuDNwg" name="Event OutcomeCode" constrainedElement="_sYRDobZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nrROQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C49489' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nsNpcBpQEeSd5OoVIuDNwg" name="Event OutcomeValue" constrainedElement="_sYRDobZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nsNpcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nsnSEBpQEeSd5OoVIuDNwg" name="Event OutcomeValueP" constrainedElement="_sYRDobZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nsnSERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRDo7ZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRDuLZmEeGvx_6yr-0T9g" name="Concomitant Treatment">
      <ownedComment xmi:id="_sYRDubZmEeGvx_6yr-0T9g">
        <body>The template is used to record information on whether another treatment was provided to the study subject as a result of an event occurrence.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of event within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_ntbKYBpQEeSd5OoVIuDNwg" name="Concomitant TreatmentTemplateId" constrainedElement="_sYRDuLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ntbxcBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.25.25')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ntrCABpQEeSd5OoVIuDNwg" name="Concomitant TreatmentClassCode" constrainedElement="_sYRDuLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ntrCARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nuBAQBpQEeSd5OoVIuDNwg" name="Concomitant TreatmentMoodCode" constrainedElement="_sYRDuLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nuBAQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nu2GsBpQEeSd5OoVIuDNwg" name="Concomitant TreatmentCodeP" constrainedElement="_sYRDuLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nu2GsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nubP8BpQEeSd5OoVIuDNwg" name="Concomitant TreatmentCode" constrainedElement="_sYRDuLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nubP8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C83199' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nvPvUBpQEeSd5OoVIuDNwg" name="Concomitant TreatmentValue" constrainedElement="_sYRDuLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nvPvURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRDurZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRDz7ZmEeGvx_6yr-0T9g" name="Toxicity">
      <ownedComment xmi:id="_sYRD0LZmEeGvx_6yr-0T9g">
        <body>The template holds information on the toxicity of an event.  The toxicity measure is recorded using a standard toxicity scale.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of event or finding within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_nv-vIBpQEeSd5OoVIuDNwg" name="ToxicityTemplateId" constrainedElement="_sYRDz7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nv_WMBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.98')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nwOmwBpQEeSd5OoVIuDNwg" name="ToxicityClassCode" constrainedElement="_sYRDz7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nwPN0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nwklABpQEeSd5OoVIuDNwg" name="ToxicityMoodCode" constrainedElement="_sYRDz7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nwklARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nxqxMBpQEeSd5OoVIuDNwg" name="ToxicityCodeP" constrainedElement="_sYRDz7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nxqxMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nxDGIBpQEeSd5OoVIuDNwg" name="ToxicityCode" constrainedElement="_sYRDz7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nxDGIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'TOtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nyTDUBpQEeSd5OoVIuDNwg" name="ToxicityValue" constrainedElement="_sYRDz7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nyTDURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_nytTABpQEeSd5OoVIuDNwg" name="ToxicityValueP" constrainedElement="_sYRDz7ZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_nytTARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRD0bZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sYRD5rZmEeGvx_6yr-0T9g" name="Category">
      <ownedComment xmi:id="_sYRD57ZmEeGvx_6yr-0T9g">
        <body>The structure is used to provide a classification for a reported item,  whether it be an event, finding, or intervention.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data item within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_n0PkEBpQEeSd5OoVIuDNwg" name="CategoryTemplateId" constrainedElement="_sYRD5rZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n0QLIBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n0fbsBpQEeSd5OoVIuDNwg" name="CategoryClassCode" constrainedElement="_sYRD5rZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n0fbsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n01Z8BpQEeSd5OoVIuDNwg" name="CategoryMoodCode" constrainedElement="_sYRD5rZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n01Z8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n1rHcBpQEeSd5OoVIuDNwg" name="CategoryCodeP" constrainedElement="_sYRD5rZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n1rHcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n1Re0BpQEeSd5OoVIuDNwg" name="CategoryCode" constrainedElement="_sYRD5rZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n1Re0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n2NS8BpQEeSd5OoVIuDNwg" name="CategoryValue" constrainedElement="_sYRD5rZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n2NS8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sYRD6LZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EtyC8Nf7EeGEv9qe5Ch_sQ" name="Sub-Category">
      <ownedComment xmi:id="_EtyC8df7EeGEv9qe5Ch_sQ">
        <body>The category is used to provide a classification for a reported item,  whether it be an event, finding, or intervention.  The classification provides a set of more detailed classifications based on the corresponding category definitions.   This structure is captured as a template to facilitate its reuse as a characteristic of different types of data item within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_n9SLUBpQEeSd5OoVIuDNwg" name="Sub-CategoryTemplateId" constrainedElement="_EtyC8Nf7EeGEv9qe5Ch_sQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n9TZcBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.91')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n9g00BpQEeSd5OoVIuDNwg" name="Sub-CategoryClassCode" constrainedElement="_EtyC8Nf7EeGEv9qe5Ch_sQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n9g00RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n9094BpQEeSd5OoVIuDNwg" name="Sub-CategoryMoodCode" constrainedElement="_EtyC8Nf7EeGEv9qe5Ch_sQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n9094RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n-rScBpQEeSd5OoVIuDNwg" name="Sub-CategoryCodeP" constrainedElement="_EtyC8Nf7EeGEv9qe5Ch_sQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n-rScRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n-Rp0BpQEeSd5OoVIuDNwg" name="Sub-CategoryCode" constrainedElement="_EtyC8Nf7EeGEv9qe5Ch_sQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n-Rp0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_n_FiIBpQEeSd5OoVIuDNwg" name="Sub-CategoryValue" constrainedElement="_EtyC8Nf7EeGEv9qe5Ch_sQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_n_FiIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EtyC8tf7EeGEv9qe5Ch_sQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_FhxtaYsoEeGEXvbgIb1duQ" name="Position of Subject">
      <ownedComment xmi:id="_FhxtaosoEeGEXvbgIb1duQ">
        <body>The template records the position of the subject during a measurement or examination.</body>
      </ownedComment>
      <ownedRule xmi:id="_oFP0gBpQEeSd5OoVIuDNwg" name="Position of SubjectTemplateId" constrainedElement="_FhxtaYsoEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFRCoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.69')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oFfFEBpQEeSd5OoVIuDNwg" name="Position of SubjectClassCode" constrainedElement="_FhxtaYsoEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFfFERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oFynEBpQEeSd5OoVIuDNwg" name="Position of SubjectMoodCode" constrainedElement="_FhxtaYsoEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oFynERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oGqw0BpQEeSd5OoVIuDNwg" name="Position of SubjectCodeP" constrainedElement="_FhxtaYsoEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGqw0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oGM2wBpQEeSd5OoVIuDNwg" name="Position of SubjectCode" constrainedElement="_FhxtaYsoEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oGM2wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C71148' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oHM8UBpQEeSd5OoVIuDNwg" name="Position of SubjectValue" constrainedElement="_FhxtaYsoEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oHM8URpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oHmk8BpQEeSd5OoVIuDNwg" name="Position of SubjectValueP" constrainedElement="_FhxtaYsoEeGEXvbgIb1duQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oHmk8RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Fhxta4soEeGEXvbgIb1duQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TrjGrZmEeGvx_6yr-0T9g" name="Reference Range">
      <ownedComment xmi:id="_2TrjG7ZmEeGvx_6yr-0T9g">
        <body>The reference range template is used to convey information about the standard - normal - values for a given finding.  The values provided which can indicate the upper and lower bounds of the normal range for a test.  It can also indicate which values of a categorical test are normal, and support interpretation of the value recorded for the study subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_oI6zkBpQEeSd5OoVIuDNwg" name="Reference RangeTemplateId" constrainedElement="_2TrjGrZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oI7aoBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.74')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oJL5UBpQEeSd5OoVIuDNwg" name="Reference RangeClassCode" constrainedElement="_2TrjGrZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJL5URpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oJjFsBpQEeSd5OoVIuDNwg" name="Reference RangeMoodCode" constrainedElement="_2TrjGrZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJjFsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode') and self.moodCode=vocab::ActMood::EVN.CRT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oJ9VYBpQEeSd5OoVIuDNwg" name="Reference RangeCode" constrainedElement="_2TrjGrZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oJ9VYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C78736' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oKZaQBpQEeSd5OoVIuDNwg" name="Reference RangeCodeP" constrainedElement="_2TrjGrZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKZaQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oKx0wBpQEeSd5OoVIuDNwg" name="Reference RangeValue" constrainedElement="_2TrjGrZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oKx0wRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value.oclIsUndefined() or self.value.isNullFlavorUndefined()) implies (not self.value.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oLHzABpQEeSd5OoVIuDNwg" name="Reference RangeInterpretationCode" constrainedElement="_2TrjGrZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLHzARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.interpretationCode.oclIsUndefined() or self.interpretationCode.isNullFlavorUndefined()) implies (not self.interpretationCode.oclIsUndefined() and self.interpretationCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.interpretationCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and (value.code = 'C78802' or value.code = 'C78800' or value.code = '78801' or value.code = '78727' or value.code = 'CXXXXX' or value.code = 'CXXXXX' or value.code = 'CXXXXX'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2TrjHLZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ujrlMEcZEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TrjZLZmEeGvx_6yr-0T9g" name="Result Category">
      <ownedComment xmi:id="_2TrjZbZmEeGvx_6yr-0T9g">
        <body>The template supports a structure that is used to assign a category to the result of a finding.</body>
      </ownedComment>
      <ownedRule xmi:id="_oLke8BpQEeSd5OoVIuDNwg" name="Result CategoryTemplateId" constrainedElement="_2TrjZLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oLlGABpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.76')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oL09oBpQEeSd5OoVIuDNwg" name="Result CategoryClassCode" constrainedElement="_2TrjZLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oL1ksBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oMMKABpQEeSd5OoVIuDNwg" name="Result CategoryMoodCode" constrainedElement="_2TrjZLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMMKARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNETwBpQEeSd5OoVIuDNwg" name="Result CategoryCodeP" constrainedElement="_2TrjZLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNE60BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oMqEEBpQEeSd5OoVIuDNwg" name="Result CategoryCode" constrainedElement="_2TrjZLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oMqEERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1' and not value.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oNgYoBpQEeSd5OoVIuDNwg" name="Result CategoryValue" constrainedElement="_2TrjZLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oNgYoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2TrjZrZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2TrjOLZmEeGvx_6yr-0T9g" name="Fasting Status">
      <ownedComment xmi:id="_ND9qwNpsEeGwZdMPbuS7rw">
        <body>The template is used to store information regarding whether or not the subject was fasting at the effective time - when the specimen was drawn - of the test producing the finding.</body>
      </ownedComment>
      <ownedRule xmi:id="_oPLzoBpQEeSd5OoVIuDNwg" name="Fasting StatusTemplateId" constrainedElement="_2TrjOLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPNBwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.39')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPcSUBpQEeSd5OoVIuDNwg" name="Fasting StatusClassCode" constrainedElement="_2TrjOLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPcSURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oPyQkBpQEeSd5OoVIuDNwg" name="Fasting StatusMoodCode" constrainedElement="_2TrjOLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oPyQkRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQn-EBpQEeSd5OoVIuDNwg" name="Fasting StatusCodeP" constrainedElement="_2TrjOLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQn-ERpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oQMgQBpQEeSd5OoVIuDNwg" name="Fasting StatusCode" constrainedElement="_2TrjOLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oQMgQRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'FStbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oRBmsBpQEeSd5OoVIuDNwg" name="Fasting StatusValue" constrainedElement="_2TrjOLZmEeGvx_6yr-0T9g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oRCNwBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_2TrjObZmEeGvx_6yr-0T9g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_P_ecgLc0EeGbTfv2pIp07Q" name="Death Relationship">
      <ownedComment xmi:id="_nLHLENpyEeGwZdMPbuS7rw">
        <body>The template provides a reusable structure to describe the relationship of a particular finding to the death of a study subject.</body>
      </ownedComment>
      <ownedRule xmi:id="_oSoJMBpQEeSd5OoVIuDNwg" name="Death RelationshipTemplateId" constrainedElement="_P_ecgLc0EeGbTfv2pIp07Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oSowQBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oS4A0BpQEeSd5OoVIuDNwg" name="Death RelationshipClassCode" constrainedElement="_P_ecgLc0EeGbTfv2pIp07Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oS4A0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTOmIBpQEeSd5OoVIuDNwg" name="Death RelationshipMoodCode" constrainedElement="_P_ecgLc0EeGbTfv2pIp07Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTOmIRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oULoYBpQEeSd5OoVIuDNwg" name="Death RelationshipCodeP" constrainedElement="_P_ecgLc0EeGbTfv2pIp07Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oULoYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oTtuUBpQEeSd5OoVIuDNwg" name="Death RelationshipCode" constrainedElement="_P_ecgLc0EeGbTfv2pIp07Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oTtuURpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'C95087' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oUnGMBpQEeSd5OoVIuDNwg" name="Death RelationshipValue" constrainedElement="_P_ecgLc0EeGbTfv2pIp07Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oUnGMRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_P_ecgbc0EeGbTfv2pIp07Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GzShcJOgEeG_Gqo8Ix5ECw" name="Assay Quantitation">
      <ownedComment xmi:id="_JjyTIJOgEeG_Gqo8Ix5ECw">
        <body>An indication of the lower limit of quantitation for an assay.   This structure is captured as a template to facilitate its reuse as a characteristic of different types of finding within clinical and non-clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_oVmksBpQEeSd5OoVIuDNwg" name="Assay QuantitationTemplateId" constrainedElement="_GzShcJOgEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oVny0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.16')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oV3DYBpQEeSd5OoVIuDNwg" name="Assay QuantitationClassCode" constrainedElement="_GzShcJOgEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oV3DYRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWNosBpQEeSd5OoVIuDNwg" name="Assay QuantitationMoodCode" constrainedElement="_GzShcJOgEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWNosRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::DEF</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oXD9QBpQEeSd5OoVIuDNwg" name="Assay QuantitationCodeP" constrainedElement="_GzShcJOgEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXD9QRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oWofcBpQEeSd5OoVIuDNwg" name="Assay QuantitationCode" constrainedElement="_GzShcJOgEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oWofcRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'AQtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oXdl4BpQEeSd5OoVIuDNwg" name="Assay QuantitationValue" constrainedElement="_GzShcJOgEeG_Gqo8Ix5ECw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oXeM8BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::IVL_PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GzTIgJOgEeG_Gqo8Ix5ECw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Artifact" xmi:id="_RzMJANsnEeGjc49r42wDag" name="Subject Data Non-Clinical TrialsSample" fileName="Subject Data Non-Clinical TrialsSample.xml"/>
    <packagedElement xmi:type="uml:Class" xmi:id="__G5heXIJEeGL-K1S1E9LrQ" name="Pre-Specified Event">
      <ownedComment xmi:id="__G5henIJEeGL-K1S1E9LrQ">
        <body>The template supports an observation that indicates whether a pre-specified event (usually this refers to an item listed on a CRF) occurred or not.  This structure is captured as a template to facilitate its reuse as a characteristic of different types of data within clinical trial reporting.</body>
      </ownedComment>
      <ownedRule xmi:id="_odPdwBpQEeSd5OoVIuDNwg" name="Pre-Specified EventTemplateId" constrainedElement="__G5heXIJEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_odQE0BpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.70')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_odf8cBpQEeSd5OoVIuDNwg" name="Pre-Specified EventClassCode" constrainedElement="__G5heXIJEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_odf8cRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_od3I0BpQEeSd5OoVIuDNwg" name="Pre-Specified EventMoodCode" constrainedElement="__G5heXIJEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_od3I0RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oeyV4BpQEeSd5OoVIuDNwg" name="Pre-Specified EventCodeP" constrainedElement="__G5heXIJEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oeyV4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oeWRABpQEeSd5OoVIuDNwg" name="Pre-Specified EventCode" constrainedElement="__G5heXIJEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oeWRARpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'PSEtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ofNMoBpQEeSd5OoVIuDNwg" name="Pre-Specified EventValue" constrainedElement="__G5heXIJEeGL-K1S1E9LrQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ofNMoRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="__G5he3IJEeGL-K1S1E9LrQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-HQWMPj8EeG7pMUQbTahtA" name="Event Duration">
      <ownedComment xmi:id="_cG4LoPj9EeG7pMUQbTahtA">
        <body>An observation that captures the duration of an event.  The rationale for this observation is the presence within SDTM and SEND domains of elements to record start time , stop time AND duration of an event.  It is to be used only when duration is provided directly, and cannot be derived from existing start and stop values.</body>
      </ownedComment>
      <ownedRule xmi:id="_onQ8cBpQEeSd5OoVIuDNwg" name="Event DurationTemplateId" constrainedElement="_-HQWMPj8EeG7pMUQbTahtA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_onSKkBpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.23.102')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_onkecBpQEeSd5OoVIuDNwg" name="Event DurationClassCode" constrainedElement="_-HQWMPj8EeG7pMUQbTahtA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_onkecRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_on8R4BpQEeSd5OoVIuDNwg" name="Event DurationMoodCode" constrainedElement="_-HQWMPj8EeG7pMUQbTahtA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_on8R4RpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_oo1CsBpQEeSd5OoVIuDNwg" name="Event DurationCodeP" constrainedElement="_-HQWMPj8EeG7pMUQbTahtA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_oo1CsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ooXvsBpQEeSd5OoVIuDNwg" name="Event DurationCode" constrainedElement="_-HQWMPj8EeG7pMUQbTahtA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ooXvsRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'EDtbd' and value.codeSystem = '2.16.840.1.113883.3.26.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_opQggBpQEeSd5OoVIuDNwg" name="Event DurationValue" constrainedElement="_-HQWMPj8EeG7pMUQbTahtA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_opQggRpQEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQR)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-HQWMfj8EeG7pMUQbTahtA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <profileApplication xmi:id="_BK1Hw110EeGh_7NFCJ3fGA">
      <eAnnotations xmi:id="_BK1HxF10EeGh_7NFCJ3fGA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_gr3MIBpQEeSd5OoVIuDNwg">
      <eAnnotations xmi:id="_gr3MIRpQEeSd5OoVIuDNwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_BMxBcF10EeGh_7NFCJ3fGA" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="sdtm" nsURI="http://www.openhealthtools.org/mdht/uml/cda/sdtm" packageName="sdtm" prefix="sdtm" base_Namespace="_BK1HwF10EeGh_7NFCJ3fGA"/>
  <CDA:CDATemplate xmi:id="_BMxBcl10EeGh_7NFCJ3fGA" base_Class="_BMxBcV10EeGh_7NFCJ3fGA" templateId="2.16.840.1.113883.10.20.23.11" assigningAuthorityName=""/>
  <CDA:CDATemplate xmi:id="_XAzbsGSqEeGaWrlBtEAvSQ" base_Class="_FmC1AGSqEeGaWrlBtEAvSQ" templateId="2.16.840.1.113883.10.20.23.13"/>
  <CDA:CDATemplate xmi:id="_-_jzwGSqEeGaWrlBtEAvSQ" base_Class="_1ruQ4GSqEeGaWrlBtEAvSQ" templateId="2.16.840.1.113883.10.20.23.46"/>
  <CDA:CDATemplate xmi:id="_UoC_IGSrEeGaWrlBtEAvSQ" base_Class="_JhW-kGSrEeGaWrlBtEAvSQ" templateId="2.16.840.1.113883.10.20.23.100"/>
  <CDA:CDATemplate xmi:id="_i4xSwGSrEeGaWrlBtEAvSQ" base_Class="_aI700GSrEeGaWrlBtEAvSQ" templateId="2.16.840.1.113883.10.20.23.15"/>
  <CDA:CDATemplate xmi:id="_57tp8GSrEeGaWrlBtEAvSQ" base_Class="_pxvVsGSrEeGaWrlBtEAvSQ" templateId="2.16.840.1.113883.10.20.23.101"/>
  <CDA:PropertyValidation xmi:id="_XD8-sGcNEeGQg8E6pm8Qdw"/>
  <CDA:PropertyValidation xmi:id="_xhcKIGcNEeGQg8E6pm8Qdw"/>
  <CDA:CDATemplate xmi:id="_Lc9rAGedEeGFKaG0B9CEsg" base_Class="_xvcSQGb_EeGjiJmz4TzZew" templateId="2.16.840.1.113883.10.20.23.56"/>
  <CDA:CDATemplate xmi:id="_xCrLQGehEeGFKaG0B9CEsg" base_Class="_NPsncGbuEeGjiJmz4TzZew" templateId="2.16.840.1.113883.10.20.23.81"/>
  <CDA:CDATemplate xmi:id="_sVrbMGeiEeGFKaG0B9CEsg" base_Class="_li9xQGeiEeGFKaG0B9CEsg" templateId="2.16.840.1.113883.10.20.23.68"/>
  <CDA:CDATemplate xmi:id="_m4nmgGerEeGFKaG0B9CEsg" base_Class="_j42pwGerEeGFKaG0B9CEsg" templateId="2.16.840.1.113883.10.20.23.37"/>
  <CDA:CDATemplate xmi:id="_jA9y4GiEEeG7jNHx5OkAWw" base_Class="_IWO1oGiEEeG7jNHx5OkAWw" templateId="2.16.840.1.113883.10.20.23.97"/>
  <CDA:CDATemplate xmi:id="_G4vaQGoAEeGH0KSwdtr7gA" base_Class="_8Ae3QGn_EeGH0KSwdtr7gA" templateId="2.16.840.1.113883.10.20.23.42"/>
  <CDA:CDATemplate xmi:id="_qor4cGoUEeGH0KSwdtr7gA" base_Class="_QmoEwGoUEeGH0KSwdtr7gA" templateId="2.16.840.1.113883.10.20.23.17"/>
  <CDA:CDATemplate xmi:id="_2C9usG0aEeGiP4Zd1ERrDw" base_Class="_nrFiEGoYEeGH0KSwdtr7gA" templateId="2.16.840.1.113883.10.20.23.34"/>
  <CDA:PropertyValidation xmi:id="_tshWQHH-EeGL-K1S1E9LrQ"/>
  <CDA:AssociationValidation xmi:id="_ix_ToHIEEeGL-K1S1E9LrQ" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_bdfRoHIMEeGL-K1S1E9LrQ" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_K5FVEHIVEeGL-K1S1E9LrQ" base_Class="_5cwoIHIUEeGL-K1S1E9LrQ" templateId="2.16.840.1.113883.10.20.23.26"/>
  <CDA:PropertyValidation xmi:id="_HYREQHIWEeGL-K1S1E9LrQ" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_ZQ9K0HIbEeGf4oCnGh6GdQ" base_Class="_If_OMHH-EeGL-K1S1E9LrQ" templateId="2.16.840.1.113883.10.20.25.24"/>
  <CDA:CDATemplate xmi:id="_NHc14H2hEeGtPaj3RInoHw" base_Class="_lbhbAHXQEeGBQKUAtfSaGA" templateId="2.16.840.1.113883.10.20.23.44"/>
  <CDA:AssociationValidation xmi:id="_NHHVUH26EeGAsPcSe7A-ZA"/>
  <CDA:AssociationValidation xmi:id="_rRcl8H26EeGAsPcSe7A-ZA"/>
  <CDA:CDATemplate xmi:id="_jKQB0H5pEeGbfrTsVlSE3Q" base_Class="_HJE2EH5pEeGbfrTsVlSE3Q" templateId="2.16.840.1.113883.10.20.23.83"/>
  <CDA:PropertyValidation xmi:id="_p1PaoH9PEeG03tOkpWkfyg" severity="INFO"/>
  <CDA:CDATemplate xmi:id="_G-9Q4H9SEeG03tOkpWkfyg" base_Class="_iOsK4H9NEeG03tOkpWkfyg" templateId="2.16.840.1.113883.10.20.23.93"/>
  <CDA:CDATemplate xmi:id="_uzHpkIMjEeGuDKqPeNB_5w" base_Class="_61u8UIMiEeGuDKqPeNB_5w" templateId="2.16.840.1.113883.10.20.23.95"/>
  <CDA:PropertyValidation xmi:id="_zzucsIMjEeGuDKqPeNB_5w"/>
  <CDA:CDATemplate xmi:id="_aufzsIjAEeGwjb3wu_tBLA" base_Class="_BQFfoIjAEeGwjb3wu_tBLA" templateId="2.16.840.1.113883.10.20.23.43"/>
  <CDA:CDATemplate xmi:id="_kf-tIIjGEeGwjb3wu_tBLA" base_Class="_YOwMEIjGEeGwjb3wu_tBLA" templateId="2.16.840.1.113883.10.20.23.27"/>
  <CDA:CDATemplate xmi:id="_TigQoIjMEeGwjb3wu_tBLA" base_Class="_6-6mEIjLEeGwjb3wu_tBLA" templateId="2.16.840.1.113883.10.20.23.52"/>
  <CDA:CDATemplate xmi:id="_-N-rgIpqEeGissEAbjTgHg" base_Class="_sq4oMIpqEeGissEAbjTgHg" templateId="2.16.840.1.113883.10.20.23.71"/>
  <CDA:CDATemplate xmi:id="_INA4gIsQEeGEXvbgIb1duQ" base_Class="_iR3fUIsBEeGEXvbgIb1duQ" templateId="2.16.840.1.113883.10.20.23.21"/>
  <CDA:CDATemplate xmi:id="_TuzUIIslEeGEXvbgIb1duQ" base_Class="_CPm5YIslEeGEXvbgIb1duQ" templateId="2.16.840.1.113883.10.20.23.33"/>
  <CDA:AssociationValidation xmi:id="_aocRwI4gEeGz0ZL5qt1C9w"/>
  <CDA:AssociationValidation xmi:id="_rDDDAI4gEeGz0ZL5qt1C9w"/>
  <CDA:CDATemplate xmi:id="_DCaEgI40EeGz0ZL5qt1C9w" base_Class="_55IL0I4zEeGz0ZL5qt1C9w" templateId="2.16.840.1.113883.10.20.23.47"/>
  <CDA:CDATemplate xmi:id="_oePj0I-oEeGSf7-C4p-dMA" base_Class="_L1vSUI-oEeGSf7-C4p-dMA" templateId="2.16.840.1.113883.10.20.23.59"/>
  <CDA:CDATemplate xmi:id="_ub3G4I-qEeGSf7-C4p-dMA" base_Class="_mLJN4I-qEeGSf7-C4p-dMA" templateId="2.16.840.1.113883.10.20.23.78"/>
  <CDA:CDATemplate xmi:id="_xVOAMI_XEeG51rA0mhosMg" base_Class="_dS2eEI_XEeG51rA0mhosMg" templateId="2.16.840.1.113883.10.20.23.88"/>
  <CDA:PropertyValidation xmi:id="_hidxwI_aEeG51rA0mhosMg"/>
  <CDA:CDATemplate xmi:id="_ze4rUI_rEeG51rA0mhosMg" base_Class="_mA6qUI_rEeG51rA0mhosMg" templateId="2.16.840.1.113883.10.20.23.67"/>
  <CDA:CDATemplate xmi:id="_zHvnIJBuEeGHg6ZmktWLJQ" base_Class="_xmX7AJBuEeGHg6ZmktWLJQ" templateId="2.16.840.1.113883.10.20.23.72"/>
  <CDA:CDATemplate xmi:id="_UiGH8JB4EeGHg6ZmktWLJQ" base_Class="_KzX_4JB4EeGHg6ZmktWLJQ" templateId="2.16.840.1.113883.10.20.23.92"/>
  <CDA:CDATemplate xmi:id="_HK-cAJLMEeGM5Pa1LbomZA" base_Class="_T0sngJLKEeGM5Pa1LbomZA" templateId="2.16.840.1.113883.10.20.23.53"/>
  <CDA:CDATemplate xmi:id="_zXEDQJLkEeGM5Pa1LbomZA" base_Class="_zXC1IJLkEeGM5Pa1LbomZA" templateId="2.16.840.1.113883.10.20.23.54"/>
  <CDA:CDATemplate xmi:id="_CwoKEJLsEeGM5Pa1LbomZA" base_Class="_CwmU4JLsEeGM5Pa1LbomZA" templateId="2.16.840.1.113883.10.20.23.65"/>
  <CDA:CDATemplate xmi:id="_olHMQJOXEeGM5Pa1LbomZA" base_Class="_olGlMJOXEeGM5Pa1LbomZA" templateId="2.16.840.1.113883.10.20.23.66"/>
  <CDA:CDATemplate xmi:id="_BFRj0JOiEeG_Gqo8Ix5ECw" base_Class="_x1wssJOhEeG_Gqo8Ix5ECw" templateId="2.16.840.1.113883.10.20.23.40"/>
  <CDA:PropertyValidation xmi:id="_wfqxkJOjEeG_Gqo8Ix5ECw"/>
  <CDA:CDATemplate xmi:id="_wlmDUJO3EeG_Gqo8Ix5ECw" base_Class="_wllcQJO3EeG_Gqo8Ix5ECw" templateId="2.16.840.1.113883.10.20.23.84"/>
  <CDA:CDATemplate xmi:id="_OAywcJSREeGlSMYQDPvGqQ" base_Class="_Dj3ekJSREeGlSMYQDPvGqQ" templateId="2.16.840.1.113883.10.20.23.32"/>
  <CDA:CDATemplate xmi:id="_1T8kYJk_EeGGPbk7a3RIVg" base_Class="_1TzacJk_EeGGPbk7a3RIVg" templateId="2.16.840.1.113883.10.20.23.82"/>
  <CDA:CDATemplate xmi:id="_YLHncJoYEeG78ZMLtGK0RQ" base_Class="_YK0sgJoYEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.12" assigningAuthorityName=""/>
  <CDA:CDATemplate xmi:id="_eiC30JoZEeG78ZMLtGK0RQ" base_Class="_eh5t4JoZEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.58"/>
  <CDA:CDATemplate xmi:id="_6IIqV5oZEeG78ZMLtGK0RQ" base_Class="_6IIqEJoZEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.57"/>
  <CDA:CDATemplate xmi:id="_jQ-3VpoaEeG78ZMLtGK0RQ" base_Class="_jQ-2sJoaEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.45"/>
  <CDA:CDATemplate xmi:id="_aLdAIJobEeG78ZMLtGK0RQ" base_Class="_Ue9XYJobEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.18"/>
  <CDA:CDATemplate xmi:id="_e9VazJobEeG78ZMLtGK0RQ" base_Class="_e9VawJobEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.19"/>
  <CDA:CDATemplate xmi:id="_l-7OPJobEeG78ZMLtGK0RQ" base_Class="_l-7OMJobEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.22"/>
  <CDA:CDATemplate xmi:id="_voyEbJobEeG78ZMLtGK0RQ" base_Class="_voyEYJobEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.28"/>
  <CDA:CDATemplate xmi:id="__eYEHJobEeG78ZMLtGK0RQ" base_Class="__eYEEJobEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.41"/>
  <CDA:CDATemplate xmi:id="_Lrb23JocEeG78ZMLtGK0RQ" base_Class="_Lrb20JocEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.50"/>
  <CDA:CDATemplate xmi:id="_mxZXjJocEeG78ZMLtGK0RQ" base_Class="_mxZXgJocEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.55"/>
  <CDA:CDATemplate xmi:id="_0P_DnJocEeG78ZMLtGK0RQ" base_Class="_0P_DkJocEeG78ZMLtGK0RQ" templateId="2.16.840.1.113883.10.20.23.62"/>
  <CDA:CDATemplate xmi:id="_0r0pwJrGEeGpk_Q1ImbEig" base_Class="_0rD0wJrGEeGpk_Q1ImbEig" templateId="2.16.840.1.113883.10.20.23.64"/>
  <CDA:CDATemplate xmi:id="_1B8qzJrGEeGpk_Q1ImbEig" base_Class="_1B8qwJrGEeGpk_Q1ImbEig" templateId="2.16.840.1.113883.10.20.23.99"/>
  <CDA:CDATemplate xmi:id="_1gqADJrGEeGpk_Q1ImbEig" base_Class="_1gqAAJrGEeGpk_Q1ImbEig" templateId="2.16.840.1.113883.10.20.23.94"/>
  <CDA:CDATemplate xmi:id="_yXOA8KaaEeGlCYcoCUv7-w" base_Class="_phIKAKaaEeGlCYcoCUv7-w" templateId="2.16.840.1.113883.10.20.23.14"/>
  <CDA:CDATemplate xmi:id="_oha3sKmTEeGQftsict2bpw" base_Class="_ohZpkKmTEeGQftsict2bpw" templateId="2.16.840.1.113883.10.20.23.60"/>
  <CDA:PropertyValidation xmi:id="_oha3samTEeGQftsict2bpw"/>
  <CDA:PropertyValidation xmi:id="_lMMkIKmaEeGQftsict2bpw"/>
  <CDA:PropertyValidation xmi:id="_E-U5AKmbEeGQftsict2bpw"/>
  <CDA:CDATemplate xmi:id="_mZNizbWAEeGLXdg8xIiGrA" base_Class="_mZNiwLWAEeGLXdg8xIiGrA" templateId="2.16.840.1.113883.10.20.23.38"/>
  <CDA:CDATemplate xmi:id="_aspM8LWLEeGLXdg8xIiGrA" base_Class="_VqsWALWLEeGLXdg8xIiGrA" templateId="2.16.840.1.113883.10.20.23.51"/>
  <CDA:CDATemplate xmi:id="_Yb8eILZmEeGvx_6yr-0T9g" base_Class="_YbytILZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.87"/>
  <CDA:CDATemplate xmi:id="_sYRD8LZmEeGvx_6yr-0T9g" base_Class="_sYRCoLZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.85"/>
  <CDA:CDATemplate xmi:id="_2TrjhrZmEeGvx_6yr-0T9g" base_Class="_2Tri4LZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.86"/>
  <CDA:PropertyValidation xmi:id="_SZS68Mq5EeG3m89ZGmmeBA"/>
  <CDA:CDATemplate xmi:id="_4lDD4NKGEeGO8bQEpB8bpQ" base_Class="_ys8oENKGEeGO8bQEpB8bpQ" templateId="2.16.840.1.113883.10.20.23.30"/>
  <CDA:PropertyValidation xmi:id="_5FoocNKGEeGO8bQEpB8bpQ"/>
  <CDA:PropertyValidation xmi:id="_E105ANKHEeGO8bQEpB8bpQ"/>
  <CDA:CDATemplate xmi:id="_aJeOENKNEeGX6v8HTY_PeQ" base_Class="_FydD4NKIEeGO8bQEpB8bpQ" templateId="2.16.840.1.113883.10.20.23.23"/>
  <CDA:CDATemplate xmi:id="_TVTOwNKREeGX6v8HTY_PeQ" base_Class="_MltKQNKREeGX6v8HTY_PeQ" templateId="2.16.840.1.113883.10.20.23.96"/>
  <CDA:CDATemplate xmi:id="_zsDzENWkEeGnt_U1oKRe-A" base_Class="_iMrPgNKNEeGX6v8HTY_PeQ" templateId="2.16.840.1.113883.10.20.23.75"/>
  <CDA:CDATemplate xmi:id="_m4t24NW5EeGJ8IViYnBfBA" base_Class="_XrR40NW4EeGKmsh0mvGT9Q" templateId="2.16.840.1.113883.10.20.23.73"/>
  <CDA:CDATemplate xmi:id="_1HRYkNW_EeGJ8IViYnBfBA" base_Class="_w_aIINW7EeGJ8IViYnBfBA" templateId="2.16.840.1.113883.10.20.23.79"/>
  <CDA:CDATemplate xmi:id="_6Gr44NW_EeGJ8IViYnBfBA" base_Class="_PTdgANW9EeGJ8IViYnBfBA" templateId="2.16.840.1.113883.10.20.23.80"/>
  <CDA:CDATemplate xmi:id="_ClQ4YNZoEeGuB6oePFgHkw" base_Class="_zDVFEHINEeGL-K1S1E9LrQ" templateId="2.16.840.1.113883.10.20.23.48"/>
  <CDA:CDATemplate xmi:id="_JwfooNZrEeGuB6oePFgHkw" base_Class="_YbytjLZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.49"/>
  <CDA:CDATemplate xmi:id="_eiWCwNZyEeGuB6oePFgHkw" base_Class="_YbytoLZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.31"/>
  <CDA:CDATemplate xmi:id="_amXYkNZ2EeGuB6oePFgHkw" base_Class="_sYRDArZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.77"/>
  <CDA:CDATemplate xmi:id="_Zq8EUNc1EeGM0fMLwqY1SQ" base_Class="_sYRDL7ZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.89"/>
  <CDA:CDATemplate xmi:id="_H-pzUNc2EeGM0fMLwqY1SQ" base_Class="_sYRDRbZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.63"/>
  <CDA:CDATemplate xmi:id="_M464cNc3EeGM0fMLwqY1SQ" base_Class="_sYRDXLZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.90"/>
  <CDA:CDATemplate xmi:id="_EJDv4Nc4EeGM0fMLwqY1SQ" base_Class="_sYRDc7ZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.61"/>
  <CDA:CDATemplate xmi:id="_iVW58Nc5EeGM0fMLwqY1SQ" base_Class="_sYRDirZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.36"/>
  <CDA:CDATemplate xmi:id="_6eUokNc6EeGM0fMLwqY1SQ" base_Class="_sYRDobZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.35"/>
  <CDA:CDATemplate xmi:id="_S1c5kNc9EeGpIJX6e1rAMA" base_Class="_sYRDuLZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.25.25"/>
  <CDA:CDATemplate xmi:id="_eT-88Nc-EeGpIJX6e1rAMA" base_Class="_sYRDz7ZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.98"/>
  <CDA:CDATemplate xmi:id="_P6CPUNdTEeGpIJX6e1rAMA" base_Class="_sYRD5rZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.20"/>
  <CDA:CDATemplate xmi:id="_Et7z8Nf7EeGEv9qe5Ch_sQ" base_Class="_EtyC8Nf7EeGEv9qe5Ch_sQ" templateId="2.16.840.1.113883.10.20.23.91"/>
  <CDA:CDATemplate xmi:id="_7d8gMNgDEeGTW4_acnW5rA" base_Class="_FhxtaYsoEeGEXvbgIb1duQ" templateId="2.16.840.1.113883.10.20.23.69"/>
  <CDA:CDATemplate xmi:id="_fgXhMNpXEeG9W8qc6K-erg" base_Class="_2TrjGrZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.74"/>
  <CDA:CDATemplate xmi:id="_pTC4ANpeEeG9W8qc6K-erg" base_Class="_2TrjZLZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.76"/>
  <CDA:CDATemplate xmi:id="_HbXqkNpsEeGwZdMPbuS7rw" base_Class="_2TrjOLZmEeGvx_6yr-0T9g" templateId="2.16.840.1.113883.10.20.23.39"/>
  <CDA:CDATemplate xmi:id="_rOHGcNpyEeGwZdMPbuS7rw" base_Class="_P_ecgLc0EeGbTfv2pIp07Q" templateId="2.16.840.1.113883.10.20.23.29"/>
  <CDA:CDATemplate xmi:id="_orwMgNp0EeGwZdMPbuS7rw" base_Class="_GzShcJOgEeG_Gqo8Ix5ECw" templateId="2.16.840.1.113883.10.20.23.16"/>
  <CDA:CDATemplate xmi:id="_4VlA0IMvEeGuDKqPeNB_5w" base_Class="__G5heXIJEeGL-K1S1E9LrQ" templateId="2.16.840.1.113883.10.20.23.70"/>
  <CDA:PropertyValidation xmi:id="_cJ-yYPCLEeGh3MBMz4mmQA"/>
  <CDA:CDATemplate xmi:id="_k5GPMPj9EeG7pMUQbTahtA" base_Class="_-HQWMPj8EeG7pMUQbTahtA" templateId="2.16.840.1.113883.10.20.23.102"/>
  <Ecore:EPackage xmi:id="_g4-bEBpQEeSd5OoVIuDNwg" base_Package="_BK1HwF10EeGh_7NFCJ3fGA" packageName="sdtm" nsPrefix="sdtm" nsURI="http://www.openhealthtools.org/mdht/uml/cda/sdtm" basePackage="org.openhealthtools.mdht.uml.cda" prefix="sdtm">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.sdtm'</annotation>
  </Ecore:EPackage>
  <Ecore:EClass xmi:id="_g5LPYBpQEeSd5OoVIuDNwg" base_Class="_BMxBcV10EeGh_7NFCJ3fGA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Subject Data Human Clinical TrialsTemplateId Subject Data Human Clinical TrialsClassCode Subject Data Human Clinical TrialsMoodCode Subject Data Human Clinical TrialsCode Subject Data Human Clinical TrialsCodeP Subject Data Human Clinical TrialsConfidentialityCode Subject Data Human Clinical TrialsEffectiveTime Subject Data Human Clinical TrialsId Subject Data Human Clinical TrialsSetId Subject Data Human Clinical TrialsVersionNumber Subject Data Human Clinical TrialsStudyRelationship Subject Data Human Clinical TrialsSubjectParticipation Subject Data Human Clinical TrialsAuthor Subject Data Human Clinical TrialsCustodian Subject Data Human Clinical TrialsHuman Clinical Subject Data Document Section' templateId.root='2.16.840.1.113883.10.20.23.11' classCode='DOCCLIN' moodCode='EVN' code.code='TBD' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.Subject Data Human Clinical TrialsCode='Subject Data Human Clinical TrialsCodeP' confidentialityCode.codeSystem='2.16.840.1.113883.5.25' confidentialityCode.codeSystemName='Confidentiality' constraints.validation.warning='Subject Data Human Clinical TrialsConfidentialityCodeP' constraints.validation.dependOn.Subject Data Human Clinical TrialsConfidentialityCode='Subject Data Human Clinical TrialsConfidentialityCodeP' constraints.validation.info='Subject Data Human Clinical TrialsLanguageCode Subject Data Human Clinical TrialsRealmCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsStudyRelationship typeCode='DOC' constraints.validation.error='Subject Data Human Clinical TrialsStudyRelationshipTypeCode Subject Data Human Clinical TrialsStudyRelationshipStudy'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsStudyRelationshipStudy classCode='CLNTRL' constraints.validation.error='Subject Data Human Clinical TrialsStudyRelationshipStudyClassCode Subject Data Human Clinical TrialsStudyRelationshipStudyCode Subject Data Human Clinical TrialsStudyRelationshipStudyId Subject Data Human Clinical TrialsStudyRelationshipStudyMoodCode' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsSubjectParticipation typeCode='RCT' constraints.validation.error='Subject Data Human Clinical TrialsSubjectParticipationTypeCode Subject Data Human Clinical TrialsSubjectParticipationStudySubjectRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsSubjectParticipationStudySubjectRole classCode='PAT' constraints.validation.error='Subject Data Human Clinical TrialsSubjectParticipationStudySubjectRoleClassCode Subject Data Human Clinical TrialsSubjectParticipationStudySubjectRoleId Subject Data Human Clinical TrialsSubjectParticipationStudySubjectRoleStudySubject'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsSubjectParticipationStudySubjectRoleStudySubject classCode='PSN' constraints.validation.error='Subject Data Human Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectClassCode Subject Data Human Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectDeterminerCode Subject Data Human Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectAdministrativeGenderCode Subject Data Human Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectAdministrativeGenderCodeP' determinerCode='INSTANCE' administrativeGenderCode.codeSystem='2.16.840.1.113883.3.26.1.1' administrativeGenderCode.codeSystemName='NCI Thesaurus' constraints.validation.info='Subject Data Human Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectBirthTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsAuthor typeCode='AUT' constraints.validation.error='Subject Data Human Clinical TrialsAuthorTypeCode Subject Data Human Clinical TrialsAuthorAssignedAuthor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsAuthorAssignedAuthor classCode='ASSIGNED' constraints.validation.error='Subject Data Human Clinical TrialsAuthorAssignedAuthorClassCode Subject Data Human Clinical TrialsAuthorAssignedAuthorId Subject Data Human Clinical TrialsAuthorAssignedAuthorAssignedPerson Subject Data Human Clinical TrialsAuthorAssignedAuthorRepresentedOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsAuthorAssignedAuthorPerson classCode='PSN' constraints.validation.error='Subject Data Human Clinical TrialsAuthorAssignedAuthorPersonClassCode Subject Data Human Clinical TrialsAuthorAssignedAuthorPersonDeterminerCode Subject Data Human Clinical TrialsAuthorAssignedAuthorPersonName' determinerCode='INSTANCE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsAuthorAssignedAuthorOrganization constraints.validation.error='Subject Data Human Clinical TrialsAuthorAssignedAuthorOrganizationAddr Subject Data Human Clinical TrialsAuthorAssignedAuthorOrganizationClassCode Subject Data Human Clinical TrialsAuthorAssignedAuthorOrganizationDeterminerCode Subject Data Human Clinical TrialsAuthorAssignedAuthorOrganizationId' classCode='ORG' determinerCode='INSTANCE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsCustodian typeCode='CST' constraints.validation.error='Subject Data Human Clinical TrialsCustodianTypeCode Subject Data Human Clinical TrialsCustodianAssignedCustodian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsCustodianAssignedCustodian classCode='ASSIGNED' constraints.validation.error='Subject Data Human Clinical TrialsCustodianAssignedCustodianClassCode Subject Data Human Clinical TrialsCustodianAssignedCustodianRepresentedCustodianOrganization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataHumanClinicalTrialsCustodianAssignedCustodianCustodianOrganization classCode='ORG' constraints.validation.error='Subject Data Human Clinical TrialsCustodianAssignedCustodianCustodianOrganizationClassCode Subject Data Human Clinical TrialsCustodianAssignedCustodianCustodianOrganizationDeterminerCode Subject Data Human Clinical TrialsCustodianAssignedCustodianCustodianOrganizationId Subject Data Human Clinical TrialsCustodianAssignedCustodianCustodianOrganizationName' determinerCode='INSTANCE'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hGpDoBpQEeSd5OoVIuDNwg" base_Class="_1ruQ4GSqEeGaWrlBtEAvSQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Human Clinical Subject DemographicsTemplateId Human Clinical Subject DemographicsMoodCode Human Clinical Subject DemographicsCode Human Clinical Subject DemographicsCodeP Human Clinical Subject DemographicsStudy Arm Human Clinical Subject DemographicsParticipant Human Clinical Subject DemographicsDomain Assignment Human Clinical Subject DemographicsReference Period Human Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeValue Human Clinical Subject DemographicsAgeAssociationTypeCode Human Clinical Subject DemographicsAgeAssociationSubjectAge Human Clinical Subject DemographicsLocationParticipationStudySiteClassCode Human Clinical Subject DemographicsLocationParticipationStudySiteAddr Human Clinical Subject DemographicsLocationParticipationTypeCode' templateId.root='2.16.840.1.113883.10.20.23.46' classCode='ACT' moodCode='EVN' code.code='DMGtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Human Clinical Subject DemographicsCode='Human Clinical Subject DemographicsCodeP' constraints.validation.warning='Human Clinical Subject DemographicsData Collection' constraints.validation.info='Human Clinical Subject DemographicsComment Human Clinical Subject DemographicsRelated Record Human Clinical Subject DemographicsSupplemental Value Human Clinical Subject DemographicsFinding About' constraints.validation.query='Human Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeValue Human Clinical Subject DemographicsAgeAssociationTypeCode Human Clinical Subject DemographicsAgeAssociationSubjectAge Human Clinical Subject DemographicsLocationParticipationStudySiteClassCode Human Clinical Subject DemographicsLocationParticipationStudySiteAddr Human Clinical Subject DemographicsLocationParticipationTypeCode' constraints.validation.dependOn.Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode='Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmHumanClinicalSubjectDemographicsAgeAssociation typeCode='COMP' constraints.validation.error='Human Clinical Subject DemographicsAgeAssociationTypeCode Human Clinical Subject DemographicsAgeAssociationSubjectAge Human Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeValue' constraints.validation.query='Human Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeValue' constraints.validation.dependOn.Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode='Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmHumanClinicalSubjectDemographicsAgeAssociationSubjectAge classCode='OBS' constraints.validation.error='Human Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP Human Clinical Subject DemographicsAgeAssociationSubjectAgeValue' moodCode='EVN' code.code='C25150' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Reported Age' constraints.validation.dependOn.Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode='Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmHumanClinicalSubjectDemographicsLocationParticipation typeCode='LOC' constraints.validation.error='Human Clinical Subject DemographicsLocationParticipationTypeCode Human Clinical Subject DemographicsLocationParticipationStudySiteClassCode Human Clinical Subject DemographicsLocationParticipationStudySiteAddr' constraints.validation.query='Human Clinical Subject DemographicsLocationParticipationStudySiteClassCode Human Clinical Subject DemographicsLocationParticipationStudySiteAddr'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmHumanClinicalSubjectDemographicsLocationParticipationStudySite classCode='SDLOC' constraints.validation.error='Human Clinical Subject DemographicsLocationParticipationStudySiteClassCode Human Clinical Subject DemographicsLocationParticipationStudySiteAddr'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hLRsABpQEeSd5OoVIuDNwg" base_Class="_JhW-kGSrEeGaWrlBtEAvSQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VisitTemplateId VisitClassCode VisitMoodCode VisitCode VisitCodeP VisitId VisitDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.100' classCode='ENC' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.info='VisitText VisitHuman Clinical Vital Sign VisitPlanned Study Day VisitECG Test Result VisitPhysical Examination VisitMicrobiology Specimen VisitMicrobiology Susceptibility VisitPharmacokinetic Concentration Finding VisitFinding About VisitDrug Accountability VisitStudy Day Period VisitComment VisitRelated Record VisitSupplemental Value VisitHuman Clinical Laboratory Test Result VisitQuestionnaire Finding VisitPharmacokinetic Parameter Finding' constraints.validation.warning='VisitEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hONrQBpQEeSd5OoVIuDNwg" base_Class="_aI700GSrEeGaWrlBtEAvSQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Adverse EventTemplateId Adverse EventClassCode Adverse EventMoodCode Adverse EventId Adverse EventCode Adverse EventCodeP Adverse EventValue Adverse EventValueP Adverse EventTargetSiteCode Adverse EventDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.15' classCode='OBS' moodCode='EVN' code.code='C49562' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Adverse Event - Reported' constraints.validation.dependOn.Adverse EventCode='Adverse EventCodeP' constraints.validation.warning='Adverse EventEffectiveTime Adverse EventBody System or Organ Class Adverse EventSerious Event Adverse EventStudy Treatment Action Taken Adverse EventStudy Treatment Causality' value.codeSystemName='MedDRA' targetSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' targetSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.info='Adverse EventTargetSiteCodeP Adverse EventGroupIdentifier Adverse EventEvent Severity Adverse EventPre-Specified Event Adverse EventStudy Day Period Adverse EventComment Adverse EventRelated Record Adverse EventSupplemental Value Adverse EventStart Relative to Reference Period Adverse EventStop Relative to Reference Period Adverse EventOther Treatment Action Taken Adverse EventNon-Study Treatment Relationship Adverse EventEvent Pattern Adverse EventEvent Outcome Adverse EventConcomitant Treatment Adverse EventToxicity Adverse EventCategory Adverse EventSub-Category Adverse EventFinding About Adverse EventEvent Duration' constraints.validation.dependOn.Adverse EventTargetSiteCode='Adverse EventTargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hSypQBpQEeSd5OoVIuDNwg" base_Class="_pxvVsGSrEeGaWrlBtEAvSQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Vital SignTemplateId Vital SignClassCode Vital SignMoodCode Vital SignId Vital SignCode Vital SignStatusCode Vital SignInterpretationCode Vital SignTargetSiteCode Vital SignDomain Assignment Vital SignassociatedConsciousnessconsciousnessStateClassCode Vital SignassociatedConsciousnessconsciousnessStateCodeP Vital SignassociatedConsciousnessconsciousnessStateCode Vital SignassociatedConsciousnessconsciousnessStateMoodCode Vital SignassociatedConsciousnessconsciousnessStateValue Vital SignassociatedConsciousnessconsciousnessStateValueP' templateId.root='2.16.840.1.113883.10.20.23.101' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.warning='Vital SignEffectiveTime Vital SignInterpretationCodeP Vital SignPlanned Study Day Vital SignGroup Identifier' constraints.validation.info='Vital SignValue Vital SignTargetSiteCodeP Vital SignEvent Study Day Vital SignTimingReference Vital SignNonPerformanceReason Vital SignConsciousnessState Vital SignStudy Day Period Vital SignExclusion Reason Vital SignComment Vital SignRelated Record Vital SignSupplemental Value Vital SignCategory Vital SignSub-Category Vital SignPosition of Subject Vital SignFinding About' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Vital SignInterpretationCode='Vital SignInterpretationCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' targetSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Vital SignTargetSiteCode='Vital SignTargetSiteCodeP' constraints.validation.query='Vital SignassociatedConsciousnessconsciousnessStateClassCode Vital SignassociatedConsciousnessconsciousnessStateCodeP Vital SignassociatedConsciousnessconsciousnessStateCode Vital SignassociatedConsciousnessconsciousnessStateMoodCode Vital SignassociatedConsciousnessconsciousnessStateValue Vital SignassociatedConsciousnessconsciousnessStateValueP' constraints.validation.dependOn.Vital SignassociatedConsciousnessconsciousnessStateCode='Vital SignassociatedConsciousnessconsciousnessStateCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmVitalSignassociatedConsciousness constraints.validation.error='Vital SignassociatedConsciousnessTemplateId Vital SignassociatedConsciousnessTypeCode Vital SignassociatedConsciousnessConsciousnessState Vital SignassociatedConsciousnessconsciousnessStateClassCode Vital SignassociatedConsciousnessconsciousnessStateCodeP Vital SignassociatedConsciousnessconsciousnessStateCode Vital SignassociatedConsciousnessconsciousnessStateMoodCode Vital SignassociatedConsciousnessconsciousnessStateValue Vital SignassociatedConsciousnessconsciousnessStateValueP' templateId.root='null' typeCode='COMP' constraints.validation.query='Vital SignassociatedConsciousnessconsciousnessStateClassCode Vital SignassociatedConsciousnessconsciousnessStateCodeP Vital SignassociatedConsciousnessconsciousnessStateCode Vital SignassociatedConsciousnessconsciousnessStateMoodCode Vital SignassociatedConsciousnessconsciousnessStateValue Vital SignassociatedConsciousnessconsciousnessStateValueP' constraints.validation.dependOn.Vital SignassociatedConsciousnessconsciousnessStateCode='Vital SignassociatedConsciousnessconsciousnessStateCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmVitalSignassociatedConsciousnessconsciousnessState constraints.validation.error='Vital SignassociatedConsciousnessconsciousnessStateClassCode Vital SignassociatedConsciousnessconsciousnessStateCode Vital SignassociatedConsciousnessconsciousnessStateCodeP Vital SignassociatedConsciousnessconsciousnessStateMoodCode Vital SignassociatedConsciousnessconsciousnessStateValue Vital SignassociatedConsciousnessconsciousnessStateValueP' code.code='CStbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Vital SignassociatedConsciousnessconsciousnessStateCode='Vital SignassociatedConsciousnessconsciousnessStateCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hafMsBpQEeSd5OoVIuDNwg" base_Class="_FmC1AGSqEeGaWrlBtEAvSQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Human Clinical Subject Data Document SectionTemplateId Human Clinical Subject Data Document SectionClassCode Human Clinical Subject Data Document SectionMoodCode Human Clinical Subject Data Document SectionCode Human Clinical Subject Data Document SectionCodeP Human Clinical Subject Data Document SectionText Human Clinical Subject Data Document SectionexposureAssociationTypeCode Human Clinical Subject Data Document SectionexposureAssociationExposure Substance Administration' templateId.root='2.16.840.1.113883.10.20.23.13' classCode='DOCSECT' moodCode='EVN' code.code='HUStbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.info='Human Clinical Subject Data Document SectionHuman Clinical Subject Demographics Human Clinical Subject Data Document SectionExposureAssociation Human Clinical Subject Data Document SectionProtocol Deviation Human Clinical Subject Data Document SectionClinical Event Human Clinical Subject Data Document SectionSubject Characteristic Human Clinical Subject Data Document SectionStudy Subject Event Human Clinical Subject Data Document SectionStudy Subject Finding Human Clinical Subject Data Document SectionStudy Subject Intervention Human Clinical Subject Data Document SectionComment Human Clinical Subject Data Document SectionAdverse Event Human Clinical Subject Data Document SectionInclusion or Exclusion Criteria Not Met Human Clinical Subject Data Document SectionFinding About' constraints.validation.warning='Human Clinical Subject Data Document SectionHuman Clinical Visit Human Clinical Subject Data Document SectionSubject Element Human Clinical Subject Data Document SectionDisposition Human Clinical Subject Data Document SectionMedical History' constraints.validation.query='Human Clinical Subject Data Document SectionexposureAssociationTypeCode Human Clinical Subject Data Document SectionexposureAssociationExposure Substance Administration'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmHumanClinicalSubjectDataDocumentSectionexposureAssociation typeCode='COMP' constraints.validation.error='Human Clinical Subject Data Document SectionexposureAssociationTypeCode Human Clinical Subject Data Document SectionexposureAssociationExposure Substance Administration'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmHumanClinicalSubjectDataDocumentSectionconcommitantMedicationAssociation typeCode='COMP' constraints.validation.error='Human Clinical Subject Data Document SectionconcommitantMedicationAssociationTypeCode Human Clinical Subject Data Document SectionconcommitantMedicationAssociationHuman Clinical Concomitant Medication'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmHumanClinicalSubjectDataDocumentSectionsubstanceUseAssociation typeCode='COMP' constraints.validation.error='Human Clinical Subject Data Document SectionsubstanceUseAssociationTypeCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_he1hMBpQEeSd5OoVIuDNwg" base_Class="_NPsncGbuEeGjiJmz4TzZew">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study ArmTemplateId Study ArmClassCode Study ArmMoodCode Study ArmCode Study ArmCodeP Study ArmText' templateId.root='2.16.840.1.113883.10.20.23.81' classCode='ACT' moodCode='INT' code.codeSystem='locally defined' code.codeSystemName='Study Arm Type' constraints.validation.dependOn.Study ArmCode='Study ArmCodeP' constraints.validation.warning='Study ArmEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hh41MBpQEeSd5OoVIuDNwg" base_Class="_xvcSQGb_EeGjiJmz4TzZew">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Non Performance ReasonTemplateId Non Performance ReasonClassCode Non Performance ReasonCode Non Performance ReasonCodeP Non Performance ReasonMoodCode Non Performance ReasonValue Non Performance ReasonValueP' templateId.root='2.16.840.1.113883.10.20.23.56' classCode='OBS' code.code='C66727' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Reason for non completion' constraints.validation.dependOn.Non Performance ReasonCode='Non Performance ReasonCodeP' moodCode='EVN' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hknZEBpQEeSd5OoVIuDNwg" base_Class="_li9xQGeiEeGFKaG0B9CEsg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Planned Study DayTemplateId Planned Study DayClassCode Planned Study DayMoodCode Planned Study DayCode Planned Study DayCodeP Planned Study DayValue' templateId.root='2.16.840.1.113883.10.20.23.68' classCode='OBS' moodCode='INT' code.code='C83450' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Planned Study Day of Visit' constraints.validation.dependOn.Planned Study DayCode='Planned Study DayCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hmrOkBpQEeSd5OoVIuDNwg" base_Class="_j42pwGerEeGFKaG0B9CEsg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Event Study DayTemplateId Event Study DayClassCode Event Study DayMoodCode Event Study DayCode Event Study DayCodeP Event Study DayValue' templateId.root='2.16.840.1.113883.10.20.23.37' classCode='OBS' moodCode='EVN' code.code='ESDtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Event Study DayCode='Event Study DayCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hpLwABpQEeSd5OoVIuDNwg" base_Class="_IWO1oGiEEeG7jNHx5OkAWw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Timing ReferenceTemplateId Timing ReferenceClassCode Timing ReferenceMoodCode Timing ReferenceCode Timing ReferenceCodeP Timing ReferenceAnchorAssociationAnchorTimePointClassCode Timing ReferenceAnchorAssociationAnchorTimePointMoodCode Timing ReferenceAnchorAssociationAnchorTimePointCodeP Timing ReferenceAnchorAssociationAnchorTimePointCode Timing ReferenceAnchorAssociationAnchorTimePointEffectiveTime Timing ReferenceAnchorAssociationTypeCode Timing ReferenceAnchorAssociationAnchorTimePoint' templateId.root='2.16.840.1.113883.10.20.23.97' classCode='ACT' moodCode='EVN' constraints.validation.info='Timing ReferenceId Timing ReferenceEffectiveTime Timing ReferenceText Timing ReferenceAnchorAssociation' code.code='TRtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Timing ReferenceCode='Timing ReferenceCodeP' constraints.validation.query='Timing ReferenceAnchorAssociationAnchorTimePointClassCode Timing ReferenceAnchorAssociationAnchorTimePointMoodCode Timing ReferenceAnchorAssociationAnchorTimePointCodeP Timing ReferenceAnchorAssociationAnchorTimePointCode Timing ReferenceAnchorAssociationAnchorTimePointEffectiveTime Timing ReferenceAnchorAssociationTypeCode Timing ReferenceAnchorAssociationAnchorTimePoint' constraints.validation.dependOn.Timing ReferenceAnchorAssociationAnchorTimePointCode='Timing ReferenceAnchorAssociationAnchorTimePointCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmTimingReferenceAnchorAssociation typeCode='COMP' constraints.validation.error='Timing ReferenceAnchorAssociationTypeCode Timing ReferenceAnchorAssociationAnchorTimePoint Timing ReferenceAnchorAssociationAnchorTimePointClassCode Timing ReferenceAnchorAssociationAnchorTimePointMoodCode Timing ReferenceAnchorAssociationAnchorTimePointCodeP Timing ReferenceAnchorAssociationAnchorTimePointCode Timing ReferenceAnchorAssociationAnchorTimePointEffectiveTime' constraints.validation.query='Timing ReferenceAnchorAssociationAnchorTimePointClassCode Timing ReferenceAnchorAssociationAnchorTimePointMoodCode Timing ReferenceAnchorAssociationAnchorTimePointCodeP Timing ReferenceAnchorAssociationAnchorTimePointCode Timing ReferenceAnchorAssociationAnchorTimePointEffectiveTime' constraints.validation.dependOn.Timing ReferenceAnchorAssociationAnchorTimePointCode='Timing ReferenceAnchorAssociationAnchorTimePointCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmTimingReferenceAnchorAssociationAnchorTimePoint classCode='ACT' constraints.validation.error='Timing ReferenceAnchorAssociationAnchorTimePointClassCode Timing ReferenceAnchorAssociationAnchorTimePointMoodCode Timing ReferenceAnchorAssociationAnchorTimePointCode Timing ReferenceAnchorAssociationAnchorTimePointCodeP' code.code='ATPtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Timing ReferenceAnchorAssociationAnchorTimePointCode='Timing ReferenceAnchorAssociationAnchorTimePointCodeP' constraints.validation.info='Timing ReferenceAnchorAssociationAnchorTimePointEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hua1UBpQEeSd5OoVIuDNwg" base_Class="_8Ae3QGn_EeGH0KSwdtr7gA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Group IdentifierTemplateId Group IdentifierClassCode Group IdentifierMoodCode Group IdentifierId Group IdentifierCode Group IdentifierCodeP' templateId.root='2.16.840.1.113883.10.20.23.42' classCode='ACT' moodCode='EVN' code.code='C83204' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Group IdentifierCode='Group IdentifierCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hwrfIBpQEeSd5OoVIuDNwg" base_Class="_QmoEwGoUEeGH0KSwdtr7gA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Body System or Organ ClassTemplateId Body System or Organ ClassClassCode Body System or Organ ClassMoodCode Body System or Organ ClassCode Body System or Organ ClassCodeP Body System or Organ ClassValue Body System or Organ ClassValueP' templateId.root='2.16.840.1.113883.10.20.23.17' classCode='OBS' moodCode='EVN' code.code='C88026' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Body System or Organ Class' constraints.validation.dependOn.Body System or Organ ClassCode='Body System or Organ ClassCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_hzm3UBpQEeSd5OoVIuDNwg" base_Class="_nrFiEGoYEeGH0KSwdtr7gA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Event or Finding SeverityTemplateId Event or Finding SeverityClassCode Event or Finding SeverityMoodCode Event or Finding SeverityCode Event or Finding SeverityCodeP Event or Finding SeverityValue Event or Finding SeverityValueP' templateId.root='2.16.840.1.113883.10.20.23.34' classCode='OBS' moodCode='EVN' code.code='C66769' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Event or Finding SeverityCode='Event or Finding SeverityCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_h2yuMBpQEeSd5OoVIuDNwg" base_Class="_If_OMHH-EeGL-K1S1E9LrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Concomitant MedicationTemplateId Concomitant MedicationClassCode Concomitant MedicationMoodCode Concomitant MedicationId Concomitant MedicationRouteCode Concomitant MedicationConsumableMaterial Concomitant MedicationDomain Assignment Human Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeValue Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationTypeCode Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAge Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeCode Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeValue' templateId.root='2.16.840.1.113883.10.20.25.24' classCode='SBADM' moodCode='EVN' constraints.validation.warning='Concomitant MedicationStatusCode' constraints.validation.info='Concomitant MedicationText Concomitant MedicationEffectiveTime Concomitant MedicationDoseQuantity Concomitant MedicationMaxDoseQuantity Concomitant MedicationRouteCodeP Concomitant MedicationGroup Identifier Concomitant MedicationNonPerformanceReason Concomitant MedicationPre-Specified Event Concomitant MedicationData Collection Concomitant MedicationStudy Day Period Concomitant MedicationTiming Reference Concomitant MedicationComment Concomitant MedicationRelated Record Concomitant MedicationSupplemental Value Concomitant MedicationStart Relative to Reference Period Concomitant MedicationStop Relative to Reference Period Concomitant MedicationIndication Concomitant MedicationIntended Regimen Concomitant MedicationCategory Concomitant MedicationSub-Category Concomitant MedicationFinding About Concomitant MedicationEvent Duration' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Concomitant MedicationRouteCode='Concomitant MedicationRouteCodeP' constraints.validation.query='Human Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode Human Clinical Subject DemographicsAgeAssociationSubjectAgeValue Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationTypeCode Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAge Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeClassCode Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeMoodCode Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeCode Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeValue' constraints.validation.dependOn.Human Clinical Subject DemographicsAgeAssociationSubjectAgeCode='Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP' constraints.validation.dependOn.Concomitant MedicationHuman Clinical Subject DemographicsAgeAssociationSubjectAgeCode='Human Clinical Subject DemographicsAgeAssociationSubjectAgeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_h7JCsBpQEeSd5OoVIuDNwg" base_Class="_5cwoIHIUEeGL-K1S1E9LrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Consumable MaterialTemplateId Consumable MaterialTypeCode Consumable MaterialMedication Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCodeP Consumable MaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP Consumable MaterialMedicationMedicationMaterialingredientRoleClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleAssignedPerson Consumable MaterialMedicationMedicationMaterialClassCode Consumable MaterialMedicationMedicationMaterialCode Consumable MaterialMedicationMedicationMaterialCodeP Consumable MaterialMedicationMedicationMaterialLotNumberText Consumable MaterialMedicationClassCode' templateId.root='2.16.840.1.113883.10.20.23.26' typeCode='CSM' constraints.validation.query='Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCodeP Consumable MaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP Consumable MaterialMedicationMedicationMaterialingredientRoleClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleAssignedPerson Consumable MaterialMedicationMedicationMaterialClassCode Consumable MaterialMedicationMedicationMaterialCode Consumable MaterialMedicationMedicationMaterialCodeP Consumable MaterialMedicationMedicationMaterialLotNumberText Consumable MaterialMedicationClassCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmConsumableMaterialMedication classCode='MANU' constraints.validation.error='Consumable MaterialMedicationClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCodeP Consumable MaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP Consumable MaterialMedicationMedicationMaterialingredientRoleClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleAssignedPerson Consumable MaterialMedicationMedicationMaterialClassCode Consumable MaterialMedicationMedicationMaterialCode Consumable MaterialMedicationMedicationMaterialCodeP Consumable MaterialMedicationMedicationMaterialLotNumberText' constraints.validation.query='Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCodeP Consumable MaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP Consumable MaterialMedicationMedicationMaterialingredientRoleClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleAssignedPerson Consumable MaterialMedicationMedicationMaterialClassCode Consumable MaterialMedicationMedicationMaterialCode Consumable MaterialMedicationMedicationMaterialCodeP Consumable MaterialMedicationMedicationMaterialLotNumberText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmConsumableMaterialMedicationMedicationMaterial classCode='MMAT' constraints.validation.error='Consumable MaterialMedicationMedicationMaterialClassCode Consumable MaterialMedicationMedicationMaterialCode Consumable MaterialMedicationMedicationMaterialCodeP' determinerCode='KIND' code.codeSystem='locally defined' code.codeSystemName='Medication Item Type' formCode.codeSystem='2.16.840.1.113883.3.26.1.1' formCode.codeSystemName='NCI Thesaurus' constraints.validation.info='Consumable MaterialMedicationMedicationMaterialLotNumberText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmConsumableMaterialMedicationMedicationMaterialasSpecializedKind classCode='ASSIGNED' constraints.validation.error='Consumable MaterialMedicationMedicationMaterialasSpecializedKindClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindCodeP Consumable MaterialMedicationMedicationMaterialasSpecializedKindRepresentedOrganization Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode' code.codeSystem='unknown' code.codeSystemName='Medication Class Type' constraints.validation.query='Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmConsumableMaterialMedicationMedicationMaterialasSpecializedKindsubstanceClass classCode='ORG' constraints.validation.error='Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassClassCode Consumable MaterialMedicationMedicationMaterialasSpecializedKindsubstanceClassDeterminerCode' determinerCode='KIND'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmConsumableMaterialMedicationMedicationMaterialingredientRole classCode='ASSIGNED' constraints.validation.error='Consumable MaterialMedicationMedicationMaterialingredientRoleClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleAssignedPerson'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmConsumableMaterialMedicationMedicationMaterialingredientRoleingredientSubstance classCode='MMAT' constraints.validation.error='Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceClassCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceDeterminerCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCode Consumable MaterialMedicationMedicationMaterialingredientRoleingredientSubstanceCodeP' determinerCode='INSTANCE' code.codeSystem='unknown' code.codeSystemName='Substance Ingredient Type'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_iCRlcBpQEeSd5OoVIuDNwg" base_Class="_lbhbAHXQEeGBQKUAtfSaGA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Human Clinical ExposureTemplateId Human Clinical ExposureClassCode Human Clinical ExposureId Human Clinical ExposureMoodCode Human Clinical ExposureRouteCode Human Clinical ExposureApproachSiteCode Human Clinical ExposureConsumableMaterial Human Clinical ExposureDomain Assignment Human Clinical ExposureelementOrderAssociationelementOrderClassCode Human Clinical ExposureelementOrderAssociationelementOrderCodeP Human Clinical ExposureelementOrderAssociationelementOrderCode Human Clinical ExposureelementOrderAssociationelementOrderMoodCode Human Clinical ExposureelementOrderAssociationelementOrderValue Human Clinical ExposureelementOrderAssociationTypeCode Human Clinical ExposureelementOrderAssociationElementOrder' templateId.root='2.16.840.1.113883.10.20.23.44' classCode='SBADM' constraints.validation.warning='Human Clinical ExposureDoseQuantity Human Clinical ExposureEffectiveTime' moodCode='EVN' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' constraints.validation.info='Human Clinical ExposureRouteCodeP Human Clinical ExposureMaxDoseQuantity Human Clinical ExposureText Human Clinical ExposureApproachSiteCodeP Human Clinical ExposureGroup Identifier Human Clinical ExposureStudy Epoch Human Clinical ExposureElementOrderAssociation Human Clinical ExposureTiming Reference Human Clinical ExposureStudy Day Period Human Clinical ExposureComment Human Clinical ExposureRelated Record Human Clinical ExposureSupplemental Value Human Clinical ExposureIntended Regimen Human Clinical ExposureDose Adjustment Reason Human Clinical ExposureCategory Human Clinical ExposureSub-Category Human Clinical ExposureFinding About Human Clinical ExposureEvent Duration' constraints.validation.dependOn.Human Clinical ExposureRouteCode='Human Clinical ExposureRouteCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' approachSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.query='Human Clinical ExposureelementOrderAssociationelementOrderClassCode Human Clinical ExposureelementOrderAssociationelementOrderCodeP Human Clinical ExposureelementOrderAssociationelementOrderCode Human Clinical ExposureelementOrderAssociationelementOrderMoodCode Human Clinical ExposureelementOrderAssociationelementOrderValue Human Clinical ExposureelementOrderAssociationTypeCode Human Clinical ExposureelementOrderAssociationElementOrder' constraints.validation.dependOn.Human Clinical ExposureelementOrderAssociationelementOrderCode='Human Clinical ExposureelementOrderAssociationelementOrderCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmHumanClinicalExposureelementOrderAssociation typeCode='REFR' constraints.validation.error='Human Clinical ExposureelementOrderAssociationTypeCode Human Clinical ExposureelementOrderAssociationElementOrder Human Clinical ExposureelementOrderAssociationelementOrderClassCode Human Clinical ExposureelementOrderAssociationelementOrderCodeP Human Clinical ExposureelementOrderAssociationelementOrderCode Human Clinical ExposureelementOrderAssociationelementOrderMoodCode Human Clinical ExposureelementOrderAssociationelementOrderValue' constraints.validation.query='Human Clinical ExposureelementOrderAssociationelementOrderClassCode Human Clinical ExposureelementOrderAssociationelementOrderCodeP Human Clinical ExposureelementOrderAssociationelementOrderCode Human Clinical ExposureelementOrderAssociationelementOrderMoodCode Human Clinical ExposureelementOrderAssociationelementOrderValue' constraints.validation.dependOn.Human Clinical ExposureelementOrderAssociationelementOrderCode='Human Clinical ExposureelementOrderAssociationelementOrderCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmHumanClinicalExposureelementOrderAssociationelementOrder classCode='OBS' constraints.validation.error='Human Clinical ExposureelementOrderAssociationelementOrderClassCode Human Clinical ExposureelementOrderAssociationelementOrderCode Human Clinical ExposureelementOrderAssociationelementOrderCodeP Human Clinical ExposureelementOrderAssociationelementOrderMoodCode Human Clinical ExposureelementOrderAssociationelementOrderValue' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Human Clinical ExposureelementOrderAssociationelementOrderCode='Human Clinical ExposureelementOrderAssociationelementOrderCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_iJNT4BpQEeSd5OoVIuDNwg" base_Class="_HJE2EH5pEeGbfrTsVlSE3Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study EpochTemplateId Study EpochClassCode Study EpochMoodCode Study EpochCode Study EpochCodeP Study EpochText' templateId.root='2.16.840.1.113883.10.20.23.83' classCode='ACT' moodCode='EVN' code.codeSystem='locally defined' code.codeSystemName='Study Epoch Type' constraints.validation.dependOn.Study EpochCode='Study EpochCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_iMaY4BpQEeSd5OoVIuDNwg" base_Class="_iOsK4H9NEeG03tOkpWkfyg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Subject ElementTemplateId Subject ElementClassCode Subject ElementMoodCode Subject ElementId Subject ElementCode Subject ElementCodeP Subject ElementEffectiveTime Subject ElementDomain Assignment Human Clinical ExposureelementOrderAssociationelementOrderClassCode Human Clinical ExposureelementOrderAssociationelementOrderCodeP Human Clinical ExposureelementOrderAssociationelementOrderCode Human Clinical ExposureelementOrderAssociationelementOrderMoodCode Human Clinical ExposureelementOrderAssociationelementOrderValue Subject ElementHuman Clinical ExposureelementOrderAssociationTypeCode Subject ElementHuman Clinical ExposureelementOrderAssociationElementOrder Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderClassCode Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderCodeP Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderCode Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderMoodCode Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderValue' templateId.root='2.16.840.1.113883.10.20.23.93' classCode='ACT' moodCode='EVN' code.codeSystem='locally defined' code.codeSystemName='Subject Element Type' constraints.validation.dependOn.Subject ElementCode='Subject ElementCodeP' constraints.validation.info='Subject ElementStudy Epoch Subject ElementElementOrderAssociation Subject ElementComment Subject ElementRelated Record Subject ElementSupplemental Value Subject ElementFinding About' constraints.validation.query='Human Clinical ExposureelementOrderAssociationelementOrderClassCode Human Clinical ExposureelementOrderAssociationelementOrderCodeP Human Clinical ExposureelementOrderAssociationelementOrderCode Human Clinical ExposureelementOrderAssociationelementOrderMoodCode Human Clinical ExposureelementOrderAssociationelementOrderValue Subject ElementHuman Clinical ExposureelementOrderAssociationTypeCode Subject ElementHuman Clinical ExposureelementOrderAssociationElementOrder Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderClassCode Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderCodeP Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderCode Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderMoodCode Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderValue' constraints.validation.dependOn.Human Clinical ExposureelementOrderAssociationelementOrderCode='Human Clinical ExposureelementOrderAssociationelementOrderCodeP' constraints.validation.dependOn.Subject ElementHuman Clinical ExposureelementOrderAssociationelementOrderCode='Human Clinical ExposureelementOrderAssociationelementOrderCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectElementelementOrderAssociation typeCode='REFR' constraints.validation.error='Subject ElementelementOrderAssociationTypeCode Subject ElementelementOrderAssociationElementOrder Subject ElementelementOrderAssociationelementOrderClassCode Subject ElementelementOrderAssociationelementOrderCode Subject ElementelementOrderAssociationelementOrderMoodCode Subject ElementelementOrderAssociationelementOrderValue' constraints.validation.query='Subject ElementelementOrderAssociationelementOrderClassCode Subject ElementelementOrderAssociationelementOrderCode Subject ElementelementOrderAssociationelementOrderMoodCode Subject ElementelementOrderAssociationelementOrderValue'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectElementelementOrderAssociationelementOrder classCode='OBS' constraints.validation.error='Subject ElementelementOrderAssociationelementOrderClassCode Subject ElementelementOrderAssociationelementOrderCode Subject ElementelementOrderAssociationelementOrderMoodCode Subject ElementelementOrderAssociationelementOrderValue' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_iQ_W4BpQEeSd5OoVIuDNwg" base_Class="_61u8UIMiEeGuDKqPeNB_5w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Substance UseTemplateId Substance UseClassCode Substance UseMoodCode Substance UseId Substance UseRouteCode Substance UseConsumable Material Substance UseDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.95' classCode='SBADM' moodCode='EVN' constraints.validation.info='Substance UseStatusCode Substance UseText Substance UseEffectiveTime Substance UseDoseQuantity Substance UseMaxDoseQuantity Substance UseRouteCodeP Substance UsePre-Specified Event Substance UseNonPerformanceReason Substance UseData Collection Substance UseStudy Day Period Substance UseComment Substance UseRelated Record Substance UseSupplemental Value Substance UseStart Relative to Reference Period Substance UseStop Relative to Reference Period Substance UseCategory Substance UseSub-Category Substance UseFinding About Substance UseEvent Duration' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Substance UseRouteCode='Substance UseRouteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_iWPDQBpQEeSd5OoVIuDNwg" base_Class="_BQFfoIjAEeGwjb3wu_tBLA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Human Clinical DispositionTemplateId Human Clinical DispositionClassCode Human Clinical DispositionCode Human Clinical DispositionId Human Clinical DispositionMoodCode Human Clinical DispositionDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.43' classCode='ACT' constraints.validation.warning='Human Clinical DispositionEffectiveTime' moodCode='EVN' constraints.validation.info='Human Clinical DispositionStudy Epoch Human Clinical DispositionGroup Identifier Human Clinical DispositionStudy Day Period Human Clinical DispositionComment Human Clinical DispositionRelated Record Human Clinical DispositionSupplemental Value Human Clinical DispositionCategory Human Clinical DispositionSub-Category Human Clinical DispositionFinding About'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_iYo3ABpQEeSd5OoVIuDNwg" base_Class="_YOwMEIjGEeGwjb3wu_tBLA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Data CollectionTemplateId Data CollectionClassCode Data CollectionMoodCode Data CollectionCode Data CollectionCodeVS Data CollectionCodeP' templateId.root='2.16.840.1.113883.10.20.23.27' classCode='ACT' moodCode='EVN' code.code='DCtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Data CollectionCode='Data CollectionCodeP' constraints.validation.dependOn.Data CollectionCodeVS='Data CollectionCodeP' constraints.validation.info='Data CollectionEffectiveTime Data CollectionNegationInd Data CollectionEvent Study Day'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_icTPABpQEeSd5OoVIuDNwg" base_Class="_6-6mEIjLEeGwjb3wu_tBLA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Medical History ItemTemplateId Medical History ItemClassCode Medical History ItemMoodCode Medical History ItemId Medical History ItemCode Medical History ItemCodeP Medical History ItemValue Medical History ItemValueP Medical History ItemPre-Specified Event Medical History ItemDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.52' classCode='OBS' moodCode='EVN' code.code='MHItbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Medical History ItemCode='Medical History ItemCodeP' constraints.validation.info='Medical History ItemStatusCode Medical History ItemEffectiveTime Medical History ItemGroup Identifier Medical History ItemNonPerformanceReason Medical History ItemBody System or Organ Class Medical History ItemData Collection Medical History ItemComment Medical History ItemRelated Record Medical History ItemSupplemental Value Medical History ItemStart Relative to Reference Period Medical History ItemStop Relative to Reference Period Medical History ItemCategory Medical History ItemSub-Category Medical History ItemFinding About' value.codeSystem='locally defined' value.codeSystemName='Medication Item Type'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ihq3MBpQEeSd5OoVIuDNwg" base_Class="_sq4oMIpqEeGissEAbjTgHg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Protocol DeviationTemplateId Protocol DeviationClassCode Protocol DeviationMoodCode Protocol DeviationId Protocol DeviationCode Protocol DeviationCodeP Protocol DeviationValue Protocol DeviationDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.71' code.code='PDtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Protocol DeviationCode='Protocol DeviationCodeP' constraints.validation.info='Protocol DeviationEffectiveTime Protocol DeviationStudy Epoch Protocol DeviationComment Protocol DeviationRelated Record Protocol DeviationSupplemental Value Protocol DeviationCategory Protocol DeviationSub-Category Protocol DeviationFinding About'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ikndgBpQEeSd5OoVIuDNwg" base_Class="_iR3fUIsBEeGEXvbgIb1duQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Clinical EventTemplateId Clinical EventClassCode Clinical EventMoodCode Clinical EventCode Clinical EventCodeVS Clinical EventCodeP Clinical EventId Clinical EventValue Clinical EventValueP Clinical EventDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.21' classCode='OBS' moodCode='EVN' code.code='CEtbd' code.codeSystemName='MedDRA' constraints.validation.dependOn.Clinical EventCode='Clinical EventCodeP' constraints.validation.dependOn.Clinical EventCodeVS='Clinical EventCodeP' constraints.validation.info='Clinical EventEffectiveTime Clinical EventStatusCode Clinical EventPre-Specified Event Clinical EventNonPerformanceReason Clinical EventBody System or Organ Class Clinical EventData Collection Clinical EventEvent Severity Clinical EventComment Clinical EventRelated Record Clinical EventSupplemental Value Clinical EventStart Relative to Reference Period Clinical EventStop Relative to Reference Period Clinical EventCategory Clinical EventFinding About' value.codeSystemName='MedDRA'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_isQWkBpQEeSd5OoVIuDNwg" base_Class="_CPm5YIslEeGEXvbgIb1duQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ECG Test ResultTemplateId ECG Test ResultClassCode ECG Test ResultMoodCode ECG Test ResultId ECG Test ResultCode ECG Test ResultCodeP ECG Test ResultMethodCode ECG Test ResultInterpretationCode ECG Test ResultStudy Day Period ECG Test ResultDomain Assignment ECG Test ResultleadLocationAssociationecgLeadLocationClassCode ECG Test ResultleadLocationAssociationecgLeadLocationCodeP ECG Test ResultleadLocationAssociationecgLeadLocationCode ECG Test ResultleadLocationAssociationecgLeadLocationMoodCode ECG Test ResultleadLocationAssociationecgLeadLocationValue ECG Test ResultleadLocationAssociationecgLeadLocationValueP ECG Test ResultleadLocationAssociationTypeCode ECG Test ResultleadLocationAssociationEcgLeadLocation ECG Test ResultassociatedConsciousnessconsciousnessStateClassCode ECG Test ResultassociatedConsciousnessconsciousnessStateCodeP ECG Test ResultassociatedConsciousnessconsciousnessStateCode ECG Test ResultassociatedConsciousnessconsciousnessStateMoodCode ECG Test ResultassociatedConsciousnessconsciousnessStateValue ECG Test ResultassociatedConsciousnessconsciousnessStateValueP ECG Test ResultassociatedConsciousnessTypeCode ECG Test ResultassociatedConsciousnessConsciousnessState' templateId.root='2.16.840.1.113883.10.20.23.33' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.ECG Test ResultCode='ECG Test ResultCodeP' constraints.validation.info='ECG Test ResultText ECG Test ResultStatusCode ECG Test ResultMethodCodeP ECG Test ResultGroup Identifier ECG Test ResultNonPerformanceReason ECG Test ResultTiming Reference ECG Test ResultStudy Test Performer ECG Test ResultStudy Finding Evaluator ECG Test ResultComment ECG Test ResultRelated Record ECG Test ResultSupplemental Value ECG Test ResultCategory ECG Test ResultSub-Category ECG Test ResultPosition of Subject ECG Test ResultFinding About' constraints.validation.warning='ECG Test ResultEffectiveTime ECG Test ResultValue ECG Test ResultInterpretationCodeP ECG Test ResultLeadLocationAssociation ECG Test ResultAssociatedConsciousness ECG Test ResultPlanned Study Day' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.ECG Test ResultMethodCode='ECG Test ResultMethodCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.ECG Test ResultInterpretationCode='ECG Test ResultInterpretationCodeP' constraints.validation.query='ECG Test ResultleadLocationAssociationecgLeadLocationClassCode ECG Test ResultleadLocationAssociationecgLeadLocationCodeP ECG Test ResultleadLocationAssociationecgLeadLocationCode ECG Test ResultleadLocationAssociationecgLeadLocationMoodCode ECG Test ResultleadLocationAssociationecgLeadLocationValue ECG Test ResultleadLocationAssociationecgLeadLocationValueP ECG Test ResultleadLocationAssociationTypeCode ECG Test ResultleadLocationAssociationEcgLeadLocation ECG Test ResultassociatedConsciousnessconsciousnessStateClassCode ECG Test ResultassociatedConsciousnessconsciousnessStateCodeP ECG Test ResultassociatedConsciousnessconsciousnessStateCode ECG Test ResultassociatedConsciousnessconsciousnessStateMoodCode ECG Test ResultassociatedConsciousnessconsciousnessStateValue ECG Test ResultassociatedConsciousnessconsciousnessStateValueP ECG Test ResultassociatedConsciousnessTypeCode ECG Test ResultassociatedConsciousnessConsciousnessState' constraints.validation.dependOn.ECG Test ResultleadLocationAssociationecgLeadLocationCode='ECG Test ResultleadLocationAssociationecgLeadLocationCodeP' constraints.validation.dependOn.ECG Test ResultassociatedConsciousnessconsciousnessStateCode='ECG Test ResultassociatedConsciousnessconsciousnessStateCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmECGTestResultleadLocationAssociation typeCode='COMP' constraints.validation.error='ECG Test ResultleadLocationAssociationTypeCode ECG Test ResultleadLocationAssociationEcgLeadLocation ECG Test ResultleadLocationAssociationecgLeadLocationClassCode ECG Test ResultleadLocationAssociationecgLeadLocationCodeP ECG Test ResultleadLocationAssociationecgLeadLocationCode ECG Test ResultleadLocationAssociationecgLeadLocationMoodCode ECG Test ResultleadLocationAssociationecgLeadLocationValue ECG Test ResultleadLocationAssociationecgLeadLocationValueP' constraints.validation.query='ECG Test ResultleadLocationAssociationecgLeadLocationClassCode ECG Test ResultleadLocationAssociationecgLeadLocationCodeP ECG Test ResultleadLocationAssociationecgLeadLocationCode ECG Test ResultleadLocationAssociationecgLeadLocationMoodCode ECG Test ResultleadLocationAssociationecgLeadLocationValue ECG Test ResultleadLocationAssociationecgLeadLocationValueP' constraints.validation.dependOn.ECG Test ResultleadLocationAssociationecgLeadLocationCode='ECG Test ResultleadLocationAssociationecgLeadLocationCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmECGTestResultleadLocationAssociationecgLeadLocation classCode='OBS' constraints.validation.error='ECG Test ResultleadLocationAssociationecgLeadLocationClassCode ECG Test ResultleadLocationAssociationecgLeadLocationCode ECG Test ResultleadLocationAssociationecgLeadLocationCodeP ECG Test ResultleadLocationAssociationecgLeadLocationMoodCode ECG Test ResultleadLocationAssociationecgLeadLocationValue ECG Test ResultleadLocationAssociationecgLeadLocationValueP' code.code='C87881' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.ECG Test ResultleadLocationAssociationecgLeadLocationCode='ECG Test ResultleadLocationAssociationecgLeadLocationCodeP' moodCode='EVN' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmECGTestResultassociatedConsciousness typeCode='COMP' constraints.validation.error='ECG Test ResultassociatedConsciousnessTypeCode ECG Test ResultassociatedConsciousnessConsciousnessState ECG Test ResultassociatedConsciousnessconsciousnessStateClassCode ECG Test ResultassociatedConsciousnessconsciousnessStateCodeP ECG Test ResultassociatedConsciousnessconsciousnessStateCode ECG Test ResultassociatedConsciousnessconsciousnessStateMoodCode ECG Test ResultassociatedConsciousnessconsciousnessStateValue ECG Test ResultassociatedConsciousnessconsciousnessStateValueP' constraints.validation.query='ECG Test ResultassociatedConsciousnessconsciousnessStateClassCode ECG Test ResultassociatedConsciousnessconsciousnessStateCodeP ECG Test ResultassociatedConsciousnessconsciousnessStateCode ECG Test ResultassociatedConsciousnessconsciousnessStateMoodCode ECG Test ResultassociatedConsciousnessconsciousnessStateValue ECG Test ResultassociatedConsciousnessconsciousnessStateValueP' constraints.validation.dependOn.ECG Test ResultassociatedConsciousnessconsciousnessStateCode='ECG Test ResultassociatedConsciousnessconsciousnessStateCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmECGTestResultassociatedConsciousnessconsciousnessState constraints.validation.error='ECG Test ResultassociatedConsciousnessconsciousnessStateClassCode ECG Test ResultassociatedConsciousnessconsciousnessStateCode ECG Test ResultassociatedConsciousnessconsciousnessStateCodeP ECG Test ResultassociatedConsciousnessconsciousnessStateMoodCode ECG Test ResultassociatedConsciousnessconsciousnessStateValue ECG Test ResultassociatedConsciousnessconsciousnessStateValueP' code.code='CStbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.ECG Test ResultassociatedConsciousnessconsciousnessStateCode='ECG Test ResultassociatedConsciousnessconsciousnessStateCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i4kUQBpQEeSd5OoVIuDNwg" base_Class="_55IL0I4zEeGz0ZL5qt1C9w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Inclusion or Exclusion Criteria Not MetTemplateId Inclusion or Exclusion Criteria Not MetClassCode Inclusion or Exclusion Criteria Not MetMoodCode Inclusion or Exclusion Criteria Not MetId Inclusion or Exclusion Criteria Not MetCode Inclusion or Exclusion Criteria Not MetCodeP Inclusion or Exclusion Criteria Not MetValue Inclusion or Exclusion Criteria Not MetDomain Assignment Inclusion or Exclusion Criteria Not MetCategory' templateId.root='2.16.840.1.113883.10.20.23.47' classCode='OBS' moodCode='EVN' code.codeSystem='locally defined' code.codeSystemName='Inclusion/Exclusion Criteria Type' constraints.validation.dependOn.Inclusion or Exclusion Criteria Not MetCode='Inclusion or Exclusion Criteria Not MetCodeP' constraints.validation.info='Inclusion or Exclusion Criteria Not MetData Collection Inclusion or Exclusion Criteria Not MetComment Inclusion or Exclusion Criteria Not MetRelated Record Inclusion or Exclusion Criteria Not MetSupplemental Value Inclusion or Exclusion Criteria Not MetSub-Category Inclusion or Exclusion Criteria Not MetFinding About'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i7TfMBpQEeSd5OoVIuDNwg" base_Class="_L1vSUI-oEeGSf7-C4p-dMA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Non-human Laboratory Test ResultTemplateId Non-human Laboratory Test ResultClassCode Non-human Laboratory Test ResultCode Non-human Laboratory Test ResultCodeP Non-human Laboratory Test ResultId Non-human Laboratory Test ResultMoodCode Non-human Laboratory Test ResultMethodCode Non-human Laboratory Test ResultInterpretationCode Non-human Laboratory Test ResultDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.59' classCode='OBS' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Non-human Laboratory Test ResultCode='Non-human Laboratory Test ResultCodeP' moodCode='EVN' constraints.validation.info='Non-human Laboratory Test ResultStatusCode Non-human Laboratory Test ResultGroup Identifier Non-human Laboratory Test ResultNonPerformanceReason Non-human Laboratory Test ResultStudy Test Performer Non-human Laboratory Test ResultExclusion Indicator Non-human Laboratory Test ResultStudy Day Period Non-human Laboratory Test ResultTiming Reference Non-human Laboratory Test ResultComment Non-human Laboratory Test ResultRelated Record Non-human Laboratory Test ResultSupplemental Value Non-human Laboratory Test ResultToxicity Non-human Laboratory Test ResultCategory Non-human Laboratory Test ResultSub-Category Non-human Laboratory Test ResultFasting Status' constraints.validation.warning='Non-human Laboratory Test ResultValue Non-human Laboratory Test ResultMethodCodeP Non-human Laboratory Test ResultInterpretationCodeP Non-human Laboratory Test ResultSpecimen Information Non-human Laboratory Test ResultPlanned Study Day' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Non-human Laboratory Test ResultMethodCode='Non-human Laboratory Test ResultMethodCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Non-human Laboratory Test ResultInterpretationCode='Non-human Laboratory Test ResultInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jAm18BpQEeSd5OoVIuDNwg" base_Class="_mLJN4I-qEeGSf7-C4p-dMA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Specimen InformationTemplateId Specimen InformationClassCode Specimen InformationMoodCode Specimen InformationCode Specimen InformationCodeP Specimen InformationTargetSiteCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP Specimen InformationparticipatingSpecimenroleOfSpecimenClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenId Specimen InformationparticipatingSpecimenTemplateId Specimen InformationparticipatingSpecimenTypeCode Specimen InformationparticipatingSpecimenRoleOfSpecimen Specimen InformationportionAssociationportionOrTotalityMoodCode Specimen InformationportionAssociationportionOrTotalityCodeP Specimen InformationportionAssociationportionOrTotalityCode Specimen InformationportionAssociationportionOrTotalityValue Specimen InformationportionAssociationportionOrTotalityValueP Specimen InformationportionAssociationTypeCode Specimen InformationportionAssociationSpecimenCondition Specimen InformationusabilityAssociationspecimenUsabilityMoodCode Specimen InformationusabilityAssociationspecimenUsabilityCodeP Specimen InformationusabilityAssociationspecimenUsabilityCode Specimen InformationusabilityAssociationspecimenUsabilityValue Specimen InformationusabilityAssociationTypeCode Specimen InformationusabilityAssociationSpecimenUsability Specimen InformationconditionAssociationspecimenConditionMoodCode Specimen InformationconditionAssociationspecimenConditionCodeP Specimen InformationconditionAssociationspecimenConditionCode Specimen InformationconditionAssociationspecimenConditionValue Specimen InformationconditionAssociationspecimenConditionValueP Specimen InformationconditionAssociationTypeCode Specimen InformationconditionAssociationSpecimenCondition' templateId.root='2.16.840.1.113883.10.20.23.78' classCode='PROC' moodCode='EVN' code.code='SCLtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.warning='Specimen InformationEffectiveTime Specimen InformationTargetSiteCodeP Specimen InformationParticipatingSpecimen' targetSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' targetSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Specimen InformationTargetSiteCode='Specimen InformationTargetSiteCodeP' constraints.validation.info='Specimen InformationEvent Study Day Specimen InformationTiming Reference Specimen InformationPortionAssociation Specimen InformationUsabilityAssociation Specimen InformationConditionAssociation' constraints.validation.query='Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP Specimen InformationparticipatingSpecimenroleOfSpecimenClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenId Specimen InformationparticipatingSpecimenTemplateId Specimen InformationparticipatingSpecimenTypeCode Specimen InformationparticipatingSpecimenRoleOfSpecimen Specimen InformationportionAssociationportionOrTotalityMoodCode Specimen InformationportionAssociationportionOrTotalityCodeP Specimen InformationportionAssociationportionOrTotalityCode Specimen InformationportionAssociationportionOrTotalityValue Specimen InformationportionAssociationportionOrTotalityValueP Specimen InformationportionAssociationTypeCode Specimen InformationportionAssociationSpecimenCondition Specimen InformationusabilityAssociationspecimenUsabilityMoodCode Specimen InformationusabilityAssociationspecimenUsabilityCodeP Specimen InformationusabilityAssociationspecimenUsabilityCode Specimen InformationusabilityAssociationspecimenUsabilityValue Specimen InformationusabilityAssociationTypeCode Specimen InformationusabilityAssociationSpecimenUsability Specimen InformationconditionAssociationspecimenConditionMoodCode Specimen InformationconditionAssociationspecimenConditionCodeP Specimen InformationconditionAssociationspecimenConditionCode Specimen InformationconditionAssociationspecimenConditionValue Specimen InformationconditionAssociationspecimenConditionValueP Specimen InformationconditionAssociationTypeCode Specimen InformationconditionAssociationSpecimenCondition' constraints.validation.dependOn.Specimen InformationportionAssociationportionOrTotalityCode='Specimen InformationportionAssociationportionOrTotalityCodeP' constraints.validation.dependOn.Specimen InformationusabilityAssociationspecimenUsabilityCode='Specimen InformationusabilityAssociationspecimenUsabilityCodeP' constraints.validation.dependOn.Specimen InformationconditionAssociationspecimenConditionCode='Specimen InformationconditionAssociationspecimenConditionCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSpecimenInformationparticipatingSpecimen constraints.validation.error='Specimen InformationparticipatingSpecimenTemplateId Specimen InformationparticipatingSpecimenTypeCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP Specimen InformationparticipatingSpecimenroleOfSpecimenClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenId' templateId.root='null' typeCode='SPC' constraints.validation.warning='Specimen InformationparticipatingSpecimenRoleOfSpecimen' constraints.validation.query='Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP Specimen InformationparticipatingSpecimenroleOfSpecimenClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSpecimenInformationparticipatingSpecimenroleOfSpecimen classCode='SPEC' constraints.validation.error='Specimen InformationparticipatingSpecimenroleOfSpecimenClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP' constraints.validation.info='Specimen InformationparticipatingSpecimenroleOfSpecimenId' constraints.validation.query='Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSpecimenInformationparticipatingSpecimenroleOfSpecimenspecimenEntity classCode='ENT' constraints.validation.error='Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityClassCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityDeterminerCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCode Specimen InformationparticipatingSpecimenroleOfSpecimenspecimenEntityCodeP' determinerCode='INSTANCE' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSpecimenInformationportionAssociation typeCode='COMP' constraints.validation.error='Specimen InformationportionAssociationTypeCode Specimen InformationportionAssociationSpecimenCondition Specimen InformationportionAssociationportionOrTotalityMoodCode Specimen InformationportionAssociationportionOrTotalityCodeP Specimen InformationportionAssociationportionOrTotalityCode Specimen InformationportionAssociationportionOrTotalityValue Specimen InformationportionAssociationportionOrTotalityValueP' constraints.validation.query='Specimen InformationportionAssociationportionOrTotalityMoodCode Specimen InformationportionAssociationportionOrTotalityCodeP Specimen InformationportionAssociationportionOrTotalityCode Specimen InformationportionAssociationportionOrTotalityValue Specimen InformationportionAssociationportionOrTotalityValueP' constraints.validation.dependOn.Specimen InformationportionAssociationportionOrTotalityCode='Specimen InformationportionAssociationportionOrTotalityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSpecimenInformationportionAssociationportionOrTotality classCode='OBS' moodCode='EVN' constraints.validation.error='Specimen InformationportionAssociationportionOrTotalityMoodCode Specimen InformationportionAssociationportionOrTotalityCode Specimen InformationportionAssociationportionOrTotalityCodeP Specimen InformationportionAssociationportionOrTotalityValue Specimen InformationportionAssociationportionOrTotalityValueP' code.code='POTtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Specimen InformationportionAssociationportionOrTotalityCode='Specimen InformationportionAssociationportionOrTotalityCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSpecimenInformationconditionAssociation typeCode='COMP' constraints.validation.error='Specimen InformationconditionAssociationTypeCode Specimen InformationconditionAssociationSpecimenCondition Specimen InformationconditionAssociationspecimenConditionMoodCode Specimen InformationconditionAssociationspecimenConditionCodeP Specimen InformationconditionAssociationspecimenConditionCode Specimen InformationconditionAssociationspecimenConditionValue Specimen InformationconditionAssociationspecimenConditionValueP' constraints.validation.query='Specimen InformationconditionAssociationspecimenConditionMoodCode Specimen InformationconditionAssociationspecimenConditionCodeP Specimen InformationconditionAssociationspecimenConditionCode Specimen InformationconditionAssociationspecimenConditionValue Specimen InformationconditionAssociationspecimenConditionValueP' constraints.validation.dependOn.Specimen InformationconditionAssociationspecimenConditionCode='Specimen InformationconditionAssociationspecimenConditionCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSpecimenInformationconditionAssociationspecimenCondition classCode='OBS' moodCode='EVN' constraints.validation.error='Specimen InformationconditionAssociationspecimenConditionMoodCode Specimen InformationconditionAssociationspecimenConditionCode Specimen InformationconditionAssociationspecimenConditionCodeP Specimen InformationconditionAssociationspecimenConditionValue Specimen InformationconditionAssociationspecimenConditionValueP' code.code='C78733' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Specimen InformationconditionAssociationspecimenConditionCode='Specimen InformationconditionAssociationspecimenConditionCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSpecimenInformationusabilityAssociation typeCode='COMP' constraints.validation.error='Specimen InformationusabilityAssociationTypeCode Specimen InformationusabilityAssociationSpecimenUsability Specimen InformationusabilityAssociationspecimenUsabilityMoodCode Specimen InformationusabilityAssociationspecimenUsabilityCodeP Specimen InformationusabilityAssociationspecimenUsabilityCode Specimen InformationusabilityAssociationspecimenUsabilityValue' constraints.validation.query='Specimen InformationusabilityAssociationspecimenUsabilityMoodCode Specimen InformationusabilityAssociationspecimenUsabilityCodeP Specimen InformationusabilityAssociationspecimenUsabilityCode Specimen InformationusabilityAssociationspecimenUsabilityValue' constraints.validation.dependOn.Specimen InformationusabilityAssociationspecimenUsabilityCode='Specimen InformationusabilityAssociationspecimenUsabilityCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSpecimenInformationusabilityAssociationspecimenUsability classCode='OBS' moodCode='EVN' constraints.validation.error='Specimen InformationusabilityAssociationspecimenUsabilityMoodCode Specimen InformationusabilityAssociationspecimenUsabilityCode Specimen InformationusabilityAssociationspecimenUsabilityCodeP Specimen InformationusabilityAssociationspecimenUsabilityValue' code.code='SUtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Specimen InformationusabilityAssociationspecimenUsabilityCode='Specimen InformationusabilityAssociationspecimenUsabilityCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jNolUBpQEeSd5OoVIuDNwg" base_Class="_dS2eEI_XEeG51rA0mhosMg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study Test OrganizationTemplateId Study Test OrganizationTypeCode Study Test OrganizationRoleOfPerformer' templateId.root='2.16.840.1.113883.10.20.23.88' typeCode='AUT'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmStudyTestOrganizationroleOfPerformer constraints.validation.error='Study Test OrganizationroleOfPerformerTemplateId Study Test OrganizationroleOfPerformerClassCode Study Test OrganizationroleOfPerformerperformerClassCode Study Test OrganizationroleOfPerformerperformerDeterminerCode Study Test OrganizationroleOfPerformerperformerName' templateId.root='null' classCode='ASSIGNED' constraints.validation.query='Study Test OrganizationroleOfPerformerperformerClassCode Study Test OrganizationroleOfPerformerperformerDeterminerCode Study Test OrganizationroleOfPerformerperformerName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmStudyTestOrganizationroleOfPerformerperformer classCode='ORG' constraints.validation.error='Study Test OrganizationroleOfPerformerperformerClassCode Study Test OrganizationroleOfPerformerperformerDeterminerCode Study Test OrganizationroleOfPerformerperformerName' determinerCode='INSTANCE'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jQ1qUBpQEeSd5OoVIuDNwg" base_Class="_mA6qUI_rEeG51rA0mhosMg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Physical Examination FindingTemplateId Physical Examination FindingClassCode Physical Examination FindingMoodCode Physical Examination FindingId Physical Examination FindingCode Physical Examination FindingCodeP Physical Examination FindingMethodCode Physical Examination FindingTargetSiteCode Physical Examination FindingDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.67' classCode='OBS' moodCode='EVN' code.codeSystem='unknown' code.codeSystemName='Physical Exam Finding Type' constraints.validation.dependOn.Physical Examination FindingCode='Physical Examination FindingCodeP' constraints.validation.info='Physical Examination FindingStatusCode Physical Examination FindingMethodCodeP Physical Examination FindingTargetSiteCodeP Physical Examination FindingGroup Identifier Physical Examination FindingBody System or Organ Class Physical Examination FindingNonPerformanceReason Physical Examination FindingStudy Finding Evaluator Physical Examination FindingComment Physical Examination FindingRelated Record Physical Examination FindingSupplemental Value Physical Examination FindingCategory Physical Examination FindingSub-Category Physical Examination FindingFinding About' constraints.validation.warning='Physical Examination FindingValue Physical Examination FindingData Collection' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Physical Examination FindingMethodCode='Physical Examination FindingMethodCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' targetSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Physical Examination FindingTargetSiteCode='Physical Examination FindingTargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jWzIYBpQEeSd5OoVIuDNwg" base_Class="_xmX7AJBuEeGHg6ZmktWLJQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Questionnaire FindingTemplateId Questionnaire FindingClassCode Questionnaire FindingMoodCode Questionnaire FindingId Questionnaire FindingCode Questionnaire FindingCodeP Questionnaire FindingInterpretationCode Questionnaire FindingDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.72' classCode='OBS' moodCode='EVN' code.codeSystem='locally defined' code.codeSystemName='Question Type' constraints.validation.dependOn.Questionnaire FindingCode='Questionnaire FindingCodeP' constraints.validation.info='Questionnaire FindingStatusCode Questionnaire FindingEffectiveTime Questionnaire FindingGroup Identifier Questionnaire FindingNonPerformanceReason Questionnaire FindingTiming Reference Questionnaire FindingComment Questionnaire FindingRelated Record Questionnaire FindingSupplemental Value Questionnaire FindingCategory Questionnaire FindingSub-Category Questionnaire FindingFinding About' constraints.validation.warning='Questionnaire FindingValue Questionnaire FindingInterpretationCodeP Questionnaire FindingData Collection' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Questionnaire FindingInterpretationCode='Questionnaire FindingInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jcBmoBpQEeSd5OoVIuDNwg" base_Class="_KzX_4JB4EeGHg6ZmktWLJQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Subject CharacteristicTemplateId Subject CharacteristicClassCode Subject CharacteristicMoodCode Subject CharacteristicId Subject CharacteristicCode Subject CharacteristicCodeP Subject CharacteristicDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.92' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Subject CharacteristicCode='Subject CharacteristicCodeP' constraints.validation.info='Subject CharacteristicStatusCode Subject CharacteristicData Collection Subject CharacteristicNonPerformanceReason Subject CharacteristicGroup Identifier Subject CharacteristicComment Subject CharacteristicRelated Record Subject CharacteristicSupplemental Value Subject CharacteristicCategory Subject CharacteristicSub-Category Subject CharacteristicFinding About' constraints.validation.warning='Subject CharacteristicValue'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jfvpABpQEeSd5OoVIuDNwg" base_Class="_T0sngJLKEeGM5Pa1LbomZA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Microbiology Specimen FindingTemplateId Microbiology Specimen FindingClassCode Microbiology Specimen FindingMoodCode Microbiology Specimen FindingId Microbiology Specimen FindingCode Microbiology Specimen FindingCodeP Microbiology Specimen FindingMethodCode Microbiology Specimen FindingInterpretationCode Microbiology Specimen FindingDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.53' classCode='OBS' moodCode='EVN' code.codeSystem='unknown' code.codeSystemName='Microbiology Finding Type' constraints.validation.dependOn.Microbiology Specimen FindingCode='Microbiology Specimen FindingCodeP' constraints.validation.info='Microbiology Specimen FindingStatusCode Microbiology Specimen FindingInterpretationCodeP Microbiology Specimen FindingStudy Test Performer Microbiology Specimen FindingNonPerformanceReason Microbiology Specimen FindingSpecimen Information Microbiology Specimen FindingComment Microbiology Specimen FindingRelated Record Microbiology Specimen FindingSupplemental Value Microbiology Specimen FindingCategory Microbiology Specimen FindingSub-Category Microbiology Specimen FindingFinding About' constraints.validation.warning='Microbiology Specimen FindingValue Microbiology Specimen FindingMethodCodeP Microbiology Specimen FindingGroup Identifier Microbiology Specimen FindingResult Category' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Microbiology Specimen FindingMethodCode='Microbiology Specimen FindingMethodCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Microbiology Specimen FindingInterpretationCode='Microbiology Specimen FindingInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jl24EBpQEeSd5OoVIuDNwg" base_Class="_zXC1IJLkEeGM5Pa1LbomZA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Microbiology SusceptibilityTemplateId Microbiology SusceptibilityClassCode Microbiology SusceptibilityMoodCode Microbiology SusceptibilityId Microbiology SusceptibilityCode Microbiology SusceptibilityCodeP Microbiology SusceptibilityMethodCode Microbiology SusceptibilityInterpretationCode Microbiology SusceptibilityDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.54' classCode='OBS' moodCode='EVN' code.codeSystem='locally defined' code.codeSystemName='Microbiology Susceptibility Finding Type' constraints.validation.dependOn.Microbiology SusceptibilityCode='Microbiology SusceptibilityCodeP' constraints.validation.info='Microbiology SusceptibilityStatusCode Microbiology SusceptibilityEffectiveTime Microbiology SusceptibilityInterpretationCodeP Microbiology SusceptibilityEvent Study Day Microbiology SusceptibilityTiming Reference Microbiology SusceptibilityGroup Identifier Microbiology SusceptibilityStudy Test Performer Microbiology SusceptibilityNon Performance Reason Microbiology SusceptibilityComment Microbiology SusceptibilityRelated Record Microbiology SusceptibilitySupplemental Value Microbiology SusceptibilityCategory Microbiology SusceptibilitySub-Category Microbiology SusceptibilityFinding About' constraints.validation.warning='Microbiology SusceptibilityValue Microbiology SusceptibilityMethodCodeP Microbiology SusceptibilityResult Category' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Microbiology SusceptibilityMethodCode='Microbiology SusceptibilityMethodCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Microbiology SusceptibilityInterpretationCode='Microbiology SusceptibilityInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jr4AgBpQEeSd5OoVIuDNwg" base_Class="_CwmU4JLsEeGM5Pa1LbomZA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Pharmacokinetic Concentration FindingTemplateId Pharmacokinetic Concentration FindingClassCode Pharmacokinetic Concentration FindingMoodCode Pharmacokinetic Concentration FindingId Pharmacokinetic Concentration FindingCode Pharmacokinetic Concentration FindingCodeP Pharmacokinetic Concentration FindingMethodCode Pharmacokinetic Concentration FindingInterpretationCode Pharmacokinetic Concentration FindingSpecimen Information Pharmacokinetic Concentration FindingDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.65' classCode='OBS' moodCode='EVN' code.codeSystem='locally defined' code.codeSystemName='Pharmacokinetics Concentration Finding Type' constraints.validation.dependOn.Pharmacokinetic Concentration FindingCode='Pharmacokinetic Concentration FindingCodeP' constraints.validation.info='Pharmacokinetic Concentration FindingStatusCode Pharmacokinetic Concentration FindingMethodCodeP Pharmacokinetic Concentration FindingGroup Identifier Pharmacokinetic Concentration FindingNon Performance Reason Pharmacokinetic Concentration FindingStudy Test Performer Pharmacokinetic Concentration FindingExclusion Reason Pharmacokinetic Concentration FindingComment Pharmacokinetic Concentration FindingRelated Record Pharmacokinetic Concentration FindingSupplemental Value Pharmacokinetic Concentration FindingCategory Pharmacokinetic Concentration FindingSub-Category Pharmacokinetic Concentration FindingFasting Status Pharmacokinetic Concentration FindingFinding About' constraints.validation.warning='Pharmacokinetic Concentration FindingValue Pharmacokinetic Concentration FindingInterpretationCodeP Pharmacokinetic Concentration FindingPlanned Study Day Pharmacokinetic Concentration FindingAssay Quantitation' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Pharmacokinetic Concentration FindingMethodCode='Pharmacokinetic Concentration FindingMethodCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Pharmacokinetic Concentration FindingInterpretationCode='Pharmacokinetic Concentration FindingInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jw8twBpQEeSd5OoVIuDNwg" base_Class="_olGlMJOXEeGM5Pa1LbomZA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Pharmacokinetic Parameter FindingTemplateId Pharmacokinetic Parameter FindingClassCode Pharmacokinetic Parameter FindingMoodCode Pharmacokinetic Parameter FindingId Pharmacokinetic Parameter FindingCode Pharmacokinetic Parameter FindingCodeP Pharmacokinetic Parameter FindingDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.66' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Pharmacokinetic Parameter FindingCode='Pharmacokinetic Parameter FindingCodeP' constraints.validation.info='Pharmacokinetic Parameter FindingStatusCode Pharmacokinetic Parameter FindingGroup Identifier Pharmacokinetic Parameter FindingSpecimen Information Pharmacokinetic Parameter FindingNon Performance Reason Pharmacokinetic Parameter FindingComment Pharmacokinetic Parameter FindingRelated Record Pharmacokinetic Parameter FindingSupplemental Value Pharmacokinetic Parameter FindingCategory Pharmacokinetic Parameter FindingSub-Category Pharmacokinetic Parameter FindingFinding About' constraints.validation.warning='Pharmacokinetic Parameter FindingValue Pharmacokinetic Parameter FindingTiming Reference'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j13qABpQEeSd5OoVIuDNwg" base_Class="_x1wssJOhEeG_Gqo8Ix5ECw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Finding AboutTemplateId Finding AboutClassCode Finding AboutMoodCode Finding AboutId Finding AboutCode Finding AboutCodeP Finding AboutValue Finding AboutTargetSiteCode Finding AboutInterpretationCode Finding AboutGroup Identifier Finding AboutFindingObservationObjectAssociation Finding AboutfindingObservationObjectAssociationfindingObservationObjectClassCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectCodeP Finding AboutfindingObservationObjectAssociationfindingObservationObjectCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectMoodCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectValue Finding AboutfindingObservationObjectAssociationfindingObservationObjectValueP Finding AboutfindingObservationObjectAssociationTypeCode Finding AboutfindingObservationObjectAssociationObservation' templateId.root='2.16.840.1.113883.10.20.23.40' classCode='OBS' moodCode='EVN' constraints.validation.info='Finding AboutEffectiveTime Finding AboutStatusCode Finding AboutTargetSiteCodeP Finding AboutInterpretationCodeP Finding AboutNon Performance Reason Finding AboutData Collection Finding AboutStudy Finding Evaluator Finding AboutCategory Finding AboutSub-Category Finding AboutDomain Assignment' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Finding AboutCode='Finding AboutCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' targetSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Finding AboutTargetSiteCode='Finding AboutTargetSiteCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Finding AboutInterpretationCode='Finding AboutInterpretationCodeP' constraints.validation.query='Finding AboutfindingObservationObjectAssociationfindingObservationObjectClassCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectCodeP Finding AboutfindingObservationObjectAssociationfindingObservationObjectCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectMoodCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectValue Finding AboutfindingObservationObjectAssociationfindingObservationObjectValueP Finding AboutfindingObservationObjectAssociationTypeCode Finding AboutfindingObservationObjectAssociationObservation' constraints.validation.dependOn.Finding AboutfindingObservationObjectAssociationfindingObservationObjectCode='Finding AboutfindingObservationObjectAssociationfindingObservationObjectCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmFindingAboutfindingObservationObjectAssociation typeCode='REFR' constraints.validation.error='Finding AboutfindingObservationObjectAssociationTypeCode Finding AboutfindingObservationObjectAssociationObservation Finding AboutfindingObservationObjectAssociationfindingObservationObjectClassCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectCodeP Finding AboutfindingObservationObjectAssociationfindingObservationObjectCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectMoodCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectValue Finding AboutfindingObservationObjectAssociationfindingObservationObjectValueP' constraints.validation.query='Finding AboutfindingObservationObjectAssociationfindingObservationObjectClassCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectCodeP Finding AboutfindingObservationObjectAssociationfindingObservationObjectCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectMoodCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectValue Finding AboutfindingObservationObjectAssociationfindingObservationObjectValueP' constraints.validation.dependOn.Finding AboutfindingObservationObjectAssociationfindingObservationObjectCode='Finding AboutfindingObservationObjectAssociationfindingObservationObjectCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmFindingAboutfindingObservationObjectAssociationfindingObservationObject classCode='OBS' constraints.validation.error='Finding AboutfindingObservationObjectAssociationfindingObservationObjectClassCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectCodeP Finding AboutfindingObservationObjectAssociationfindingObservationObjectMoodCode Finding AboutfindingObservationObjectAssociationfindingObservationObjectValue Finding AboutfindingObservationObjectAssociationfindingObservationObjectValueP' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Finding AboutfindingObservationObjectAssociationfindingObservationObjectCode='Finding AboutfindingObservationObjectAssociationfindingObservationObjectCodeP' moodCode='DEF' value.codeSystem='locally defined' value.codeSystemName='Finding About Object Type'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j-9UkBpQEeSd5OoVIuDNwg" base_Class="_wllcQJO3EeG_Gqo8Ix5ECw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study Finding EvaluatorTemplateId Study Finding EvaluatorTypeCode Study Finding EvaluatorRoleOfEvaluator' templateId.root='2.16.840.1.113883.10.20.23.84' typeCode='PRF'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmStudyFindingEvaluatorroleOfEvaluator constraints.validation.error='Study Finding EvaluatorroleOfEvaluatorTemplateId Study Finding EvaluatorroleOfEvaluatorClassCode Study Finding EvaluatorroleOfEvaluatorCode Study Finding EvaluatorroleOfEvaluatorCodeP' templateId.root='null' classCode='ASSIGNED' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Finding EvaluatorroleOfEvaluatorCode='Study Finding EvaluatorroleOfEvaluatorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_kBYWcBpQEeSd5OoVIuDNwg" base_Class="_Dj3ekJSREeGlSMYQDPvGqQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Drug AccountabilityTemplateId Drug AccountabilityClassCode Drug AccountabilityMoodCode Drug AccountabilityId Drug AccountabilityCode Drug AccountabilityCodeP' templateId.root='2.16.840.1.113883.10.20.23.32' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Drug AccountabilityCode='Drug AccountabilityCodeP' constraints.validation.info='Drug AccountabilityStatusCode Drug AccountabilityGroup Identifier Drug AccountabilityNon Performance Reason Drug AccountabilityEvent Study Day Drug AccountabilityCategory Drug AccountabilitySub-Category Drug AccountabilityComment Drug AccountabilityDomain Assignment Drug AccountabilityRelated Record Drug AccountabilitySupplemental Value Drug AccountabilityFinding About' constraints.validation.warning='Drug AccountabilityEffectiveTime Drug AccountabilityValue'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_kFtc0BpQEeSd5OoVIuDNwg" base_Class="_1TzacJk_EeGGPbk7a3RIVg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study Day PeriodTemplateId Study Day PeriodClassCode Study Day PeriodMoodCode Study Day PeriodCode Study Day PeriodCodeP Study Day PeriodValue' templateId.root='2.16.840.1.113883.10.20.23.82' classCode='OBS' moodCode='EVN' code.code='STPtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Day PeriodCode='Study Day PeriodCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_kJ_f4BpQEeSd5OoVIuDNwg" base_Class="_YK0sgJoYEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Subject Data Non-Clinical TrialsTemplateId Subject Data Non-Clinical TrialsClassCode Subject Data Non-Clinical TrialsMoodCode Subject Data Non-Clinical TrialsCode Subject Data Non-Clinical TrialsCodeP Subject Data Non-Clinical TrialsConfidentialityCode Subject Data Non-Clinical TrialsEffectiveTime Subject Data Non-Clinical TrialsId Subject Data Non-Clinical TrialsSetId Subject Data Non-Clinical TrialsVersionNumber Subject Data Non-Clinical TrialsNon-human Subject Data Document Body Subject Data Non-Clinical TrialsStudyRelationship2 Subject Data Non-Clinical TrialsSubjectParticipation2 Subject Data Non-Clinical TrialsCustodian Subject Data Non-Clinical TrialsAuthor' templateId.root='2.16.840.1.113883.10.20.23.12' classCode='DOCCLIN' moodCode='EVN' code.code='TBD' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.Subject Data Non-Clinical TrialsCode='Subject Data Non-Clinical TrialsCodeP' confidentialityCode.codeSystem='2.16.840.1.113883.5.25' confidentialityCode.codeSystemName='Confidentiality' constraints.validation.warning='Subject Data Non-Clinical TrialsConfidentialityCodeP' constraints.validation.dependOn.Subject Data Non-Clinical TrialsConfidentialityCode='Subject Data Non-Clinical TrialsConfidentialityCodeP' constraints.validation.info='Subject Data Non-Clinical TrialsLanguageCode Subject Data Non-Clinical TrialsRealmCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsAuthor typeCode='AUT' constraints.validation.error='Subject Data Non-Clinical TrialsAuthorTypeCode Subject Data Non-Clinical TrialsAuthorAssignedAuthor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsAuthorAssignedAuthor classCode='ASSIGNED' constraints.validation.error='Subject Data Non-Clinical TrialsAuthorAssignedAuthorClassCode Subject Data Non-Clinical TrialsAuthorAssignedAuthorId Subject Data Non-Clinical TrialsAuthorAssignedAuthorAuthorPerson Subject Data Non-Clinical TrialsAuthorAssignedAuthorStudySite'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsAuthorAssignedAuthorAuthorPerson classCode='PSN' constraints.validation.error='Subject Data Non-Clinical TrialsAuthorAssignedAuthorAuthorPersonClassCode Subject Data Non-Clinical TrialsAuthorAssignedAuthorAuthorPersonDeterminerCode Subject Data Non-Clinical TrialsAuthorAssignedAuthorAuthorPersonName' determinerCode='INSTANCE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsAuthorAssignedAuthorStudySite classCode='ORG' constraints.validation.error='Subject Data Non-Clinical TrialsAuthorAssignedAuthorStudySiteClassCode Subject Data Non-Clinical TrialsAuthorAssignedAuthorStudySiteDeterminerCode Subject Data Non-Clinical TrialsAuthorAssignedAuthorStudySiteId Subject Data Non-Clinical TrialsAuthorAssignedAuthorStudySiteAddr' determinerCode='INSTANCE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsStudyRelationship typeCode='DOC' constraints.validation.error='Subject Data Non-Clinical TrialsStudyRelationshipTypeCode Subject Data Non-Clinical TrialsStudyRelationshipStudy'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsStudyRelationshipStudy classCode='ACT' constraints.validation.error='Subject Data Non-Clinical TrialsStudyRelationshipStudyClassCode Subject Data Non-Clinical TrialsStudyRelationshipStudyMoodCode Subject Data Non-Clinical TrialsStudyRelationshipStudyCode Subject Data Non-Clinical TrialsStudyRelationshipStudyId' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsSubjectParticipation typeCode='RCT' constraints.validation.error='Subject Data Non-Clinical TrialsSubjectParticipationTypeCode Subject Data Non-Clinical TrialsSubjectParticipationStudySubjectRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsSubjectParticipationStudySubjectRole classCode='PAT' constraints.validation.error='Subject Data Non-Clinical TrialsSubjectParticipationStudySubjectRoleClassCode Subject Data Non-Clinical TrialsSubjectParticipationStudySubjectRoleId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsSubjectParticipationStudySubjectRoleStudySubject classCode='PSN' constraints.validation.error='Subject Data Non-Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectClassCode Subject Data Non-Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectDeterminerCode Subject Data Non-Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectAdministrativeGenderCode Subject Data Non-Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectAdministrativeGenderCodeP' determinerCode='INSTANCE' administrativeGenderCode.codeSystem='2.16.840.1.113883.3.26.1.1' administrativeGenderCode.codeSystemName='NCI Thesaurus' constraints.validation.warning='Subject Data Non-Clinical TrialsSubjectParticipationStudySubjectRoleStudySubjectBirthTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsCustodian typeCode='CST' constraints.validation.error='Subject Data Non-Clinical TrialsCustodianTypeCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsCustodianAssignedCustodian classCode='ASSIGNED' constraints.validation.error='Subject Data Non-Clinical TrialsCustodianAssignedCustodianClassCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectDataNonClinicalTrialsCustodianAssignedCustodianCustodianOrganization classCode='ORG' constraints.validation.error='Subject Data Non-Clinical TrialsCustodianAssignedCustodianCustodianOrganizationClassCode Subject Data Non-Clinical TrialsCustodianAssignedCustodianCustodianOrganizationDeterminerCode Subject Data Non-Clinical TrialsCustodianAssignedCustodianCustodianOrganizationId Subject Data Non-Clinical TrialsCustodianAssignedCustodianCustodianOrganizationName' determinerCode='INSTANCE'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_kXrWkBpQEeSd5OoVIuDNwg" base_Class="_eh5t4JoZEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Non-human ExposureTemplateId Non-human ExposureClassCode Non-human ExposureMoodCode Non-human ExposureId Non-human ExposureRouteCode Non-human ExposureRouteCodeP Non-human ExposureApproachSiteCode Non-human ExposureConsumable Material Non-human ExposureDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.58' classCode='SBADM' moodCode='EVN' constraints.validation.warning='Non-human ExposureDoseQuantity Non-human ExposureTiming Reference' constraints.validation.info='Non-human ExposureEffectiveTime Non-human ExposureMaxDoseQuantity Non-human ExposureText Non-human ExposureApproachSiteCodeP Non-human ExposureStudy Day Period Non-human ExposureComment Non-human ExposureRelated Record Non-human ExposureSupplemental Value Non-human ExposureDose Adjustment Reason Non-human ExposureCategory Non-human ExposureSub-Category Non-human ExposureEvent Duration' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' approachSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' approachSiteCode.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_kb8ykBpQEeSd5OoVIuDNwg" base_Class="_6IIqEJoZEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Non-human DispositionTemplateId Non-human DispositionClassCode Non-human DispositionMoodCode Non-human DispositionId Non-human DispositionCode Non-human DispositionEffectiveTime Non-human DispositionDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.57' classCode='ACT' moodCode='EVN' constraints.validation.info='Non-human DispositionStudy Day Period Non-human DispositionComment Non-human DispositionRelated Record Non-human DispositionSupplemental Value' constraints.validation.warning='Non-human DispositionPlanned Study Day'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_keCdQBpQEeSd5OoVIuDNwg" base_Class="_jQ-2sJoaEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Human Clinical Laboratory Test ResultTemplateId Human Clinical Laboratory Test ResultClassCode Human Clinical Laboratory Test ResultMoodCode Human Clinical Laboratory Test ResultId Human Clinical Laboratory Test ResultCode Human Clinical Laboratory Test ResultCodeP Human Clinical Laboratory Test ResultMethodCode Human Clinical Laboratory Test ResultInterpretationCode Human Clinical Laboratory Test ResultDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.45' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Human Clinical Laboratory Test ResultCode='Human Clinical Laboratory Test ResultCodeP' constraints.validation.info='Human Clinical Laboratory Test ResultStatusCode Human Clinical Laboratory Test ResultMethodCodeP Human Clinical Laboratory Test ResultGroup Identifier Human Clinical Laboratory Test ResultSpecimen Information Human Clinical Laboratory Test ResultNon Performance Reason Human Clinical Laboratory Test ResultStudy Test Organization Human Clinical Laboratory Test ResultTiming Reference Human Clinical Laboratory Test ResultComment Human Clinical Laboratory Test ResultRelated Record Human Clinical Laboratory Test ResultSupplemental Value Human Clinical Laboratory Test ResultToxicity Human Clinical Laboratory Test ResultSub-Category Human Clinical Laboratory Test ResultFasting Status Human Clinical Laboratory Test ResultFinding About' constraints.validation.warning='Human Clinical Laboratory Test ResultValue Human Clinical Laboratory Test ResultInterpretationCodeP Human Clinical Laboratory Test ResultCategory' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Human Clinical Laboratory Test ResultMethodCode='Human Clinical Laboratory Test ResultMethodCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Human Clinical Laboratory Test ResultInterpretationCode='Human Clinical Laboratory Test ResultInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_kjFVUBpQEeSd5OoVIuDNwg" base_Class="_Ue9XYJobEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Body WeightTemplateId Body WeightClassCode Body WeightMoodCode Body WeightId Body WeightCode Body WeightCodeP Body WeightInterpretationCode Body WeightDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.18' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Body WeightCode='Body WeightCodeP' constraints.validation.info='Body WeightStatusCode Body WeightInterpretationCodeP Body WeightNon Performance Reason Body WeightExclusion Reason Body WeightRelated Record Body WeightSupplemental Value Body WeightFasting Status' constraints.validation.warning='Body WeightValue Body WeightData Collection Body WeightComment' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Body WeightInterpretationCode='Body WeightInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_knCoQBpQEeSd5OoVIuDNwg" base_Class="_e9VawJobEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Body Weight GainTemplateId Body Weight GainClassCode Body Weight GainMoodCode Body Weight GainId Body Weight GainCode Body Weight GainCodeP Body Weight GainInterpretationCode Body Weight GainDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.19' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Body Weight GainCode='Body Weight GainCodeP' constraints.validation.info='Body Weight GainStatusCode Body Weight GainNon Performance Reason Body Weight GainStudy Day Period Body Weight GainTiming Reference Body Weight GainExclusion Reason Body Weight GainComment Body Weight GainRelated Record Body Weight GainSupplemental Value' constraints.validation.warning='Body Weight GainEffectiveTime Body Weight GainValue Body Weight GainInterpretationCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Body Weight GainInterpretationCode='Body Weight GainInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_krSPEBpQEeSd5OoVIuDNwg" base_Class="_l-7OMJobEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Clinical ObservationTemplateId Clinical ObservationClassCode Clinical ObservationMoodCode Clinical ObservationCode Clinical ObservationCodeP Clinical ObservationId Clinical ObservationTargetSiteCode Clinical ObservationInterpretationCode Clinical ObservationDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.22' classCode='OBS' moodCode='EVN' code.codeSystem='unknown' code.codeSystemName='Clinical Observation Type' constraints.validation.dependOn.Clinical ObservationCode='Clinical ObservationCodeP' constraints.validation.warning='Clinical ObservationValue Clinical ObservationPlanned Study Day Clinical ObservationData Collection' constraints.validation.info='Clinical ObservationStatusCode Clinical ObservationTargetSiteCodeP Clinical ObservationInterpretationCodeP Clinical ObservationGroup Identifier Clinical ObservationBody System or Organ Class Clinical ObservationNon Performance Reason Clinical ObservationStudy Finding Evaluator Clinical ObservationEvent Severity Clinical ObservationTiming Reference Clinical ObservationMass Identification Clinical ObservationExclusion Reason Clinical ObservationComment Clinical ObservationRelated Record Clinical ObservationSupplemental Value Clinical ObservationCategory Clinical ObservationSub-Category Clinical ObservationResult Category' targetSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' targetSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Clinical ObservationTargetSiteCode='Clinical ObservationTargetSiteCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Clinical ObservationInterpretationCode='Clinical ObservationInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_kwUgEBpQEeSd5OoVIuDNwg" base_Class="_voyEYJobEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Death DiagnosisTemplateId Death DiagnosisClassCode Death DiagnosisMoodCode Death DiagnosisId Death DiagnosisCode Death DiagnosisCodeP Death DiagnosisValue Death DiagnosisValueP Death DiagnosisDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.28' classCode='OBS' moodCode='EVN' code.code='C95087' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Death DiagnosisCode='Death DiagnosisCodeP' value.codeSystem='unknown' value.codeSystemName='Death Diagnosis Type' constraints.validation.info='Death DiagnosisStudy Finding Evaluator Death DiagnosisData Collection Death DiagnosisComment Death DiagnosisRelated Record Death DiagnosisSupplemental Value Death DiagnosisResult Category'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_kzZpQBpQEeSd5OoVIuDNwg" base_Class="__eYEEJobEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Food and Water ConsumptionTemplateId Food and Water ConsumptionClassCode Food and Water ConsumptionMoodCode Food and Water ConsumptionId Food and Water ConsumptionCode Food and Water ConsumptionCodeP Food and Water ConsumptionInterpretationCode Food and Water ConsumptionDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.41' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Food and Water ConsumptionCode='Food and Water ConsumptionCodeP' constraints.validation.info='Food and Water ConsumptionStatusCode Food and Water ConsumptionInterpretationCodeP Food and Water ConsumptionNon Performance Reason Food and Water ConsumptionStudy Day Period Food and Water ConsumptionExclusion Reason Food and Water ConsumptionGroup Identifier Food and Water ConsumptionComment Food and Water ConsumptionRelated Record Food and Water ConsumptionSupplemental Value' constraints.validation.warning='Food and Water ConsumptionEffectiveTime Food and Water ConsumptionValue' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Food and Water ConsumptionInterpretationCode='Food and Water ConsumptionInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_k3eQ8BpQEeSd5OoVIuDNwg" base_Class="_Lrb20JocEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Macroscopic FindingTemplateId Macroscopic FindingClassCode Macroscopic FindingMoodCode Macroscopic FindingCode Macroscopic FindingCodeP Macroscopic FindingId Macroscopic FindingDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.50' classCode='OBS' moodCode='EVN' code.codeSystem='unknown' code.codeSystemName='Macroscopic Examination Type' constraints.validation.dependOn.Macroscopic FindingCode='Macroscopic FindingCodeP' constraints.validation.warning='Macroscopic FindingValue Macroscopic FindingSpecimen Information' constraints.validation.info='Macroscopic FindingStatusCode Macroscopic FindingMass Identification Macroscopic FindingGroup Identifier Macroscopic FindingBody System or Organ Class Macroscopic FindingNon Performance Reason Macroscopic FindingStudy Test Performer Macroscopic FindingStudy Finding Evaluator Macroscopic FindingEvent Severity Macroscopic FindingData Collection Macroscopic FindingComment Macroscopic FindingRelated Record Macroscopic FindingSupplemental Value Macroscopic FindingDeath Relationship'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_k6oSoBpQEeSd5OoVIuDNwg" base_Class="_mxZXgJocEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Microscopic FindingTemplateId Microscopic FindingClassCode Microscopic FindingMoodCode Microscopic FindingId Microscopic FindingCode Microscopic FindingCodeP Microscopic FindingMethodCode Microscopic FindingSpecimen Information Microscopic FindingDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.55' classCode='OBS' moodCode='EVN' code.codeSystem='unknown' code.codeSystemName='Microscopic Finding Type' constraints.validation.dependOn.Microscopic FindingCode='Microscopic FindingCodeP' constraints.validation.info='Microscopic FindingStatusCode Microscopic FindingMethodCodeP Microscopic FindingNon Performance Reason Microscopic FindingStudy Test Performer Microscopic FindingStudy Finding Evaluator Microscopic FindingData Collection Microscopic FindingGroup Identifier Microscopic FindingMass Identification Microscopic FindingBody System or Organ Class Microscopic FindingComment Microscopic FindingRelated Record Microscopic FindingSupplemental Value Microscopic FindingResult Category Microscopic FindingDeath Relationship' constraints.validation.warning='Microscopic FindingValue Microscopic FindingEvent Severity' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Microscopic FindingMethodCode='Microscopic FindingMethodCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_k-xLwBpQEeSd5OoVIuDNwg" base_Class="_0P_DkJocEeG78ZMLtGK0RQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Organ MeasurementTemplateId Organ MeasurementClassCode Organ MeasurementMoodCode Organ MeasurementId Organ MeasurementCode Organ MeasurementCodeP Organ MeasurementInterpretationCode Organ MeasurementSpecimen Information' templateId.root='2.16.840.1.113883.10.20.23.62' classCode='OBS' moodCode='EVN' code.codeSystem='unknonw' code.codeSystemName='Organ Measurement Examination Type' constraints.validation.dependOn.Organ MeasurementCode='Organ MeasurementCodeP' constraints.validation.info='Organ MeasurementStatusCode Organ MeasurementInterpretationCodeP Organ MeasurementNon Performance Reason Organ MeasurementComment Organ MeasurementExclusion Reason Organ MeasurementRelated Record Organ MeasurementSupplemental Value' constraints.validation.warning='Organ MeasurementValue Organ MeasurementData Collection' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Organ MeasurementInterpretationCode='Organ MeasurementInterpretationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_lCwT4BpQEeSd5OoVIuDNwg" base_Class="_0rD0wJrGEeGpk_Q1ImbEig">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Palpable MassTemplateId Palpable MassClassCode Palpable MassMoodCode Palpable MassId Palpable MassCode Palpable MassCodeP Palpable MassTargetSiteCode Palpable MassDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.64' classCode='OBS' moodCode='EVN' code.codeSystem='unknown' code.codeSystemName='Palpable Mass Examination Type' constraints.validation.dependOn.Palpable MassCode='Palpable MassCodeP' constraints.validation.info='Palpable MassStatusCode Palpable MassNon Performance Reason Palpable MassStudy Finding Evaluator Palpable MassComment Palpable MassRelated Record Palpable MassSupplemental Value' constraints.validation.warning='Palpable MassValue Palpable MassTargetSiteCodeP Palpable MassPlanned Study Day Palpable MassData Collection Palpable MassMass Identification' targetSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' targetSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Palpable MassTargetSiteCode='Palpable MassTargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_lGx4QBpQEeSd5OoVIuDNwg" base_Class="_1B8qwJrGEeGpk_Q1ImbEig">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Tumor FindingTemplateId Tumor FindingId Tumor FindingCode Tumor FindingCodeP Tumor FindingMethodCode Tumor FindingDetectionDelayAssociation Tumor FindingDomain Assignment Tumor FindingResult Category Tumor FindingDeath Relationship Tumor FindingdetectionDelayAssociationdetectionDelayClassCode Tumor FindingdetectionDelayAssociationdetectionDelayCode Tumor FindingdetectionDelayAssociationdetectionDelayMoodCode Tumor FindingdetectionDelayAssociationdetectionDelayValue Tumor FindingdetectionDelayAssociationTypeCode' templateId.root='2.16.840.1.113883.10.20.23.99' classCode='OBS' moodCode='EVN' code.codeSystem='unknown' code.codeSystemName='Tumor Examination Type' constraints.validation.dependOn.Tumor FindingCode='Tumor FindingCodeP' constraints.validation.info='Tumor FindingStatusCode Tumor FindingMethodCodeP Tumor FindingGroup Identifier Tumor FindingSpecimen Information Tumor FindingNon Performance Reason Tumor FindingStudy Test Performer Tumor FindingComment Tumor FindingRelated Record Tumor FindingSupplemental Value' constraints.validation.warning='Tumor FindingValue Tumor FindingMass Identification' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Tumor FindingMethodCode='Tumor FindingMethodCodeP' constraints.validation.query='Tumor FindingdetectionDelayAssociationdetectionDelayClassCode Tumor FindingdetectionDelayAssociationdetectionDelayCode Tumor FindingdetectionDelayAssociationdetectionDelayMoodCode Tumor FindingdetectionDelayAssociationdetectionDelayValue Tumor FindingdetectionDelayAssociationTypeCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmTumorFindingdetectionDelayAssociation typeCode='COMP' constraints.validation.error='Tumor FindingdetectionDelayAssociationTypeCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmTumorFindingdetectionDelayAssociationdetectionDelay classCode='OBS' constraints.validation.error='Tumor FindingdetectionDelayAssociationdetectionDelayClassCode Tumor FindingdetectionDelayAssociationdetectionDelayCode Tumor FindingdetectionDelayAssociationdetectionDelayMoodCode Tumor FindingdetectionDelayAssociationdetectionDelayValue' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_lLwe4BpQEeSd5OoVIuDNwg" base_Class="_1gqAAJrGEeGpk_Q1ImbEig">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Subject PoolTemplateId Subject PoolMoodCode Subject PoolCode Subject PoolCodeP Subject PoolId Subject PoolParticipant Subject PoolPoolParticipantSubjectMemberClassCode Subject PoolPoolParticipantSubjectMemberId Subject PoolPoolParticipantTypeCode Subject PoolPoolParticipantParticipantRole' templateId.root='2.16.840.1.113883.10.20.23.94' classCode='ACT' moodCode='EVN' code.code='SPtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Subject PoolCode='Subject PoolCodeP' constraints.validation.query='Subject PoolPoolParticipantSubjectMemberClassCode Subject PoolPoolParticipantSubjectMemberId Subject PoolPoolParticipantTypeCode Subject PoolPoolParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectPoolPoolParticipant typeCode='RCT' constraints.validation.error='Subject PoolPoolParticipantTypeCode Subject PoolPoolParticipantParticipantRole Subject PoolPoolParticipantSubjectMemberClassCode Subject PoolPoolParticipantSubjectMemberId' constraints.validation.query='Subject PoolPoolParticipantSubjectMemberClassCode Subject PoolPoolParticipantSubjectMemberId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSubjectPoolPoolParticipantSubjectMember classCode='IDENT' constraints.validation.error='Subject PoolPoolParticipantSubjectMemberClassCode Subject PoolPoolParticipantSubjectMemberId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_lObYYBpQEeSd5OoVIuDNwg" base_Class="_phIKAKaaEeGlCYcoCUv7-w">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Non-human Subject Data Document SectionTemplateId Non-human Subject Data Document SectionClassCode Non-human Subject Data Document SectionMoodCode Non-human Subject Data Document SectionCode Non-human Subject Data Document SectionCodeP Non-human Subject Data Document SectionText Non-human Subject Data Document SectionNon-human Subject Demographics' templateId.root='2.16.840.1.113883.10.20.23.14' classCode='DOCSECT' moodCode='EVN' code.code='NHStbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Non-human Subject Data Document SectionCode='Non-human Subject Data Document SectionCodeP' constraints.validation.info='Non-human Subject Data Document SectionTitle Non-human Subject Data Document SectionNon-human Disposition Non-human Subject Data Document SectionSubject Element Non-human Subject Data Document SectionNon-human Exposure Non-human Subject Data Document SectionBody Weight Non-human Subject Data Document SectionBody Weight Gain Non-human Subject Data Document SectionClinical Observation Non-human Subject Data Document SectionDeath Diagnosis Non-human Subject Data Document SectionFood and Water Consumption Non-human Subject Data Document SectionNon-human Laboratory Test Result Non-human Subject Data Document SectionMacroscopic Finding Non-human Subject Data Document SectionMicroscopic Findings Non-human Subject Data Document SectionOrgan Measurement Non-human Subject Data Document SectionPalpable Mass Non-human Subject Data Document SectionPharmacokinetic Concentration Finding Non-human Subject Data Document SectionSubject Characteristic Non-human Subject Data Document SectionTumor Finding Non-human Subject Data Document SectionVital Sign Non-human Subject Data Document SectionECG Test Result Non-human Subject Data Document SectionStudy Subject Event Non-human Subject Data Document SectionStudy Subject Finding Non-human Subject Data Document SectionStudy Subject Intervention Non-human Subject Data Document SectionComment Non-human Subject Data Document SectionPharmacokinetic Parameter Finding'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_lRaa8BpQEeSd5OoVIuDNwg" base_Class="_ohZpkKmTEeGQftsict2bpw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Non-human Subject DemographicsTemplateId Non-human Subject DemographicsClassCode Non-human Subject DemographicsMoodCode Non-human Subject DemographicsCode Non-human Subject DemographicsCodeP Non-human Subject DemographicsStudy Arm Non-human Subject DemographicsDomain Assignment Non-human Subject DemographicsReference Period Non-human Subject DemographicsstrainAssociationsubjectStrainClassCode Non-human Subject DemographicsstrainAssociationsubjectStrainCodeP Non-human Subject DemographicsstrainAssociationsubjectStrainCode Non-human Subject DemographicsstrainAssociationsubjectStrainMoodCode Non-human Subject DemographicsstrainAssociationsubjectStrainValue Non-human Subject DemographicsstrainAssociationsubjectStrainValueP Non-human Subject DemographicsstrainAssociationsubjectStrainText Non-human Subject DemographicsstrainAssociationTypeCode Non-human Subject DemographicsstrainAssociationSubjectStrain Non-human Subject DemographicsageAssociationSubjectAgeClassCode Non-human Subject DemographicsageAssociationSubjectAgeCodeP Non-human Subject DemographicsageAssociationSubjectAgeCode Non-human Subject DemographicsageAssociationSubjectAgeMoodCode Non-human Subject DemographicsageAssociationSubjectAgeValue Non-human Subject DemographicsageAssociationTypeCode Non-human Subject DemographicsageAssociationSubjectAge Non-human Subject DemographicsspeciesAssociationsubjectSpeciesClassCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesMoodCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCodeP Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValue Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValueP Non-human Subject DemographicsspeciesAssociationTypeCode Non-human Subject DemographicsspeciesAssociationSubjectSpecies Non-human Subject DemographicssetMembershipAssociationsetMembershipClassCode Non-human Subject DemographicssetMembershipAssociationsetMembershipCodeP Non-human Subject DemographicssetMembershipAssociationsetMembershipCode Non-human Subject DemographicssetMembershipAssociationsetMembershipMoodCode Non-human Subject DemographicssetMembershipAssociationsetMembershipValue Non-human Subject DemographicssetMembershipAssociationTypeCode Non-human Subject DemographicssetMembershipAssociationSetMembership' templateId.root='2.16.840.1.113883.10.20.23.60' classCode='ACT' moodCode='EVN' code.code='DMGtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Non-human Subject DemographicsCode='Non-human Subject DemographicsCodeP' constraints.validation.info='Non-human Subject DemographicsComment Non-human Subject DemographicsRelated Record Non-human Subject DemographicsSupplemental Value' constraints.validation.query='Non-human Subject DemographicsstrainAssociationsubjectStrainClassCode Non-human Subject DemographicsstrainAssociationsubjectStrainCodeP Non-human Subject DemographicsstrainAssociationsubjectStrainCode Non-human Subject DemographicsstrainAssociationsubjectStrainMoodCode Non-human Subject DemographicsstrainAssociationsubjectStrainValue Non-human Subject DemographicsstrainAssociationsubjectStrainValueP Non-human Subject DemographicsstrainAssociationsubjectStrainText Non-human Subject DemographicsstrainAssociationTypeCode Non-human Subject DemographicsstrainAssociationSubjectStrain Non-human Subject DemographicsageAssociationSubjectAgeClassCode Non-human Subject DemographicsageAssociationSubjectAgeCodeP Non-human Subject DemographicsageAssociationSubjectAgeCode Non-human Subject DemographicsageAssociationSubjectAgeMoodCode Non-human Subject DemographicsageAssociationSubjectAgeValue Non-human Subject DemographicsageAssociationTypeCode Non-human Subject DemographicsageAssociationSubjectAge Non-human Subject DemographicsspeciesAssociationsubjectSpeciesClassCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesMoodCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCodeP Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValue Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValueP Non-human Subject DemographicsspeciesAssociationTypeCode Non-human Subject DemographicsspeciesAssociationSubjectSpecies Non-human Subject DemographicssetMembershipAssociationsetMembershipClassCode Non-human Subject DemographicssetMembershipAssociationsetMembershipCodeP Non-human Subject DemographicssetMembershipAssociationsetMembershipCode Non-human Subject DemographicssetMembershipAssociationsetMembershipMoodCode Non-human Subject DemographicssetMembershipAssociationsetMembershipValue Non-human Subject DemographicssetMembershipAssociationTypeCode Non-human Subject DemographicssetMembershipAssociationSetMembership' constraints.validation.dependOn.Non-human Subject DemographicsstrainAssociationsubjectStrainCode='Non-human Subject DemographicsstrainAssociationsubjectStrainCodeP' constraints.validation.dependOn.Non-human Subject DemographicsageAssociationSubjectAgeCode='Non-human Subject DemographicsageAssociationSubjectAgeCodeP' constraints.validation.dependOn.Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCode='Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCodeP' constraints.validation.dependOn.Non-human Subject DemographicssetMembershipAssociationsetMembershipCode='Non-human Subject DemographicssetMembershipAssociationsetMembershipCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmNonhumanSubjectDemographicsageAssociation typeCode='COMP' constraints.validation.error='Non-human Subject DemographicsageAssociationTypeCode Non-human Subject DemographicsageAssociationSubjectAge Non-human Subject DemographicsageAssociationSubjectAgeClassCode Non-human Subject DemographicsageAssociationSubjectAgeCodeP Non-human Subject DemographicsageAssociationSubjectAgeCode Non-human Subject DemographicsageAssociationSubjectAgeMoodCode Non-human Subject DemographicsageAssociationSubjectAgeValue' constraints.validation.query='Non-human Subject DemographicsageAssociationSubjectAgeClassCode Non-human Subject DemographicsageAssociationSubjectAgeCodeP Non-human Subject DemographicsageAssociationSubjectAgeCode Non-human Subject DemographicsageAssociationSubjectAgeMoodCode Non-human Subject DemographicsageAssociationSubjectAgeValue' constraints.validation.dependOn.Non-human Subject DemographicsageAssociationSubjectAgeCode='Non-human Subject DemographicsageAssociationSubjectAgeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmNonhumanSubjectDemographicsageAssociationSubjectAge classCode='OBS' constraints.validation.error='Non-human Subject DemographicsageAssociationSubjectAgeClassCode Non-human Subject DemographicsageAssociationSubjectAgeCode Non-human Subject DemographicsageAssociationSubjectAgeCodeP Non-human Subject DemographicsageAssociationSubjectAgeMoodCode Non-human Subject DemographicsageAssociationSubjectAgeValue' code.code='C25150' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Reported Age' constraints.validation.dependOn.Non-human Subject DemographicsageAssociationSubjectAgeCode='Non-human Subject DemographicsageAssociationSubjectAgeCodeP' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmNonhumanSubjectDemographicsspeciesAssociation typeCode='COMP' constraints.validation.error='Non-human Subject DemographicsspeciesAssociationTypeCode Non-human Subject DemographicsspeciesAssociationSubjectSpecies Non-human Subject DemographicsspeciesAssociationsubjectSpeciesClassCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesMoodCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCodeP Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValue Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValueP' constraints.validation.query='Non-human Subject DemographicsspeciesAssociationsubjectSpeciesClassCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesMoodCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCodeP Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValue Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValueP' constraints.validation.dependOn.Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCode='Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmNonhumanSubjectDemographicsspeciesAssociationsubjectSpecies classCode='OBS' constraints.validation.error='Non-human Subject DemographicsspeciesAssociationsubjectSpeciesClassCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesMoodCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCode Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCodeP Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValue Non-human Subject DemographicsspeciesAssociationsubjectSpeciesValueP' moodCode='EVN' code.code='SPCtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Reported Age' constraints.validation.dependOn.Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCode='Non-human Subject DemographicsspeciesAssociationsubjectSpeciesCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmNonhumanSubjectDemographicsstrainAssociation typeCode='COMP' constraints.validation.error='Non-human Subject DemographicsstrainAssociationTypeCode Non-human Subject DemographicsstrainAssociationSubjectStrain Non-human Subject DemographicsstrainAssociationsubjectStrainClassCode Non-human Subject DemographicsstrainAssociationsubjectStrainCodeP Non-human Subject DemographicsstrainAssociationsubjectStrainCode Non-human Subject DemographicsstrainAssociationsubjectStrainMoodCode Non-human Subject DemographicsstrainAssociationsubjectStrainValue Non-human Subject DemographicsstrainAssociationsubjectStrainValueP Non-human Subject DemographicsstrainAssociationsubjectStrainText' constraints.validation.query='Non-human Subject DemographicsstrainAssociationsubjectStrainClassCode Non-human Subject DemographicsstrainAssociationsubjectStrainCodeP Non-human Subject DemographicsstrainAssociationsubjectStrainCode Non-human Subject DemographicsstrainAssociationsubjectStrainMoodCode Non-human Subject DemographicsstrainAssociationsubjectStrainValue Non-human Subject DemographicsstrainAssociationsubjectStrainValueP Non-human Subject DemographicsstrainAssociationsubjectStrainText' constraints.validation.dependOn.Non-human Subject DemographicsstrainAssociationsubjectStrainCode='Non-human Subject DemographicsstrainAssociationsubjectStrainCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmNonhumanSubjectDemographicsstrainAssociationsubjectStrain classCode='OBS' constraints.validation.error='Non-human Subject DemographicsstrainAssociationsubjectStrainClassCode Non-human Subject DemographicsstrainAssociationsubjectStrainCode Non-human Subject DemographicsstrainAssociationsubjectStrainCodeP Non-human Subject DemographicsstrainAssociationsubjectStrainMoodCode Non-human Subject DemographicsstrainAssociationsubjectStrainValue Non-human Subject DemographicsstrainAssociationsubjectStrainValueP' code.code='SStbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Reported Age' constraints.validation.dependOn.Non-human Subject DemographicsstrainAssociationsubjectStrainCode='Non-human Subject DemographicsstrainAssociationsubjectStrainCodeP' moodCode='EVN' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus' constraints.validation.info='Non-human Subject DemographicsstrainAssociationsubjectStrainText'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmNonhumanSubjectDemographicssetMembershipAssociation typeCode='COMP' constraints.validation.error='Non-human Subject DemographicssetMembershipAssociationTypeCode Non-human Subject DemographicssetMembershipAssociationSetMembership Non-human Subject DemographicssetMembershipAssociationsetMembershipClassCode Non-human Subject DemographicssetMembershipAssociationsetMembershipCodeP Non-human Subject DemographicssetMembershipAssociationsetMembershipCode Non-human Subject DemographicssetMembershipAssociationsetMembershipMoodCode Non-human Subject DemographicssetMembershipAssociationsetMembershipValue' constraints.validation.query='Non-human Subject DemographicssetMembershipAssociationsetMembershipClassCode Non-human Subject DemographicssetMembershipAssociationsetMembershipCodeP Non-human Subject DemographicssetMembershipAssociationsetMembershipCode Non-human Subject DemographicssetMembershipAssociationsetMembershipMoodCode Non-human Subject DemographicssetMembershipAssociationsetMembershipValue' constraints.validation.dependOn.Non-human Subject DemographicssetMembershipAssociationsetMembershipCode='Non-human Subject DemographicssetMembershipAssociationsetMembershipCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmNonhumanSubjectDemographicssetMembershipAssociationsetMembership classCode='OBS' constraints.validation.error='Non-human Subject DemographicssetMembershipAssociationsetMembershipClassCode Non-human Subject DemographicssetMembershipAssociationsetMembershipCode Non-human Subject DemographicssetMembershipAssociationsetMembershipCodeP Non-human Subject DemographicssetMembershipAssociationsetMembershipMoodCode Non-human Subject DemographicssetMembershipAssociationsetMembershipValue' code.code='TBD' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Reported Age' constraints.validation.dependOn.Non-human Subject DemographicssetMembershipAssociationsetMembershipCode='Non-human Subject DemographicssetMembershipAssociationsetMembershipCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_lk8a8BpQEeSd5OoVIuDNwg" base_Class="_mZNiwLWAEeGLXdg8xIiGrA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Exclusion ReasonTemplateId Exclusion ReasonMoodCode Exclusion ReasonCode Exclusion ReasonCodeP Exclusion ReasonValue Exclusion ReasonValueP' templateId.root='2.16.840.1.113883.10.20.23.38' classCode='OBS' moodCode='EVN' code.code='EXCtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Baseline Indicator' constraints.validation.dependOn.Exclusion ReasonCode='Exclusion ReasonCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_loTQ8BpQEeSd5OoVIuDNwg" base_Class="_VqsWALWLEeGLXdg8xIiGrA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Mass IdentificationTemplateId Mass IdentificationTypeCode Mass IdentificationParticipantRole' templateId.root='2.16.840.1.113883.10.20.23.51' typeCode='SBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmMassIdentificationMassRole classCode='ROL' constraints.validation.error='Mass IdentificationMassRoleClassCode Mass IdentificationMassRoleId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_lqELgBpQEeSd5OoVIuDNwg" base_Class="_YbytILZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study Subject InterventionTemplateId Study Subject InterventionClassCode Study Subject InterventionMoodCode Study Subject InterventionId Study Subject InterventionRouteCode Study Subject InterventionApproachSiteCode Study Subject InterventionDomain Assignment Study Subject InterventionelementOrderAssociationelementOrderClassCode Study Subject InterventionelementOrderAssociationelementOrderCodeP Study Subject InterventionelementOrderAssociationelementOrderCode Study Subject InterventionelementOrderAssociationelementOrderMoodCode Study Subject InterventionelementOrderAssociationelementOrderValue Study Subject InterventionelementOrderAssociationTypeCode Study Subject InterventionelementOrderAssociationElementOrder' templateId.root='2.16.840.1.113883.10.20.23.87' classCode='SBADM' moodCode='EVN' constraints.validation.info='Study Subject InterventionStatusCode Study Subject InterventionText Study Subject InterventionEffectiveTime Study Subject InterventionRouteCodeP Study Subject InterventionMaxDoseQuantity Study Subject InterventionApproachSiteCodeP Study Subject InterventionGroup Identifier Study Subject InterventionStudy Epoch Study Subject InterventionElementOrderAssociation Study Subject InterventionTiming Reference Study Subject InterventionStudy Day Period Study Subject InterventionPre-Specified Event Study Subject InterventionData Collection Study Subject InterventionNon Performance Reason Study Subject InterventionComment Study Subject InterventionRelated Record Study Subject InterventionSupplemental Value Study Subject InterventionIndication Study Subject InterventionIntended Regimen Study Subject InterventionDose Adjustment Reason Study Subject InterventionCategory Study Subject InterventionSub-Category Study Subject InterventionFinding About Study Subject InterventionEvent Duration' constraints.validation.warning='Study Subject InterventionDoseQuantity Study Subject InterventionConsumable Material' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1' routeCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Subject InterventionRouteCode='Study Subject InterventionRouteCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' approachSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.query='Study Subject InterventionelementOrderAssociationelementOrderClassCode Study Subject InterventionelementOrderAssociationelementOrderCodeP Study Subject InterventionelementOrderAssociationelementOrderCode Study Subject InterventionelementOrderAssociationelementOrderMoodCode Study Subject InterventionelementOrderAssociationelementOrderValue Study Subject InterventionelementOrderAssociationTypeCode Study Subject InterventionelementOrderAssociationElementOrder' constraints.validation.dependOn.Study Subject InterventionelementOrderAssociationelementOrderCode='Study Subject InterventionelementOrderAssociationelementOrderCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmStudySubjectInterventionelementOrderAssociation typeCode='COMP' constraints.validation.error='Study Subject InterventionelementOrderAssociationTypeCode Study Subject InterventionelementOrderAssociationElementOrder Study Subject InterventionelementOrderAssociationelementOrderClassCode Study Subject InterventionelementOrderAssociationelementOrderCodeP Study Subject InterventionelementOrderAssociationelementOrderCode Study Subject InterventionelementOrderAssociationelementOrderMoodCode Study Subject InterventionelementOrderAssociationelementOrderValue' constraints.validation.query='Study Subject InterventionelementOrderAssociationelementOrderClassCode Study Subject InterventionelementOrderAssociationelementOrderCodeP Study Subject InterventionelementOrderAssociationelementOrderCode Study Subject InterventionelementOrderAssociationelementOrderMoodCode Study Subject InterventionelementOrderAssociationelementOrderValue' constraints.validation.dependOn.Study Subject InterventionelementOrderAssociationelementOrderCode='Study Subject InterventionelementOrderAssociationelementOrderCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmStudySubjectInterventionelementOrderAssociationelementOrder classCode='OBS' constraints.validation.error='Study Subject InterventionelementOrderAssociationelementOrderClassCode Study Subject InterventionelementOrderAssociationelementOrderCode Study Subject InterventionelementOrderAssociationelementOrderCodeP Study Subject InterventionelementOrderAssociationelementOrderMoodCode Study Subject InterventionelementOrderAssociationelementOrderValue' code.code='ELOtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Subject InterventionelementOrderAssociationelementOrderCode='Study Subject InterventionelementOrderAssociationelementOrderCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_lxMHMBpQEeSd5OoVIuDNwg" base_Class="_sYRCoLZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study Subject EventTemplateId Study Subject EventMoodCode Study Subject EventId Study Subject EventCode Study Subject EventCodeP Study Subject EventValue Study Subject EventTargetSiteCode Study Subject EventDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.85' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Subject EventCode='Study Subject EventCodeP' constraints.validation.warning='Study Subject EventEffectiveTime' constraints.validation.info='Study Subject EventStatusCode Study Subject EventTargetSiteCodeP Study Subject EventGroup Identifier Study Subject EventEvent Severity Study Subject EventPre-Specified Event Study Subject EventStudy Day Period Study Subject EventBody System or Organ Class Study Subject EventComment Study Subject EventRelated Record Study Subject EventSupplemental Value Study Subject EventData Collection Study Subject EventNon Performance Reason Study Subject EventSerious Event Study Subject EventStudy Treatment Action Taken Study Subject EventOther Treatment Action Taken Study Subject EventStudy Treatment Causality Study Subject EventNon-Study Treatment Relationship Study Subject EventEvent Pattern Study Subject EventEvent Outcome Study Subject EventConcomitant Treatment Study Subject EventToxicity Study Subject EventCategory Study Subject EventSub-Category Study Subject EventFinding About Study Subject EventEvent Duration' targetSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' targetSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Subject EventTargetSiteCode='Study Subject EventTargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_l1djMBpQEeSd5OoVIuDNwg" base_Class="_2Tri4LZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study Subject FindingTemplateId Study Subject FindingClassCode Study Subject FindingMoodCode Study Subject FindingId Study Subject FindingCode Study Subject FindingMethodCode Study Subject FindingInterpretationCode Study Subject FindingTargetSiteCode Study Subject FindingDomain Assignment' templateId.root='2.16.840.1.113883.10.20.23.86' classCode='OBS' moodCode='EVN' constraints.validation.info='Study Subject FindingText Study Subject FindingStatusCode Study Subject FindingMethodCodeP Study Subject FindingInterpretationCodeP Study Subject FindingTargetSiteCodeP Study Subject FindingNon Performance Reason Study Subject FindingStudy Test Organization Study Subject FindingGroup Identifier Study Subject FindingSpecimen Information Study Subject FindingComment Study Subject FindingRelated Record Study Subject FindingSupplemental Value Study Subject FindingToxicity Study Subject FindingCategory Study Subject FindingSub-Category Study Subject FindingPosition of Subject Study Subject FindingBody System or Organ Class Study Subject FindingFasting Status Study Subject FindingStudy Finding Evaluator Study Subject FindingEvent or Finding Severity Study Subject FindingDeath Relationship Study Subject FindingAssay Quantitation Study Subject FindingFinding About' constraints.validation.warning='Study Subject FindingValue' methodCode.codeSystem='2.16.840.1.113883.3.26.1.1' methodCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Subject FindingMethodCode='Study Subject FindingMethodCodeP' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Subject FindingInterpretationCode='Study Subject FindingInterpretationCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.3.26.1.1' targetSiteCode.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Subject FindingTargetSiteCode='Study Subject FindingTargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_mSSCEBpQEeSd5OoVIuDNwg" base_Class="_ys8oENKGEeGO8bQEpB8bpQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Domain AssignmentTemplateId Domain AssignmentMoodCode Domain AssignmentClassCode Domain AssignmentCode Domain AssignmentCodeP Domain AssignmentValue' templateId.root='2.16.840.1.113883.10.20.23.30' moodCode='EVN' classCode='ACT' code.code='C66734' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Domain AssignmentCode='Domain AssignmentCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_mUhdwBpQEeSd5OoVIuDNwg" base_Class="_FydD4NKIEeGO8bQEpB8bpQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CommentTemplateId CommentClassCode CommentMoodCode CommentId CommentCode CommentValue' templateId.root='2.16.840.1.113883.10.20.23.23' classCode='OBS' moodCode='EVN' code.code='C49569' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.warning='CommentCodeP CommentStudy Finding Evaluator' constraints.validation.dependOn.CommentCode='CommentCodeP' constraints.validation.info='CommentEffectiveTime CommentReferenceAssociation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmCommentreferenceAssociation constraints.validation.error='CommentreferenceAssociationReference'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmCommentreferenceAssociationreference classCode='ACT' constraints.validation.error='CommentreferenceAssociationreferenceClassCode CommentreferenceAssociationreferenceCode CommentreferenceAssociationreferenceMoodCode' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_mZF0sBpQEeSd5OoVIuDNwg" base_Class="_iMrPgNKNEeGX6v8HTY_PeQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Related RecordTemplateId Related RecordClassCode Related RecordMoodCode Related RecordId Related RecordCode Related RecordCodeP' templateId.root='2.16.840.1.113883.10.20.23.75' classCode='ACT' moodCode='EVN' code.code='RRtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Related RecordCode='Related RecordCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_mbXFkBpQEeSd5OoVIuDNwg" base_Class="_MltKQNKREeGX6v8HTY_PeQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Supplemental ValueTemplateId Supplemental ValueClassCode Supplemental ValueMoodCode Supplemental ValueCode Supplemental ValueCodeP Supplemental ValueValue Supplemental ValueOrigenAssociation' templateId.root='2.16.840.1.113883.10.20.23.96' classCode='OBS' moodCode='EVN' code.codeSystem='locally defined' code.codeSystemName='Supplemental Value Type' constraints.validation.dependOn.Supplemental ValueCode='Supplemental ValueCodeP' constraints.validation.info='Supplemental ValueStudy Finding Evaluator'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSupplementalValueoriginAssociation typeCode='COMP' constraints.validation.error='Supplemental ValueoriginAssociationTypeCode Supplemental ValueoriginAssociationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSupplementalValueoriginAssociationorigin classCode='OBS' constraints.validation.error='Supplemental ValueoriginAssociationoriginClassCode Supplemental ValueoriginAssociationoriginCode Supplemental ValueoriginAssociationoriginCodeP Supplemental ValueoriginAssociationoriginMoodCode Supplemental ValueoriginAssociationoriginValue Supplemental ValueoriginAssociationoriginValueP' code.code='DOtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Supplemental ValueoriginAssociationoriginCode='Supplemental ValueoriginAssociationoriginCodeP' moodCode='EVN' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nDbLIBpQEeSd5OoVIuDNwg" base_Class="_XrR40NW4EeGKmsh0mvGT9Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Reference PeriodTemplateId Reference PeriodClassCode Reference PeriodMoodCode Reference PeriodCode Reference PeriodCodeP Reference PeriodEffectiveTime' templateId.root='2.16.840.1.113883.10.20.23.73' classCode='ACT' moodCode='EVN' code.code='RPtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Reference PeriodCode='Reference PeriodCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nF-v4BpQEeSd5OoVIuDNwg" base_Class="_w_aIINW7EeGJ8IViYnBfBA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Start Relative to Reference PeriodTemplateId Start Relative to Reference PeriodClassCode Start Relative to Reference PeriodMoodCode Start Relative to Reference PeriodCode Start Relative to Reference PeriodCodeP Start Relative to Reference PeriodValue Start Relative to Reference PeriodValueP' templateId.root='2.16.840.1.113883.10.20.23.79' classCode='OBS' moodCode='EVN' code.code='STRPtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Start Relative to Reference PeriodCode='Start Relative to Reference PeriodCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nIrekBpQEeSd5OoVIuDNwg" base_Class="_PTdgANW9EeGJ8IViYnBfBA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Stop Relative to Reference PeriodTemplateId Stop Relative to Reference PeriodClassCode Stop Relative to Reference PeriodMoodCode Stop Relative to Reference PeriodCode Stop Relative to Reference PeriodCodeP Stop Relative to Reference PeriodValue Stop Relative to Reference PeriodValueP' templateId.root='2.16.840.1.113883.10.20.23.80' classCode='OBS' moodCode='EVN' code.code='ENRPtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Stop Relative to Reference PeriodCode='Stop Relative to Reference PeriodCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nNqsQBpQEeSd5OoVIuDNwg" base_Class="_zDVFEHINEeGL-K1S1E9LrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='IndicationTemplateId IndicationClassCode IndicationMoodCode IndicationCode IndicationCodeP IndicationValue IndicationValueP' templateId.root='2.16.840.1.113883.10.20.23.48' classCode='OBS' moodCode='EVN' code.code='C83085' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Concomitant Medication Indication' constraints.validation.dependOn.IndicationCode='IndicationCodeP' value.codeSystem='unknown' value.codeSystemName='Intervention Indication Type'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nQwcgBpQEeSd5OoVIuDNwg" base_Class="_YbytjLZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Intended RegimenTemplateId Intended RegimenClassCode Intended RegimenMoodCode Intended RegimenCode Intended RegimenCodeP Intended RegimenValue' templateId.root='2.16.840.1.113883.10.20.23.49' classCode='OBS' moodCode='EVN' code.code='IRtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Intended RegimenCode='Intended RegimenCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nTr0sBpQEeSd5OoVIuDNwg" base_Class="_YbytoLZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Dose Adjustment ReasonTemplateId Dose Adjustment ReasonClassCode Dose Adjustment ReasonCode Dose Adjustment ReasonCodeP Dose Adjustment ReasonValue' templateId.root='2.16.840.1.113883.10.20.23.31' classCode='OBS' moodCode='EVN' code.code='DARtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Dose Adjustment ReasonCode='Dose Adjustment ReasonCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nWsFYBpQEeSd5OoVIuDNwg" base_Class="_sYRDArZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Serious EventTemplateId Serious EventClassCode Serious EventMoodCode Serious EventCode Serious EventCodeP Serious EventValue Serious EventSeriousEventTypeAssociationSeriousEventTypeClassCode Serious EventSeriousEventTypeAssociationSeriousEventTypeMoodCode Serious EventSeriousEventTypeAssociationSeriousEventTypeCodeP Serious EventSeriousEventTypeAssociationSeriousEventTypeCode Serious EventSeriousEventTypeAssociationSeriousEventTypeValue Serious EventSeriousEventTypeAssociationSeriousEventTypeValueP Serious EventSeriousEventTypeAssociationTypeCode Serious EventSeriousEventTypeAssociationSeriousEventType' templateId.root='2.16.840.1.113883.10.20.23.77' classCode='OBS' moodCode='EVN' code.code='SEtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Serious Event' constraints.validation.dependOn.Serious EventCode='Serious EventCodeP' constraints.validation.info='Serious EventSeriousEventTypeAssociation' constraints.validation.query='Serious EventSeriousEventTypeAssociationSeriousEventTypeClassCode Serious EventSeriousEventTypeAssociationSeriousEventTypeMoodCode Serious EventSeriousEventTypeAssociationSeriousEventTypeCodeP Serious EventSeriousEventTypeAssociationSeriousEventTypeCode Serious EventSeriousEventTypeAssociationSeriousEventTypeValue Serious EventSeriousEventTypeAssociationSeriousEventTypeValueP Serious EventSeriousEventTypeAssociationTypeCode Serious EventSeriousEventTypeAssociationSeriousEventType' constraints.validation.dependOn.Serious EventSeriousEventTypeAssociationSeriousEventTypeCode='Serious EventSeriousEventTypeAssociationSeriousEventTypeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSeriousEventSeriousEventTypeAssociation typeCode='COMP' constraints.validation.error='Serious EventSeriousEventTypeAssociationTypeCode Serious EventSeriousEventTypeAssociationSeriousEventType Serious EventSeriousEventTypeAssociationSeriousEventTypeClassCode Serious EventSeriousEventTypeAssociationSeriousEventTypeMoodCode Serious EventSeriousEventTypeAssociationSeriousEventTypeCodeP Serious EventSeriousEventTypeAssociationSeriousEventTypeCode Serious EventSeriousEventTypeAssociationSeriousEventTypeValue Serious EventSeriousEventTypeAssociationSeriousEventTypeValueP' constraints.validation.query='Serious EventSeriousEventTypeAssociationSeriousEventTypeClassCode Serious EventSeriousEventTypeAssociationSeriousEventTypeMoodCode Serious EventSeriousEventTypeAssociationSeriousEventTypeCodeP Serious EventSeriousEventTypeAssociationSeriousEventTypeCode Serious EventSeriousEventTypeAssociationSeriousEventTypeValue Serious EventSeriousEventTypeAssociationSeriousEventTypeValueP' constraints.validation.dependOn.Serious EventSeriousEventTypeAssociationSeriousEventTypeCode='Serious EventSeriousEventTypeAssociationSeriousEventTypeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/sdtmSeriousEventSeriousEventTypeAssociationSeriousEventType constraints.validation.error='Serious EventSeriousEventTypeAssociationSeriousEventTypeClassCode Serious EventSeriousEventTypeAssociationSeriousEventTypeMoodCode Serious EventSeriousEventTypeAssociationSeriousEventTypeCode Serious EventSeriousEventTypeAssociationSeriousEventTypeCodeP Serious EventSeriousEventTypeAssociationSeriousEventTypeValue Serious EventSeriousEventTypeAssociationSeriousEventTypeValueP' moodCode='EVN' code.code='SETtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Serious EventSeriousEventTypeAssociationSeriousEventTypeCode='Serious EventSeriousEventTypeAssociationSeriousEventTypeCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nb3gUBpQEeSd5OoVIuDNwg" base_Class="_sYRDL7ZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study Treatment Action TakenTemplateId Study Treatment Action TakenClassCode Study Treatment Action TakenMoodCode Study Treatment Action TakenCode Study Treatment Action TakenCodeP Study Treatment Action TakenValue Study Treatment Action TakenValueP' templateId.root='2.16.840.1.113883.10.20.23.89' classCode='OBS' moodCode='EVN' code.code='C66767' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Treatment Action TakenCode='Study Treatment Action TakenCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nfA68BpQEeSd5OoVIuDNwg" base_Class="_sYRDRbZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Other Treatment Action TakenTemplateId Other Treatment Action TakenClassCode Other Treatment Action TakenMoodCode Other Treatment Action TakenCode Other Treatment Action TakenCodeP Other Treatment Action TakenValue' templateId.root='2.16.840.1.113883.10.20.23.63' classCode='OBS' moodCode='EVN' code.code='OATtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Other Treatment Action TakenCode='Other Treatment Action TakenCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nhg1UBpQEeSd5OoVIuDNwg" base_Class="_sYRDXLZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Study Treatment CausalityTemplateId Study Treatment CausalityClassCode Study Treatment CausalityMoodCode Study Treatment CausalityCode Study Treatment CausalityCodeP Study Treatment CausalityValue Study Treatment CausalityValueP' templateId.root='2.16.840.1.113883.10.20.23.90' classCode='OBS' moodCode='EVN' code.code='STCtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Study Treatment CausalityCode='Study Treatment CausalityCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nkqP8BpQEeSd5OoVIuDNwg" base_Class="_sYRDc7ZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Non-Study Treatment RelationshipTemplateId Non-Study Treatment RelationshipClassCode Non-Study Treatment RelationshipCode Non-Study Treatment RelationshipCodeP Non-Study Treatment RelationshipMoodCode Non-Study Treatment RelationshipValue' templateId.root='2.16.840.1.113883.10.20.23.61' classCode='OBS' code.code='NSTtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Non-Study Treatment RelationshipCode='Non-Study Treatment RelationshipCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nnLYcBpQEeSd5OoVIuDNwg" base_Class="_sYRDirZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Event PatternTemplateId Event PatternClassCode Event PatternMoodCode Event PatternCode Event PatternCodeP Event PatternValue Event PatternValueP' templateId.root='2.16.840.1.113883.10.20.23.36' classCode='OBS' moodCode='EVN' code.code='C83208' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Adverse Event Pattern' constraints.validation.dependOn.Event PatternCode='Event PatternCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nqWBMBpQEeSd5OoVIuDNwg" base_Class="_sYRDobZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Event OutcomeTemplateId Event OutcomeClassCode Event OutcomeMoodCode Event OutcomeCode Event OutcomeCodeP Event OutcomeValue Event OutcomeValueP' templateId.root='2.16.840.1.113883.10.20.23.35' classCode='OBS' moodCode='EVN' code.code='C49489' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Adverse Event Outcome' constraints.validation.dependOn.Event OutcomeCode='Event OutcomeCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ntgC4BpQEeSd5OoVIuDNwg" base_Class="_sYRDuLZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Concomitant TreatmentTemplateId Concomitant TreatmentClassCode Concomitant TreatmentMoodCode Concomitant TreatmentCode Concomitant TreatmentCodeP Concomitant TreatmentValue' templateId.root='2.16.840.1.113883.10.20.25.25' classCode='OBS' moodCode='EVN' code.code='C83199' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' code.displayName='Adverse Event Concommitant Treatment' constraints.validation.dependOn.Concomitant TreatmentCode='Concomitant TreatmentCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_nwEOsBpQEeSd5OoVIuDNwg" base_Class="_sYRDz7ZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ToxicityTemplateId ToxicityClassCode ToxicityMoodCode ToxicityCode ToxicityCodeP ToxicityValue ToxicityValueP' templateId.root='2.16.840.1.113883.10.20.23.98' classCode='OBS' moodCode='EVN' code.code='TOtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.ToxicityCode='ToxicityCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_n0UckBpQEeSd5OoVIuDNwg" base_Class="_sYRD5rZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CategoryTemplateId CategoryClassCode CategoryMoodCode CategoryCode CategoryCodeP CategoryValue' templateId.root='2.16.840.1.113883.10.20.23.20' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.CategoryCode='CategoryCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_n9Xq4BpQEeSd5OoVIuDNwg" base_Class="_EtyC8Nf7EeGEv9qe5Ch_sQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Sub-CategoryTemplateId Sub-CategoryClassCode Sub-CategoryMoodCode Sub-CategoryCode Sub-CategoryCodeP Sub-CategoryValue' templateId.root='2.16.840.1.113883.10.20.23.91' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Sub-CategoryCode='Sub-CategoryCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_oFVUEBpQEeSd5OoVIuDNwg" base_Class="_FhxtaYsoEeGEXvbgIb1duQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Position of SubjectTemplateId Position of SubjectClassCode Position of SubjectMoodCode Position of SubjectCode Position of SubjectCodeP Position of SubjectValue Position of SubjectValueP' templateId.root='2.16.840.1.113883.10.20.23.69' code.code='C71148' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Position of SubjectCode='Position of SubjectCodeP' value.codeSystem='2.16.840.1.113883.3.26.1.1' value.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_oJATIBpQEeSd5OoVIuDNwg" base_Class="_2TrjGrZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Reference RangeTemplateId Reference RangeClassCode Reference RangeMoodCode Reference RangeCode Reference RangeCodeP Reference RangeValue Reference RangeInterpretationCode' templateId.root='2.16.840.1.113883.10.20.23.74' classCode='OBS' moodCode='EVN.CRT' code.code='C78736' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' interpretationCode.codeSystem='2.16.840.1.113883.3.26.1.1' interpretationCode.codeSystemName='NCI Thesaurus'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_oLp-gBpQEeSd5OoVIuDNwg" base_Class="_2TrjZLZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Result CategoryTemplateId Result CategoryClassCode Result CategoryMoodCode Result CategoryCode Result CategoryCodeP Result CategoryValue' templateId.root='2.16.840.1.113883.10.20.23.76' classCode='OBS' moodCode='EVN' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Result CategoryCode='Result CategoryCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_oPRTMBpQEeSd5OoVIuDNwg" base_Class="_2TrjOLZmEeGvx_6yr-0T9g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Fasting StatusTemplateId Fasting StatusClassCode Fasting StatusMoodCode Fasting StatusCode Fasting StatusCodeP Fasting StatusValue' templateId.root='2.16.840.1.113883.10.20.23.39' classCode='OBS' moodCode='EVN' code.code='FStbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Fasting StatusCode='Fasting StatusCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_oStBsBpQEeSd5OoVIuDNwg" base_Class="_P_ecgLc0EeGbTfv2pIp07Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Death RelationshipTemplateId Death RelationshipClassCode Death RelationshipMoodCode Death RelationshipCode Death RelationshipCodeP Death RelationshipValue' templateId.root='2.16.840.1.113883.10.20.23.29' classCode='OBS' moodCode='EVN' code.code='C95087' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Death RelationshipCode='Death RelationshipCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_oVsEQBpQEeSd5OoVIuDNwg" base_Class="_GzShcJOgEeG_Gqo8Ix5ECw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Assay QuantitationTemplateId Assay QuantitationClassCode Assay QuantitationMoodCode Assay QuantitationCode Assay QuantitationCodeP Assay QuantitationValue' templateId.root='2.16.840.1.113883.10.20.23.16' classCode='OBS' moodCode='DEF' code.code='AQtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Assay QuantitationCode='Assay QuantitationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_odU9UBpQEeSd5OoVIuDNwg" base_Class="__G5heXIJEeGL-K1S1E9LrQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Pre-Specified EventTemplateId Pre-Specified EventClassCode Pre-Specified EventMoodCode Pre-Specified EventCode Pre-Specified EventCodeP Pre-Specified EventValue' templateId.root='2.16.840.1.113883.10.20.23.70' classCode='OBS' moodCode='EVN' code.code='PSEtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Pre-Specified EventCode='Pre-Specified EventCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_onXDEBpQEeSd5OoVIuDNwg" base_Class="_-HQWMPj8EeG7pMUQbTahtA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='Event DurationTemplateId Event DurationClassCode Event DurationMoodCode Event DurationCode Event DurationCodeP Event DurationValue' templateId.root='2.16.840.1.113883.10.20.23.102' classCode='OBS' moodCode='EVN' code.code='EDtbd' code.codeSystem='2.16.840.1.113883.3.26.1.1' code.codeSystemName='NCI Thesaurus' constraints.validation.dependOn.Event DurationCode='Event DurationCodeP'</annotation>
  </Ecore:EClass>
</xmi:XMI>
