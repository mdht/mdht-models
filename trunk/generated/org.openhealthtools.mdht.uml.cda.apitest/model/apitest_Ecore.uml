<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_qQyD8jxVEd6JwqSGecoePg" name="apitest">
    <packageImport xmi:id="_JCoH8FccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_UbYI4FccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_qQyD8jxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_Y1gK0FccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.ihe/model/ihe_Ecore.uml#_qQyD8jxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_eqGmsFccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.hitsp.model/model/hitsp.uml#_qQyD8jxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_O-ELoFccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_R7HyoFccEeCzOKs2Ez1M5w">
      <importedPackage href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_KnCD4CFjEd-3s7f6mWX-3A"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_CQJZEGCUEeCVapLQyCJtvg" name="StatusObservation" clientDependency="_2EQPVXZdEeCUbKFG2w1KIw">
      <ownedRule xmi:id="_CQJZFWCUEeCVapLQyCJtvg" name="StatusObservationNoAdditionalParticipants" constrainedElement="_CQJZEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_CQJZFmCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.participant->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EZK7EmCUEeCVapLQyCJtvg" name="StatusObservationHasTextReference">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe/model/ihe_Ecore.uml#_MIoHYCQKEeCxCon8a79rfA"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EZK7E2CUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EQPWXZdEeCUbKFG2w1KIw" name="StatusObservationTemplateId" constrainedElement="_CQJZEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EQPWnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.57')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaAUHZdEeCUbKFG2w1KIw" name="StatusObservationClassCode" constrainedElement="_CQJZEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaAUXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaAUnZdEeCUbKFG2w1KIw" name="StatusObservationMoodCode" constrainedElement="_CQJZEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaAU3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EaAVHZdEeCUbKFG2w1KIw" name="StatusObservationStatusCode" constrainedElement="_CQJZEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EaAVXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EjxYXZdEeCUbKFG2w1KIw" name="StatusObservationValue" constrainedElement="_CQJZEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EjxYnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CE)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EjxdHZdEeCUbKFG2w1KIw" name="StatusObservationText" constrainedElement="_CQJZEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EjxdXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CQcUAGCUEeCVapLQyCJtvg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2EQPVXZdEeCUbKFG2w1KIw" client="_CQJZEGCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2EQPVHZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2EQPVHZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EXNMMGCUEeCVapLQyCJtvg" name="Condition" clientDependency="_2Ejxd3ZdEeCUbKFG2w1KIw">
      <ownedComment xmi:id="_EaM10GCUEeCVapLQyCJtvg">
        <body>A problem is a clinical statement that a clinician is particularly concerned about and wants to track. It has important patient management use cases (e.g. health records often present the problem list as a way of summarizing a patient's medical history).</body>
      </ownedComment>
      <ownedRule xmi:id="_EaFhE2CUEeCVapLQyCJtvg" name="ConditionEntryRelationshipRequired">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaFhFGCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.entryRelationship->isEmpty()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EaHWQGCUEeCVapLQyCJtvg" name="ConditionSubjectOfTarget">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaHWQWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, cda::ClinicalStatement)->forAll(target : cda::ClinicalStatement | not target.oclIsUndefined() and &#xD;&#xA;  (target.oclIsKindOf(ccd::ProblemObservation) or target.oclIsKindOf(ccd::AlertObservation)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EaH9UGCUEeCVapLQyCJtvg" name="ConditionContainsProblemObservation">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaH9UWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(ccd::ProblemSection) implies self.getObservations()&#xD;&#xA;   ->exists(obs : cda::Observation | obs.oclIsKindOf(ccd::ProblemObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EaIkYGCUEeCVapLQyCJtvg" name="ConditionContainsAlertObservation">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaIkYWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.getSection().oclIsKindOf(ccd::AlertsSection) implies self.getObservations()&#xD;&#xA;   ->exists(obs : cda::Observation | obs.oclIsKindOf(ccd::AlertObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EaJLcGCUEeCVapLQyCJtvg" name="ConditionContainsPatientAwareness">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaJLcWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(ccd::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EaKZkGCUEeCVapLQyCJtvg" name="ConditionEffectiveTimeLowHigh">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe/model/ihe_Ecore.uml#_GgvgUDxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaKZkWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()&#xD;&#xA;   and ((self.statusCode.code = 'completed' or self.statusCode.code = 'aborted') implies not self.effectiveTime.high.oclIsUndefined())&#xD;&#xA;   and ((self.statusCode.code &lt;> 'completed' and self.statusCode.code &lt;> 'aborted') implies self.effectiveTime.high.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EXNMNWCUEeCVapLQyCJtvg" name="ConditionHasProviderTreatmentTime" constrainedElement="_EXNMMGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EXNMNmCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.performer->exists(p : cda::Performer2 | p.time.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2EjxfHZdEeCUbKFG2w1KIw" name="ConditionTemplateId" constrainedElement="_EXNMMGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2EjxfXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Es7QXZdEeCUbKFG2w1KIw" name="ConditionClassCode" constrainedElement="_EXNMMGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Es7QnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2E2sQHZdEeCUbKFG2w1KIw" name="ConditionMoodCode" constrainedElement="_EXNMMGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2E2sQXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2E2sUXZdEeCUbKFG2w1KIw" name="ConditionId" constrainedElement="_EXNMMGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2E2sUnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2E_2MnZdEeCUbKFG2w1KIw" name="ConditionCodeNullFlavor" constrainedElement="_EXNMMGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2E_2M3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (self.code.nullFlavor = vocab::NullFlavor::NA)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FJnRHZdEeCUbKFG2w1KIw" name="ConditionEffectiveTime" constrainedElement="_EXNMMGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FJnRXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FmTM3ZdEeCUbKFG2w1KIw" name="ConditionEpisodeObservation" constrainedElement="_EXNMMGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FmTNHZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(apitest::EpisodeObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JKkgHZdEeCUbKFG2w1KIw" name="ConditionTreatingProvider" constrainedElement="_EXNMMGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JKkgXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.assignedEntity.oclIsUndefined() and performer.assignedEntity.oclIsKindOf(cda::AssignedEntity))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EaNc4GCUEeCVapLQyCJtvg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2Ejxd3ZdEeCUbKFG2w1KIw" client="_EXNMMGCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2EjxdnZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2EjxdnZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
      <nestedClassifier xmi:type="uml:Class" xmi:id="_ncJSMGEvEeCE87GgfH3r_A" name="TreatingProvider" clientDependency="_2FTYM3ZdEeCUbKFG2w1KIw">
        <ownedRule xmi:id="_2FTYR3ZdEeCUbKFG2w1KIw" name="TreatingProviderId" constrainedElement="_ncJSMGEvEeCE87GgfH3r_A">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FTYSHZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
          </specification>
        </ownedRule>
        <generalization xmi:id="_ncJSMWEvEeCE87GgfH3r_A">
          <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_6qmVsEcDEd6besF9iFIJkQ"/>
        </generalization>
        <interfaceRealization xmi:id="_2FTYM3ZdEeCUbKFG2w1KIw" client="_ncJSMGEvEeCE87GgfH3r_A">
          <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2FJnaHZdEeCUbKFG2w1KIw"/>
          <contract href="apitest_domain_Ecore.uml#_2FJnaHZdEeCUbKFG2w1KIw"/>
        </interfaceRealization>
      </nestedClassifier>
      <ownedOperation xmi:id="_2FJnR3ZdEeCUbKFG2w1KIw" name="getEpisodeObservation" isQuery="true" bodyCondition="_2FJnSnZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2FJnTHZdEeCUbKFG2w1KIw" annotatedElement="_2FJnR3ZdEeCUbKFG2w1KIw">
          <body>apitest::Condition::episodeObservation.</body>
        </ownedComment>
        <ownedRule xmi:id="_2FJnSnZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2FJnR3ZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FJnS3ZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(domain::IEpisodeObservation))->asSequence()->first().oclAsType(domain::IEpisodeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2FJnSHZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2FJnRnZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2FJnSXZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2FJnWXZdEeCUbKFG2w1KIw" name="getProblemEntries" isQuery="true" bodyCondition="_2FJnXHZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2FJnXnZdEeCUbKFG2w1KIw" annotatedElement="_2FJnWXZdEeCUbKFG2w1KIw">
          <body>apitest::Condition::conditionEntry.</body>
        </ownedComment>
        <ownedRule xmi:id="_2FJnXHZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2FJnWXZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FJnXXZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(domain::IProblemEntry)).oclAsType(domain::IProblemEntry)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2FJnWnZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2FJnWHZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2FJnW3ZdEeCUbKFG2w1KIw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2FJnaXZdEeCUbKFG2w1KIw" name="getTreatingProvider" isQuery="true" bodyCondition="_2FJnbHZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2FJnbnZdEeCUbKFG2w1KIw" annotatedElement="_2FJnaXZdEeCUbKFG2w1KIw">
          <body>apitest::Condition::treatingProvider.</body>
        </ownedComment>
        <ownedRule xmi:id="_2FJnbHZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2FJnaXZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FJnbXZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getAssignedEntities()->select(assignedEntity : cda::AssignedEntity | not assignedEntity.oclIsUndefined() and assignedEntity.oclIsKindOf(domain::ITreatingProvider))->asSequence()->first().oclAsType(domain::ITreatingProvider)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2FJnanZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2FJnaHZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2FJna3ZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EYCSoGCUEeCVapLQyCJtvg" name="EpisodeObservation" clientDependency="_2FTYSnZdEeCUbKFG2w1KIw">
      <ownedComment xmi:id="_EYCSoWCUEeCVapLQyCJtvg">
        <body>Episode observations are used to distinguish among multiple occurrences of a problem or social history item. An episode observation is used to indicate that a problem act represents a new episode, distinct from other episodes of a similar concern.</body>
      </ownedComment>
      <ownedRule xmi:id="_EYCSpGCUEeCVapLQyCJtvg" name="EpisodeObservationOneEntryRelationshipSUBJ" constrainedElement="_EYCSoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EYCSpWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, ccd::ProblemAct)->size() = 1&#xD;&#xA;  or self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SUBJ, ccd::SocialHistoryObservation)->size() = 1</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EYCSpmCUEeCVapLQyCJtvg" name="EpisodeObservationExistsEntryRelationshipSAS" constrainedElement="_EYCSoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EYCSp2CUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SAS, ccd::ProblemAct)->size() >0&#xD;&#xA;  or self.getEntryRelationshipTargets(vocab::x_ActRelationshipEntryRelationship::SAS, ccd::SocialHistoryObservation)->size() > 0</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FTYT3ZdEeCUbKFG2w1KIw" name="EpisodeObservationTemplateId" constrainedElement="_EYCSoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FTYUHZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FTYUnZdEeCUbKFG2w1KIw" name="EpisodeObservationClassCode" constrainedElement="_EYCSoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FTYU3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FciIHZdEeCUbKFG2w1KIw" name="EpisodeObservationMoodCode" constrainedElement="_EYCSoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FciIXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FciM3ZdEeCUbKFG2w1KIw" name="EpisodeObservationCode" constrainedElement="_EYCSoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FciNHZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FciNXZdEeCUbKFG2w1KIw" name="EpisodeObservationStatusCode" constrainedElement="_EYCSoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FciNnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FmTMXZdEeCUbKFG2w1KIw" name="EpisodeObservationValue" constrainedElement="_EYCSoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FmTMnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.code = '404684003' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EYN40GCUEeCVapLQyCJtvg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2FTYSnZdEeCUbKFG2w1KIw" client="_EYCSoGCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2FJnRnZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2FJnRnZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EYQVEGCUEeCVapLQyCJtvg" name="ConditionEntry" clientDependency="_2FmTNXZdEeCUbKFG2w1KIw">
      <ownedComment xmi:id="_EaE6AGCUEeCVapLQyCJtvg">
        <body>&lt;p>This section makes use of the linking, severity, clinical status and comment content specifications defined elsewhere in the technical framework. In HL7 RIM parlance, observations about a problem, complaint, symptom, finding, diagnosis, or functional limitation of a patient is the event (moodCode='EVN') of observing (&amp;lt;observation classCode='OBS'>) that problem. The &amp;lt;value> of the observation comes from a controlled vocabulary representing such things. The &amp;lt;code> contained within the &amp;lt;observation> describes the method of determination from yet another controlled vocabulary.&lt;/p>&#xD;
&#xD;
&lt;p>The basic pattern for reporting a problem uses the CDA &amp;lt;observation> element, setting the classCode='OBS' to represent that this is an observation of a problem, and the moodCode='EVN', to represent that this is an observation that has in fact taken place. The negationInd attribute, if true, specifies that the problem indicated was observed to not have occurred (which is subtly but importantly different from having not been observed). The value of negationInd should not normally be set to true. Instead, to record that there is &quot;no prior history of chicken pox&quot;, one would use a coded value indicated exactly that. However, it is not always possible to record problems in this manner, especially if using a controlled vocabulary that does not supply pre-coordinated negations , or which do not allow the negation to be recorded with post-coordinated coded terminology.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_EaBPoGCUEeCVapLQyCJtvg" name="ConditionEntryInformationSource">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_IjIO0DxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaBPoWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.informant->isEmpty() &#xD;&#xA;or not self.getSection().informant->isEmpty()&#xD;&#xA;or not self.getClinicalDocument().informant->isEmpty()&#xD;&#xA;or self.reference->exists(ref : cda::Reference | ref.typeCode = vocab::x_ActRelationshipExternalReference::XCRPT)&#xD;&#xA;or (self.entryRelationship->exists(rel : cda::EntryRelationship | &#xD;&#xA;   rel.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR&#xD;&#xA;   and rel.observation.code.code = '48766-0'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EaB2sGCUEeCVapLQyCJtvg" name="ConditionEntryContainsPatientAwareness">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ccd/model/ccd_Ecore.uml#_IjIO0DxbEd6JwqSGecoePg"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaB2sWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.participant->one(partic : cda::Participant2 | partic.oclIsKindOf(ccd::PatientAwareness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EaDE0GCUEeCVapLQyCJtvg" name="ConditionEntryHasTextReference">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe/model/ihe_Ecore.uml#_MIoHYCQKEeCxCon8a79rfA"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaDE0WCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EaDr4GCUEeCVapLQyCJtvg" name="ConditionEntryCommentInversionInd">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe/model/ihe_Ecore.uml#_3ZiEwGdIEd6Hk_bPOfEjYA"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EaDr4WCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>self.entryRelationship->forAll(rel : cda::EntryRelationship | (not rel.act.oclIsUndefined() and rel.act.oclIsKindOf(ihe::Comment)) implies rel.inversionInd='true')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EYQVEmCUEeCVapLQyCJtvg" name="ConditionEntryHasOnsetDate" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EYQVE2CUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.effectiveTime.low.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EYQVFGCUEeCVapLQyCJtvg" name="ConditionEntryHasResolutionDate" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EYQVFWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EYQVFmCUEeCVapLQyCJtvg" name="ConditionEntryHasUnknownResolutionDate" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EYQVF2CUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.effectiveTime.high.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FmTOnZdEeCUbKFG2w1KIw" name="ConditionEntryTemplateId" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FmTO3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2FvdEHZdEeCUbKFG2w1KIw" name="ConditionEntryMoodCode" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2FvdEXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F5OEnZdEeCUbKFG2w1KIw" name="ConditionEntryId" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F5OE3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F5OJnZdEeCUbKFG2w1KIw" name="ConditionEntryCode" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F5OJ3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '404684003' or value.code = '409586006' or value.code = '282291009' or value.code = '64572001' or value.code = '248536006' or value.code = '418799008' or value.code = '55607006')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2F5OOnZdEeCUbKFG2w1KIw" name="ConditionEntryText" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2F5OO3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GC_EHZdEeCUbKFG2w1KIw" name="ConditionEntryStatusCode" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GC_EXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GC_JHZdEeCUbKFG2w1KIw" name="ConditionEntryEffectiveTime" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GC_JXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GMJAHZdEeCUbKFG2w1KIw" name="ConditionEntryValue" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GMJAXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and not value.code.oclIsUndefined()))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Go1BHZdEeCUbKFG2w1KIw" name="ConditionEntryAgeObservation" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Go1BXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(apitest::AgeObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2G7v9nZdEeCUbKFG2w1KIw" name="ConditionEntrySeverity" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2G7v93ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(apitest::Severity))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HOq0nZdEeCUbKFG2w1KIw" name="ConditionEntryProblemStatusObservation" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HOq03ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(apitest::ProblemStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2H-RsnZdEeCUbKFG2w1KIw" name="ConditionEntryHealthStatusObservation" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2H-Rs3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(apitest::HealthStatusObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::REFR)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2I3pkHZdEeCUbKFG2w1KIw" name="ConditionEntryComment" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I3pkXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.act.oclIsUndefined() and entryRelationship.act.oclIsKindOf(apitest::Comment) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::SUBJ)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JdfcnZdEeCUbKFG2w1KIw" name="ConditionEntryCauseOfDeathObservation" constrainedElement="_EYQVEGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Jdfc3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.observation.oclIsUndefined() and entryRelationship.observation.oclIsKindOf(apitest::CauseOfDeathObservation) and entryRelationship.typeCode = vocab::x_ActRelationshipEntryRelationship::CAUS)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EaE6AWCUEeCVapLQyCJtvg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2FmTNXZdEeCUbKFG2w1KIw" client="_EYQVEGCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2FJnWHZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2FJnWHZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
      <ownedOperation xmi:id="_2GMJA3ZdEeCUbKFG2w1KIw" name="getAgeAtOnset" isQuery="true" bodyCondition="_2GMJBnZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2GMJCXZdEeCUbKFG2w1KIw" annotatedElement="_2GMJA3ZdEeCUbKFG2w1KIw">
          <body>apitest::ConditionEntry::ageObservation.</body>
        </ownedComment>
        <ownedComment xmi:id="_2GMJCHZdEeCUbKFG2w1KIw" annotatedElement="_2GMJA3ZdEeCUbKFG2w1KIw">
          <body>The age of the patient or subject at onset of the condition.</body>
        </ownedComment>
        <ownedRule xmi:id="_2GMJBnZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2GMJA3ZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GMJB3ZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(domain::IAgeObservation))->asSequence()->first().oclAsType(domain::IAgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2GMJBHZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJAnZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2GMJBXZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2GMJFnZdEeCUbKFG2w1KIw" name="getSeverity" isQuery="true" bodyCondition="_2GMJGXZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2GMJG3ZdEeCUbKFG2w1KIw" annotatedElement="_2GMJFnZdEeCUbKFG2w1KIw">
          <body>apitest::ConditionEntry::severity.</body>
        </ownedComment>
        <ownedRule xmi:id="_2GMJGXZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2GMJFnZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GMJGnZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(domain::ISeverity))->asSequence()->first().oclAsType(domain::ISeverity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2GMJF3ZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJFXZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2GMJGHZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2GMJKHZdEeCUbKFG2w1KIw" name="getProblemStatus" isQuery="true" bodyCondition="_2GMJK3ZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2GMJLXZdEeCUbKFG2w1KIw" annotatedElement="_2GMJKHZdEeCUbKFG2w1KIw">
          <body>apitest::ConditionEntry::problemStatusObservation.</body>
        </ownedComment>
        <ownedRule xmi:id="_2GMJK3ZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2GMJKHZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GMJLHZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(domain::IProblemStatusObservation))->asSequence()->first().oclAsType(domain::IProblemStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2GMJKXZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJJ3ZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2GMJKnZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2GMJOnZdEeCUbKFG2w1KIw" name="getHealthStatusObservation" isQuery="true" bodyCondition="_2GMJPXZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2GMJP3ZdEeCUbKFG2w1KIw" annotatedElement="_2GMJOnZdEeCUbKFG2w1KIw">
          <body>apitest::ConditionEntry::healthStatusObservation.</body>
        </ownedComment>
        <ownedRule xmi:id="_2GMJPXZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2GMJOnZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GMJPnZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(domain::IHealthStatusObservation))->asSequence()->first().oclAsType(domain::IHealthStatusObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2GMJO3ZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJOXZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2GMJPHZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2GV6BXZdEeCUbKFG2w1KIw" name="getComments" isQuery="true" bodyCondition="_2GV6CHZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2GV6CnZdEeCUbKFG2w1KIw" annotatedElement="_2GV6BXZdEeCUbKFG2w1KIw">
          <body>apitest::ConditionEntry::comment.</body>
        </ownedComment>
        <ownedRule xmi:id="_2GV6CHZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2GV6BXZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GV6CXZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(domain::IComment)).oclAsType(domain::IComment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2GV6BnZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GV6BHZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2GV6B3ZdEeCUbKFG2w1KIw" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_2GV6FXZdEeCUbKFG2w1KIw" name="getCauseOfDeath" isQuery="true" bodyCondition="_2GV6GHZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2GV6G3ZdEeCUbKFG2w1KIw" annotatedElement="_2GV6FXZdEeCUbKFG2w1KIw">
          <body>apitest::ConditionEntry::causeOfDeathObservation.</body>
        </ownedComment>
        <ownedComment xmi:id="_2GV6GnZdEeCUbKFG2w1KIw" annotatedElement="_2GV6FXZdEeCUbKFG2w1KIw">
          <body>Indicates that this problem was one of the causes of death for the patient or subject of the condition.</body>
        </ownedComment>
        <ownedRule xmi:id="_2GV6GHZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2GV6FXZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GV6GXZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(domain::ICauseOfDeathObservation))->asSequence()->first().oclAsType(domain::ICauseOfDeathObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2GV6FnZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GV6FHZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2GV6F3ZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EYoIgGCUEeCVapLQyCJtvg" name="AgeObservation" clientDependency="_2GV6J3ZdEeCUbKFG2w1KIw">
      <ownedComment xmi:id="_EYoIgWCUEeCVapLQyCJtvg">
        <body>A common scenario is that a patient will know the age of a relative when they had a certain condition or when they died, but will not know the actual year (e.g. &quot;grandpa died of a heart attack at the age of 50&quot;). Often times, neither precise dates nor ages are known (e.g. &quot;cousin died of congenital heart disease as an infant&quot;). In all cases, dates and times and ages can be expressed in narrative.</body>
      </ownedComment>
      <ownedRule xmi:id="_EYoIgmCUEeCVapLQyCJtvg" name="AgeObservationRelatedSubjectBirthTime" constrainedElement="_EYoIgGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EYoIg2CUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.subject.relatedSubject.subject.birthTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GV6LHZdEeCUbKFG2w1KIw" name="AgeObservationTemplateId" constrainedElement="_EYoIgGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GV6LXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GfD8HZdEeCUbKFG2w1KIw" name="AgeObservationClassCode" constrainedElement="_EYoIgGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GfD8XZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GfD8nZdEeCUbKFG2w1KIw" name="AgeObservationMoodCode" constrainedElement="_EYoIgGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GfD83ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GfD9HZdEeCUbKFG2w1KIw" name="AgeObservationCode" constrainedElement="_EYoIgGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GfD9XZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '397659008' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GfD9nZdEeCUbKFG2w1KIw" name="AgeObservationStatusCode" constrainedElement="_EYoIgGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GfD93ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Go1AnZdEeCUbKFG2w1KIw" name="AgeObservationValue" constrainedElement="_EYoIgGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Go1A3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EY4nMGCUEeCVapLQyCJtvg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2GV6J3ZdEeCUbKFG2w1KIw" client="_EYoIgGCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJAnZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2GMJAnZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EY6cYGCUEeCVapLQyCJtvg" name="Severity" clientDependency="_2Go1BnZdEeCUbKFG2w1KIw">
      <ownedComment xmi:id="_EY6cYWCUEeCVapLQyCJtvg">
        <body>This specification models a severity observation as a separate observation from the condition. While this model is different from work presently underway by various organizations (i.e., SNOMED, HL7, TermInfo), it is not wholly incompatible with that work. In that work, qualifiers may be used to identify severity in the coded condition observation, and a separate severity observation is no longer necessary. The use of qualifiers is not precluded by this specification. However, to support semantic interoperability between EMR systems using different vocabularies, this specification does require that severity information also be provided in a separate observation. This ensures that all EMR systems have equal access to the information, regardless of the vocabularies they support.</body>
      </ownedComment>
      <ownedRule xmi:id="_EY6cYmCUEeCVapLQyCJtvg" name="SeverityHasTextReference" constrainedElement="_EY6cYGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EY6cY2CUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Go1C3ZdEeCUbKFG2w1KIw" name="SeverityTemplateId" constrainedElement="_EY6cYGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Go1DHZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Go1DnZdEeCUbKFG2w1KIw" name="SeverityClassCode" constrainedElement="_EY6cYGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Go1D3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.classCode=vocab::ActClassObservation::OBS</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Gyl8HZdEeCUbKFG2w1KIw" name="SeverityMoodCode" constrainedElement="_EY6cYGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Gyl8XZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_ActMoodDocumentObservation::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Gyl8nZdEeCUbKFG2w1KIw" name="SeverityCode" constrainedElement="_EY6cYGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Gyl83ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = 'SEV' and value.codeSystem = '2.16.840.1.113883.5.4'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2GymBXZdEeCUbKFG2w1KIw" name="SeverityText" constrainedElement="_EY6cYGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2GymBnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2G7v4HZdEeCUbKFG2w1KIw" name="SeverityStatusCode" constrainedElement="_EY6cYGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2G7v4XZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2G7v9HZdEeCUbKFG2w1KIw" name="SeverityValue" constrainedElement="_EY6cYGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2G7v9XZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.5.1063' and (value.code = 'H' or value.code = 'M' or value.code = 'L')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EZJF4GCUEeCVapLQyCJtvg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2Go1BnZdEeCUbKFG2w1KIw" client="_EY6cYGCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJFXZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2GMJFXZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EZK7EGCUEeCVapLQyCJtvg" name="ProblemStatusObservation" clientDependency="_2HFg4HZdEeCUbKFG2w1KIw">
      <ownedComment xmi:id="_EZK7EWCUEeCVapLQyCJtvg">
        <body>Any problem or allergy observation may reference a problem status observation. The clinical status observation records information about the current status of the problem or allergy, for example, whether it is active, in remission, resolved, et cetera.</body>
      </ownedComment>
      <ownedRule xmi:id="_2HFg53ZdEeCUbKFG2w1KIw" name="StatusObservationTemplateId" constrainedElement="_EZK7EGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HFg6HZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HFg6nZdEeCUbKFG2w1KIw" name="ProblemStatusObservationCode" constrainedElement="_EZK7EGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HFg63ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '33999-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HOq0HZdEeCUbKFG2w1KIw" name="StatusObservationValue" constrainedElement="_EZK7EGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HOq0XZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '55561003' or value.code = '73425007' or value.code = '90734009' or value.code = '7087005' or value.code = '255227004' or value.code = '415684004' or value.code = '410516002' or value.code = '413322009')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EZWhQGCUEeCVapLQyCJtvg" general="_CQJZEGCUEeCVapLQyCJtvg"/>
      <interfaceRealization xmi:id="_2HFg4HZdEeCUbKFG2w1KIw" client="_EZK7EGCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJJ3ZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2GMJJ3ZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EZXvYmCUEeCVapLQyCJtvg" name="HealthStatusObservation" clientDependency="_2HOq1HZdEeCUbKFG2w1KIw">
      <ownedComment xmi:id="_EZXvY2CUEeCVapLQyCJtvg">
        <body>The health status observation records information about the current health status of the patient.</body>
      </ownedComment>
      <ownedRule xmi:id="_2HOq23ZdEeCUbKFG2w1KIw" name="StatusObservationTemplateId" constrainedElement="_EZXvYmCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HOq3HZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.3.6.1.4.1.19376.1.5.3.1.4.1.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2HOq3nZdEeCUbKFG2w1KIw" name="HealthStatusObservationCode" constrainedElement="_EZXvYmCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2HOq33ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '11323-3' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2H-RsHZdEeCUbKFG2w1KIw" name="StatusObservationValue" constrainedElement="_EZXvYmCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2H-RsXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;&#xA;value.codeSystem = '2.16.840.1.113883.6.96' and (value.code = '81323004' or value.code = '313386006' or value.code = '162467007' or value.code = '161901003' or value.code = '271593001' or value.code = '21134002' or value.code = '161045001' or value.code = '419099009')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EZr4cGCUEeCVapLQyCJtvg" general="_CQJZEGCUEeCVapLQyCJtvg"/>
      <interfaceRealization xmi:id="_2HOq1HZdEeCUbKFG2w1KIw" client="_EZXvYmCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJOXZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2GMJOXZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EZttoGCUEeCVapLQyCJtvg" name="Comment" clientDependency="_2IRzsHZdEeCUbKFG2w1KIw">
      <ownedComment xmi:id="_EaABgWCUEeCVapLQyCJtvg">
        <body>&lt;p>This entry allows for a comment to be supplied with each entry. For CDA this structure is usually included in the target act using the &amp;lt;entryRelationship> element defined in the CDA Schema, but can also be used in the &amp;lt;component> element when the comment appears within an &amp;lt;organizer>.&lt;/p></body>
      </ownedComment>
      <ownedRule xmi:id="_EZ8-MGCUEeCVapLQyCJtvg" name="CommentHasTextReference">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe/model/ihe_Ecore.uml#_MIoHYCQKEeCxCon8a79rfA"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EZ8-MWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.text.reference.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_EZ9lQGCUEeCVapLQyCJtvg" name="CommentEffectiveTimeWhenAuthorPresent">
        <constrainedElement xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe/model/ihe_Ecore.uml#_R_uVkEvdEd-GNbUQBie2ig"/>
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_EZ9lQWCUEeCVapLQyCJtvg">
          <language>OCL</language>
          <body>not self.author->isEmpty() implies not self.effectiveTime.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IRztXZdEeCUbKFG2w1KIw" name="CommentTemplateId" constrainedElement="_EZttoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IRztnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.11')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ia9oHZdEeCUbKFG2w1KIw" name="CommentClassCode" constrainedElement="_EZttoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ia9oXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.classCode=vocab::x_ActClassDocumentEntryAct::ACT</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ia9onZdEeCUbKFG2w1KIw" name="CommentMoodCode" constrainedElement="_EZttoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ia9o3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.moodCode=vocab::x_DocumentActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ia9pHZdEeCUbKFG2w1KIw" name="CommentCode" constrainedElement="_EZttoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2Ia9pXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;&#xA;let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in (&#xD;&#xA;value.code = '48767-8' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2IkusXZdEeCUbKFG2w1KIw" name="CommentText" constrainedElement="_EZttoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IkusnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.text.oclIsUndefined() or self.text.isNullFlavorUndefined()) implies (not self.text.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2Ikus3ZdEeCUbKFG2w1KIw" name="CommentStatusCode" constrainedElement="_EZttoGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IkutHZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EaABgmCUEeCVapLQyCJtvg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2IRzsHZdEeCUbKFG2w1KIw" client="_EZttoGCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GV6BHZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2GV6BHZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
      <ownedOperation xmi:id="_2IkutXZdEeCUbKFG2w1KIw" name="getAuthor" isQuery="true" bodyCondition="_2IkuuHZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2IkuunZdEeCUbKFG2w1KIw" annotatedElement="_2IkutXZdEeCUbKFG2w1KIw">
          <body>cda::Act::author.</body>
        </ownedComment>
        <ownedRule xmi:id="_2IkuuHZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2IkutXZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2IkuuXZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getAuthors()->select(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))->asSequence()->first().oclAsType(cda::Author)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2IkutnZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ChEisEcEEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2Ikut3ZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EaOrAGCUEeCVapLQyCJtvg" name="ProblemListSection" clientDependency="_2I3pk3ZdEeCUbKFG2w1KIw">
      <ownedComment xmi:id="_EaYcAGCUEeCVapLQyCJtvg">
        <body>This section lists and describes all relevant clinical problems at the time the summary is generated. At a minimum, all pertinent current and historical problems should be listed. CDA R2 represents problems as Observations.</body>
      </ownedComment>
      <ownedRule xmi:id="_2I3pmHZdEeCUbKFG2w1KIw" name="ProblemListSectionTemplateId" constrainedElement="_EaOrAGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2I3pmXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.3.88.11.83.103')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JBakHZdEeCUbKFG2w1KIw" name="ProblemListSectionCode" constrainedElement="_EaOrAGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JBakXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;&#xA;let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in (&#xD;&#xA;value.code = '11450-4' and value.codeSystem = '2.16.840.1.113883.6.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JBao3ZdEeCUbKFG2w1KIw" name="ProblemListSectionTitle" constrainedElement="_EaOrAGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JBapHZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JBatnZdEeCUbKFG2w1KIw" name="ProblemListSectionText" constrainedElement="_EaOrAGCUEeCVapLQyCJtvg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JBat3ZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EaYcAmCUEeCVapLQyCJtvg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2I3pk3ZdEeCUbKFG2w1KIw" client="_EaOrAGCUEeCVapLQyCJtvg">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2I3pknZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2I3pknZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
      <ownedOperation xmi:id="_2JBauHZdEeCUbKFG2w1KIw" name="getConditions" isQuery="true" bodyCondition="_2JBau3ZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2JBavXZdEeCUbKFG2w1KIw" annotatedElement="_2JBauHZdEeCUbKFG2w1KIw">
          <body>apitest::ProblemListSection::condition.</body>
        </ownedComment>
        <ownedRule xmi:id="_2JBau3ZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2JBauHZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JBavHZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(domain::ICondition)).oclAsType(domain::ICondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2JBauXZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2EjxdnZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JBaunZdEeCUbKFG2w1KIw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_szdjEGFZEeCE87GgfH3r_A" name="FamilyHistoryObservation" clientDependency="_2JKkg3ZdEeCUbKFG2w1KIw">
      <ownedRule xmi:id="_2JKkh3ZdEeCUbKFG2w1KIw" name="FamilyHistoryObservationTemplateId" constrainedElement="_szdjEGFZEeCE87GgfH3r_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JKkiHZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JKkmXZdEeCUbKFG2w1KIw" name="FamilyHistoryObservationId" constrainedElement="_szdjEGFZEeCE87GgfH3r_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JKkmnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.id->isEmpty() or self.id->exists(element | element.isNullFlavorUndefined())) implies (not self.id->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_2JUVgHZdEeCUbKFG2w1KIw" name="FamilyHistoryObservationStatusCode" constrainedElement="_szdjEGFZEeCE87GgfH3r_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JUVgXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;&#xA;let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in (&#xD;&#xA;value.code = 'completed'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_szk30GFZEeCE87GgfH3r_A">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2JKkg3ZdEeCUbKFG2w1KIw" client="_szdjEGFZEeCE87GgfH3r_A">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2JKkgnZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2JKkgnZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
      <ownedOperation xmi:id="_2JUVgnZdEeCUbKFG2w1KIw" name="getAgeObservation" isQuery="true" bodyCondition="_2JUVhXZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2JUVh3ZdEeCUbKFG2w1KIw" annotatedElement="_2JUVgnZdEeCUbKFG2w1KIw">
          <body>apitest::FamilyHistoryObservation::ageObservation.</body>
        </ownedComment>
        <ownedRule xmi:id="_2JUVhXZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2JUVgnZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JUVhnZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(domain::IAgeObservation))->asSequence()->first().oclAsType(domain::IAgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2JUVg3ZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJAnZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JUVhHZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vBHtcGFZEeCE87GgfH3r_A" name="CauseOfDeathObservation" clientDependency="_2JUVk3ZdEeCUbKFG2w1KIw">
      <ownedRule xmi:id="_2JUVmXZdEeCUbKFG2w1KIw" name="FamilyHistoryObservationTemplateId" constrainedElement="_vBHtcGFZEeCE87GgfH3r_A">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JUVmnZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.10.20.1.42')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_vBJioGFZEeCE87GgfH3r_A" general="_szdjEGFZEeCE87GgfH3r_A"/>
      <interfaceRealization xmi:id="_2JUVk3ZdEeCUbKFG2w1KIw" client="_vBHtcGFZEeCE87GgfH3r_A">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GV6FHZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2GV6FHZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
      <ownedOperation xmi:id="_2JUVrXZdEeCUbKFG2w1KIw" name="getAgeAtDeath" isQuery="true" bodyCondition="_2JUVsHZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2JUVsnZdEeCUbKFG2w1KIw" annotatedElement="_2JUVrXZdEeCUbKFG2w1KIw">
          <body>apitest::CauseOfDeathObservation::ageObservation.</body>
        </ownedComment>
        <ownedRule xmi:id="_2JUVsHZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2JUVrXZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JUVsXZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(domain::IAgeObservation))->asSequence()->first().oclAsType(domain::IAgeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2JUVrnZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2GMJAnZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JUVr3ZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QBOBkGFrEeCrVK9xDfPNKw" name="PatientSummary" clientDependency="_2JdfdXZdEeCUbKFG2w1KIw">
      <ownedRule xmi:id="_2JnQiHZdEeCUbKFG2w1KIw" name="PatientSummaryProblemListSection" constrainedElement="_QBOBkGFrEeCrVK9xDfPNKw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JnQiXZdEeCUbKFG2w1KIw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(apitest::ProblemListSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QBOBkWFrEeCrVK9xDfPNKw" general="_YVCR4GFrEeCrVK9xDfPNKw"/>
      <interfaceRealization xmi:id="_2JdfdXZdEeCUbKFG2w1KIw" client="_QBOBkGFrEeCrVK9xDfPNKw">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2JdfdHZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2JdfdHZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
      <ownedOperation xmi:id="_2JdfjHZdEeCUbKFG2w1KIw" name="getProblemListSection" isQuery="true" bodyCondition="_2Jdfj3ZdEeCUbKFG2w1KIw">
        <ownedComment xmi:id="_2JdfkXZdEeCUbKFG2w1KIw" annotatedElement="_2JdfjHZdEeCUbKFG2w1KIw">
          <body>apitest::PatientSummary::problemListSection.</body>
        </ownedComment>
        <ownedRule xmi:id="_2Jdfj3ZdEeCUbKFG2w1KIw" name="body" constrainedElement="_2JdfjHZdEeCUbKFG2w1KIw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_2JdfkHZdEeCUbKFG2w1KIw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(domain::IProblemListSection))->asSequence()->first().oclAsType(domain::IProblemListSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_2JdfjXZdEeCUbKFG2w1KIw" direction="return">
          <type xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2I3pknZdEeCUbKFG2w1KIw"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_2JdfjnZdEeCUbKFG2w1KIw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YVCR4GFrEeCrVK9xDfPNKw" name="GeneralHeaderConstraints" clientDependency="_2JdfnXZdEeCUbKFG2w1KIw">
      <generalization xmi:id="_YVC48GFrEeCrVK9xDfPNKw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_S9OzADxXEd6JwqSGecoePg"/>
      </generalization>
      <interfaceRealization xmi:id="_2JdfnXZdEeCUbKFG2w1KIw" client="_YVCR4GFrEeCrVK9xDfPNKw">
        <supplier xmi:type="uml:Interface" href="apitest_domain_Ecore.uml#_2Jdfd3ZdEeCUbKFG2w1KIw"/>
        <contract href="apitest_domain_Ecore.uml#_2Jdfd3ZdEeCUbKFG2w1KIw"/>
      </interfaceRealization>
    </packagedElement>
    <profileApplication xmi:id="_SMdMMJmzEd6BO7rW3XxHIA">
      <eAnnotations xmi:id="_SMdzQJmzEd6BO7rW3XxHIA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_2EHFYHZdEeCUbKFG2w1KIw">
      <eAnnotations xmi:id="_2EHFYXZdEeCUbKFG2w1KIw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_THvvwJmzEd6BO7rW3XxHIA" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="apitest" nsURI="http://www.openhealthtools.org/mdht/uml/cda/apitest" packageName="apitest" prefix="APITest" base_Namespace="_qQyD8jxVEd6JwqSGecoePg"/>
  <CDA:CDATemplate xmi:id="_CQNDcGCUEeCVapLQyCJtvg" base_Class="_CQJZEGCUEeCVapLQyCJtvg" templateId="2.16.840.1.113883.10.20.1.57" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_CQWNYGCUEeCVapLQyCJtvg" base_Constraint="_CQJZFWCUEeCVapLQyCJtvg">
    <ruleId>CONF-518</ruleId>
  </CDA:ConstraintValidation>
  <uml:Association xmi:id="_EZ7wEGCUEeCVapLQyCJtvg"/>
  <CDA:CDATemplate xmi:id="_EZttqWCUEeCVapLQyCJtvg" base_Class="_EZttoGCUEeCVapLQyCJtvg" templateId="2.16.840.1.113883.3.88.11.83.11">
    <ruleId>C83-[DE-10-CDA-2]</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_EZ8-MmCUEeCVapLQyCJtvg" base_Constraint="_EZ8-MGCUEeCVapLQyCJtvg">
    <ruleId>CONF-6.3.4.6.7</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EZ9lQmCUEeCVapLQyCJtvg" base_Constraint="_EZ9lQGCUEeCVapLQyCJtvg">
    <ruleId>CONF-6.3.4.6.10</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_EXNMPWCUEeCVapLQyCJtvg" base_Class="_EXNMMGCUEeCVapLQyCJtvg" templateId="2.16.840.1.113883.3.88.11.83.7">
    <ruleId>C83-[DE-7-CDA-1]</ruleId>
  </CDA:CDATemplate>
  <CDA:ConstraintValidation xmi:id="_EaGIIGCUEeCVapLQyCJtvg" base_Constraint="_EaFhE2CUEeCVapLQyCJtvg">
    <ruleId>CONF-151</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EaHWQmCUEeCVapLQyCJtvg" severity="WARNING" base_Constraint="_EaHWQGCUEeCVapLQyCJtvg">
    <ruleId>CONF-153</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EaH9UmCUEeCVapLQyCJtvg" severity="WARNING" base_Constraint="_EaH9UGCUEeCVapLQyCJtvg">
    <ruleId>CONF-140</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EaIkYmCUEeCVapLQyCJtvg" severity="WARNING" base_Constraint="_EaIkYGCUEeCVapLQyCJtvg">
    <ruleId>CONF-256</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EaJygGCUEeCVapLQyCJtvg" severity="INFO" base_Constraint="_EaJLcGCUEeCVapLQyCJtvg">
    <ruleId>CONF-179</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EaKZkmCUEeCVapLQyCJtvg" base_Constraint="_EaKZkGCUEeCVapLQyCJtvg"/>
  <CDA:ConstraintValidation xmi:id="_EXOaUGCUEeCVapLQyCJtvg">
    <ruleId>C83-[DE-7.05-CDA-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EXaAgGCUEeCVapLQyCJtvg">
    <ruleId>C83-[DE-7.05-CDA-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EXankGCUEeCVapLQyCJtvg" severity="INFO" base_Constraint="_EXNMNWCUEeCVapLQyCJtvg">
    <ruleId>C83-[DE-7.05-CDA-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_EaFhEGCUEeCVapLQyCJtvg" base_Class="_EYQVEGCUEeCVapLQyCJtvg" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.5"/>
  <CDA:ConstraintValidation xmi:id="_EaBPomCUEeCVapLQyCJtvg" base_Constraint="_EaBPoGCUEeCVapLQyCJtvg">
    <ruleId>CONF-161</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EaB2smCUEeCVapLQyCJtvg" severity="INFO" base_Constraint="_EaB2sGCUEeCVapLQyCJtvg">
    <ruleId>CONF-180</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EaDE0mCUEeCVapLQyCJtvg" base_Constraint="_EaDE0GCUEeCVapLQyCJtvg"/>
  <CDA:ConstraintValidation xmi:id="_EaDr4mCUEeCVapLQyCJtvg" base_Constraint="_EaDr4GCUEeCVapLQyCJtvg"/>
  <CDA:ConstraintValidation xmi:id="_EYT_cGCUEeCVapLQyCJtvg" severity="WARNING" base_Constraint="_EYQVEmCUEeCVapLQyCJtvg">
    <ruleId>C83-[DE-7.01-1]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EYUmgGCUEeCVapLQyCJtvg" severity="WARNING" base_Constraint="_EYQVFGCUEeCVapLQyCJtvg">
    <ruleId>C83-[DE-7.01-2]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EYVNkGCUEeCVapLQyCJtvg" severity="WARNING" base_Constraint="_EYQVFmCUEeCVapLQyCJtvg">
    <ruleId>C83-[DE-7.01-3]</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_EYC5sGCUEeCVapLQyCJtvg" base_Class="_EYCSoGCUEeCVapLQyCJtvg" templateId="2.16.840.1.113883.10.20.1.41" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_EYKOcGCUEeCVapLQyCJtvg" base_Constraint="_EYCSpGCUEeCVapLQyCJtvg">
    <ruleId>CONF-176</ruleId>
  </CDA:ConstraintValidation>
  <CDA:ConstraintValidation xmi:id="_EYK1gGCUEeCVapLQyCJtvg" severity="INFO" base_Constraint="_EYCSpmCUEeCVapLQyCJtvg">
    <ruleId>CONF-177</ruleId>
  </CDA:ConstraintValidation>
  <CDA:CDATemplate xmi:id="_EZYWcGCUEeCVapLQyCJtvg" base_Class="_EZXvYmCUEeCVapLQyCJtvg" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.1.2"/>
  <CDA:ConstraintValidation xmi:id="_EZfrMGCUEeCVapLQyCJtvg"/>
  <CDA:TextValue xmi:id="_EZY9gGCUEeCVapLQyCJtvg"/>
  <CDA:CDATemplate xmi:id="_EaOrBmCUEeCVapLQyCJtvg" base_Class="_EaOrAGCUEeCVapLQyCJtvg" templateId="2.16.840.1.113883.3.88.11.83.103" assigningAuthorityName="HITSP C83"/>
  <CDA:CDATemplate xmi:id="_EZK7GWCUEeCVapLQyCJtvg" base_Class="_EZK7EGCUEeCVapLQyCJtvg" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.1.1"/>
  <CDA:ConstraintValidation xmi:id="_EZPMgGCUEeCVapLQyCJtvg" base_Constraint="_EZK7EmCUEeCVapLQyCJtvg"/>
  <CDA:CDATemplate xmi:id="_EY7DcGCUEeCVapLQyCJtvg" base_Class="_EY6cYGCUEeCVapLQyCJtvg" templateId="1.3.6.1.4.1.19376.1.5.3.1.4.1"/>
  <CDA:ConstraintValidation xmi:id="_EY-t0GCUEeCVapLQyCJtvg" base_Constraint="_EY6cYmCUEeCVapLQyCJtvg"/>
  <CDA:CDATemplate xmi:id="_szdjGGFZEeCE87GgfH3r_A" base_Class="_szdjEGFZEeCE87GgfH3r_A" templateId="2.16.840.1.113883.10.20.1.22" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_vBIUgGFZEeCE87GgfH3r_A" base_Class="_vBHtcGFZEeCE87GgfH3r_A" templateId="2.16.840.1.113883.10.20.1.42" assigningAuthorityName="CCD"/>
  <CDA:CDATemplate xmi:id="_EYoImWCUEeCVapLQyCJtvg" base_Class="_EYoIgGCUEeCVapLQyCJtvg" templateId="2.16.840.1.113883.10.20.1.38" assigningAuthorityName="CCD"/>
  <CDA:ConstraintValidation xmi:id="_EYuPIWCUEeCVapLQyCJtvg" severity="WARNING" base_Constraint="_EYoIgmCUEeCVapLQyCJtvg">
    <ruleId>CONF-219</ruleId>
  </CDA:ConstraintValidation>
  <Ecore:EPackage xmi:id="_2EHFYnZdEeCUbKFG2w1KIw" base_Package="_qQyD8jxVEd6JwqSGecoePg" packageName="apitest" nsPrefix="apitest" nsURI="http://www.openhealthtools.org/mdht/uml/cda/apitest" basePackage="org.openhealthtools.mdht.uml.cda" prefix="APITest"/>
  <Ecore:EClass xmi:id="_2EQPW3ZdEeCUbKFG2w1KIw" base_Class="_CQJZEGCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' templateId.root='2.16.840.1.113883.10.20.1.57' constraints.validation.error='StatusObservationTemplateId StatusObservationNoAdditionalParticipants StatusObservationHasTextReference StatusObservationClassCode StatusObservationMoodCode StatusObservationStatusCode StatusObservationValue StatusObservationText' classCode='OBS' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2Es7QHZdEeCUbKFG2w1KIw" base_Class="_EXNMMGCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.3.88.11.83.7' code.nullFlavor='NA' constraints.validation.error='ConditionTemplateId ConditionEntryRelationshipRequired ConditionEffectiveTimeLowHigh ConditionClassCode ConditionMoodCode ConditionId ConditionCodeNullFlavor ConditionEffectiveTime ConditionTreatingProvider' constraints.validation.warning='ConditionSubjectOfTarget ConditionContainsProblemObservation ConditionContainsAlertObservation' classCode='ACT' constraints.validation.info='ConditionContainsPatientAwareness ConditionHasProviderTreatmentTime ConditionEpisodeObservation' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2FTYSXZdEeCUbKFG2w1KIw" base_Class="_ncJSMGEvEeCE87GgfH3r_A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TreatingProviderId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2FTYUXZdEeCUbKFG2w1KIw" base_Class="_EYCSoGCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.5.4' templateId.root='2.16.840.1.113883.10.20.1.41' constraints.validation.error='EpisodeObservationTemplateId EpisodeObservationOneEntryRelationshipSUBJ EpisodeObservationClassCode EpisodeObservationMoodCode EpisodeObservationStatusCode' code.code='ASSERTION' constraints.validation.info='EpisodeObservationExistsEntryRelationshipSAS' value.displayName='Clinical finding' statusCode.code='completed' value.code='404684003' code.codeSystemName='HL7ActCode' constraints.validation.warning='EpisodeObservationCode EpisodeObservationValue' classCode='OBS' moodCode='EVN' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2FmTPHZdEeCUbKFG2w1KIw" base_Class="_EYQVEGCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.96' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.5' constraints.validation.error='ConditionEntryTemplateId ConditionEntryInformationSource ConditionEntryHasTextReference ConditionEntryCommentInversionInd ConditionEntryMoodCode ConditionEntryId ConditionEntryText ConditionEntryStatusCode ConditionEntryValue' code.codeSystemName='SNOMEDCT' constraints.validation.warning='ConditionEntryHasOnsetDate ConditionEntryHasResolutionDate ConditionEntryHasUnknownResolutionDate ConditionEntryCode ConditionEntryEffectiveTime' classCode='OBS' moodCode='EVN' constraints.validation.info='ConditionEntryContainsPatientAwareness ConditionEntryAgeObservation ConditionEntrySeverity ConditionEntryProblemStatusObservation ConditionEntryHealthStatusObservation ConditionEntryComment ConditionEntryCauseOfDeathObservation' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2GV6LnZdEeCUbKFG2w1KIw" base_Class="_EYoIgGCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.96' code.displayName='Age' templateId.root='2.16.840.1.113883.10.20.1.38' constraints.validation.error='AgeObservationTemplateId AgeObservationClassCode AgeObservationMoodCode AgeObservationCode AgeObservationStatusCode AgeObservationValue' code.codeSystemName='SNOMEDCT' classCode='OBS' constraints.validation.warning='AgeObservationRelatedSubjectBirthTime' code.code='397659008' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2Go1DXZdEeCUbKFG2w1KIw" base_Class="_EY6cYGCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' value.codeSystemName='SeverityObservation' code.codeSystem='2.16.840.1.113883.5.4' code.displayName='Severity observation' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.1' constraints.validation.error='SeverityTemplateId SeverityHasTextReference SeverityClassCode SeverityMoodCode SeverityCode SeverityText SeverityStatusCode SeverityValue' code.codeSystemName='HL7ActCode' classCode='OBS' code.code='SEV' moodCode='EVN' value.codeSystem='2.16.840.1.113883.5.1063'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_2HFg5nZdEeCUbKFG2w1KIw" base_Generalization="_EZWhQGCUEeCVapLQyCJtvg"/>
  <Ecore:EClass xmi:id="_2HFg6XZdEeCUbKFG2w1KIw" base_Class="_EZK7EGCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.1.1' code.displayName='Status' constraints.validation.error='ProblemStatusObservationTemplateId ProblemStatusObservationCode StatusObservationValue' code.codeSystemName='LOINC' code.code='33999-4' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_2HOq2nZdEeCUbKFG2w1KIw" base_Generalization="_EZr4cGCUEeCVapLQyCJtvg"/>
  <Ecore:EClass xmi:id="_2HOq3XZdEeCUbKFG2w1KIw" base_Class="_EZXvYmCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation value.codeSystemName='SNOMEDCT' code.codeSystem='2.16.840.1.113883.6.1' templateId.root='1.3.6.1.4.1.19376.1.5.3.1.4.1.2' code.displayName='Health status' constraints.validation.error='HealthStatusObservationTemplateId HealthStatusObservationCode StatusObservationValue' code.codeSystemName='LOINC' code.code='11323-3' value.codeSystem='2.16.840.1.113883.6.96'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2IRzt3ZdEeCUbKFG2w1KIw" base_Class="_EZttoGCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' code.codeSystem='2.16.840.1.113883.6.1' code.displayName='Annotation comment' templateId.root='2.16.840.1.113883.3.88.11.83.11' constraints.validation.error='CommentTemplateId CommentHasTextReference CommentEffectiveTimeWhenAuthorPresent CommentClassCode CommentMoodCode CommentCode CommentText CommentStatusCode' code.codeSystemName='LOINC' classCode='ACT' code.code='48767-8' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2I3pmnZdEeCUbKFG2w1KIw" base_Class="_EaOrAGCUEeCVapLQyCJtvg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation code.codeSystem='2.16.840.1.113883.6.1' templateId.root='2.16.840.1.113883.3.88.11.83.103' code.displayName='Problem list' constraints.validation.error='ProblemListSectionTemplateId ProblemListSectionCode ProblemListSectionTitle ProblemListSectionText' code.codeSystemName='LOINC' code.code='11450-4'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2JKkiXZdEeCUbKFG2w1KIw" base_Class="_szdjEGFZEeCE87GgfH3r_A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation statusCode.code='completed' templateId.root='2.16.840.1.113883.10.20.1.22' constraints.validation.error='FamilyHistoryObservationTemplateId FamilyHistoryObservationId FamilyHistoryObservationStatusCode'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_2JUVmHZdEeCUbKFG2w1KIw" base_Generalization="_vBJioGFZEeCE87GgfH3r_A"/>
  <Ecore:EClass xmi:id="_2JUVm3ZdEeCUbKFG2w1KIw" base_Class="_vBHtcGFZEeCE87GgfH3r_A">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='2.16.840.1.113883.10.20.1.42' constraints.validation.error='CauseOfDeathObservationTemplateId'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_2JnQinZdEeCUbKFG2w1KIw" base_Class="_QBOBkGFrEeCrVK9xDfPNKw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientSummaryProblemListSection'</annotation>
  </Ecore:EClass>
</xmi:XMI>
