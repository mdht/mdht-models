<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_xpUkQGeQEeGtXKebdWh3hg" name="emspcr">
    <packageImport xmi:id="_x1tacGeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_x1tacWeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_x1tacmeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.emspcr.model/model/emspcr-vocab.uml#_xpzscGeQEeGtXKebdWh3hg"/>
    </packageImport>
    <packageImport xmi:id="_alO60EU9EeKcguOHLOhl3Q">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_xs1LQWeQEeGtXKebdWh3hg" name="PatientCareReport">
      <ownedRule xmi:id="_tSzisNp2EeKVkrUHX3NooA" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tS0JwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tS6QYNp2EeKVkrUHX3NooA" name="PatientCareReportClassCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tS6QYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::ActClinicalDocument::DOCCLIN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tS96wNp2EeKVkrUHX3NooA" name="PatientCareReportMoodCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tS96wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode') and self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tTPAgNp2EeKVkrUHX3NooA" name="PatientCareReportCodeP" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tTPAgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tTKIANp2EeKVkrUHX3NooA" name="PatientCareReportCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tTKIAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67796-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tTUgENp2EeKVkrUHX3NooA" name="PatientCareReportTitle" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tTUgEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Patient Care Report')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tTXjYNp2EeKVkrUHX3NooA" name="PatientCareReportVersionNumber" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tTYKcNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.versionNumber.oclIsUndefined() or self.versionNumber.isNullFlavorUndefined()) implies (not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tTamsNp2EeKVkrUHX3NooA" name="PatientCareReportId" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tTamsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tTkXsNp2EeKVkrUHX3NooA" name="PatientCareReportConfidentialityCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tTkXsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined() and self.confidentialityCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.confidentialityCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.25' and (value.code = 'N' or value.code = 'R' or value.code = 'V'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tV5S8Np2EeKVkrUHX3NooA" name="PatientCareReportRecordTarget" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tV56ANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWkoYNp2EeKVkrUHX3NooA" name="PatientCareReportBilling" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWkoYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::BillingSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tYzdANp2EeKVkrUHX3NooA" name="PatientCareReportCurrentMedication" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tYzdAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::CurrentMedicationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tY2gUNp2EeKVkrUHX3NooA" name="PatientCareReportCardiacArrestEvent" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tY2gUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::CardiacArrestEventSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tY5joNp2EeKVkrUHX3NooA" name="PatientCareReportAdvanceDirectives" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tY5jodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZGX8Np2EeKVkrUHX3NooA" name="PatientCareReportAllergiesAndAdverseReactionsSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZGX8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::AllergiesAndAdverseReactionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZJbQNp2EeKVkrUHX3NooA" name="PatientCareReportPastMedicalHistory" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZJbQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PastMedicalHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZgAkNp2EeKVkrUHX3NooA" name="PatientCareReportSocialHistory" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZgAkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_taamkNp2EeKVkrUHX3NooA" name="PatientCareReportPhysicalAssessmentSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_taamkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PhysicalAssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbKNcNp2EeKVkrUHX3NooA" name="PatientCareReportMedicationsAdministeredSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbKNcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcHPsNp2EeKVkrUHX3NooA" name="PatientCareReportProceduresPerformedSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcH2wNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ProceduresPerformedSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcd1ANp2EeKVkrUHX3NooA" name="PatientCareReportPatientCareNarrative" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcd1Adp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PatientCareNarrativeSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_te3owNp2EeKVkrUHX3NooA" name="PatientCareReportSceneSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_te3owdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SceneSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tft9UNp2EeKVkrUHX3NooA" name="PatientCareReportComponentOf" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tft9Udp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgFJsNp2EeKVkrUHX3NooA" name="PatientCareReportDispatchSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgFJsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::DispatchSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgHl8Np2EeKVkrUHX3NooA" name="PatientCareReportDispositionSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgINANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::DispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgKpQNp2EeKVkrUHX3NooA" name="PatientCareReportPersonnelAdverseEventSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgLQUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PersonnelAdverseEventSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgNskNp2EeKVkrUHX3NooA" name="PatientCareReportProtocolSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgNskdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ProtocolSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgQv4Np2EeKVkrUHX3NooA" name="PatientCareReportResponseSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgQv4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ResponseSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgTMINp2EeKVkrUHX3NooA" name="PatientCareReportSituationSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgTzMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SituationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgWPcNp2EeKVkrUHX3NooA" name="PatientCareReportTimesSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgWPcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::TimesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgZSwNp2EeKVkrUHX3NooA" name="PatientCareReportVitalSignsSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgZSwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgbvANp2EeKVkrUHX3NooA" name="PatientCareReportAuthorParticipation" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgbvAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgeLQNp2EeKVkrUHX3NooA" name="PatientCareReportCustodian" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgeLQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tggAcNp2EeKVkrUHX3NooA" name="PatientCareReportDocumentationOf" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tggAcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgh1oNp2EeKVkrUHX3NooA" name="PatientCareReportRelatedDocument" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgh1odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.relatedDocument->one(relatedDocument : cda::RelatedDocument | not relatedDocument.oclIsUndefined() and relatedDocument.oclIsKindOf(cda::RelatedDocument))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgjq0Np2EeKVkrUHX3NooA" name="PatientCareReportParticipant" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgkR4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uZPmUNp2EeKVkrUHX3NooA" name="PatientCareReportInjuryIncidentDescriptionSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uZPmUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::InjuryIncidentDescriptionSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xs3ngWeQEeGtXKebdWh3hg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_tWoSwNp2EeKVkrUHX3NooA" name="getBilling" isQuery="true" bodyCondition="_tWo50dp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tWo50dp2EeKVkrUHX3NooA" name="body" constrainedElement="_tWoSwNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWo50tp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::BillingSection))->asSequence()->any(true).oclAsType(emspcr::BillingSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tWoSwdp2EeKVkrUHX3NooA" type="_S-YTcGldEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tWo50Np2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tY1SMNp2EeKVkrUHX3NooA" name="getCurrentMedication" isQuery="true" bodyCondition="_tY15QNp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tY15QNp2EeKVkrUHX3NooA" name="body" constrainedElement="_tY1SMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tY15Qdp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::CurrentMedicationSection))->asSequence()->any(true).oclAsType(emspcr::CurrentMedicationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tY1SMdp2EeKVkrUHX3NooA" type="_aDO5AIcnEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tY1SMtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tY4VgNp2EeKVkrUHX3NooA" name="getCardiacArrestEvent" isQuery="true" bodyCondition="_tY48kdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tY48kdp2EeKVkrUHX3NooA" name="body" constrainedElement="_tY4VgNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tY48ktp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::CardiacArrestEventSection))->asSequence()->any(true).oclAsType(emspcr::CardiacArrestEventSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tY4Vgdp2EeKVkrUHX3NooA" type="_pIikMHwDEeGW3cDolvqrTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tY48kNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tY7Y0Np2EeKVkrUHX3NooA" name="getAdvanceDirectives" isQuery="true" bodyCondition="_tY7Y09p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tY7Y09p2EeKVkrUHX3NooA" name="body" constrainedElement="_tY7Y0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tY7Y1Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::AdvanceDirectivesSection))->asSequence()->any(true).oclAsType(emspcr::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tY7Y0dp2EeKVkrUHX3NooA" type="_i4C-AH9aEeGht55Sz1eBOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tY7Y0tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tZININp2EeKVkrUHX3NooA" name="getAllergiesAndAdverseReactionsSection" isQuery="true" bodyCondition="_tZINI9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tZINI9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tZININp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZINJNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::AllergiesAndAdverseReactionsSection))->asSequence()->any(true).oclAsType(emspcr::AllergiesAndAdverseReactionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tZINIdp2EeKVkrUHX3NooA" type="_nSjIgH9cEeGht55Sz1eBOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tZINItp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tZKpYNp2EeKVkrUHX3NooA" name="getPastMedicalHistory" isQuery="true" bodyCondition="_tZLQcdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tZLQcdp2EeKVkrUHX3NooA" name="body" constrainedElement="_tZKpYNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZLQctp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PastMedicalHistorySection))->asSequence()->any(true).oclAsType(emspcr::PastMedicalHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tZKpYdp2EeKVkrUHX3NooA" type="_VtMvAIzcEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tZLQcNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tZh1wNp2EeKVkrUHX3NooA" name="getSocialHistory" isQuery="true" bodyCondition="_tZh1w9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tZh1w9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tZh1wNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZh1xNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SocialHistorySection))->asSequence()->any(true).oclAsType(emspcr::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tZh1wdp2EeKVkrUHX3NooA" type="_1XH7YIziEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tZh1wtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tacbwNp2EeKVkrUHX3NooA" name="getPhysicalAssessmentSection" isQuery="true" bodyCondition="_tadC0dp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tadC0dp2EeKVkrUHX3NooA" name="body" constrainedElement="_tacbwNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tadC0tp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PhysicalAssessmentSection))->asSequence()->any(true).oclAsType(emspcr::PhysicalAssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tacbwdp2EeKVkrUHX3NooA" type="_6223oJohEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tadC0Np2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tbMCoNp2EeKVkrUHX3NooA" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_tbMCo9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tbMCo9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tbMCoNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbMCpNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(emspcr::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tbMCodp2EeKVkrUHX3NooA" type="_c7crcJovEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tbMCotp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tcJE4Np2EeKVkrUHX3NooA" name="getProceduresPerformedSection" isQuery="true" bodyCondition="_tcJr8dp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tcJr8dp2EeKVkrUHX3NooA" name="body" constrainedElement="_tcJE4Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcJr8tp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ProceduresPerformedSection))->asSequence()->any(true).oclAsType(emspcr::ProceduresPerformedSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tcJE4dp2EeKVkrUHX3NooA" type="_4QFw8JumEeGzXI65shd6Fw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tcJr8Np2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tcfDINp2EeKVkrUHX3NooA" name="getPatientCareNarrative" isQuery="true" bodyCondition="_tcfqMdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tcfqMdp2EeKVkrUHX3NooA" name="body" constrainedElement="_tcfDINp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcfqMtp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PatientCareNarrativeSection))->asSequence()->any(true).oclAsType(emspcr::PatientCareNarrativeSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tcfDIdp2EeKVkrUHX3NooA" type="_iDmQYJ9mEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tcfqMNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_te424Np2EeKVkrUHX3NooA" name="getSceneSection" isQuery="true" bodyCondition="_te5d8tp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_te5d8tp2EeKVkrUHX3NooA" name="body" constrainedElement="_te424Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_te5d89p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SceneSection))->asSequence()->any(true).oclAsType(emspcr::SceneSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_te5d8Np2EeKVkrUHX3NooA" type="_h3A8IKK3EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_te5d8dp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tgG-4Np2EeKVkrUHX3NooA" name="getDispatchSection" isQuery="true" bodyCondition="_tgG-49p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tgG-49p2EeKVkrUHX3NooA" name="body" constrainedElement="_tgG-4Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgG-5Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::DispatchSection))->asSequence()->any(true).oclAsType(emspcr::DispatchSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tgG-4dp2EeKVkrUHX3NooA" type="_OV4TIJ9nEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tgG-4tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tgKCMNp2EeKVkrUHX3NooA" name="getDispositionSection" isQuery="true" bodyCondition="_tgKCM9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tgKCM9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tgKCMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgKCNNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::DispositionSection))->asSequence()->any(true).oclAsType(emspcr::DispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tgKCMdp2EeKVkrUHX3NooA" type="_i-lM8J-dEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tgKCMtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tgMecNp2EeKVkrUHX3NooA" name="getPersonnelAdverseEventSection" isQuery="true" bodyCondition="_tgNFgNp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tgNFgNp2EeKVkrUHX3NooA" name="body" constrainedElement="_tgMecNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgNFgdp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PersonnelAdverseEventSection))->asSequence()->any(true).oclAsType(emspcr::PersonnelAdverseEventSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tgMecdp2EeKVkrUHX3NooA" type="_GGotEJ-kEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tgMectp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tgPhwNp2EeKVkrUHX3NooA" name="getProtocolSection" isQuery="true" bodyCondition="_tgPhw9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tgPhw9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tgPhwNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgQI0Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ProtocolSection))->asSequence()->any(true).oclAsType(emspcr::ProtocolSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tgPhwdp2EeKVkrUHX3NooA" type="_aK7P4J-mEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tgPhwtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tgSlENp2EeKVkrUHX3NooA" name="getResponseSection" isQuery="true" bodyCondition="_tgSlE9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tgSlE9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tgSlENp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgSlFNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ResponseSection))->asSequence()->any(true).oclAsType(emspcr::ResponseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tgSlEdp2EeKVkrUHX3NooA" type="_LI7M8J99EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tgSlEtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tgVoYNp2EeKVkrUHX3NooA" name="getSituationSection" isQuery="true" bodyCondition="_tgVoY9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tgVoY9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tgVoYNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgVoZNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SituationSection))->asSequence()->any(true).oclAsType(emspcr::SituationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tgVoYdp2EeKVkrUHX3NooA" type="_olqMIKK8EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tgVoYtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tgYEoNp2EeKVkrUHX3NooA" name="getTimesSection" isQuery="true" bodyCondition="_tgYEo9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tgYEo9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tgYEoNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgYEpNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::TimesSection))->asSequence()->any(true).oclAsType(emspcr::TimesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tgYEodp2EeKVkrUHX3NooA" type="_ClVY0KxCEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tgYEotp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tgbH8Np2EeKVkrUHX3NooA" name="getVitalSignsSection" isQuery="true" bodyCondition="_tgbH89p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tgbH89p2EeKVkrUHX3NooA" name="body" constrainedElement="_tgbH8Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgbH9Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::VitalSignsSection))->asSequence()->any(true).oclAsType(emspcr::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tgbH8dp2EeKVkrUHX3NooA" type="_jCzkkIzkEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tgbH8tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_uZRbgNp2EeKVkrUHX3NooA" name="getInjuryIncidentDescriptionSection" isQuery="true" bodyCondition="_uZRbg9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_uZRbg9p2EeKVkrUHX3NooA" name="body" constrainedElement="_uZRbgNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_uZRbhNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::InjuryIncidentDescriptionSection))->asSequence()->any(true).oclAsType(emspcr::InjuryIncidentDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_uZRbgdp2EeKVkrUHX3NooA" type="_3dRe0HSUEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_uZRbgtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VtMvAIzcEeGnhceUMXltng" name="PastMedicalHistorySection">
      <ownedRule xmi:id="_tV_ZkNp2EeKVkrUHX3NooA" name="PastMedicalHistorySectionTemplateId" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tV_Zkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.19')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWCc4Np2EeKVkrUHX3NooA" name="PastMedicalHistorySectionCode" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWCc4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67842-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWHVYNp2EeKVkrUHX3NooA" name="PastMedicalHistorySectionCodeP" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWHVYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWM08Np2EeKVkrUHX3NooA" name="PastMedicalHistorySectionTitle" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWM08dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Past Medical History')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWQfUNp2EeKVkrUHX3NooA" name="PastMedicalHistorySectionText" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWQfUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvGdINp2EeKVkrUHX3NooA" name="PastMedicalHistorySectionExistenceOfHistoryOfCondition" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvGdIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfHistoryOfCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvJgcNp2EeKVkrUHX3NooA" name="PastMedicalHistorySectionHistoryOfCondition" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvJgcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::HistoryOfCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvznwNp2EeKVkrUHX3NooA" name="PastMedicalHistorySectionHistoryOfProceduresOrganizer" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvznwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::HistoryOfProceduresOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W3TxsIzcEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_tvHrQNp2EeKVkrUHX3NooA" name="getExistenceOfHistoryOfCondition" isQuery="true" bodyCondition="_tvISUtp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tvISUtp2EeKVkrUHX3NooA" name="body" constrainedElement="_tvHrQNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvISU9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfHistoryOfCondition))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfHistoryOfCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tvISUNp2EeKVkrUHX3NooA" type="_W_uRYIzdEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tvISUdp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tvKukNp2EeKVkrUHX3NooA" name="getHistoryOfCondition" isQuery="true" bodyCondition="_tvLVotp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tvLVotp2EeKVkrUHX3NooA" name="body" constrainedElement="_tvKukNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvLVo9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::HistoryOfCondition))->asSequence()->any(true).oclAsType(emspcr::HistoryOfCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tvLVoNp2EeKVkrUHX3NooA" type="_5XgZ4IzdEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tvLVodp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tv1c8Np2EeKVkrUHX3NooA" name="getHistoryOfProceduresOrganizer" isQuery="true" bodyCondition="_tv1c89p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tv1c89p2EeKVkrUHX3NooA" name="body" constrainedElement="_tv1c8Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tv1c9Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::HistoryOfProceduresOrganizer))->asSequence()->any(true).oclAsType(emspcr::HistoryOfProceduresOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tv1c8dp2EeKVkrUHX3NooA" type="_HLO9kIzgEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tv1c8tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S-YTcGldEeG4boS-IbG8Zw" name="BillingSection">
      <ownedRule xmi:id="_tWVX0Np2EeKVkrUHX3NooA" name="BillingSectionTemplateId" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWVX0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWYbINp2EeKVkrUHX3NooA" name="BillingSectionCode" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWYbIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67659-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWd6sNp2EeKVkrUHX3NooA" name="BillingSectionTitle" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWd6sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Billing Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWhlENp2EeKVkrUHX3NooA" name="BillingSectionText" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWhlEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8IMgNp2EeKVkrUHX3NooA" name="BillingSectionBillingCondition" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8IMgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::BillingCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8rmINp2EeKVkrUHX3NooA" name="BillingSectionLevelOfServiceObservation" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8rmIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LevelOfServiceObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_S-YTcWldEeG4boS-IbG8Zw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_t8KBsNp2EeKVkrUHX3NooA" name="getBillingCondition" isQuery="true" bodyCondition="_t8KBs9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t8KBs9p2EeKVkrUHX3NooA" name="body" constrainedElement="_t8KBsNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8KBtNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BillingCondition))->asSequence()->any(true).oclAsType(emspcr::BillingCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t8KBsdp2EeKVkrUHX3NooA" type="_rNkl4GleEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t8KBstp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t8tbUNp2EeKVkrUHX3NooA" name="getLevelOfServiceObservation" isQuery="true" bodyCondition="_t8tbU9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t8tbU9p2EeKVkrUHX3NooA" name="body" constrainedElement="_t8tbUNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8tbVNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LevelOfServiceObservation))->asSequence()->any(true).oclAsType(emspcr::LevelOfServiceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t8tbUdp2EeKVkrUHX3NooA" type="_To2-YGleEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t8tbUtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3dRe0HSUEeGa4IXs2ghZEw" name="InjuryIncidentDescriptionSection">
      <ownedRule xmi:id="_tWpg4Np2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionTemplateId" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWpg4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWtLQNp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionCode" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWtLQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11374-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tWyq0Np2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionTitle" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tWyq0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Injury Incident Description Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tW1uINp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionText" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tW2VMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trr8wNp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionInjuryCauseCategory" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trr8wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryCauseCategory) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsAs4Np2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionInjuryMechanism" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsAs4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryMechanism) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsU18Np2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionTraumaCenterCriteria" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsU18dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TraumaCenterCriteria) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsq0MNp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionInjuryRiskFactor" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsrbQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryRiskFactor) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ts_kUNp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionVehicleImpactArea" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ts_kUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::VehicleImpactArea) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ttTtYNp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionPatientLocationInVehicle" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttTtYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientLocationInVehicle) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tt6KUNp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionVehicleOccupantSafetyEquipment" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tt6KUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::VehicleOccupantSafetyEquipment) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuOTYNp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionAirbagDeploymentStatus" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuOTYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AirbagDeploymentStatus) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuiccNp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionHeightOfFall" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuiccdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::HeightOfFall) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuy7INp2EeKVkrUHX3NooA" name="InjuryIncidentDescriptionSectionDisasterType" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuy7Idp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DisasterType) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3dSF4HSUEeGa4IXs2ghZEw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_trtK4Np2EeKVkrUHX3NooA" name="getInjuryCauseCategory" isQuery="true" bodyCondition="_trtx8tp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_trtx8tp2EeKVkrUHX3NooA" name="body" constrainedElement="_trtK4Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_trtx89p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryCauseCategory))->asSequence()->any(true).oclAsType(emspcr::InjuryCauseCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_trtx8Np2EeKVkrUHX3NooA" type="_KEFo8HSVEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trtx8dp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tsCiENp2EeKVkrUHX3NooA" name="getInjuryMechanism" isQuery="true" bodyCondition="_tsCiE9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tsCiE9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tsCiENp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsCiFNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryMechanism))->asSequence()->any(true).oclAsType(emspcr::InjuryMechanism)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tsCiEdp2EeKVkrUHX3NooA" type="_aS16EHSWEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tsCiEtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tsWrINp2EeKVkrUHX3NooA" name="getTraumaCenterCriteria" isQuery="true" bodyCondition="_tsXSMdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tsXSMdp2EeKVkrUHX3NooA" name="body" constrainedElement="_tsWrINp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsXSMtp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TraumaCenterCriteria))->asSequence()->any(true).oclAsType(emspcr::TraumaCenterCriteria)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tsWrIdp2EeKVkrUHX3NooA" type="_lTHsIIcXEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tsXSMNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tsspYNp2EeKVkrUHX3NooA" name="getInjuryRiskFactor" isQuery="true" bodyCondition="_tstQcdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tstQcdp2EeKVkrUHX3NooA" name="body" constrainedElement="_tsspYNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tstQctp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryRiskFactor))->asSequence()->any(true).oclAsType(emspcr::InjuryRiskFactor)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tsspYdp2EeKVkrUHX3NooA" type="_vuraIIcZEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tstQcNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ttBZgNp2EeKVkrUHX3NooA" name="getVehicleImpactArea" isQuery="true" bodyCondition="_ttCAktp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_ttCAktp2EeKVkrUHX3NooA" name="body" constrainedElement="_ttBZgNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttCAk9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::VehicleImpactArea))->asSequence()->any(true).oclAsType(emspcr::VehicleImpactArea)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ttCAkNp2EeKVkrUHX3NooA" type="_nvhVwIcaEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ttCAkdp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_ttVikNp2EeKVkrUHX3NooA" name="getPatientLocationInVehicle" isQuery="true" bodyCondition="_ttVik9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_ttVik9p2EeKVkrUHX3NooA" name="body" constrainedElement="_ttVikNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttWJoNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientLocationInVehicle))->asSequence()->any(true).oclAsType(emspcr::PatientLocationInVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ttVikdp2EeKVkrUHX3NooA" type="_zMwjMIccEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ttViktp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tt7_gNp2EeKVkrUHX3NooA" name="getVehicleOccupantSafetyEquipment" isQuery="true" bodyCondition="_tt7_g9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tt7_g9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tt7_gNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tt8mkNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::VehicleOccupantSafetyEquipment))->asSequence()->any(true).oclAsType(emspcr::VehicleOccupantSafetyEquipment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tt7_gdp2EeKVkrUHX3NooA" type="_bsVJUIcdEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tt7_gtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tuQIkNp2EeKVkrUHX3NooA" name="getAirbagDeploymentStatus" isQuery="true" bodyCondition="_tuQIk9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tuQIk9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tuQIkNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuQIlNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AirbagDeploymentStatus))->asSequence()->any(true).oclAsType(emspcr::AirbagDeploymentStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tuQIkdp2EeKVkrUHX3NooA" type="_2lRhsIcdEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tuQIktp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tukRoNp2EeKVkrUHX3NooA" name="getHeightOfFall" isQuery="true" bodyCondition="_tukRo9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tukRo9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tukRoNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tukRpNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::HeightOfFall))->asSequence()->any(true).oclAsType(emspcr::HeightOfFall)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tukRodp2EeKVkrUHX3NooA" type="_auKbcIceEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tukRotp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tu0wUNp2EeKVkrUHX3NooA" name="getDisasterType" isQuery="true" bodyCondition="_tu1XYdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tu1XYdp2EeKVkrUHX3NooA" name="body" constrainedElement="_tu0wUNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tu1XYtp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DisasterType))->asSequence()->any(true).oclAsType(emspcr::DisasterType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tu0wUdp2EeKVkrUHX3NooA" type="_wKL4IIceEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tu1XYNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pIikMHwDEeGW3cDolvqrTA" name="CardiacArrestEventSection">
      <ownedRule xmi:id="_tXB7YNp2EeKVkrUHX3NooA" name="CardiacArrestEventSectionTemplateId" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXB7Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tXE-sNp2EeKVkrUHX3NooA" name="CardiacArrestEventSectionCode" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXE-sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67799-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tXLFUNp2EeKVkrUHX3NooA" name="CardiacArrestEventSectionTitle" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXLFUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Cardiac Arrest Event')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tXOvsNp2EeKVkrUHX3NooA" name="CardiacArrestEventSectionText" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXOvsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tjAh4Np2EeKVkrUHX3NooA" name="CardiacArrestEventSectionCardiacArrestExistence" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tjAh4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CardiacArrestExistence) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pIlAcHwDEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_tjCXENp2EeKVkrUHX3NooA" name="getCardiacArrestExistence" isQuery="true" bodyCondition="_tjCXE9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tjCXE9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tjCXENp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tjC-INp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CardiacArrestExistence))->asSequence()->any(true).oclAsType(emspcr::CardiacArrestExistence)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tjCXEdp2EeKVkrUHX3NooA" type="_Qlqj8HwGEeGW3cDolvqrTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tjCXEtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i4C-AH9aEeGht55Sz1eBOw" name="AdvanceDirectivesSection">
      <ownedRule xmi:id="_tXwUINp2EeKVkrUHX3NooA" name="AdvanceDirectivesSectionTemplateId" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXw7MNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tXz-gNp2EeKVkrUHX3NooA" name="AdvanceDirectivesSectionCode" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXz-gdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67840-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tX5eENp2EeKVkrUHX3NooA" name="AdvanceDirectivesSectionTitle" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tX5eEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Advance Directives Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tYVi8Np2EeKVkrUHX3NooA" name="AdvanceDirectivesSectionText" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tYVi8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trDqoNp2EeKVkrUHX3NooA" name="AdvanceDirectivesSectionAdvancedDirectiveObservation" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trDqodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdvancedDirectiveObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kG590H9aEeGht55Sz1eBOw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_trFf0Np2EeKVkrUHX3NooA" name="getAdvancedDirectiveObservation" isQuery="true" bodyCondition="_trFf09p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_trFf09p2EeKVkrUHX3NooA" name="body" constrainedElement="_trFf0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_trGG4Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdvancedDirectiveObservation))->asSequence()->any(true).oclAsType(emspcr::AdvancedDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_trFf0dp2EeKVkrUHX3NooA" type="_xCcE0Iy7EeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trFf0tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nSjIgH9cEeGht55Sz1eBOw" name="AllergiesAndAdverseReactionsSection">
      <ownedRule xmi:id="_tYX_MNp2EeKVkrUHX3NooA" name="AllergiesAndAdverseReactionsSectionTemplateId" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tYYmQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tYbpkNp2EeKVkrUHX3NooA" name="AllergiesAndAdverseReactionsSectionCode" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tYbpkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tYhJINp2EeKVkrUHX3NooA" name="AllergiesAndAdverseReactionsSectionTitle" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tYhJIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Allergies and Adverse Reactions')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tYkzgNp2EeKVkrUHX3NooA" name="AllergiesAndAdverseReactionsSectionText" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tYkzgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ti3X8Np2EeKVkrUHX3NooA" name="AllergiesAndAdverseReactionsSectionObservation" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ti3X8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfDrugAllergyObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trehYNp2EeKVkrUHX3NooA" name="AllergiesAndAdverseReactionsSectionDrugAllergyProblemAct" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trehYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(emspcr::DrugAllergyProblemAct) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trl2INp2EeKVkrUHX3NooA" name="AllergiesAndAdverseReactionsSectionEnvironmentalAllergies" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trl2Idp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::EnvironmentalAllergies) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_p8HLwH9cEeGht55Sz1eBOw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_ti5NINp2EeKVkrUHX3NooA" name="getObservation" isQuery="true" bodyCondition="_ti5NI9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_ti5NI9p2EeKVkrUHX3NooA" name="body" constrainedElement="_ti5NINp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_ti5NJNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfDrugAllergyObservation))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfDrugAllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_ti5NIdp2EeKVkrUHX3NooA" type="_iWVVYIy-EeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ti5NItp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_trgWkNp2EeKVkrUHX3NooA" name="getDrugAllergyProblemAct" isQuery="true" bodyCondition="_trgWk9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_trgWk9p2EeKVkrUHX3NooA" name="body" constrainedElement="_trgWkNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_trgWlNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(emspcr::DrugAllergyProblemAct))->asSequence()->any(true).oclAsType(emspcr::DrugAllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_trgWkdp2EeKVkrUHX3NooA" type="_3C3WwMWqEeK3RfDsHamIUQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trgWktp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_trnrUNp2EeKVkrUHX3NooA" name="getEnvironmentalAllergies" isQuery="true" bodyCondition="_trnrU9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_trnrU9p2EeKVkrUHX3NooA" name="body" constrainedElement="_trnrUNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_trnrVNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::EnvironmentalAllergies))->asSequence()->any(true).oclAsType(emspcr::EnvironmentalAllergies)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_trnrUdp2EeKVkrUHX3NooA" type="_CFApcIzGEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_trnrUtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aDO5AIcnEeGqF6qfYwLiQw" name="CurrentMedicationSection">
      <ownedRule xmi:id="_tYod4dp2EeKVkrUHX3NooA" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tYpE8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tYsvUNp2EeKVkrUHX3NooA" name="CurrentMedicationSectionTitle" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tYsvUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Current Medications Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tYwZsNp2EeKVkrUHX3NooA" name="CurrentMedicationSectionText" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tYwZsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2WUoNp2EeKVkrUHX3NooA" name="CurrentMedicationSectionCurrentlyOnMedication" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2WUodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CurrentlyOnMedication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2oBcNp2EeKVkrUHX3NooA" name="CurrentMedicationSectionPatientOnAnticoagulants" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2oBcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientOnAnticoagulants) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t235ENp2EeKVkrUHX3NooA" name="CurrentMedicationSectionCurrentMedication" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t235Edp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(emspcr::CurrentMedication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cWgjMIcnEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t2YJ0Np2EeKVkrUHX3NooA" name="getCurrentlyOnMedication" isQuery="true" bodyCondition="_t2YJ09p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t2YJ09p2EeKVkrUHX3NooA" name="body" constrainedElement="_t2YJ0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2Yw4Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CurrentlyOnMedication))->asSequence()->any(true).oclAsType(emspcr::CurrentlyOnMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t2YJ0dp2EeKVkrUHX3NooA" type="_sUm-oIcnEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t2YJ0tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t2pPkNp2EeKVkrUHX3NooA" name="getPatientOnAnticoagulants" isQuery="true" bodyCondition="_t2p2odp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t2p2odp2EeKVkrUHX3NooA" name="body" constrainedElement="_t2pPkNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2p2otp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientOnAnticoagulants))->asSequence()->any(true).oclAsType(emspcr::PatientOnAnticoagulants)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t2pPkdp2EeKVkrUHX3NooA" type="_RZqlsIcoEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t2p2oNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t25uQNp2EeKVkrUHX3NooA" name="getCurrentMedication" isQuery="true" bodyCondition="_t26VUNp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t26VUNp2EeKVkrUHX3NooA" name="body" constrainedElement="_t25uQNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t26VUdp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(emspcr::CurrentMedication))->asSequence()->any(true).oclAsType(emspcr::CurrentMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t25uQdp2EeKVkrUHX3NooA" type="_mwn8MIcoEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t25uQtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1XH7YIziEeGnhceUMXltng" name="SocialHistorySection">
      <ownedRule xmi:id="_tZL3gNp2EeKVkrUHX3NooA" name="SocialHistorySectionTemplateId" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZL3gdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZPh4Np2EeKVkrUHX3NooA" name="SocialHistorySectionCode" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZPh4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67843-3' and value.codeSystem = '2.16.840.1.113883.6.1'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZTzUNp2EeKVkrUHX3NooA" name="SocialHistorySectionCodeP" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZTzUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZZS4Np2EeKVkrUHX3NooA" name="SocialHistorySectionTitle" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZZS4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Social History')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZc9QNp2EeKVkrUHX3NooA" name="SocialHistorySectionText" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZc9Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzHacNp2EeKVkrUHX3NooA" name="SocialHistorySectionExistenceOfDrugUseIndication" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzHacdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfDrugUseIndication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzKdwNp2EeKVkrUHX3NooA" name="SocialHistorySectionDrugUseIndication" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzLE0Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DrugUseIndication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1XIicIziEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_tzJPoNp2EeKVkrUHX3NooA" name="getExistenceOfDrugUseIndication" isQuery="true" bodyCondition="_tzJPo9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tzJPo9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tzJPoNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzJ2sNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfDrugUseIndication))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfDrugUseIndication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tzJPodp2EeKVkrUHX3NooA" type="_Mr964IzjEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tzJPotp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tzMS8Np2EeKVkrUHX3NooA" name="getDrugUseIndication" isQuery="true" bodyCondition="_tzM6ANp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tzM6ANp2EeKVkrUHX3NooA" name="body" constrainedElement="_tzMS8Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzM6Adp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DrugUseIndication))->asSequence()->any(true).oclAsType(emspcr::DrugUseIndication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tzMS8dp2EeKVkrUHX3NooA" type="_oJHzkIzjEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tzMS8tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jCzkkIzkEeGnhceUMXltng" name="VitalSignsSection">
      <ownedRule xmi:id="_tZjq8Np2EeKVkrUHX3NooA" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZjq8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZnVUNp2EeKVkrUHX3NooA" name="emspcrVitalSignsSectionCode" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZnVUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZs04Np2EeKVkrUHX3NooA" name="emspcrVitalSignsSectionTitle" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZtb8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Vital Signs')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZxtYNp2EeKVkrUHX3NooA" name="emspcrVitalSignsSectionText" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZxtYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tkSUQNp2EeKVkrUHX3NooA" name="emspcrVitalSignsSectionVitalSignsOrganizer" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkSUQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::VitalSignsOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tkV-oNp2EeKVkrUHX3NooA" name="emspcrVitalSignsSectionPriorAidVitals" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkWlsNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PriorAidVitals) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tkZpANp2EeKVkrUHX3NooA" name="emspcrVitalSignsSectionAdditionalVitalSignsOrganizer" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkZpAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::AdditionalVitalSignsOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jC0LoIzkEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_tkUwgNp2EeKVkrUHX3NooA" name="getemspcrVitalSignsOrganizer" isQuery="true" bodyCondition="_tkUwg9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tkUwg9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tkUwgNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkUwhNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::VitalSignsOrganizer))->asSequence()->any(true).oclAsType(emspcr::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkUwgdp2EeKVkrUHX3NooA" type="_JnfD8IzoEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkUwgtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkXz0Np2EeKVkrUHX3NooA" name="getPriorAidVitals" isQuery="true" bodyCondition="_tkYa4tp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tkYa4tp2EeKVkrUHX3NooA" name="body" constrainedElement="_tkXz0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkYa49p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PriorAidVitals))->asSequence()->any(true).oclAsType(emspcr::PriorAidVitals)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkYa4Np2EeKVkrUHX3NooA" type="_Dq57UIzpEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkYa4dp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tkbeMNp2EeKVkrUHX3NooA" name="getAdditionalVitalSignsOrganizer" isQuery="true" bodyCondition="_tkbeM9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tkbeM9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tkbeMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkbeNNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::AdditionalVitalSignsOrganizer))->asSequence()->any(true).oclAsType(emspcr::AdditionalVitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tkbeMdp2EeKVkrUHX3NooA" type="_F-GKoLMNEeKNbt70lHd2Eg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tkbeMtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6223oJohEeG_FLcaRgAa7g" name="PhysicalAssessmentSection">
      <ownedRule xmi:id="_taEoUNp2EeKVkrUHX3NooA" name="PhysicalExamSectionTemplateId" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_taEoUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_taNLMNp2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionCodeP" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_taNLMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_taISsNp2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionCode" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_taISsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29545-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_taTR0Np2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionTitle" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_taTR0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Physical Assessment Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_taWVINp2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionText" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_taW8MNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3dH4Np2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionPhysicalAssessmentOrganizer" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3dH4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::PhysicalAssessmentOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3s_gNp2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionPatientPregnancy" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3tmkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientPregnancy) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4K5kNp2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionLastOralIntake" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4K5kdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LastOralIntake) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4g30Np2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionPatientAge" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4g30dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientAge) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t42PANp2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionThrombolyticContraindications" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t42PAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ThrombolyticContraindications) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5PQkNp2EeKVkrUHX3NooA" name="PhysicalAssessmentSectionBarriersToPatientCare" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5PQkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::BarriersToPatientCare) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CzqWIJoiEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Pxt0hSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_t3e9ENp2EeKVkrUHX3NooA" name="getPhysicalAssessmentOrganizer" isQuery="true" bodyCondition="_t3e9E9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t3e9E9p2EeKVkrUHX3NooA" name="body" constrainedElement="_t3e9ENp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3e9FNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::PhysicalAssessmentOrganizer))->asSequence()->any(true).oclAsType(emspcr::PhysicalAssessmentOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t3e9Edp2EeKVkrUHX3NooA" type="_zbYvIJoiEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t3e9Etp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t3u0sNp2EeKVkrUHX3NooA" name="getPatientPregnancy" isQuery="true" bodyCondition="_t3vbwdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t3vbwdp2EeKVkrUHX3NooA" name="body" constrainedElement="_t3u0sNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3vbwtp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientPregnancy))->asSequence()->any(true).oclAsType(emspcr::PatientPregnancy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t3u0sdp2EeKVkrUHX3NooA" type="_sW8QcJosEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t3vbwNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t4NV0Np2EeKVkrUHX3NooA" name="getLastOralIntake" isQuery="true" bodyCondition="_t4N84Np2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t4N84Np2EeKVkrUHX3NooA" name="body" constrainedElement="_t4NV0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4N84dp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LastOralIntake))->asSequence()->any(true).oclAsType(emspcr::LastOralIntake)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t4NV0dp2EeKVkrUHX3NooA" type="_S1I0sJotEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t4NV0tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t4itANp2EeKVkrUHX3NooA" name="getPatientAge" isQuery="true" bodyCondition="_t4jUEtp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t4jUEtp2EeKVkrUHX3NooA" name="body" constrainedElement="_t4itANp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4jUE9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientAge))->asSequence()->any(true).oclAsType(emspcr::PatientAge)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t4jUENp2EeKVkrUHX3NooA" type="_rhjrIJotEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t4jUEdp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t44EMNp2EeKVkrUHX3NooA" name="getThrombolyticContraindications" isQuery="true" bodyCondition="_t44EM9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t44EM9p2EeKVkrUHX3NooA" name="body" constrainedElement="_t44EMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t44ENNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ThrombolyticContraindications))->asSequence()->any(true).oclAsType(emspcr::ThrombolyticContraindications)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t44EMdp2EeKVkrUHX3NooA" type="_HuCH8JouEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t44EMtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t5RFwNp2EeKVkrUHX3NooA" name="getBarriersToPatientCare" isQuery="true" bodyCondition="_t5Rs0Np2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t5Rs0Np2EeKVkrUHX3NooA" name="body" constrainedElement="_t5RFwNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5Rs0dp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BarriersToPatientCare))->asSequence()->any(true).oclAsType(emspcr::BarriersToPatientCare)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t5RFwdp2EeKVkrUHX3NooA" type="_qlUP4JouEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t5RFwtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_c7crcJovEeG_FLcaRgAa7g" name="MedicationsAdministeredSection">
      <ownedRule xmi:id="_taeQ8Np2EeKVkrUHX3NooA" name="MedicationsAdministeredSectionTemplateId" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_taeQ8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tagtMNp2EeKVkrUHX3NooA" name="emspcrMedicationsAdministeredSectionCode" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tahUQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tak-oNp2EeKVkrUHX3NooA" name="emspcrMedicationsAdministeredSectionTitle" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tak-odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'Medications Administered Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_taopANp2EeKVkrUHX3NooA" name="emspcrMedicationsAdministeredSectionText" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_taopAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzzW8Np2EeKVkrUHX3NooA" name="emspcrMedicationsAdministeredSectionMedicationAdministered" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzzW8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(emspcr::MedicationAdministered) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_d57s8JovEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_tz1MINp2EeKVkrUHX3NooA" name="getMedicationAdministered" isQuery="true" bodyCondition="_tz1MI9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tz1MI9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tz1MINp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tz1zMNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(emspcr::MedicationAdministered))->asSequence()->any(true).oclAsType(emspcr::MedicationAdministered)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tz1MIdp2EeKVkrUHX3NooA" type="_5JQlAJovEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tz1MItp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4QFw8JumEeGzXI65shd6Fw" name="ProceduresPerformedSection">
      <ownedRule xmi:id="_tbNQwdp2EeKVkrUHX3NooA" name="ProcedureDescriptionSectionTemplateId" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbNQwtp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.21')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbVzoNp2EeKVkrUHX3NooA" name="ProceduresPerformedSectionCodeP" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbVzodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbRiMNp2EeKVkrUHX3NooA" name="ProceduresPerformedSectionCode" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbRiMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29554-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbbTMNp2EeKVkrUHX3NooA" name="ProceduresPerformedSectionTitle" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbb6QNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Procedures Performed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbfkoNp2EeKVkrUHX3NooA" name="ProceduresPerformedSectionText" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbfkodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tix4YNp2EeKVkrUHX3NooA" name="ProceduresPerformedSectionProcedureActivityProcedure1" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tix4Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(emspcr::Procedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4mzn0JumEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_HNUIIDVzEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_tizGgNp2EeKVkrUHX3NooA" name="getProcedureActivityProcedure1s" isQuery="true" bodyCondition="_tiztktp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tiztktp2EeKVkrUHX3NooA" name="body" constrainedElement="_tizGgNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tiztk9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(emspcr::Procedure)).oclAsType(emspcr::Procedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tiztkNp2EeKVkrUHX3NooA" type="_K8JK8JuoEeGzXI65shd6Fw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tiztkdp2EeKVkrUHX3NooA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iDmQYJ9mEeGw9ZRnaFfEZQ" name="PatientCareNarrativeSection">
      <ownedRule xmi:id="_tcKTANp2EeKVkrUHX3NooA" name="PatientCareNarrativeSectionTemplateId" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcKTAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcN9YNp2EeKVkrUHX3NooA" name="PatientCareNarrativeSectionCode" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcN9Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67781-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcSO0Np2EeKVkrUHX3NooA" name="PatientCareNarrativeSectionCodeP" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcSO0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcXHUNp2EeKVkrUHX3NooA" name="PatientCareNarrativeSectionTitle" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcXHUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Patient Care Report Narrative')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcaxsNp2EeKVkrUHX3NooA" name="PatientCareNarrativeSectionText" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcaxsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ioK9EJ9mEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_OV4TIJ9nEeGw9ZRnaFfEZQ" name="DispatchSection">
      <ownedRule xmi:id="_tcgRQNp2EeKVkrUHX3NooA" name="DispatchSectionTemplateId" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcg4UNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcj7oNp2EeKVkrUHX3NooA" name="DispatchSectionCode" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcj7odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67660-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcpbMNp2EeKVkrUHX3NooA" name="DispatchSectionTitle" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcpbMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Dispatch')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcsegNp2EeKVkrUHX3NooA" name="DispatchSectionText" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tctFkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t1cVsNp2EeKVkrUHX3NooA" name="DispatchSectionEmergencyMedicalDispatchObservation" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t1cVsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::EmergencyMedicalDispatchObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t15osNp2EeKVkrUHX3NooA" name="DispatchSectionComplaintReportedByDispatch" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t15osdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ComplaintReportedByDispatch) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PS8YUJ9nEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_t1eK4Np2EeKVkrUHX3NooA" name="getEmergencyMedicalDispatchObservation" isQuery="true" bodyCondition="_t1eK49p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t1eK49p2EeKVkrUHX3NooA" name="body" constrainedElement="_t1eK4Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t1eK5Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::EmergencyMedicalDispatchObservation))->asSequence()->any(true).oclAsType(emspcr::EmergencyMedicalDispatchObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t1eK4dp2EeKVkrUHX3NooA" type="_46UUAJ9nEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t1eK4tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t17d4Np2EeKVkrUHX3NooA" name="getComplaintReportedByDispatch" isQuery="true" bodyCondition="_t17d49p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t17d49p2EeKVkrUHX3NooA" name="body" constrainedElement="_t17d4Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t17d5Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ComplaintReportedByDispatch))->asSequence()->any(true).oclAsType(emspcr::ComplaintReportedByDispatch)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t17d4dp2EeKVkrUHX3NooA" type="__LltsJ97EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t17d4tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LI7M8J99EeGw9ZRnaFfEZQ" name="ResponseSection">
      <ownedRule xmi:id="_tcvh0Np2EeKVkrUHX3NooA" name="ResponseSectionTemplateId" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcvh0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcylINp2EeKVkrUHX3NooA" name="ResponseSectionCode" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tczMMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67664-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tc3doNp2EeKVkrUHX3NooA" name="ResponseSectionCodeP" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tc3dodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tc8WINp2EeKVkrUHX3NooA" name="ResponseSectionTitle" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tc8WIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Response')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tdAAgNp2EeKVkrUHX3NooA" name="ResponseSectionText" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdAAgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-C4ENp2EeKVkrUHX3NooA" name="ResponseSectionDelayOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-C4Edp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::DelayOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-La8Np2EeKVkrUHX3NooA" name="ResponseSectionDispatchLocationOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-MCANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::DispatchLocationOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-XoMNp2EeKVkrUHX3NooA" name="ResponseSectionResponseOdometerReadingOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-XoMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::ResponseOdometerReadingOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-fkANp2EeKVkrUHX3NooA" name="ResponseSectionResponseModeToScene" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-fkAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ResponseModeToScene) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_M0JYoJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_t-FUUNp2EeKVkrUHX3NooA" name="getDelayOrganizer" isQuery="true" bodyCondition="_t-FUU9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t-FUU9p2EeKVkrUHX3NooA" name="body" constrainedElement="_t-FUUNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-FUVNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::DelayOrganizer))->asSequence()->any(true).oclAsType(emspcr::DelayOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-FUUdp2EeKVkrUHX3NooA" type="_0padgJ99EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-FUUtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-NQINp2EeKVkrUHX3NooA" name="getDispatchLocationOrganizer" isQuery="true" bodyCondition="_t-N3Mdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t-N3Mdp2EeKVkrUHX3NooA" name="body" constrainedElement="_t-NQINp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-N3Mtp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::DispatchLocationOrganizer))->asSequence()->any(true).oclAsType(emspcr::DispatchLocationOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-NQIdp2EeKVkrUHX3NooA" type="_MiN-UJ-BEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-N3MNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-ZdYNp2EeKVkrUHX3NooA" name="getResponseOdometerReadingOrganizer" isQuery="true" bodyCondition="_t-aEcdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t-aEcdp2EeKVkrUHX3NooA" name="body" constrainedElement="_t-ZdYNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-aEctp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::ResponseOdometerReadingOrganizer))->asSequence()->any(true).oclAsType(emspcr::ResponseOdometerReadingOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-ZdYdp2EeKVkrUHX3NooA" type="_yVviAJ-OEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-aEcNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t-hZMNp2EeKVkrUHX3NooA" name="getResponseModeToScene" isQuery="true" bodyCondition="_t-iAQNp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t-iAQNp2EeKVkrUHX3NooA" name="body" constrainedElement="_t-hZMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-iAQdp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ResponseModeToScene))->asSequence()->any(true).oclAsType(emspcr::ResponseModeToScene)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t-hZMdp2EeKVkrUHX3NooA" type="_l_V6IJ-bEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t-hZMtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i-lM8J-dEeGorI3CPDW2ww" name="DispositionSection">
      <ownedRule xmi:id="_tdvnYNp2EeKVkrUHX3NooA" name="DispositionSectionTemplateId" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdwOcNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tdzRwNp2EeKVkrUHX3NooA" name="DispositionSectionCode" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdzRwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67796-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_td4KQNp2EeKVkrUHX3NooA" name="DispositionSectionCodeP" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_td4KQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_td9CwNp2EeKVkrUHX3NooA" name="DispositionSectionTitle" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_td9p0Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Disposition')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_teAtINp2EeKVkrUHX3NooA" name="DispositionSectionText" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_teBUMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tf3HQNp2EeKVkrUHX3NooA" name="DispositionSectionEntry4" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tf3HQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportMethodObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlAtANp2EeKVkrUHX3NooA" name="DispositionSectionNumberOfPatientsObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlAtAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::NumberOfPatientsObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlWEMNp2EeKVkrUHX3NooA" name="DispositionSectionIncidentDispositionObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlWrQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::IncidentDispositionObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlzXMNp2EeKVkrUHX3NooA" name="DispositionSectionTransportModeObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlzXMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportModeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmO1ANp2EeKVkrUHX3NooA" name="DispositionSectionTransportMethodObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmO1Adp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportMethodObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmsIANp2EeKVkrUHX3NooA" name="DispositionSectionReasonForChoosingDestinationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmsvENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ReasonForChoosingDestinationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnKCENp2EeKVkrUHX3NooA" name="DispositionSectionPrearrivalActivationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnKCEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PrearrivalActivationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnickNp2EeKVkrUHX3NooA" name="DispositionSectionPatientConditionChangeAtDestinationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnjDoNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientConditionChangeAtDestinationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kGvu4J-dEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_tf48cNp2EeKVkrUHX3NooA" name="getemspcrEntry4" isQuery="true" bodyCondition="_tf48c9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tf48c9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tf48cNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tf48dNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportMethodObservation))->asSequence()->any(true).oclAsType(emspcr::TransportMethodObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tf48cdp2EeKVkrUHX3NooA" type="_EagUtZ-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tf48ctp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tlCiMNp2EeKVkrUHX3NooA" name="getNumberOfPatientsObservation" isQuery="true" bodyCondition="_tlCiM9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tlCiM9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tlCiMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlDJQNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::NumberOfPatientsObservation))->asSequence()->any(true).oclAsType(emspcr::NumberOfPatientsObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tlCiMdp2EeKVkrUHX3NooA" type="_Dfaa4J-eEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tlCiMtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tlX5YNp2EeKVkrUHX3NooA" name="getIncidentDispositionObservation" isQuery="true" bodyCondition="_tlYgctp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tlYgctp2EeKVkrUHX3NooA" name="body" constrainedElement="_tlX5YNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlYgc9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::IncidentDispositionObservation))->asSequence()->any(true).oclAsType(emspcr::IncidentDispositionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tlYgcNp2EeKVkrUHX3NooA" type="_j3YnxZ-eEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tlYgcdp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tl1MYNp2EeKVkrUHX3NooA" name="getTransportModeObservation" isQuery="true" bodyCondition="_tl1MY9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tl1MY9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tl1MYNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tl1MZNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportModeObservation))->asSequence()->any(true).oclAsType(emspcr::TransportModeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tl1MYdp2EeKVkrUHX3NooA" type="_nv-0gp-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tl1MYtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tmQqMNp2EeKVkrUHX3NooA" name="getTransportMethodObservation" isQuery="true" bodyCondition="_tmQqM9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tmQqM9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tmQqMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmQqNNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportMethodObservation))->asSequence()->any(true).oclAsType(emspcr::TransportMethodObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tmQqMdp2EeKVkrUHX3NooA" type="_EagUtZ-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tmQqMtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tmukQNp2EeKVkrUHX3NooA" name="getReasonForChoosingDestinationObservation" isQuery="true" bodyCondition="_tmukQ9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tmukQ9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tmukQNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmukRNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ReasonForChoosingDestinationObservation))->asSequence()->any(true).oclAsType(emspcr::ReasonForChoosingDestinationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tmukQdp2EeKVkrUHX3NooA" type="_cm1D5Z-hEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tmukQtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tnL3QNp2EeKVkrUHX3NooA" name="getPrearrivalActivationObservation" isQuery="true" bodyCondition="_tnL3Q9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tnL3Q9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tnL3QNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnL3RNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PrearrivalActivationObservation))->asSequence()->any(true).oclAsType(emspcr::PrearrivalActivationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tnL3Qdp2EeKVkrUHX3NooA" type="_083apZ-hEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tnL3Qtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tnkRwNp2EeKVkrUHX3NooA" name="getPatientConditionChangeAtDestinationObservation" isQuery="true" bodyCondition="_tnk40tp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tnk40tp2EeKVkrUHX3NooA" name="body" constrainedElement="_tnkRwNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnk409p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientConditionChangeAtDestinationObservation))->asSequence()->any(true).oclAsType(emspcr::PatientConditionChangeAtDestinationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tnk40Np2EeKVkrUHX3NooA" type="_Q4zL9Z-gEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tnk40dp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GGotEJ-kEeGorI3CPDW2ww" name="PersonnelAdverseEventSection">
      <ownedRule xmi:id="_teE-kNp2EeKVkrUHX3NooA" name="PersonnelAdverseEventSectionTemplateId" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_teE-kdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_teIo8Np2EeKVkrUHX3NooA" name="PersonnelAdverseEventSectionCode" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_teIo8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67658-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_teM6YNp2EeKVkrUHX3NooA" name="PersonnelAdverseEventSectionCodeP" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_teM6Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_teSZ8Np2EeKVkrUHX3NooA" name="PersonnelAdverseEventSectionTitle" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_teSZ8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Exposures or Injuries of EMS Personnel')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_teWEUNp2EeKVkrUHX3NooA" name="PersonnelAdverseEventSectionText" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_teWEUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t7WJYNp2EeKVkrUHX3NooA" name="PersonnelAdverseEventSectionAdverseEventIndicator" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7WJYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdverseEventIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t7rgkNp2EeKVkrUHX3NooA" name="PersonnelAdverseEventSectionAdverseEventTypeObservation" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7rgkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdverseEventTypeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GrtJAJ-kEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_t7X-kNp2EeKVkrUHX3NooA" name="getAdverseEventIndicator" isQuery="true" bodyCondition="_t7YloNp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t7YloNp2EeKVkrUHX3NooA" name="body" constrainedElement="_t7X-kNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7Ylodp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdverseEventIndicator))->asSequence()->any(true).oclAsType(emspcr::AdverseEventIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t7X-kdp2EeKVkrUHX3NooA" type="_p4XEAJ-kEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t7X-ktp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t7tVwNp2EeKVkrUHX3NooA" name="getAdverseEventTypeObservation" isQuery="true" bodyCondition="_t7tVw9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t7tVw9p2EeKVkrUHX3NooA" name="body" constrainedElement="_t7tVwNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7tVxNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdverseEventTypeObservation))->asSequence()->any(true).oclAsType(emspcr::AdverseEventTypeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t7tVwdp2EeKVkrUHX3NooA" type="_gU4tMJ-lEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t7tVwtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aK7P4J-mEeGorI3CPDW2ww" name="ProtocolSection">
      <ownedRule xmi:id="_teYgkNp2EeKVkrUHX3NooA" name="ProtocolSectionTemplateId" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_teYgkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tebj4Np2EeKVkrUHX3NooA" name="ProtocolSectionCode" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tecK8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67537-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tehDcNp2EeKVkrUHX3NooA" name="ProtocolSectionTitle" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tehDcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Protocol Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tekt0Np2EeKVkrUHX3NooA" name="ProtocolSectionText" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tekt0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9HrANp2EeKVkrUHX3NooA" name="ProtocolSectionProtocolObservation" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9ISENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProtocolObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9mMINp2EeKVkrUHX3NooA" name="ProtocolSectionCandidatePatientRegistryType" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9mMIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CandidatePatientRegistryType) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_a15fgJ-mEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_t9JgMNp2EeKVkrUHX3NooA" name="getProtocolObservation" isQuery="true" bodyCondition="_t9KHQdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t9KHQdp2EeKVkrUHX3NooA" name="body" constrainedElement="_t9JgMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9KHQtp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProtocolObservation))->asSequence()->any(true).oclAsType(emspcr::ProtocolObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t9JgMdp2EeKVkrUHX3NooA" type="_rDpggp-mEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t9KHQNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t9oBUNp2EeKVkrUHX3NooA" name="getCandidatePatientRegistryType" isQuery="true" bodyCondition="_t9ooYNp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t9ooYNp2EeKVkrUHX3NooA" name="body" constrainedElement="_t9oBUNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9ooYdp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CandidatePatientRegistryType))->asSequence()->any(true).oclAsType(emspcr::CandidatePatientRegistryType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t9oBUdp2EeKVkrUHX3NooA" type="_n-zaBZ-nEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t9oBUtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_h3A8IKK3EeGOxth0BgV-QA" name="SceneSection">
      <ownedRule xmi:id="_tenxINp2EeKVkrUHX3NooA" name="SceneSectionTemplateId" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tenxIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_teq0cNp2EeKVkrUHX3NooA" name="SceneSectionCode" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_terbgNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67665-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tewUANp2EeKVkrUHX3NooA" name="SceneSectionTitle" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tew7ENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Scene')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tez-YNp2EeKVkrUHX3NooA" name="SceneSectionText" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tez-Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5tKoNp2EeKVkrUHX3NooA" name="SceneSectionFirstUnitIndicator" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5tKodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::FirstUnitIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5wN8Np2EeKVkrUHX3NooA" name="SceneSectionFirstUnitOnScene" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5wN8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::FirstUnitOnScene) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6Wq4Np2EeKVkrUHX3NooA" name="SceneSectionScenePatientCount" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6XR8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ScenePatientCount) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6aVQNp2EeKVkrUHX3NooA" name="SceneSectionMassCasualtyIndicator" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6aVQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::MassCasualtyIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t7AyMNp2EeKVkrUHX3NooA" name="SceneSectionLocationTypeObservation" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7AyMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LocationTypeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_in9Q4KK3EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_t5u_0Np2EeKVkrUHX3NooA" name="getFirstUnitIndicator" isQuery="true" bodyCondition="_t5u_09p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t5u_09p2EeKVkrUHX3NooA" name="body" constrainedElement="_t5u_0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5u_1Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::FirstUnitIndicator))->asSequence()->any(true).oclAsType(emspcr::FirstUnitIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t5u_0dp2EeKVkrUHX3NooA" type="_Ox86UKK4EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t5u_0tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t5yDINp2EeKVkrUHX3NooA" name="getFirstUnitOnScene" isQuery="true" bodyCondition="_t5yDI9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t5yDI9p2EeKVkrUHX3NooA" name="body" constrainedElement="_t5yDINp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5yDJNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::FirstUnitOnScene))->asSequence()->any(true).oclAsType(emspcr::FirstUnitOnScene)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t5yDIdp2EeKVkrUHX3NooA" type="_JNrkAKK5EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t5yDItp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t6YgENp2EeKVkrUHX3NooA" name="getScenePatientCount" isQuery="true" bodyCondition="_t6ZHINp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t6ZHINp2EeKVkrUHX3NooA" name="body" constrainedElement="_t6YgENp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6ZHIdp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ScenePatientCount))->asSequence()->any(true).oclAsType(emspcr::ScenePatientCount)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t6YgEdp2EeKVkrUHX3NooA" type="_wPLCkKK5EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t6YgEtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t6bjYNp2EeKVkrUHX3NooA" name="getMassCasualtyIndicator" isQuery="true" bodyCondition="_t6cKctp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t6cKctp2EeKVkrUHX3NooA" name="body" constrainedElement="_t6bjYNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6cKc9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::MassCasualtyIndicator))->asSequence()->any(true).oclAsType(emspcr::MassCasualtyIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t6cKcNp2EeKVkrUHX3NooA" type="_E-SEAKK8EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t6cKcdp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t7CAUNp2EeKVkrUHX3NooA" name="getLocationTypeObservation" isQuery="true" bodyCondition="_t7CnYdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t7CnYdp2EeKVkrUHX3NooA" name="body" constrainedElement="_t7CAUNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7CnYtp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LocationTypeObservation))->asSequence()->any(true).oclAsType(emspcr::LocationTypeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t7CAUdp2EeKVkrUHX3NooA" type="_ayUKMMk3EeK2gbjCtOEivw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t7CnYNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_olqMIKK8EeGOxth0BgV-QA" name="SituationSection">
      <ownedRule xmi:id="_te6FANp2EeKVkrUHX3NooA" name="SituationSectionTemplateId" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_te6FAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_te9vYNp2EeKVkrUHX3NooA" name="SituationSectionCode" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_te9vYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67666-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tfDO8Np2EeKVkrUHX3NooA" name="SituationSectionCodeP" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfD2ANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tfIHcNp2EeKVkrUHX3NooA" name="SituationSectionTitle" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfIugNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Situation Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tfMY4Np2EeKVkrUHX3NooA" name="SituationSectionText" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfMY4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tv_N8Np2EeKVkrUHX3NooA" name="SituationSectionComplaint" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tv_N8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::Complaint) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twhZcNp2EeKVkrUHX3NooA" name="SituationSectionPossibleInjury" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twiAgNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PossibleInjury) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tw2woNp2EeKVkrUHX3NooA" name="SituationSectionProviderPrimaryImpression" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tw3XsNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProviderPrimaryImpression) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txS1gNp2EeKVkrUHX3NooA" name="SituationSectionPrimarySymptom" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txTckNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PrimarySymptom) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txwvkNp2EeKVkrUHX3NooA" name="SituationSectionOtherSymptoms" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txwvkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::OtherSymptoms) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyM0cNp2EeKVkrUHX3NooA" name="SituationSectionProviderSecondaryImpressions" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyM0cdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProviderSecondaryImpressions) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyqugNp2EeKVkrUHX3NooA" name="SituationSectionInitialPatientAcuity" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyqugdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InitialPatientAcuity) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pG54AKK8EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_twBDINp2EeKVkrUHX3NooA" name="getComplaint" isQuery="true" bodyCondition="_twBDI9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_twBDI9p2EeKVkrUHX3NooA" name="body" constrainedElement="_twBDINp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_twBDJNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::Complaint))->asSequence()->any(true).oclAsType(emspcr::Complaint)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_twBDIdp2EeKVkrUHX3NooA" type="_KEZzkKg-EeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_twBDItp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_twj1sNp2EeKVkrUHX3NooA" name="getPossibleInjury" isQuery="true" bodyCondition="_twj1s9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_twj1s9p2EeKVkrUHX3NooA" name="body" constrainedElement="_twj1sNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_twj1tNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PossibleInjury))->asSequence()->any(true).oclAsType(emspcr::PossibleInjury)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_twj1sdp2EeKVkrUHX3NooA" type="_7nP0MKhCEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_twj1stp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tw4l0Np2EeKVkrUHX3NooA" name="getProviderPrimaryImpression" isQuery="true" bodyCondition="_tw5M4tp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tw5M4tp2EeKVkrUHX3NooA" name="body" constrainedElement="_tw4l0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tw5M49p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProviderPrimaryImpression))->asSequence()->any(true).oclAsType(emspcr::ProviderPrimaryImpression)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tw5M4Np2EeKVkrUHX3NooA" type="_0C-8EKhDEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tw5M4dp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_txUqsNp2EeKVkrUHX3NooA" name="getPrimarySymptom" isQuery="true" bodyCondition="_txVRwNp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_txVRwNp2EeKVkrUHX3NooA" name="body" constrainedElement="_txUqsNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_txVRwdp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PrimarySymptom))->asSequence()->any(true).oclAsType(emspcr::PrimarySymptom)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_txUqsdp2EeKVkrUHX3NooA" type="_KOxo0KhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_txUqstp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_txykwNp2EeKVkrUHX3NooA" name="getOtherSymptoms" isQuery="true" bodyCondition="_txykw9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_txykw9p2EeKVkrUHX3NooA" name="body" constrainedElement="_txykwNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_txzL0Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::OtherSymptoms))->asSequence()->any(true).oclAsType(emspcr::OtherSymptoms)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_txykwdp2EeKVkrUHX3NooA" type="_g5iJgKhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_txykwtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tyOpoNp2EeKVkrUHX3NooA" name="getProviderSecondaryImpressions" isQuery="true" bodyCondition="_tyOpo9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tyOpo9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tyOpoNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyPQsNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProviderSecondaryImpressions))->asSequence()->any(true).oclAsType(emspcr::ProviderSecondaryImpressions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tyOpodp2EeKVkrUHX3NooA" type="_0mPksKhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tyOpotp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tysjsNp2EeKVkrUHX3NooA" name="getInitialPatientAcuity" isQuery="true" bodyCondition="_tytKwdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tytKwdp2EeKVkrUHX3NooA" name="body" constrainedElement="_tysjsNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tytKwtp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InitialPatientAcuity))->asSequence()->any(true).oclAsType(emspcr::InitialPatientAcuity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tysjsdp2EeKVkrUHX3NooA" type="_NZgqAKhFEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tytKwNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ClVY0KxCEeGLnrdLmr5TaQ" name="TimesSection">
      <ownedRule xmi:id="_tfabUNp2EeKVkrUHX3NooA" name="TimesSectionTemplateId" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfbCYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tfeswNp2EeKVkrUHX3NooA" name="TimesSectionCode" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfeswdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67667-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tfkzYNp2EeKVkrUHX3NooA" name="TimesSectionTitle" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfkzYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Times')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tfpE0Np2EeKVkrUHX3NooA" name="TimesSectionText" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfpE0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tn_vkNp2EeKVkrUHX3NooA" name="TimesSectionCallTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tn_vkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CallTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_toCy4Np2EeKVkrUHX3NooA" name="TimesSectionUnitNotifiedTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_toCy4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitNotifiedTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_toF2MNp2EeKVkrUHX3NooA" name="TimesSectionUnitEnRouteTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_toF2Mdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitEnRouteTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_toJgkNp2EeKVkrUHX3NooA" name="TimesSectionUnitOnSceneTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_toJgkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitOnSceneTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_toMj4Np2EeKVkrUHX3NooA" name="TimesSectionUnitAtPatienttTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_toNK8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitAtPatienttTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_toQOQNp2EeKVkrUHX3NooA" name="TimesSectionUnitLeftSceneTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_toQ1UNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitLeftSceneTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_toT4oNp2EeKVkrUHX3NooA" name="TimesSectionPatientArrivedAtDestinationTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_toT4odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientArrivedAtDestinationTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_toXjANp2EeKVkrUHX3NooA" name="TimesSectionUnitBackInServiceTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_toXjAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitBackInServiceTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_toamUNp2EeKVkrUHX3NooA" name="TimesSectionDispatchNotifiedTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_toamUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DispatchNotifiedTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DaW8UKxCEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_toBkwNp2EeKVkrUHX3NooA" name="getCallTime" isQuery="true" bodyCondition="_toBkw9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_toBkw9p2EeKVkrUHX3NooA" name="body" constrainedElement="_toBkwNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_toBkxNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CallTime))->asSequence()->any(true).oclAsType(emspcr::CallTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_toBkwdp2EeKVkrUHX3NooA" type="_1u74sKxCEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_toBkwtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_toEoENp2EeKVkrUHX3NooA" name="getUnitNotifiedTime" isQuery="true" bodyCondition="_toEoE9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_toEoE9p2EeKVkrUHX3NooA" name="body" constrainedElement="_toEoENp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_toEoFNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitNotifiedTime))->asSequence()->any(true).oclAsType(emspcr::UnitNotifiedTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_toEoEdp2EeKVkrUHX3NooA" type="_JKerYKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_toEoEtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_toHrYNp2EeKVkrUHX3NooA" name="getUnitEnRouteTime" isQuery="true" bodyCondition="_toIScdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_toIScdp2EeKVkrUHX3NooA" name="body" constrainedElement="_toHrYNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_toISctp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitEnRouteTime))->asSequence()->any(true).oclAsType(emspcr::UnitEnRouteTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_toHrYdp2EeKVkrUHX3NooA" type="_UyaX0KxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_toIScNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_toLVwNp2EeKVkrUHX3NooA" name="getUnitOnSceneTime" isQuery="true" bodyCondition="_toLVw9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_toLVw9p2EeKVkrUHX3NooA" name="body" constrainedElement="_toLVwNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_toLVxNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitOnSceneTime))->asSequence()->any(true).oclAsType(emspcr::UnitOnSceneTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_toLVwdp2EeKVkrUHX3NooA" type="_iGh5QKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_toLVwtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_toPAINp2EeKVkrUHX3NooA" name="getUnitAtPatienttTime" isQuery="true" bodyCondition="_toPAI9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_toPAI9p2EeKVkrUHX3NooA" name="body" constrainedElement="_toPAINp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_toPAJNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitAtPatienttTime))->asSequence()->any(true).oclAsType(emspcr::UnitAtPatienttTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_toPAIdp2EeKVkrUHX3NooA" type="_yt7JUKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_toPAItp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_toSDcNp2EeKVkrUHX3NooA" name="getUnitLeftSceneTime" isQuery="true" bodyCondition="_toSqgtp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_toSqgtp2EeKVkrUHX3NooA" name="body" constrainedElement="_toSDcNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_toSqg9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitLeftSceneTime))->asSequence()->any(true).oclAsType(emspcr::UnitLeftSceneTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_toSqgNp2EeKVkrUHX3NooA" type="_6w124KxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_toSqgdp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_toWU4Np2EeKVkrUHX3NooA" name="getPatientArrivedAtDestinationTime" isQuery="true" bodyCondition="_toWU49p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_toWU49p2EeKVkrUHX3NooA" name="body" constrainedElement="_toWU4Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_toWU5Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientArrivedAtDestinationTime))->asSequence()->any(true).oclAsType(emspcr::PatientArrivedAtDestinationTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_toWU4dp2EeKVkrUHX3NooA" type="_DaIA4KxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_toWU4tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_toZYMNp2EeKVkrUHX3NooA" name="getUnitBackInServiceTime" isQuery="true" bodyCondition="_toZYM9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_toZYM9p2EeKVkrUHX3NooA" name="body" constrainedElement="_toZYMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_toZYNNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitBackInServiceTime))->asSequence()->any(true).oclAsType(emspcr::UnitBackInServiceTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_toZYMdp2EeKVkrUHX3NooA" type="_KrhK4KxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_toZYMtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tocbgNp2EeKVkrUHX3NooA" name="getDispatchNotifiedTime" isQuery="true" bodyCondition="_tocbg9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tocbg9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tocbgNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tocbhNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DispatchNotifiedTime))->asSequence()->any(true).oclAsType(emspcr::DispatchNotifiedTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tocbgdp2EeKVkrUHX3NooA" type="_UFgZEKxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tocbgtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Qlqj8HwGEeGW3cDolvqrTA" name="CardiacArrestExistence">
      <ownedRule xmi:id="_tXTBINp2EeKVkrUHX3NooA" name="CardiacArrestExistenceCardiacArrestCauseRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXTBIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tXVdYNp2EeKVkrUHX3NooA" name="CardiacArrestExistenceCardiacArrestInformantParticipation" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXVdYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.informant->one(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(cda::Informant12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tXZu0Np2EeKVkrUHX3NooA" name="CardiacArrestExistencePriorCPRRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXZu0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tXmjINp2EeKVkrUHX3NooA" name="CardiacArrestExistencePriorAEDRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXmjIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tXqNgNp2EeKVkrUHX3NooA" name="CardiacArrestExistenceSpontaneousCirculationRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXqNgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tXsCsNp2EeKVkrUHX3NooA" name="CardiacArrestExistenceDestinationRhythmRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXspwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tg2lwNp2EeKVkrUHX3NooA" name="CardiacArrestExistenceArrestRhythmRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tg2lwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tjDlMNp2EeKVkrUHX3NooA" name="CardiacArrestExistenceTemplateId" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tjDlMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tjIdsNp2EeKVkrUHX3NooA" name="CardiacArrestExistenceCode" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tjJEwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tjNWMNp2EeKVkrUHX3NooA" name="CardiacArrestExistenceEffectiveTime" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tjNWMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tjQZgNp2EeKVkrUHX3NooA" name="CardiacArrestExistenceValue" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tjQZgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.code = '410429000' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tjVSANp2EeKVkrUHX3NooA" name="CardiacArrestExistenceNegationInd" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tjVSAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tjYVUNp2EeKVkrUHX3NooA" name="CardiacArrestExistenceMoodCode" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tjY8YNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RvtVMHwGEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JnfD8IzoEeGnhceUMXltng" name="VitalSignsOrganizer">
      <ownedComment xmi:id="_WDhRYIzpEeGnhceUMXltng">
        <body>For any observation within the organizer, if the NEMSIS value is &quot;Refused,&quot; the value SHALL be &quot;NI;&quot; the string &quot;Refused&quot; MAY be recorded in Observation.text.</body>
      </ownedComment>
      <ownedRule xmi:id="_thEoMNp2EeKVkrUHX3NooA" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerSystolicBloodPressureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thEoMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thJgsNp2EeKVkrUHX3NooA" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerDiastolicBloodPressureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thJgsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thNyINp2EeKVkrUHX3NooA" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerHeartRateComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thOZMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thSDkNp2EeKVkrUHX3NooA" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerRespiratoryRateComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thSDkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thWVANp2EeKVkrUHX3NooA" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerBodyTemperatureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thWVAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thgGANp2EeKVkrUHX3NooA" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerOxygenSaturationComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thgGAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tkcsUNp2EeKVkrUHX3NooA" name="VitalSignsOrganizerTemplateId" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkcsUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tkg9wNp2EeKVkrUHX3NooA" name="emspcrVitalSignsOrganizerEffectiveTime" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkhk0Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KLr9MIzoEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OlbCRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dq57UIzpEeGnhceUMXltng" name="PriorAidVitals">
      <ownedRule xmi:id="_tkl2QNp2EeKVkrUHX3NooA" name="PriorAidVitalsTemplateId" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkmdUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tkpgoNp2EeKVkrUHX3NooA" name="PriorAidVitalsCode" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkpgodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67518-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tkuZINp2EeKVkrUHX3NooA" name="PriorAidVitalsValue" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkuZIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tkxccNp2EeKVkrUHX3NooA" name="PriorAidVitalsMoodCode" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkxccdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EHmeYIzpEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_F-GKoLMNEeKNbt70lHd2Eg" name="AdditionalVitalSignsOrganizer">
      <ownedRule xmi:id="_thiiQNp2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerStrokeScoreComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thiiQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::StrokeScore))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thk-gNp2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerPainScoreComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thllkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::PainScore))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thoB0Np2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerLevelOfResponsivenessComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thoB0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::LevelOfResponsiveness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thqeENp2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerBloodGlucoseComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thqeEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::BloodGlucose))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ththYNp2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerCarbonMonoxideComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ththYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::CarbonMonoxide))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thwksNp2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerCarbonDioxideComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thwksdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::CarbonDioxide))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_thzA8Np2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerCardiacRhythmComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_thzA8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::CardiacRhythm))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tkz4sNp2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerTemplateId" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tkz4sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tk4KINp2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerEffectiveTime" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk4KIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tk7NcNp2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerMoodCode" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tk7Ncdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_2O4Np2EeKVkrUHX3NooA" name="AdditionalVitalSignsOrganizerGlasgowComaScoreOrganizer" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_2O4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.organizer.oclIsUndefined() and component.organizer.oclIsKindOf(emspcr::GlasgowComaScoreOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_HOxvYLMNEeKNbt70lHd2Eg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_thkXcNp2EeKVkrUHX3NooA" name="getStrokeScoreComponent" isQuery="true" bodyCondition="_thkXc9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_thkXc9p2EeKVkrUHX3NooA" name="body" constrainedElement="_thkXcNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_thkXdNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::StrokeScore))->asSequence()->any(true).oclAsType(emspcr::StrokeScore)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_thkXcdp2EeKVkrUHX3NooA" type="_9koR4IzuEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_thkXctp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_thmzsNp2EeKVkrUHX3NooA" name="getPainScoreComponent" isQuery="true" bodyCondition="_thmzs9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_thmzs9p2EeKVkrUHX3NooA" name="body" constrainedElement="_thmzsNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_thnawNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PainScore))->asSequence()->any(true).oclAsType(emspcr::PainScore)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_thmzsdp2EeKVkrUHX3NooA" type="_lnVLQIzuEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_thmzstp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_thpP8Np2EeKVkrUHX3NooA" name="getLevelOfResponsivenessComponent" isQuery="true" bodyCondition="_thp3Atp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_thp3Atp2EeKVkrUHX3NooA" name="body" constrainedElement="_thpP8Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_thp3A9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LevelOfResponsiveness))->asSequence()->any(true).oclAsType(emspcr::LevelOfResponsiveness)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_thp3ANp2EeKVkrUHX3NooA" type="_xgaHgIztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_thp3Adp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_thsTQNp2EeKVkrUHX3NooA" name="getBloodGlucoseComponent" isQuery="true" bodyCondition="_thsTQ9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_thsTQ9p2EeKVkrUHX3NooA" name="body" constrainedElement="_thsTQNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_thsTRNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BloodGlucose))->asSequence()->any(true).oclAsType(emspcr::BloodGlucose)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_thsTQdp2EeKVkrUHX3NooA" type="_jmDsgIztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_thsTQtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_thvWkNp2EeKVkrUHX3NooA" name="getCarbonMonoxideComponent" isQuery="true" bodyCondition="_thvWk9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_thvWk9p2EeKVkrUHX3NooA" name="body" constrainedElement="_thvWkNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_thvWlNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CarbonMonoxide))->asSequence()->any(true).oclAsType(emspcr::CarbonMonoxide)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_thvWkdp2EeKVkrUHX3NooA" type="_WFit0IztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_thvWktp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_thxy0Np2EeKVkrUHX3NooA" name="getCarbonDioxideComponent" isQuery="true" bodyCondition="_thyZ4tp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_thyZ4tp2EeKVkrUHX3NooA" name="body" constrainedElement="_thxy0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_thyZ49p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CarbonDioxide))->asSequence()->any(true).oclAsType(emspcr::CarbonDioxide)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_thyZ4Np2EeKVkrUHX3NooA" type="_IU2lIIztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_thyZ4dp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_th1dMNp2EeKVkrUHX3NooA" name="getCardiacRhythmComponent" isQuery="true" bodyCondition="_th2EQtp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_th2EQtp2EeKVkrUHX3NooA" name="body" constrainedElement="_th1dMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_th2EQ9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CardiacRhythm))->asSequence()->any(true).oclAsType(emspcr::CardiacRhythm)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_th2EQNp2EeKVkrUHX3NooA" type="_uMxJUIzpEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_th2EQdp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_t_3dANp2EeKVkrUHX3NooA" name="getGlasgowComaScoreOrganizers" isQuery="true" bodyCondition="_t_4EEtp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_t_4EEtp2EeKVkrUHX3NooA" name="body" constrainedElement="_t_3dANp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_4EE9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::GlasgowComaScoreOrganizer)).oclAsType(emspcr::GlasgowComaScoreOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_t_4EENp2EeKVkrUHX3NooA" type="_RNfAcIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t_4EEdp2EeKVkrUHX3NooA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dfaa4J-eEeGorI3CPDW2ww" name="NumberOfPatientsObservation">
      <ownedRule xmi:id="_tlDJQdp2EeKVkrUHX3NooA" name="NumberOfPatientsObservationTemplateId" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlDwUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.31')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlLsINp2EeKVkrUHX3NooA" name="NumberOfPatientsObservationCodeP" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlLsIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlGzoNp2EeKVkrUHX3NooA" name="NumberOfPatientsObservationCode" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlGzodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67547-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlP9kNp2EeKVkrUHX3NooA" name="NumberOfPatientsObservationValue" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlQkoNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlTA4Np2EeKVkrUHX3NooA" name="NumberOfPatientsObservationMoodCode" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlTA4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D6EWkJ-eEeGorI3CPDW2ww">
        <ownedComment xmi:id="_p4JPUEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDisposition.11</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j3YnxZ-eEeGorI3CPDW2ww" name="IncidentDispositionObservation">
      <ownedRule xmi:id="_tlZHgNp2EeKVkrUHX3NooA" name="IncidentDispositionObservationTemplateId" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlZHgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.32')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlhDUNp2EeKVkrUHX3NooA" name="IncidentDispositionObservationCodeP" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlhDUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlcx4Np2EeKVkrUHX3NooA" name="IncidentDispositionObservationCode" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlcx4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67548-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlnJ8Np2EeKVkrUHX3NooA" name="IncidentDispositionObservationValue" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlnJ8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17154-8' or value.code = 'LA17155-5' or value.code = 'LA17156-3' or value.code = 'LA17157-1' or value.code = 'LA17158-9' or value.code = 'LA17159-7' or value.code = 'LA17160-5' or value.code = 'LA17161-3' or value.code = 'LA17162-1' or value.code = 'LA17163-9' or value.code = 'LA17164-7' or value.code = 'LA17165-4' or value.code = 'LA17166-2' or value.code = 'LA17167-0' or value.code = 'LA18080-4' or value.code = 'LA18212-3' or value.code = 'LA18213-1' or value.code = 'LA18214-9' or value.code = 'LA18215-6' or value.code = 'LA18216-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlrbYNp2EeKVkrUHX3NooA" name="IncidentDispositionObservationValueP" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlrbYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tlwT4Np2EeKVkrUHX3NooA" name="IncidentDispositionObservationMoodCode" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tlwT4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j3Ynx5-eEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nv-0gp-fEeGorI3CPDW2ww" name="TransportModeObservation">
      <ownedRule xmi:id="_tl1zcNp2EeKVkrUHX3NooA" name="TransportModeObservationTemplateId" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tl2agNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tl-WUNp2EeKVkrUHX3NooA" name="TransportModeObservationCodeP" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tl-WUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tl5d0Np2EeKVkrUHX3NooA" name="TransportModeObservationCode" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tl5d0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67550-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmHgQNp2EeKVkrUHX3NooA" name="TransportModeObservationValue" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmHgQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmLxsNp2EeKVkrUHX3NooA" name="TransportModeObservationMoodCode" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmLxsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_nv-0hJ-fEeGorI3CPDW2ww">
        <ownedComment xmi:id="_uDDJgEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDisposition.17</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EagUtZ-fEeGorI3CPDW2ww" name="TransportMethodObservation">
      <ownedRule xmi:id="_tmRRQNp2EeKVkrUHX3NooA" name="TransportMethodObservationTemplateId" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmR4UNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmZ0INp2EeKVkrUHX3NooA" name="TransportMethodObservationCodeP" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmabMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmVisNp2EeKVkrUHX3NooA" name="TransportMethodObservationCode" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmVisdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67549-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmf6wNp2EeKVkrUHX3NooA" name="TransportMethodObservationValue" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmf6wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17168-8' or value.code = 'LA17169-6' or value.code = 'LA17170-4' or value.code = 'LA17171-2' or value.code = 'LA17172-0' or value.code = 'LA17173-8' or value.code = 'LA17174-6' or value.code = 'LA17175-3' or value.code = 'LA17176-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmkMMNp2EeKVkrUHX3NooA" name="TransportMethodObservationValueP" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmkMMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmpEsNp2EeKVkrUHX3NooA" name="TransportMethodObservationMoodCode" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmprwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EagUt5-fEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_cm1D5Z-hEeGorI3CPDW2ww" name="ReasonForChoosingDestinationObservation">
      <ownedRule xmi:id="_tmvLUNp2EeKVkrUHX3NooA" name="ReasonForChoosingDestinationObservationTemplateId" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmvLUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tm3HINp2EeKVkrUHX3NooA" name="ReasonForChoosingDestinationObservationCodeP" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tm3uMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tmy1sNp2EeKVkrUHX3NooA" name="ReasonForChoosingDestinationObservationCode" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tmy1sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67552-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tm900Np2EeKVkrUHX3NooA" name="ReasonForChoosingDestinationObservationValue" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tm900dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17182-9' or value.code = 'LA17184-5' or value.code = 'LA17185-2' or value.code = 'LA17186-0' or value.code = 'LA17187-8' or value.code = 'LA17188-6' or value.code = 'LA17189-4' or value.code = 'LA17190-2' or value.code = 'LA17191-0' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnCGQNp2EeKVkrUHX3NooA" name="ReasonForChoosingDestinationObservationValueP" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnCGQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnGXsNp2EeKVkrUHX3NooA" name="ReasonForChoosingDestinationObservationMoodCode" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnG-wNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cm1q8Z-hEeGorI3CPDW2ww">
        <ownedComment xmi:id="_xob70EM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDisposition.20</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_083apZ-hEeGorI3CPDW2ww" name="PrearrivalActivationObservation">
      <ownedRule xmi:id="_tnMeUNp2EeKVkrUHX3NooA" name="PrearrivalActivationObservationTemplateId" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnNFYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnVBMNp2EeKVkrUHX3NooA" name="PrearrivalActivationObservationCodeP" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnVoQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnQvwNp2EeKVkrUHX3NooA" name="PrearrivalActivationObservationCode" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnQvwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69462-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnZ5sNp2EeKVkrUHX3NooA" name="PrearrivalActivationObservationValue" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnZ5sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tncV8Np2EeKVkrUHX3NooA" name="PrearrivalActivationObservationEffectiveTime" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tncV8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnfZQNp2EeKVkrUHX3NooA" name="PrearrivalActivationObservationMoodCode" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnfZQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_083ap5-hEeGorI3CPDW2ww">
        <ownedComment xmi:id="_Na520J-iEeGorI3CPDW2ww">
          <body>NEMSIS Trace: EDisposition.24</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q4zL9Z-gEeGorI3CPDW2ww" name="PatientConditionChangeAtDestinationObservation">
      <ownedRule xmi:id="_tnlf4Np2EeKVkrUHX3NooA" name="PatientConditionChangeAtDestinationObservationTemplateId" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnlf4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.37')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tntbsNp2EeKVkrUHX3NooA" name="PatientConditionChangeAtDestinationObservationCodeP" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tntbsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnojMNp2EeKVkrUHX3NooA" name="PatientConditionChangeAtDestinationObservationCode" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnpKQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67551-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tnziUNp2EeKVkrUHX3NooA" name="PatientConditionChangeAtDestinationObservationValue" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tnziUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA11011-6' or value.code = 'LA17181-1' or value.code = 'LA65-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tn3zwNp2EeKVkrUHX3NooA" name="PatientConditionChangeAtDestinationObservationValueP" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tn4a0Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tn8FMNp2EeKVkrUHX3NooA" name="PatientConditionChangeAtDestinationObservationMoodCode" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tn8sQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Q4zL95-gEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1u74sKxCEeGLnrdLmr5TaQ" name="CallTime">
      <ownedRule xmi:id="_todCkNp2EeKVkrUHX3NooA" name="CallTimeTemplateId" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_todpoNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tollcNp2EeKVkrUHX3NooA" name="CallTimeCodeP" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tollcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tohUANp2EeKVkrUHX3NooA" name="CallTimeCode" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tohUAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69469-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_top24Np2EeKVkrUHX3NooA" name="CallTimeValue" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_toqd8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tos6MNp2EeKVkrUHX3NooA" name="CallTimeMoodCode" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tothQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4A3fEKxCEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JKerYKxDEeGLnrdLmr5TaQ" name="UnitNotifiedTime">
      <ownedRule xmi:id="_tov9gNp2EeKVkrUHX3NooA" name="UnitNotifiedTimeTemplateId" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tov9gdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.39')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_to35UNp2EeKVkrUHX3NooA" name="UnitNotifiedTimeCodeP" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_to35Udp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tozA0Np2EeKVkrUHX3NooA" name="UnitNotifiedTimeCode" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tozA0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69471-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_to8KwNp2EeKVkrUHX3NooA" name="UnitNotifiedTimeValue" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_to8x0Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_to_OENp2EeKVkrUHX3NooA" name="UnitNotifiedTimeMoodCode" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_to_OEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JKerYqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UyaX0KxDEeGLnrdLmr5TaQ" name="UnitEnRouteTime">
      <ownedRule xmi:id="_tpBqUNp2EeKVkrUHX3NooA" name="UnitEnRouteTimeTemplateId" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpCRYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.40')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tpJmINp2EeKVkrUHX3NooA" name="UnitEnRouteTimeCodeP" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpKNMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tpFUsNp2EeKVkrUHX3NooA" name="UnitEnRouteTimeCode" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpFUsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69472-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tpOeoNp2EeKVkrUHX3NooA" name="UnitEnRouteTimeValue" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpOeodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tpRh8Np2EeKVkrUHX3NooA" name="UnitEnRouteTimeMoodCode" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpRh8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UyaX0qxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iGh5QKxDEeGLnrdLmr5TaQ" name="UnitOnSceneTime">
      <ownedRule xmi:id="_tpT-MNp2EeKVkrUHX3NooA" name="UnitOnSceneTimeTemplateId" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpT-Mdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tpchENp2EeKVkrUHX3NooA" name="UnitOnSceneTimeCodeP" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpchEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tpXokNp2EeKVkrUHX3NooA" name="UnitOnSceneTimeCode" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpYPoNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69473-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tphZkNp2EeKVkrUHX3NooA" name="UnitOnSceneTimeValue" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tphZkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tpkc4Np2EeKVkrUHX3NooA" name="UnitOnSceneTimeMoodCode" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpkc4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iGh5QqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yt7JUKxDEeGLnrdLmr5TaQ" name="UnitAtPatienttTime">
      <ownedRule xmi:id="_tpm5INp2EeKVkrUHX3NooA" name="UnitAtPatienttTimeTemplateId" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpm5Idp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tpwDENp2EeKVkrUHX3NooA" name="UnitAtPatienttTimeCodeP" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tpwDEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tprKkNp2EeKVkrUHX3NooA" name="UnitAtPatienttTimeCode" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tprKkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69474-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tp0UgNp2EeKVkrUHX3NooA" name="UnitAtPatienttTimeValue" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tp07kNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tp3-4Np2EeKVkrUHX3NooA" name="UnitAtPatienttTimeMoodCode" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tp3-4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yt7JUqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6w124KxDEeGLnrdLmr5TaQ" name="UnitLeftSceneTime">
      <ownedRule xmi:id="_tp6bINp2EeKVkrUHX3NooA" name="UnitLeftSceneTimeTemplateId" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tp6bIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqCW8Np2EeKVkrUHX3NooA" name="UnitLeftSceneTimeCodeP" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqCW8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tp-FgNp2EeKVkrUHX3NooA" name="UnitLeftSceneTimeCode" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tp-Fgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69475-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqGoYNp2EeKVkrUHX3NooA" name="UnitLeftSceneTimeValue" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqGoYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqJrsNp2EeKVkrUHX3NooA" name="UnitLeftSceneTimeMoodCode" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqJrsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6w124qxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DaIA4KxEEeGLnrdLmr5TaQ" name="PatientArrivedAtDestinationTime">
      <ownedRule xmi:id="_tqMH8Np2EeKVkrUHX3NooA" name="PatientArrivedAtDestinationTimeTemplateId" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqMvANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqUq0Np2EeKVkrUHX3NooA" name="PatientArrivedAtDestinationTimeCodeP" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqUq0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqPyUNp2EeKVkrUHX3NooA" name="PatientArrivedAtDestinationTimeCode" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqPyUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69476-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqY8QNp2EeKVkrUHX3NooA" name="PatientArrivedAtDestinationTimeValue" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqY8Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqb_kNp2EeKVkrUHX3NooA" name="PatientArrivedAtDestinationTimeMoodCode" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqb_kdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DaIA4qxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KrhK4KxEEeGLnrdLmr5TaQ" name="UnitBackInServiceTime">
      <ownedRule xmi:id="_tqeb0Np2EeKVkrUHX3NooA" name="UnitBackInServiceTimeTemplateId" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqfC4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqmXoNp2EeKVkrUHX3NooA" name="UnitBackInServiceTimeCodeP" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqmXodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqiGMNp2EeKVkrUHX3NooA" name="UnitBackInServiceTimeCode" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqiGMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69477-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tqrQINp2EeKVkrUHX3NooA" name="UnitBackInServiceTimeValue" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqrQIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tquTcNp2EeKVkrUHX3NooA" name="UnitBackInServiceTimeMoodCode" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tquTcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KrhK4qxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UFgZEKxEEeGLnrdLmr5TaQ" name="DispatchNotifiedTime">
      <ownedRule xmi:id="_tqwvsNp2EeKVkrUHX3NooA" name="DispatchNotifiedTimeTemplateId" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tqxWwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.46')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tq4rgNp2EeKVkrUHX3NooA" name="DispatchNotifiedTimeCodeP" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tq5SkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tq0aENp2EeKVkrUHX3NooA" name="DispatchNotifiedTimeCode" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tq0aEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69470-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tq9kANp2EeKVkrUHX3NooA" name="DispatchNotifiedTimeValue" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tq9kAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trAnUNp2EeKVkrUHX3NooA" name="DispatchNotifiedTimeMoodCode" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trAnUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UFgZEqxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xCcE0Iy7EeGnhceUMXltng" name="AdvancedDirectiveObservation">
      <ownedRule xmi:id="_trGt8Np2EeKVkrUHX3NooA" name="AdvancedDirectiveObservationTemplateId" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trGt8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.98')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trK_YNp2EeKVkrUHX3NooA" name="AdvancedDirectiveObservationCode" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trK_Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67516-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trRtENp2EeKVkrUHX3NooA" name="AdvancedDirectiveObservationValue" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trRtEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA17319-7' or value.code = 'LA17320-5' or value.code = 'LA17321-3' or value.code = 'LA17322-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trV-gNp2EeKVkrUHX3NooA" name="AdvancedDirectiveObservationValueP" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trV-gdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trbeENp2EeKVkrUHX3NooA" name="AdvancedDirectiveObservationMoodCode" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_trbeEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xhZ4wIy7EeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3C3WwMWqEeK3RfDsHamIUQ" name="DrugAllergyProblemAct">
      <ownedRule xmi:id="_ti0UoNp2EeKVkrUHX3NooA" name="DrugAllergyProblemActParticipant1" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ti0Uodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trhksNp2EeKVkrUHX3NooA" name="AllergyProblemActTemplateId" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_triLwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.48')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4F12sMWqEeK3RfDsHamIUQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2EAisBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CFApcIzGEeGnhceUMXltng" name="EnvironmentalAllergies">
      <ownedComment xmi:id="_ZC-C4IzaEeGnhceUMXltng">
        <body>NEMSIS Trace: EHistory.07</body>
      </ownedComment>
      <ownedRule xmi:id="_tZARUNp2EeKVkrUHX3NooA" name="EnvironmentalAllergiesExistenceOfEnvironmentalAllergy" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZARUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::ExistenceOfEnvironmentalAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZDUoNp2EeKVkrUHX3NooA" name="EnvironmentalAllergiesEnvironmentalAllergy" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZDUodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::EnvironmentalAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_troSYNp2EeKVkrUHX3NooA" name="EnvironmentalAllergiesTemplateId" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_troSYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.49')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DFRMkIzGEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_tZCGgdp2EeKVkrUHX3NooA" name="getExistenceOfEnvironmentalAllergy" isQuery="true" bodyCondition="_tZCtkdp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tZCtkdp2EeKVkrUHX3NooA" name="body" constrainedElement="_tZCGgdp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZCtktp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfEnvironmentalAllergy))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfEnvironmentalAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tZCGgtp2EeKVkrUHX3NooA" type="_t_nG0IzYEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tZCtkNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tZFJ0Np2EeKVkrUHX3NooA" name="getEnvironmentalAllergies" isQuery="true" bodyCondition="_tZFJ09p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tZFJ09p2EeKVkrUHX3NooA" name="body" constrainedElement="_tZFJ0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZFJ1Np2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::EnvironmentalAllergy)).oclAsType(emspcr::EnvironmentalAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tZFJ0dp2EeKVkrUHX3NooA" type="_UleZUIzZEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tZFJ0tp2EeKVkrUHX3NooA" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KEFo8HSVEeGa4IXs2ghZEw" name="InjuryCauseCategory">
      <ownedRule xmi:id="_truZANp2EeKVkrUHX3NooA" name="InjuryCauseCategoryTemplateId" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_truZAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.50')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_trxcUNp2EeKVkrUHX3NooA" name="InjuryCauseCategoryCode" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tryDYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69543-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tr4KANp2EeKVkrUHX3NooA" name="InjuryCauseCategoryValue" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tr4KAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.3.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tr9CgNp2EeKVkrUHX3NooA" name="InjuryCauseCategoryMoodCode" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tr9pkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_N8NKAHSVEeGa4IXs2ghZEw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aS16EHSWEeGa4IXs2ghZEw" name="InjuryMechanism">
      <ownedRule xmi:id="_tsDJINp2EeKVkrUHX3NooA" name="InjuryMechanismTemplateId" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsDJIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.51')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsGzgNp2EeKVkrUHX3NooA" name="InjuryMechanismCode" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsHakNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67494-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsM6INp2EeKVkrUHX3NooA" name="InjuryMechanismValue" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsM6Idp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17335-3' or value.code = 'LA17336-1' or value.code = 'LA46-8' or value.code = 'LA7318-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsRyoNp2EeKVkrUHX3NooA" name="InjuryMechanismMoodCode" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsRyodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_dAw44HSWEeGa4IXs2ghZEw">
        <ownedComment xmi:id="_8OISsEM9EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EInjury.02</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lTHsIIcXEeGqF6qfYwLiQw" name="TraumaCenterCriteria">
      <ownedRule xmi:id="_tsX5QNp2EeKVkrUHX3NooA" name="TraumaCenterCriteriaTemplateId" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsX5Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.52')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsd_4Np2EeKVkrUHX3NooA" name="TraumaCenterCriteriaCode" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsd_4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67495-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsjfcNp2EeKVkrUHX3NooA" name="TraumaCenterCriteriaValue" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsjfcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17337-9' or value.code = 'LA17338-7' or value.code = 'LA17339-5' or value.code = 'LA17340-3' or value.code = 'LA17341-1' or value.code = 'LA17342-9' or value.code = 'LA17343-7' or value.code = 'LA17344-5' or value.code = 'LA17345-2' or value.code = 'LA17346-0' or value.code = 'LA17347-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsoX8Np2EeKVkrUHX3NooA" name="TraumaCenterCriteriaMoodCode" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsoX8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_orogEIcXEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vuraIIcZEeGqF6qfYwLiQw" name="InjuryRiskFactor">
      <ownedRule xmi:id="_tst3gNp2EeKVkrUHX3NooA" name="InjuryRiskFactorTemplateId" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tst3gdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.53')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tsxh4Np2EeKVkrUHX3NooA" name="InjuryRiskFactorCode" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tsxh4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67496-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ts3ogNp2EeKVkrUHX3NooA" name="InjuryRiskFactorValue" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ts3ogdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17348-6' or value.code = 'LA17349-4' or value.code = 'LA17350-2' or value.code = 'LA17352-8' or value.code = 'LA17353-6' or value.code = 'LA17357-7' or value.code = 'LA17360-1' or value.code = 'LA18124-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ts8hANp2EeKVkrUHX3NooA" name="InjuryRiskFactorMoodCode" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ts8hAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_x1Ee4IcZEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nvhVwIcaEeGqF6qfYwLiQw" name="VehicleImpactArea">
      <ownedRule xmi:id="_ttCnoNp2EeKVkrUHX3NooA" name="VehicleImpactAreaTemplateId" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttCnodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.54')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ttFq8Np2EeKVkrUHX3NooA" name="VehicleImpactAreaCode" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttGSANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67497-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ttLKgNp2EeKVkrUHX3NooA" name="VehicleImpactAreaValue" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttLxkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA10137-0' or value.code = 'LA10138-8' or value.code = 'LA10139-6' or value.code = 'LA10140-4' or value.code = 'LA10141-2' or value.code = 'LA13942-0' or value.code = 'LA14557-5' or value.code = 'LA14558-3' or value.code = 'LA6112-2' or value.code = 'LA6113-0' or value.code = 'LA6114-8' or value.code = 'LA6115-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ttQDANp2EeKVkrUHX3NooA" name="VehicleImpactAreaMoodCode" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttQqENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Kp4xcIccEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zMwjMIccEeGqF6qfYwLiQw" name="PatientLocationInVehicle">
      <ownedRule xmi:id="_ttWwsNp2EeKVkrUHX3NooA" name="PatientLocationInVehicleTemplateId" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttWwsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.55')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ttZ0ANp2EeKVkrUHX3NooA" name="PatientLocationInVehicleCode" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttZ0Adp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67498-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ttfTkNp2EeKVkrUHX3NooA" name="PatientLocationInVehicleValue" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ttfTkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17361-9' or value.code = 'LA17362-7' or value.code = 'LA17363-5' or value.code = 'LA17364-3' or value.code = 'LA17365-0' or value.code = 'LA17366-8' or value.code = 'LA17367-6' or value.code = 'LA17368-4' or value.code = 'LA17369-2' or value.code = 'LA17370-0' or value.code = 'LA17371-8' or value.code = 'LA17372-6' or value.code = 'LA17373-4' or value.code = 'LA17374-2' or value.code = 'LA4489-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tt3HANp2EeKVkrUHX3NooA" name="PatientLocationInVehicleMoodCode" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tt3uENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1NY-MIccEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bsVJUIcdEeGqF6qfYwLiQw" name="VehicleOccupantSafetyEquipment">
      <ownedRule xmi:id="_tt8mkdp2EeKVkrUHX3NooA" name="VehicleOccupantSafetyEquipmentTemplateId" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tt9NoNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.56')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuAQ8Np2EeKVkrUHX3NooA" name="VehicleOccupantSafetyEquipmentCode" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuAQ8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67499-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuGXkNp2EeKVkrUHX3NooA" name="VehicleOccupantSafetyEquipmentValue" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuGXkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17375-9' or value.code = 'LA17376-7' or value.code = 'LA17377-5' or value.code = 'LA17378-3' or value.code = 'LA17379-1' or value.code = 'LA17380-9' or value.code = 'LA17382-5' or value.code = 'LA46-8' or value.code = 'LA9381-0' or value.code = 'LA9391-9' or value.code = 'LA9392-7' or value.code = 'LA9393-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuLQENp2EeKVkrUHX3NooA" name="VehicleOccupantSafetyEquipmentMoodCode" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuLQEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gbauoIcdEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2lRhsIcdEeGqF6qfYwLiQw" name="AirbagDeploymentStatus">
      <ownedRule xmi:id="_tuQvoNp2EeKVkrUHX3NooA" name="AirbagDeploymentStatusTemplateId" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuQvodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.57')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuVBENp2EeKVkrUHX3NooA" name="AirbagDeploymentStatusCode" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuVBEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67500-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuagoNp2EeKVkrUHX3NooA" name="AirbagDeploymentStatusValue" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuagodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17384-1' or value.code = 'LA17385-8' or value.code = 'LA17386-6' or value.code = 'LA17387-4' or value.code = 'LA17388-2' or value.code = 'LA46-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tufZINp2EeKVkrUHX3NooA" name="AirbagDeploymentStatusMoodCode" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tufZIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4RXQEIcdEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_auKbcIceEeGqF6qfYwLiQw" name="HeightOfFall">
      <ownedRule xmi:id="_tuk4sNp2EeKVkrUHX3NooA" name="HeightOfFallTemplateId" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuk4sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.58')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuojENp2EeKVkrUHX3NooA" name="HeightOfFallCode" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuojEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67501-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tus0gNp2EeKVkrUHX3NooA" name="HeightOfFallValue" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tutbkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tuv30Np2EeKVkrUHX3NooA" name="HeightOfFallMoodCode" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tuv30dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cRczIIceEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wKL4IIceEeGqF6qfYwLiQw" name="DisasterType">
      <ownedRule xmi:id="_tu1-cNp2EeKVkrUHX3NooA" name="DisasterTypeTemplateId" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tu1-cdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.59')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tu5BwNp2EeKVkrUHX3NooA" name="DisasterTypeCode" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tu5Bwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69463-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tu-hUNp2EeKVkrUHX3NooA" name="DisasterTypeValue" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tu-hUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17594-5' or value.code = 'LA18089-5' or value.code = 'LA18090-3' or value.code = 'LA18091-1' or value.code = 'LA18092-9' or value.code = 'LA18093-7' or value.code = 'LA18094-5' or value.code = 'LA18095-2' or value.code = 'LA18096-0' or value.code = 'LA18097-8' or value.code = 'LA18098-6' or value.code = 'LA18099-4' or value.code = 'LA18100-0' or value.code = 'LA18101-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvDZ0Np2EeKVkrUHX3NooA" name="DisasterTypeMoodCode" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvDZ0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xljC4IceEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_W_uRYIzdEeGnhceUMXltng" name="ExistenceOfHistoryOfCondition">
      <ownedRule xmi:id="_tvL8sNp2EeKVkrUHX3NooA" name="ExistenceOfHistoryOfConditionTemplateId" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvMjwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.60')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvPnENp2EeKVkrUHX3NooA" name="ExistenceOfHistoryOfConditionCode" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvPnEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67793-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvT4gNp2EeKVkrUHX3NooA" name="ExistenceOfHistoryOfConditionValue" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvT4gdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvWUwNp2EeKVkrUHX3NooA" name="ExistenceOfHistoryOfConditionMoodCode" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvW70Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XjAkoIzdEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5XgZ4IzdEeGnhceUMXltng" name="HistoryOfCondition">
      <ownedRule xmi:id="_tvZYENp2EeKVkrUHX3NooA" name="HistoryOfConditionTemplateId" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvZYEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.61')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvhT4Np2EeKVkrUHX3NooA" name="HistoryOfConditionCodeP" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvhT4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvdCcNp2EeKVkrUHX3NooA" name="HistoryOfConditionCode" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvdCcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '68487-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvnagNp2EeKVkrUHX3NooA" name="HistoryOfConditionValue" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvnagdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvrr8Np2EeKVkrUHX3NooA" name="HistoryOfConditionValueP" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvrr8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tvwkcNp2EeKVkrUHX3NooA" name="HistoryOfConditionMoodCode" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tvwkcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5xr0cIzdEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HLO9kIzgEeGnhceUMXltng" name="HistoryOfProceduresOrganizer">
      <ownedRule xmi:id="_tf6KkNp2EeKVkrUHX3NooA" name="HistoryOfProceduresOrganizerExistenceOfHistoryOfProcedureComponent" constrainedElement="_HLO9kIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tf6Kkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tg6QINp2EeKVkrUHX3NooA" name="HistoryOfProceduresOrganizerHistoryOfProceduresComponent" constrainedElement="_HLO9kIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tg6QIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tv2EANp2EeKVkrUHX3NooA" name="HistoryOfProceduresOrganizerTemplateId" constrainedElement="_HLO9kIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tv2rENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.62')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hx2RoIzgEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KEZzkKg-EeG79fAvHk6H4g" name="Complaint">
      <ownedRule xmi:id="_tfRRYNp2EeKVkrUHX3NooA" name="ComplaintComplaintDurationRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfRRYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tfTtoNp2EeKVkrUHX3NooA" name="ComplaintComplaintTypeRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfTtodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tfYmINp2EeKVkrUHX3NooA" name="ComplaintComplaintOrganSystemRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tfYmIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twBqMNp2EeKVkrUHX3NooA" name="ComplaintTemplateId" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twCRQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.63')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twKNENp2EeKVkrUHX3NooA" name="ComplaintCodeP" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twK0INp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twF7oNp2EeKVkrUHX3NooA" name="ComplaintCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twF7odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '10154-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twOegNp2EeKVkrUHX3NooA" name="ComplaintValue" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twOegdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twSv8Np2EeKVkrUHX3NooA" name="ComplaintTargetSiteCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twSv8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12703-7' or value.code = 'LA12705-2' or value.code = 'LA12706-0' or value.code = 'LA18111-7' or value.code = 'LA18112-5' or value.code = 'LA18113-3' or value.code = 'LA18114-1' or value.code = 'LA18115-8' or value.code = 'LA18116-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twXBYNp2EeKVkrUHX3NooA" name="ComplaintTargetSiteCodeP" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twXBYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twarwNp2EeKVkrUHX3NooA" name="ComplaintEffectiveTime" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twarwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twdvENp2EeKVkrUHX3NooA" name="ComplaintMoodCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twdvEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ke-PsKg-EeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7nP0MKhCEeG79fAvHk6H4g" name="PossibleInjury">
      <ownedComment xmi:id="_FHsPsKhDEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.02</body>
      </ownedComment>
      <ownedRule xmi:id="_twkcwNp2EeKVkrUHX3NooA" name="PossibleInjuryTemplateId" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twkcwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.64')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tws_oNp2EeKVkrUHX3NooA" name="PossibleInjuryCodeP" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tws_odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twouMNp2EeKVkrUHX3NooA" name="PossibleInjuryCode" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twouMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69467-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twwqANp2EeKVkrUHX3NooA" name="PossibleInjuryValue" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twxRENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_twztUNp2EeKVkrUHX3NooA" name="PossibleInjuryMoodCode" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_twztUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_72GvkKhCEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0C-8EKhDEeG79fAvHk6H4g" name="ProviderPrimaryImpression">
      <ownedComment xmi:id="_FTlhMKhEEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.11</body>
      </ownedComment>
      <ownedRule xmi:id="_tw5z8Np2EeKVkrUHX3NooA" name="ProviderPrimaryImpressionTemplateId" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tw5z8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.65')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txCW0Np2EeKVkrUHX3NooA" name="ProviderPrimaryImpressionCodeP" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txCW0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tw9eUNp2EeKVkrUHX3NooA" name="ProviderPrimaryImpressionCode" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tw-FYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67492-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txHPUNp2EeKVkrUHX3NooA" name="ProviderPrimaryImpressionValue" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txH2YNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txLgwNp2EeKVkrUHX3NooA" name="ProviderPrimaryImpressionValueP" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txMH0Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txPyMNp2EeKVkrUHX3NooA" name="ProviderPrimaryImpressionMoodCode" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txQZQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0V7GMKhDEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KOxo0KhEEeG79fAvHk6H4g" name="PrimarySymptom">
      <ownedComment xmi:id="_TtCTAKhEEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.09</body>
      </ownedComment>
      <ownedRule xmi:id="_txVRwtp2EeKVkrUHX3NooA" name="PrimarySymptomTemplateId" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txV40Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.66')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txebsNp2EeKVkrUHX3NooA" name="PrimarySymptomCodeP" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txebsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txZjMNp2EeKVkrUHX3NooA" name="PrimarySymptomCode" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txZjMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67774-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txj7QNp2EeKVkrUHX3NooA" name="PrimarySymptomValue" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txj7Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txozwNp2EeKVkrUHX3NooA" name="PrimarySymptomValueP" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txozwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_txtFMNp2EeKVkrUHX3NooA" name="PrimarySymptomMoodCode" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txtFMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KfRi8KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g5iJgKhEEeG79fAvHk6H4g" name="OtherSymptoms">
      <ownedComment xmi:id="_s_xikKhEEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.10</body>
      </ownedComment>
      <ownedRule xmi:id="_txzL0dp2EeKVkrUHX3NooA" name="OtherSymptomsTemplateId" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_txzy4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.67')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tx8VwNp2EeKVkrUHX3NooA" name="OtherSymptomsCodeP" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tx8Vwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tx4EUNp2EeKVkrUHX3NooA" name="OtherSymptomsCode" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tx4EUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67776-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyBOQNp2EeKVkrUHX3NooA" name="OtherSymptomsValue" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyBOQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyGGwNp2EeKVkrUHX3NooA" name="OtherSymptomsValueP" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyGGwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyJxINp2EeKVkrUHX3NooA" name="OtherSymptomsMoodCode" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyKYMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hM9b0KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0mPksKhEEeG79fAvHk6H4g" name="ProviderSecondaryImpressions">
      <ownedComment xmi:id="_xi9kcKhFEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.12</body>
      </ownedComment>
      <ownedRule xmi:id="_tyPQsdp2EeKVkrUHX3NooA" name="ProviderSecondaryImpressionsTemplateId" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyP3wNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.68')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyXzkNp2EeKVkrUHX3NooA" name="ProviderSecondaryImpressionsCodeP" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyYaoNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyTiINp2EeKVkrUHX3NooA" name="ProviderSecondaryImpressionsCode" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyTiIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69542-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyd6MNp2EeKVkrUHX3NooA" name="ProviderSecondaryImpressionsValue" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyd6Mdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyiysNp2EeKVkrUHX3NooA" name="ProviderSecondaryImpressionsValueP" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyiysdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tynEINp2EeKVkrUHX3NooA" name="ProviderSecondaryImpressionsMoodCode" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tynrMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_06tY0KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NZgqAKhFEeG79fAvHk6H4g" name="InitialPatientAcuity">
      <ownedRule xmi:id="_tytx0Np2EeKVkrUHX3NooA" name="InitialPatientAcuityTemplateId" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tytx0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.69')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ty1toNp2EeKVkrUHX3NooA" name="InitialPatientAcuityCodeP" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ty2UsNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tyxcMNp2EeKVkrUHX3NooA" name="InitialPatientAcuityCode" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tyxcMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67493-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ty70QNp2EeKVkrUHX3NooA" name="InitialPatientAcuityValue" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ty70Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17694-3' or value.code = 'LA17695-0' or value.code = 'LA17696-8' or value.code = 'LA17697-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzAFsNp2EeKVkrUHX3NooA" name="InitialPatientAcuityValueP" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzAFsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzEXINp2EeKVkrUHX3NooA" name="InitialPatientAcuityMoodCode" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzEXIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NnQyIKhFEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Mr964IzjEeGnhceUMXltng" name="ExistenceOfDrugUseIndication">
      <ownedRule xmi:id="_tzNhENp2EeKVkrUHX3NooA" name="ExistenceOfDrugUseIndicationTemplateId" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzNhEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.70')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzWD8Np2EeKVkrUHX3NooA" name="ExistenceOfDrugUseIndicationCodeP" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzWD8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzRLcNp2EeKVkrUHX3NooA" name="ExistenceOfDrugUseIndicationCode" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzRLcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69757-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzbjgNp2EeKVkrUHX3NooA" name="ExistenceOfDrugUseIndicationValue" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzbjgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzem0Np2EeKVkrUHX3NooA" name="ExistenceOfDrugUseIndicationMoodCode" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzem0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NOQvoIzjEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJHzkIzjEeGnhceUMXltng" name="DrugUseIndication">
      <ownedRule xmi:id="_tzhDENp2EeKVkrUHX3NooA" name="DrugUseIndicationTemplateId" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzhDEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.71')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzktcNp2EeKVkrUHX3NooA" name="DrugUseIndicationCode" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzktcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67669-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzq0ENp2EeKVkrUHX3NooA" name="DrugUseIndicationValue" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzq0Edp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17323-9' or value.code = 'LA17324-7' or value.code = 'LA17325-4' or value.code = 'LA17326-2' or value.code = 'LA17327-0' or value.code = 'LA17328-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tzvskNp2EeKVkrUHX3NooA" name="DrugUseIndicationMoodCode" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tzvskdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oiTIkIzjEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5JQlAJovEeG_FLcaRgAa7g" name="MedicationAdministered">
      <ownedRule xmi:id="_tarsUNp2EeKVkrUHX3NooA" name="MedicationAdministeredMedicationNotAdministeredEntryRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tarsUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tav9wNp2EeKVkrUHX3NooA" name="MedicationAdministeredMedicationConsumable" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tav9wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ta6V0Np2EeKVkrUHX3NooA" name="MedicationAdministeredMedicationAdministeredResponseRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ta6V0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ta8LANp2EeKVkrUHX3NooA" name="MedicationAdministeredMedicationComplicationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ta8LAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ta-AMNp2EeKVkrUHX3NooA" name="MedicationAdministeredMedicationPriorAdministrationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ta-nQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbEG0Np2EeKVkrUHX3NooA" name="MedicationAdministeredMedicationPerformerParticipation" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbEG0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbF8ANp2EeKVkrUHX3NooA" name="MedicationAdministeredMedicationAuthorizationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbF8Adp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tg-hkNp2EeKVkrUHX3NooA" name="MedicationAdministeredMedicationAdministrationDeviceParticipant" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tg-hkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tz2aQdp2EeKVkrUHX3NooA" name="MedicationActivityTemplateId" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tz3BUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.72')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tz750Np2EeKVkrUHX3NooA" name="MedicationAdministeredClassCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tz8g4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tz-9INp2EeKVkrUHX3NooA" name="MedicationAdministeredDoseQuantity" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tz_kMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t0CngNp2EeKVkrUHX3NooA" name="MedicationAdministeredEffectiveTime" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t0Cngdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (self.effectiveTime->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t0Fq0Np2EeKVkrUHX3NooA" name="MedicationAdministeredNegationInd" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t0Fq0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t0O0wNp2EeKVkrUHX3NooA" name="MedicationAdministeredRouteCodeP" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t0O0wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t0J8QNp2EeKVkrUHX3NooA" name="MedicationAdministeredRouteCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t0J8Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.26.1.1.1' and (value.code = 'C38208' or value.code = 'C38246' or value.code = 'C38216' or value.code = 'C38222' or value.code = 'C38284' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38253' or value.code = 'C38276' or value.code = 'C38285' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38290' or value.code = 'C38192' or value.code = 'C38295' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38304' or value.code = 'C38308' or value.code = 'C38305' or value.code = 'C38271' or value.code = 'NewCode' or value.code = 'C38250'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t0Zz4Np2EeKVkrUHX3NooA" name="MedicationAdministeredApproachSiteCodeP" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t0Zz4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t0U7YNp2EeKVkrUHX3NooA" name="MedicationAdministeredApproachSiteCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t0U7Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.code = '15562006' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6L6U0JovEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_46UUAJ9nEeGw9ZRnaFfEZQ" name="EmergencyMedicalDispatchObservation">
      <ownedRule xmi:id="_t1fZANp2EeKVkrUHX3NooA" name="EmergencyMedicalDispatchObservationTemplateId" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t1fZAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.73')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t1nU0Np2EeKVkrUHX3NooA" name="EmergencyMedicalDispatchObservationCodeP" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t1nU0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t1icUNp2EeKVkrUHX3NooA" name="EmergencyMedicalDispatchObservationCode" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t1jDYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67488-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t1s0YNp2EeKVkrUHX3NooA" name="EmergencyMedicalDispatchObservationValue" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t1s0Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17151-4' or value.code = 'LA17152-2' or value.code = 'LA17153-0' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t1xs4Np2EeKVkrUHX3NooA" name="EmergencyMedicalDispatchObservationValueP" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t1xs4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t12lYNp2EeKVkrUHX3NooA" name="EmergencyMedicalDispatchObservationMoodCode" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t12lYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5cQjcJ9nEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__LltsJ97EeGw9ZRnaFfEZQ" name="ComplaintReportedByDispatch">
      <ownedRule xmi:id="_t18E8Np2EeKVkrUHX3NooA" name="ComplaintReportedByDispatchTemplateId" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t18E8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.74')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2En0Np2EeKVkrUHX3NooA" name="ComplaintReportedByDispatchCodeP" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2En0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t1_vUNp2EeKVkrUHX3NooA" name="ComplaintReportedByDispatchCode" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2AWYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67570-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2JgUNp2EeKVkrUHX3NooA" name="ComplaintReportedByDispatchValue" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2JgUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15468-4' or value.code = 'LA15903-0' or value.code = 'LA17117-5' or value.code = 'LA17118-3' or value.code = 'LA17119-1' or value.code = 'LA17120-9' or value.code = 'LA17121-7' or value.code = 'LA17122-5' or value.code = 'LA17123-3' or value.code = 'LA17124-1' or value.code = 'LA17125-8' or value.code = 'LA17126-6' or value.code = 'LA17127-4' or value.code = 'LA17128-2' or value.code = 'LA17129-0' or value.code = 'LA17131-6' or value.code = 'LA17132-4' or value.code = 'LA17133-2' or value.code = 'LA17134-0' or value.code = 'LA17135-7' or value.code = 'LA17136-5' or value.code = 'LA17137-3' or value.code = 'LA17138-1' or value.code = 'LA17140-7' or value.code = 'LA17141-5' or value.code = 'LA17142-3' or value.code = 'LA17143-1' or value.code = 'LA17144-9' or value.code = 'LA17145-6' or value.code = 'LA17146-4' or value.code = 'LA17147-2' or value.code = 'LA17148-0' or value.code = 'LA17149-8' or value.code = 'LA17150-6' or value.code = 'LA18093-7' or value.code = 'LA18209-9' or value.code = 'LA18210-7' or value.code = 'LA18211-5' or value.code = 'LA9553-4' or value.code = 'LA9555-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2OY0Np2EeKVkrUHX3NooA" name="ComplaintReportedByDispatchValueP" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2OY0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2TRUNp2EeKVkrUHX3NooA" name="ComplaintReportedByDispatchMoodCode" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2TRUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_BD2P0J98EeGw9ZRnaFfEZQ">
        <ownedComment xmi:id="_efgjIEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDispatch.01</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sUm-oIcnEeGqF6qfYwLiQw" name="CurrentlyOnMedication">
      <ownedRule xmi:id="_t2ZX8Np2EeKVkrUHX3NooA" name="CurrentlyOnMedicationTemplateId" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2ZX8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.75')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2cbQNp2EeKVkrUHX3NooA" name="CurrentlyOnMedicationCode" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2cbQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67791-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2hTwNp2EeKVkrUHX3NooA" name="CurrentlyOnMedicationValue" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2hTwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2kXENp2EeKVkrUHX3NooA" name="CurrentlyOnMedicationMoodCode" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2k-INp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wcI0sIcnEeGqF6qfYwLiQw">
        <ownedComment xmi:id="_Hz8KIEM8EeKBoM5tGvrHVQ">
          <body>If EHistory.12 has the value &quot;None Reported,&quot; the value is &quot;False&quot;&#xD;
If EHistory.12 has the value &quot;Refused&quot; or &quot;Unable to Complete,&quot; the value is &quot;NI&quot;; the&#xD;
original value may be recorded in Observation.text.</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RZqlsIcoEeGqF6qfYwLiQw" name="PatientOnAnticoagulants">
      <ownedComment xmi:id="_hDxHEIcoEeGqF6qfYwLiQw">
        <body>NEMSIS Trace: EHistory.12 ('no anticoagulants' value)</body>
      </ownedComment>
      <ownedRule xmi:id="_t2qdsNp2EeKVkrUHX3NooA" name="PatientOnAnticoagulantsTemplateId" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2qdsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.76')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2thANp2EeKVkrUHX3NooA" name="PatientOnAnticoagulantsCode" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2thAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69749-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t2xycNp2EeKVkrUHX3NooA" name="PatientOnAnticoagulantsValue" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t2xycdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t201wNp2EeKVkrUHX3NooA" name="PatientOnAnticoagulantsMoodCode" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t201wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TXhZgIcoEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mwn8MIcoEeGqF6qfYwLiQw" name="CurrentMedication">
      <ownedRule xmi:id="_tgmHENp2EeKVkrUHX3NooA" name="CurrentMedicationCurrentMedicationConsumable" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgmHEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t268Ydp2EeKVkrUHX3NooA" name="MedicationActivityTemplateId" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t27jcNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.77')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t29YoNp2EeKVkrUHX3NooA" name="CurrentMedicationDoseQuantity" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t29_sNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3GikNp2EeKVkrUHX3NooA" name="CurrentMedicationRouteCodeP" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3Gikdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3BqENp2EeKVkrUHX3NooA" name="CurrentMedicationRouteCode" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3BqEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.26.1.1.1' and (value.code = 'C38208' or value.code = 'C38246' or value.code = 'C38216' or value.code = 'C38222' or value.code = 'C38284' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38253' or value.code = 'C38276' or value.code = 'C38285' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38290' or value.code = 'C38192' or value.code = 'C38295' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38304' or value.code = 'C38308' or value.code = 'C38305' or value.code = 'C38271' or value.code = 'NewCode' or value.code = 'C38250'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3LbENp2EeKVkrUHX3NooA" name="CurrentMedicationNegationInd" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3LbEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3OeYNp2EeKVkrUHX3NooA" name="CurrentMedicationNullFlavor" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3OeYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('nullFlavor')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pv80EIcoEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zbYvIJoiEeG_FLcaRgAa7g" name="PhysicalAssessmentOrganizer">
      <ownedRule xmi:id="_th2rUNp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent1" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_th2rUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_th9ZANp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent2" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_th9ZAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tiBDYNp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent3" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tiBqcNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::SkinAssessment))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tiGi8Np2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent4" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tiGi8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tiKNUNp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent5" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tiK0YNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tiOewNp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent6" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tiOewdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tiSwMNp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent7" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tiSwMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tiWakNp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent8" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tiWakdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tibTENp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent9" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tibTEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tifkgNp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent10" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tifkgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tijO4Np2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent11" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tijO4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tingUNp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent12" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tingUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tirKsNp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent13" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tirKsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tivcINp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerComponent14" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tivcIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3fkINp2EeKVkrUHX3NooA" name="PhysicalAssessmentOrganizerTemplateId" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3gLMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.78')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0BK8wJoiEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_tiC4kNp2EeKVkrUHX3NooA" name="getComponent3" isQuery="true" bodyCondition="_tiDfodp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tiDfodp2EeKVkrUHX3NooA" name="body" constrainedElement="_tiC4kNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tiDfotp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::SkinAssessment))->asSequence()->any(true).oclAsType(emspcr::SkinAssessment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tiC4kdp2EeKVkrUHX3NooA" type="_bFfQYJokEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tiDfoNp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sW8QcJosEeG_FLcaRgAa7g" name="PatientPregnancy">
      <ownedRule xmi:id="_t3wC0Np2EeKVkrUHX3NooA" name="PatientPregnancyTemplateId" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3wC0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.79')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t33-oNp2EeKVkrUHX3NooA" name="PatientPregnancyCodeP" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t33-odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3ztMNp2EeKVkrUHX3NooA" name="PatientPregnancyCode" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3ztMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67471-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t3-FQNp2EeKVkrUHX3NooA" name="PatientPregnancyValue" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t3-FQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17329-6' or value.code = 'LA17330-4' or value.code = 'LA17331-2' or value.code = 'LA17332-0' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4C9wNp2EeKVkrUHX3NooA" name="PatientPregnancyValueP" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4C9wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4H2QNp2EeKVkrUHX3NooA" name="PatientPregnancyMoodCode" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4H2Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_42mPEJosEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S1I0sJotEeG_FLcaRgAa7g" name="LastOralIntake">
      <ownedRule xmi:id="_t4Oj8Np2EeKVkrUHX3NooA" name="LastOralIntakeTemplateId" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4Oj8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.80')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4XG0Np2EeKVkrUHX3NooA" name="LastOralIntakeCodeP" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4XG0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4SOUNp2EeKVkrUHX3NooA" name="LastOralIntakeCode" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4SOUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67517-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4axMNp2EeKVkrUHX3NooA" name="LastOralIntakeValue" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4bYQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4d0gNp2EeKVkrUHX3NooA" name="LastOralIntakeMoodCode" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4ebkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TS5HsJotEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rhjrIJotEeG_FLcaRgAa7g" name="PatientAge">
      <ownedRule xmi:id="_t4j7INp2EeKVkrUHX3NooA" name="PatientAgeTemplateId" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4j7Idp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.81')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4r28Np2EeKVkrUHX3NooA" name="PatientAgeCodeP" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4seANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4nlgNp2EeKVkrUHX3NooA" name="PatientAgeCode" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4nlgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '30525-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4wIYNp2EeKVkrUHX3NooA" name="PatientAgeValue" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4wIYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t4zLsNp2EeKVkrUHX3NooA" name="PatientAgeMoodCode" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t4zLsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_r9YrgJotEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HuCH8JouEeG_FLcaRgAa7g" name="ThrombolyticContraindications">
      <ownedRule xmi:id="_t44rQNp2EeKVkrUHX3NooA" name="ThrombolyticContraindicationsTemplateId" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t44rQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.82')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5B1MNp2EeKVkrUHX3NooA" name="ThrombolyticContraindicationsCodeP" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5B1Mdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t488sNp2EeKVkrUHX3NooA" name="ThrombolyticContraindicationsCode" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t488sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67523-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5GtsNp2EeKVkrUHX3NooA" name="ThrombolyticContraindicationsValue" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5HUwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17114-2' or value.code = 'LA17115-9' or value.code = 'LA17116-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5MNQNp2EeKVkrUHX3NooA" name="ThrombolyticContraindicationsMoodCode" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5MNQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_IFY4AJouEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qlUP4JouEeG_FLcaRgAa7g" name="BarriersToPatientCare">
      <ownedRule xmi:id="_t5ST4Np2EeKVkrUHX3NooA" name="BarriersToPatientCareTemplateId" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5ST4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.83')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5a2wNp2EeKVkrUHX3NooA" name="BarriersToPatientCareCodeP" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5a2wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5V-QNp2EeKVkrUHX3NooA" name="BarriersToPatientCareCode" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5V-Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67523-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5gWUNp2EeKVkrUHX3NooA" name="BarriersToPatientCareValue" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5gWUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17306-4' or value.code = 'LA17307-2' or value.code = 'LA17308-0' or value.code = 'LA17309-8' or value.code = 'LA17310-6' or value.code = 'LA17311-4' or value.code = 'LA17312-2' or value.code = 'LA17313-0' or value.code = 'LA17314-8' or value.code = 'LA17315-5' or value.code = 'LA17316-3' or value.code = 'LA17317-1' or value.code = 'LA17318-9' or value.code = 'LA17711-5' or value.code = 'LA6301-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5knwNp2EeKVkrUHX3NooA" name="BarriersToPatientCareValueP" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5knwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5pgQNp2EeKVkrUHX3NooA" name="BarriersToPatientCareMoodCode" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5qHUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_q6vGQJouEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ox86UKK4EeGOxth0BgV-QA" name="FirstUnitIndicator">
      <ownedRule xmi:id="_t5yqMNp2EeKVkrUHX3NooA" name="FirstUnitIndicatorTemplateId" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5yqMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.84')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t57NENp2EeKVkrUHX3NooA" name="FirstUnitIndicatorCodeP" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t57NEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t52UkNp2EeKVkrUHX3NooA" name="FirstUnitIndicatorCode" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t527oNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67481-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t5-3cNp2EeKVkrUHX3NooA" name="FirstUnitIndicatorValue" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t5_egNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6B6wNp2EeKVkrUHX3NooA" name="FirstUnitIndicatorMoodCode" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6B6wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PFao4KK4EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JNrkAKK5EeGOxth0BgV-QA" name="FirstUnitOnScene">
      <ownedRule xmi:id="_t6EXANp2EeKVkrUHX3NooA" name="FirstUnitOnSceneTemplateId" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6EXAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.85')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6MS0Np2EeKVkrUHX3NooA" name="FirstUnitOnSceneCodeP" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6M54Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6IBYNp2EeKVkrUHX3NooA" name="FirstUnitOnSceneCode" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6IBYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67481-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6RLUNp2EeKVkrUHX3NooA" name="FirstUnitOnSceneValue" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6RLUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6UOoNp2EeKVkrUHX3NooA" name="FirstUnitOnSceneMoodCode" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6UOodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Jj_yQKK5EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wPLCkKK5EeGOxth0BgV-QA" name="ScenePatientCount">
      <ownedRule xmi:id="_t6cxgNp2EeKVkrUHX3NooA" name="ScenePatientCountTemplateId" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6cxgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.86')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6ktUNp2EeKVkrUHX3NooA" name="ScenePatientCountCodeP" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6ktUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6f00Np2EeKVkrUHX3NooA" name="ScenePatientCountCode" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6gb4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67489-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6o-wNp2EeKVkrUHX3NooA" name="ScenePatientCountValue" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6o-wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6sCENp2EeKVkrUHX3NooA" name="ScenePatientCountMoodCode" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6sCEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wlAvsKK5EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E-SEAKK8EeGOxth0BgV-QA" name="MassCasualtyIndicator">
      <ownedRule xmi:id="_t6ueUNp2EeKVkrUHX3NooA" name="MassCasualtyIndicatorTemplateId" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6ueUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.87')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t62aINp2EeKVkrUHX3NooA" name="MassCasualtyIndicatorCodeP" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t62aIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t6yIsNp2EeKVkrUHX3NooA" name="MassCasualtyIndicatorCode" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t6yIsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67490-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t66EgNp2EeKVkrUHX3NooA" name="MassCasualtyIndicatorValue" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t66rkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t69u4Np2EeKVkrUHX3NooA" name="MassCasualtyIndicatorMoodCode" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t69u4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FW5YUKK8EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ayUKMMk3EeK2gbjCtOEivw" name="LocationTypeObservation">
      <ownedRule xmi:id="_t7DOcNp2EeKVkrUHX3NooA" name="LocationTypeObservationTemplateId" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7DOcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.88')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t7G40Np2EeKVkrUHX3NooA" name="LocationTypeObservationCode" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7G40dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'eScene.09')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bblJoMk3EeK2gbjCtOEivw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_p4XEAJ-kEeGorI3CPDW2ww" name="AdverseEventIndicator">
      <ownedRule xmi:id="_t7Ylotp2EeKVkrUHX3NooA" name="AdverseEventIndicatorTemplateId" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7ZMsNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.89')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t7hIgNp2EeKVkrUHX3NooA" name="AdverseEventIndicatorCodeP" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7hvkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t7c3ENp2EeKVkrUHX3NooA" name="AdverseEventIndicatorCode" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7c3Edp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67554-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t7lZ8Np2EeKVkrUHX3NooA" name="AdverseEventIndicatorValue" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7lZ8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t7odQNp2EeKVkrUHX3NooA" name="AdverseEventIndicatorMoodCode" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7odQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_q4E0kJ-kEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gU4tMJ-lEeGorI3CPDW2ww" name="AdverseEventTypeObservation">
      <ownedRule xmi:id="_t7t80Np2EeKVkrUHX3NooA" name="AdverseEventTypeObservationTemplateId" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7uj4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.90')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t714oNp2EeKVkrUHX3NooA" name="AdverseEventTypeObservationCodeP" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t714odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t7xnMNp2EeKVkrUHX3NooA" name="AdverseEventTypeObservationCode" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t7xnMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67555-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t78mUNp2EeKVkrUHX3NooA" name="AdverseEventTypeObservationValue" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t78mUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA17402-1' or value.code = 'LA17403-9' or value.code = 'LA17404-7' or value.code = 'LA17405-4' or value.code = 'LA17406-2' or value.code = 'LA17407-0' or value.code = 'LA17408-8' or value.code = 'LA17409-6' or value.code = 'LA17410-4' or value.code = 'LA17411-2' or value.code = 'LA17412-0' or value.code = 'LA17413-8' or value.code = 'LA17414-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8A3wNp2EeKVkrUHX3NooA" name="AdverseEventTypeObservationValueP" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8A3wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8FJMNp2EeKVkrUHX3NooA" name="AdverseEventTypeObservationMoodCode" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8FJMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gwN-UJ-lEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rNkl4GleEeG4boS-IbG8Zw" name="BillingCondition">
      <ownedRule xmi:id="_t8KowNp2EeKVkrUHX3NooA" name="BillingConditionTemplateId" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8LP0Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.91')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8Z5UNp2EeKVkrUHX3NooA" name="BillingConditionCodeP" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8Z5Udp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8QIUNp2EeKVkrUHX3NooA" name="BillingConditionCode" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8QIUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67556-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8fY4Np2EeKVkrUHX3NooA" name="BillingConditionValue" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8f_8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8kRYNp2EeKVkrUHX3NooA" name="BillingConditionValueP" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8kRYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8n7wNp2EeKVkrUHX3NooA" name="BillingConditionMoodCode" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8oi0Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rNkl4WleEeG4boS-IbG8Zw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_To2-YGleEeG4boS-IbG8Zw" name="LevelOfServiceObservation">
      <ownedRule xmi:id="_t8uCYNp2EeKVkrUHX3NooA" name="LevelOfServiceObservationTemplateId" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8upcNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.92')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t82lQNp2EeKVkrUHX3NooA" name="LevelOfServiceObservationCodeP" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t82lQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t8xswNp2EeKVkrUHX3NooA" name="LevelOfServiceObservationCode" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t8yT0Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69464-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t88E0Np2EeKVkrUHX3NooA" name="LevelOfServiceObservationValue" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t88E0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18102-6' or value.code = 'LA18103-4' or value.code = 'LA18104-2' or value.code = 'LA18105-9' or value.code = 'LA18106-7' or value.code = 'LA18107-5' or value.code = 'LA18108-3' or value.code = 'LA18109-1' or value.code = 'LA18110-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9AWQNp2EeKVkrUHX3NooA" name="LevelOfServiceObservationValueP" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9A9UNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9FOwNp2EeKVkrUHX3NooA" name="LevelOfServiceObservationMoodCode" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9FOwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W97cwGleEeG4boS-IbG8Zw">
        <ownedComment xmi:id="_ifpNMEM7EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EPayment.50</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rDpggp-mEeGorI3CPDW2ww" name="ProtocolObservation">
      <ownedRule xmi:id="_t9KuUNp2EeKVkrUHX3NooA" name="ProtocolObservationTemplateId" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9KuUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.93')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9TRMNp2EeKVkrUHX3NooA" name="ProtocolObservationCodeP" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9TRMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9OYsNp2EeKVkrUHX3NooA" name="ProtocolObservationCode" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9OYsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67537-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9Z-4Np2EeKVkrUHX3NooA" name="ProtocolObservationValue" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9Z-4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17398-1' or value.code = 'LA17491-4' or value.code = 'LA17492-2' or value.code = 'LA17494-8' or value.code = 'LA17495-5' or value.code = 'LA17496-3' or value.code = 'LA17497-1' or value.code = 'LA17498-9' or value.code = 'LA17499-7' or value.code = 'LA17500-2' or value.code = 'LA17501-0' or value.code = 'LA17502-8' or value.code = 'LA17503-6' or value.code = 'LA17504-4' or value.code = 'LA17505-1' or value.code = 'LA17506-9' or value.code = 'LA17507-7' or value.code = 'LA17508-5' or value.code = 'LA17509-3' or value.code = 'LA17510-1' or value.code = 'LA17511-9' or value.code = 'LA17512-7' or value.code = 'LA17513-5' or value.code = 'LA17514-3' or value.code = 'LA17515-0' or value.code = 'LA17516-8' or value.code = 'LA17517-6' or value.code = 'LA17518-4' or value.code = 'LA17519-2' or value.code = 'LA17520-0' or value.code = 'LA17521-8' or value.code = 'LA17522-6' or value.code = 'LA17523-4' or value.code = 'LA17524-2' or value.code = 'LA17525-9' or value.code = 'LA17526-7' or value.code = 'LA17527-5' or value.code = 'LA17528-3' or value.code = 'LA17529-1' or value.code = 'LA17530-9' or value.code = 'LA17531-7' or value.code = 'LA17532-5' or value.code = 'LA17533-3' or value.code = 'LA17534-1' or value.code = 'LA17535-8' or value.code = 'LA17536-6' or value.code = 'LA17537-4' or value.code = 'LA17538-2' or value.code = 'LA17539-0' or value.code = 'LA17540-8' or value.code = 'LA17541-6' or value.code = 'LA17542-4' or value.code = 'LA17543-2' or value.code = 'LA17544-0' or value.code = 'LA17545-7' or value.code = 'LA17546-5' or value.code = 'LA17547-3' or value.code = 'LA17548-1' or value.code = 'LA17549-9' or value.code = 'LA17550-7' or value.code = 'LA17551-5' or value.code = 'LA17552-3' or value.code = 'LA17553-1' or value.code = 'LA17554-9' or value.code = 'LA17555-6' or value.code = 'LA17556-4' or value.code = 'LA17557-2' or value.code = 'LA17558-0' or value.code = 'LA17559-8' or value.code = 'LA17560-6' or value.code = 'LA17561-4' or value.code = 'LA17562-2' or value.code = 'LA17563-0' or value.code = 'LA17564-8' or value.code = 'LA17565-5' or value.code = 'LA17566-3' or value.code = 'LA17567-1' or value.code = 'LA17568-9' or value.code = 'LA17569-7' or value.code = 'LA17570-5' or value.code = 'LA18269-3' or value.code = 'LA46-8' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9e3YNp2EeKVkrUHX3NooA" name="ProtocolObservationValueP" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9e3Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9jI0Np2EeKVkrUHX3NooA" name="ProtocolObservationMoodCode" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9jI0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rDpghJ-mEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_n-zaBZ-nEeGorI3CPDW2ww" name="CandidatePatientRegistryType">
      <ownedRule xmi:id="_t9ooYtp2EeKVkrUHX3NooA" name="CandidatePatientRegistryTypeTemplateId" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9pPcNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.94')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9xLQNp2EeKVkrUHX3NooA" name="CandidatePatientRegistryTypeCodeP" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9xLQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9s50Np2EeKVkrUHX3NooA" name="CandidatePatientRegistryTypeCode" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9s50dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67553-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t92q0Np2EeKVkrUHX3NooA" name="CandidatePatientRegistryTypeValue" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t93R4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17057-3' or value.code = 'LA17058-1' or value.code = 'LA17059-9' or value.code = 'LA17398-1' or value.code = 'LA17399-9' or value.code = 'LA17400-5' or value.code = 'LA17401-3' or value.code = 'LA7318-4' or value.code = 'LA9535-1' or value.code = 'LA9553-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t97jUNp2EeKVkrUHX3NooA" name="CandidatePatientRegistryTypeValueP" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t97jUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t9_0wNp2EeKVkrUHX3NooA" name="CandidatePatientRegistryTypeMoodCode" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t9_0wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_n-zaB5-nEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0padgJ99EeGw9ZRnaFfEZQ" name="DelayOrganizer">
      <ownedRule xmi:id="_tdFgENp2EeKVkrUHX3NooA" name="DelayOrganizerDispatchDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdFgEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tdJxgNp2EeKVkrUHX3NooA" name="DelayOrganizerResponseDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdJxgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tdOC8Np2EeKVkrUHX3NooA" name="DelayOrganizerSceneDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdOC8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tdSUYNp2EeKVkrUHX3NooA" name="DelayOrganizerTransportDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdSUYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tdWl0Np2EeKVkrUHX3NooA" name="DelayOrganizerTurnaoundDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdWl0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-F7YNp2EeKVkrUHX3NooA" name="DelayOrganizerTemplateId" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-GicNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.95')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_17RuAJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MiN-UJ-BEeGw9ZRnaFfEZQ" name="DispatchLocationOrganizer">
      <ownedRule xmi:id="_tda3QNp2EeKVkrUHX3NooA" name="DispatchLocationOrganizerDispatchLocationNameRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdbeUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tdfvwNp2EeKVkrUHX3NooA" name="DispatchLocationOrganizerDispatchLocationLatitudeRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdfvwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tdiMANp2EeKVkrUHX3NooA" name="DispatchLocationOrganizerDispatchLocationLongtudeRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdiMAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-OeQNp2EeKVkrUHX3NooA" name="DispatchLocationOrganizerTemplateId" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-OeQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.96')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NzmtsJ-BEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yVviAJ-OEeGorI3CPDW2ww" name="ResponseOdometerReadingOrganizer">
      <ownedRule xmi:id="_tdl2YNp2EeKVkrUHX3NooA" name="ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdl2Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tdqH0Np2EeKVkrUHX3NooA" name="ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tdqH0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tduZQNp2EeKVkrUHX3NooA" name="ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tduZQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tgA4QNp2EeKVkrUHX3NooA" name="ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tgA4Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-argNp2EeKVkrUHX3NooA" name="ResponseOdometerReadingOrganizerTemplateId" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-argdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.97')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yynrQJ-OEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l_V6IJ-bEeGorI3CPDW2ww" name="ResponseModeToScene">
      <ownedRule xmi:id="_t-inUNp2EeKVkrUHX3NooA" name="ResponseModeToSceneTemplateId" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-inUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.98')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-qjINp2EeKVkrUHX3NooA" name="ResponseModeToSceneCodeP" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-qjIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-mRsNp2EeKVkrUHX3NooA" name="ResponseModeToSceneCode" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-mRsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67482-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-wCsNp2EeKVkrUHX3NooA" name="ResponseModeToSceneValue" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-wCsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17177-9' or value.code = 'LA17178-7' or value.code = 'LA17179-5' or value.code = 'LA17180-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-0UINp2EeKVkrUHX3NooA" name="ResponseModeToSceneValueP" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-0UIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-5zsNp2EeKVkrUHX3NooA" name="ResponseModeToSceneMoodCode" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-5zsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mlNAQJ-bEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_K8JK8JuoEeGzXI65shd6Fw" name="Procedure">
      <ownedRule xmi:id="_tbkdINp2EeKVkrUHX3NooA" name="emspcrProcedureEmspcrProcedureAbandonedProcedureRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbkdIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbpVoNp2EeKVkrUHX3NooA" name="emspcrProcedureEmspcrProcedureProcedurePriorRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbpVodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbtnENp2EeKVkrUHX3NooA" name="emspcrProcedureEmspcrProcedureProcedureNumberOfAttemptsRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbtnEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbxRcNp2EeKVkrUHX3NooA" name="emspcrProcedureEmspcrProcedureProcedureSuccessfulRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbxRcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tbztsNp2EeKVkrUHX3NooA" name="emspcrProcedureEmspcrProcedureProcedureComplicationsRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tbztsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tb5NQNp2EeKVkrUHX3NooA" name="emspcrProcedureEmspcrProcedureProcedurePatientResponseRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tb50UNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tb9esNp2EeKVkrUHX3NooA" name="emspcrProcedureEmspcrProcedureProcedurePerformer" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tb9esdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tcBwINp2EeKVkrUHX3NooA" name="emspcrProcedureEmspcrProcedureAirwayConfirmationRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tcBwIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t-8P8dp2EeKVkrUHX3NooA" name="ProcedureActivityProcedureTemplateId" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t-83ANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.98')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_BvgNp2EeKVkrUHX3NooA" name="emspcrProcedureCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_CWkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_Ey0Np2EeKVkrUHX3NooA" name="emspcrProcedureEffectiveTime" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_Ey0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_N8wNp2EeKVkrUHX3NooA" name="emspcrProcedureStatusCodeP" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_N8wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_JEQNp2EeKVkrUHX3NooA" name="emspcrProcedureStatusCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_JEQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'Aborted')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_YU0Np2EeKVkrUHX3NooA" name="emspcrProcedureApproachSiteCodeP" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_YU0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_TcUNp2EeKVkrUHX3NooA" name="emspcrProcedureApproachSiteCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_TcUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18112-5' or value.code = 'LA18113-3' or value.code = 'LA18757-7' or value.code = 'LA18758-5' or value.code = 'LA18790-8' or value.code = 'LA18791-6' or value.code = 'LA18792-4' or value.code = 'LA18793-2' or value.code = 'LA18794-0' or value.code = 'LA18795-7' or value.code = 'LA18796-5' or value.code = 'LA18797-3' or value.code = 'LA18798-1' or value.code = 'LA18799-9' or value.code = 'LA18800-5' or value.code = 'LA18801-3' or value.code = 'LA18802-1' or value.code = 'LA18803-9' or value.code = 'LA18804-7' or value.code = 'LA18805-4' or value.code = 'LA18806-2' or value.code = 'LA18807-0' or value.code = 'LA18808-8' or value.code = 'LA18809-6' or value.code = 'LA18810-4' or value.code = 'LA18811-2' or value.code = 'LA18812-0' or value.code = 'LA18813-8' or value.code = 'LA18814-6' or value.code = 'LA18815-3' or value.code = 'LA18816-1' or value.code = 'LA18817-9' or value.code = 'LA18818-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_dNUNp2EeKVkrUHX3NooA" name="emspcrProcedureNegationInd" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_dNUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_L0nEAJuoEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OG58RSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iWVVYIy-EeGnhceUMXltng" name="ExistenceOfDrugAllergyObservation">
      <ownedRule xmi:id="_t_4rINp2EeKVkrUHX3NooA" name="ExistenceOfDrugAllergyObservationTemplateId" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_4rIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.102')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_t_8VgNp2EeKVkrUHX3NooA" name="ExistenceOfDrugAllergyObservationCode" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_t_8Vgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67794-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAAm8Np2EeKVkrUHX3NooA" name="ExistenceOfDrugAllergyObservationValue" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAAm8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uADqQNp2EeKVkrUHX3NooA" name="ExistenceOfDrugAllergyObservationMoodCode" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uADqQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iumrcIy-EeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_t_nG0IzYEeGnhceUMXltng" name="ExistenceOfEnvironmentalAllergy">
      <ownedRule xmi:id="_uAGGgNp2EeKVkrUHX3NooA" name="ExistenceOfEnvironmentalAllergyTemplateId" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAGGgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.103')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAJw4Np2EeKVkrUHX3NooA" name="ExistenceOfEnvironmentalAllergyCode" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAJw4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69747-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAOCUNp2EeKVkrUHX3NooA" name="ExistenceOfEnvironmentalAllergyValue" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAOpYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uARFoNp2EeKVkrUHX3NooA" name="ExistenceOfEnvironmentalAllergyMoodCode" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uARFodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_uYpR4IzYEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UleZUIzZEeGnhceUMXltng" name="EnvironmentalAllergy">
      <ownedRule xmi:id="_uATh4Np2EeKVkrUHX3NooA" name="EnvironmentalAllergyTemplateId" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAUI8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.104')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAXMQNp2EeKVkrUHX3NooA" name="EnvironmentalAllergyCode" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAXMQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69748-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAdS4Np2EeKVkrUHX3NooA" name="EnvironmentalAllergyValue" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAdS4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA18356-8' or value.code = 'LA18357-6' or value.code = 'LA18358-4' or value.code = 'LA18359-2' or value.code = 'LA18360-0' or value.code = 'LA18361-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAhkUNp2EeKVkrUHX3NooA" name="EnvironmentalAllergyMoodCode" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAhkUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VJHR4IzZEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E9ekgJoxEeG_FLcaRgAa7g" name="MedicationNotAdministeredReasonObservation">
      <ownedRule xmi:id="_uAkAkNp2EeKVkrUHX3NooA" name="MedicationNotAdministeredReasonObservationTemplateId" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAknoNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.105')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAnq8Np2EeKVkrUHX3NooA" name="MedicationNotAdministeredReasonObservationCode" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAnq8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAtxkNp2EeKVkrUHX3NooA" name="MedicationNotAdministeredReasonObservationValue" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAtxkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15185-4' or value.code = 'LA18921-9' or value.code = 'LA18922-7' or value.code = 'LA18925-0' or value.code = 'LA4216-3' or value.code = 'LA4389-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uAyDANp2EeKVkrUHX3NooA" name="MedicationNotAdministeredReasonObservationValueP" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uAyDAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA2UcNp2EeKVkrUHX3NooA" name="MedicationNotAdministeredReasonObservationMoodCode" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA27gNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FXzwEJoxEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j9MusJsmEeGzXI65shd6Fw" name="MedicationResponseObservation">
      <ownedRule xmi:id="_uA5XwNp2EeKVkrUHX3NooA" name="MedicationResponseObservationTemplateId" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA5Xwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.106')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBChsNp2EeKVkrUHX3NooA" name="MedicationResponseObservationCodeP" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBChsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uA-QQNp2EeKVkrUHX3NooA" name="MedicationResponseObservationCode" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uA-QQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67540-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBHaMNp2EeKVkrUHX3NooA" name="MedicationResponseObservationValue" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBIBQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA11011-6' or value.code = 'LA17181-1' or value.code = 'LA65-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBMSsNp2EeKVkrUHX3NooA" name="MedicationResponseObservationMoodCode" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBMSsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kLrPkJsmEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Qzy_cJsnEeGzXI65shd6Fw" name="MedicationComplicationObservation">
      <ownedRule xmi:id="_uBPWANp2EeKVkrUHX3NooA" name="MedicationComplicationObservationTemplateId" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBP9ENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.107')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBX44Np2EeKVkrUHX3NooA" name="MedicationComplicationObservationCodeP" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBX44dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBTncNp2EeKVkrUHX3NooA" name="MedicationComplicationObservationCode" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBTncdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67541-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBdYcNp2EeKVkrUHX3NooA" name="MedicationComplicationObservationValue" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBd_gNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA15098-9' or value.code = 'LA15099-7' or value.code = 'LA15424-7' or value.code = 'LA17059-9' or value.code = 'LA17392-4' or value.code = 'LA17393-2' or value.code = 'LA17394-0' or value.code = 'LA17396-5' or value.code = 'LA17397-3' or value.code = 'LA17713-1' or value.code = 'LA17714-9' or value.code = 'LA18266-9' or value.code = 'LA18267-7' or value.code = 'LA7418-2' or value.code = 'LA7434-9' or value.code = 'LA7443-0' or value.code = 'LA7444-8' or value.code = 'LA9540-1' or value.code = 'LA9541-9' or value.code = 'LA9548-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBiQ8Np2EeKVkrUHX3NooA" name="MedicationComplicationObservationValueP" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBiQ8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBmiYNp2EeKVkrUHX3NooA" name="MedicationComplicationObservationMoodCode" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBmiYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R0vfEJsnEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pVW0QJsoEeGzXI65shd6Fw" name="MedicationPriorAdministrationObservation">
      <ownedRule xmi:id="_uBo-oNp2EeKVkrUHX3NooA" name="MedicationPriorAdministrationObservationTemplateId" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBo-odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.108')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBw6cNp2EeKVkrUHX3NooA" name="MedicationPriorAdministrationObservationCodeP" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBxhgNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uBspANp2EeKVkrUHX3NooA" name="MedicationPriorAdministrationObservationCode" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uBspAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67539-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uB1L4Np2EeKVkrUHX3NooA" name="MedicationPriorAdministrationObservationValue" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uB1L4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uB3oINp2EeKVkrUHX3NooA" name="MedicationPriorAdministrationObservationMoodCode" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uB4PMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pxFG8JsoEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GGe8UJojEeG_FLcaRgAa7g" name="PatientBodyWeight">
      <ownedComment xmi:id="_gBsM0ETXEeKEm6ZghGGtvw">
        <body>NEMSIS Trace: EExam.03</body>
      </ownedComment>
      <ownedRule xmi:id="_uB6rcNp2EeKVkrUHX3NooA" name="PatientBodyWeightTemplateId" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uB6rcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.178')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uB-84Np2EeKVkrUHX3NooA" name="PatientBodyWeightCode" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uB-84dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8335-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uCXXYNp2EeKVkrUHX3NooA" name="PatientBodyWeightValue" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uCX-cNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uCbBwNp2EeKVkrUHX3NooA" name="PatientBodyWeightMoodCode" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uCbBwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GhZ9wJojEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_whTHIJojEeG_FLcaRgAa7g" name="LengthBasedPatientBodyWeightClass">
      <ownedRule xmi:id="_uCdeANp2EeKVkrUHX3NooA" name="LengthBasedPatientBodyWeightClassTemplateId" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uCeFENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.110')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uCmA4Np2EeKVkrUHX3NooA" name="LengthBasedPatientBodyWeightClassCodeP" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uCmA4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uChIYNp2EeKVkrUHX3NooA" name="LengthBasedPatientBodyWeightClassCode" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uChvcNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67670-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uCrgcNp2EeKVkrUHX3NooA" name="LengthBasedPatientBodyWeightClassValue" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uCrgcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15553-3' or value.code = 'LA15554-1' or value.code = 'LA15555-8' or value.code = 'LA17192-8' or value.code = 'LA17193-6' or value.code = 'LA17194-4' or value.code = 'LA17195-1' or value.code = 'LA17196-9' or value.code = 'LA4457-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uCvx4Np2EeKVkrUHX3NooA" name="LengthBasedPatientBodyWeightClassEffectiveTime" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uCvx4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uCy1MNp2EeKVkrUHX3NooA" name="LengthBasedPatientBodyWeightClassMoodCode" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uCy1Mdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xRpmAJojEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bFfQYJokEeG_FLcaRgAa7g" name="SkinAssessment">
      <ownedRule xmi:id="_uC1RcNp2EeKVkrUHX3NooA" name="SkinAssessmentTemplateId" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uC1Rcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.180')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uC-bYNp2EeKVkrUHX3NooA" name="SkinAssessmentCodeP" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uC-bYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uC5i4Np2EeKVkrUHX3NooA" name="SkinAssessmentCode" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uC6J8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67524-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDEiANp2EeKVkrUHX3NooA" name="SkinAssessmentValue" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDFJENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15475-9' or value.code = 'LA17197-7' or value.code = 'LA17198-5' or value.code = 'LA17199-3' or value.code = 'LA17200-9' or value.code = 'LA17201-7' or value.code = 'LA17202-5' or value.code = 'LA17203-3' or value.code = 'LA17204-1' or value.code = 'LA17205-8' or value.code = 'LA17206-6' or value.code = 'LA17207-4' or value.code = 'LA18217-2' or value.code = 'LA18218-0' or value.code = 'LA18219-8' or value.code = 'LA6626-1' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDJagNp2EeKVkrUHX3NooA" name="SkinAssessmentValueP" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDJagdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDO6ENp2EeKVkrUHX3NooA" name="SkinAssessmentMoodCode" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDO6Edp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_baeB4JokEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QU_s0JolEeG_FLcaRgAa7g" name="FaceAssessment">
      <ownedRule xmi:id="_uDRWUNp2EeKVkrUHX3NooA" name="FaceAssessmentTemplateId" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDRWUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.112')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDZSINp2EeKVkrUHX3NooA" name="FaceAssessmentCodeP" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDZSIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDVAsNp2EeKVkrUHX3NooA" name="FaceAssessmentCode" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDVAsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67526-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDfYwNp2EeKVkrUHX3NooA" name="FaceAssessmentValue" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDfYwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17211-6' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17216-5' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDjqMNp2EeKVkrUHX3NooA" name="FaceAssessmentValueP" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDkRQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDn7oNp2EeKVkrUHX3NooA" name="FaceAssessmentEffectiveTime" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDn7odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDq-8Np2EeKVkrUHX3NooA" name="FaceAssessmentMoodCode" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDq-8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QvxkUJolEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6VcsUJokEeG_FLcaRgAa7g" name="HeadAssessment">
      <ownedRule xmi:id="_uDtbMNp2EeKVkrUHX3NooA" name="HeadAssessmentTemplateId" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDtbMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.113')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uD1XANp2EeKVkrUHX3NooA" name="HeadAssessmentCodeP" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uD1XAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uDxFkNp2EeKVkrUHX3NooA" name="HeadAssessmentCode" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uDxFkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67525-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uD62kNp2EeKVkrUHX3NooA" name="HeadAssessmentValue" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uD62kdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17211-6' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uD_IANp2EeKVkrUHX3NooA" name="HeadAssessmentEffectiveTime" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uD_vENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uECLUNp2EeKVkrUHX3NooA" name="HeadAssessmentMoodCode" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uECLUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6p1n8JokEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oE3bcJolEeG_FLcaRgAa7g" name="NeckAssessment">
      <ownedRule xmi:id="_uEEnkNp2EeKVkrUHX3NooA" name="NeckAssessmentTemplateId" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEFOoNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.114')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uEIR8Np2EeKVkrUHX3NooA" name="NeckAssessmentCode" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEIR8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67527-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uENxgNp2EeKVkrUHX3NooA" name="NeckAssessmentValue" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uENxgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17217-3' or value.code = 'LA17219-9' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17612-5' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18226-3' or value.code = 'LA18227-1' or value.code = 'LA18228-9' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uESC8Np2EeKVkrUHX3NooA" name="NeckAssessmentEffectiveTime" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uESC8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uEVGQNp2EeKVkrUHX3NooA" name="NeckAssessmentMoodCode" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEVGQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_orGVAJolEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CiNc8JomEeG_FLcaRgAa7g" name="ChestAndLungsAssessment">
      <ownedRule xmi:id="_uEXigNp2EeKVkrUHX3NooA" name="ChestAndLungsAssessmentTemplateId" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEXigdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.115')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uEal0Np2EeKVkrUHX3NooA" name="ChestAndLungsAssessmentCode" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEal0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67528-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uEgFYNp2EeKVkrUHX3NooA" name="ChestAndLungsAssessmentValue" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEgFYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17222-3' or value.code = 'LA17223-1' or value.code = 'LA17224-9' or value.code = 'LA17225-6' or value.code = 'LA17226-4' or value.code = 'LA17227-2' or value.code = 'LA17228-0' or value.code = 'LA17229-8' or value.code = 'LA17230-6' or value.code = 'LA17231-4' or value.code = 'LA17232-2' or value.code = 'LA17233-0' or value.code = 'LA17234-8' or value.code = 'LA17236-3' or value.code = 'LA17237-1' or value.code = 'LA17238-9' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18229-7' or value.code = 'LA18230-5' or value.code = 'LA18231-3' or value.code = 'LA18232-1' or value.code = 'LA18233-9' or value.code = 'LA18234-7' or value.code = 'LA18235-4' or value.code = 'LA18236-2' or value.code = 'LA18237-0' or value.code = 'LA18238-8' or value.code = 'LA18239-6' or value.code = 'LA18240-4' or value.code = 'LA18402-0' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uEkW0Np2EeKVkrUHX3NooA" name="ChestAndLungsAssessmentEffectiveTime" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEkW0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uEnaINp2EeKVkrUHX3NooA" name="ChestAndLungsAssessmentMoodCode" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEnaIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Czwf8JomEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Zjp_UJomEeG_FLcaRgAa7g" name="HeartAssessment">
      <ownedRule xmi:id="_uEqdcNp2EeKVkrUHX3NooA" name="HeartAssessmentTemplateId" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEqdcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.116')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uEyZQNp2EeKVkrUHX3NooA" name="HeartAssessmentCodeP" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEyZQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uEuH0Np2EeKVkrUHX3NooA" name="HeartAssessmentCode" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uEuH0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67529-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uE5G8Np2EeKVkrUHX3NooA" name="HeartAssessmentValue" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uE5G8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17239-7' or value.code = 'LA17240-5' or value.code = 'LA17241-3' or value.code = 'LA18241-2' or value.code = 'LA18242-0' or value.code = 'LA18243-8' or value.code = 'LA18244-6' or value.code = 'LA18245-3' or value.code = 'LA18246-1' or value.code = 'LA6626-1' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uE9_cNp2EeKVkrUHX3NooA" name="HeartAssessmentValueP" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uE9_cdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFCQ4Np2EeKVkrUHX3NooA" name="HeartAssessmentEffectiveTime" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFCQ4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFFUMNp2EeKVkrUHX3NooA" name="HeartAssessmentMoodCode" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFFUMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Z47rwJomEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WMI_AJooEeG_FLcaRgAa7g" name="AbdomenAssessment">
      <ownedRule xmi:id="_uFHwcNp2EeKVkrUHX3NooA" name="AbdomenAssessmentTemplateId" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFHwcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.117')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFLa0Np2EeKVkrUHX3NooA" name="AbdomenAssessmentCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFLa0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67530-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFQTUNp2EeKVkrUHX3NooA" name="AbdomenAssessmentValue" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFQ6YNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17242-1' or value.code = 'LA17243-9' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17246-2' or value.code = 'LA17247-0' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18226-3' or value.code = 'LA18247-9' or value.code = 'LA18248-7' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFWZ8Np2EeKVkrUHX3NooA" name="AbdomenAssessmentTargetSiteCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFWZ8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12698-9' or value.code = 'LA18721-3' or value.code = 'LA18722-1' or value.code = 'LA18723-9' or value.code = 'LA18724-7' or value.code = 'LA18725-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFarYNp2EeKVkrUHX3NooA" name="AbdomenAssessmentEffectiveTime" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFarYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFdusNp2EeKVkrUHX3NooA" name="AbdomenAssessmentMoodCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFdusdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WiwIMJooEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O7rMoJopEeG_FLcaRgAa7g" name="PelvicAndGenitourinaryAssessment">
      <ownedRule xmi:id="_uFgK8Np2EeKVkrUHX3NooA" name="PelvicAndGenitourinaryAssessmentTemplateId" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFgyANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.118')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFj1UNp2EeKVkrUHX3NooA" name="PelvicAndGenitourinaryAssessmentCode" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFj1Udp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67531-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFpU4Np2EeKVkrUHX3NooA" name="PelvicAndGenitourinaryAssessmentValue" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFp78Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA14123-6' or value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17248-8' or value.code = 'LA17249-6' or value.code = 'LA17250-4' or value.code = 'LA17251-2' or value.code = 'LA17252-0' or value.code = 'LA17253-8' or value.code = 'LA17254-6' or value.code = 'LA17255-3' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFuNYNp2EeKVkrUHX3NooA" name="PelvicAndGenitourinaryAssessmentValueP" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFuNYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uFzF4Np2EeKVkrUHX3NooA" name="PelvicAndGenitourinaryAssessmentEffectiveTime" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uFzF4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uF1iINp2EeKVkrUHX3NooA" name="PelvicAndGenitourinaryAssessmentMoodCode" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uF2JMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PRiu8JopEeG_FLcaRgAa7g">
        <ownedComment xmi:id="_UFXDQJopEeG_FLcaRgAa7g">
          <body>NEMSIS Trace: EExam.12</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pgmc0JopEeG_FLcaRgAa7g" name="BackAndSpineAssessment">
      <ownedRule xmi:id="_uF3-YNp2EeKVkrUHX3NooA" name="BackAndSpineAssessmentTemplateId" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uF4lcNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.119')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGAhQNp2EeKVkrUHX3NooA" name="BackAndSpineAssessmentCodeP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGAhQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uF8P0Np2EeKVkrUHX3NooA" name="BackAndSpineAssessmentCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uF8P0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67532-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGGA0Np2EeKVkrUHX3NooA" name="BackAndSpineAssessmentTargetSiteCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGGn4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18726-2' or value.code = 'LA18727-0' or value.code = 'LA18728-8' or value.code = 'LA18729-6' or value.code = 'LA18730-4' or value.code = 'LA18731-2' or value.code = 'LA18732-0' or value.code = 'LA18733-8' or value.code = 'LA18734-6' or value.code = 'LA18735-3' or value.code = 'LA18736-1' or value.code = 'LA18737-9' or value.code = 'LA18738-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGK5UNp2EeKVkrUHX3NooA" name="BackAndSpineAssessmentTargetSiteCodeP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGK5Udp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGQ_8Np2EeKVkrUHX3NooA" name="BackAndSpineAssessmentValue" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGQ_8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17256-1' or value.code = 'LA17257-9' or value.code = 'LA17258-7' or value.code = 'LA17259-5' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGVRYNp2EeKVkrUHX3NooA" name="BackAndSpineAssessmentValueP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGVRYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGZi0Np2EeKVkrUHX3NooA" name="BackAndSpineAssessmentEffectiveTime" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGZi0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGb_ENp2EeKVkrUHX3NooA" name="BackAndSpineAssessmentMoodCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGb_Edp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_qFpDkJopEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NK7yUJoqEeG_FLcaRgAa7g" name="ExtremitiesAssessment">
      <ownedRule xmi:id="_uGebUNp2EeKVkrUHX3NooA" name="ExtremitiesAssessmentTemplateId" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGfCYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.120')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGm-MNp2EeKVkrUHX3NooA" name="ExtremitiesAssessmentCodeP" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGnlQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGiswNp2EeKVkrUHX3NooA" name="ExtremitiesAssessmentCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGiswdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67533-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGsdwNp2EeKVkrUHX3NooA" name="ExtremitiesAssessmentTargetSiteCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGsdwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18739-5' or value.code = 'LA18740-3' or value.code = 'LA18741-1' or value.code = 'LA18742-9' or value.code = 'LA18743-7' or value.code = 'LA18744-5' or value.code = 'LA18745-2' or value.code = 'LA18746-0' or value.code = 'LA18747-8' or value.code = 'LA18748-6' or value.code = 'LA18749-4' or value.code = 'LA18750-2' or value.code = 'LA18751-0' or value.code = 'LA18752-8' or value.code = 'LA18753-6' or value.code = 'LA18754-4' or value.code = 'LA18755-1' or value.code = 'LA18756-9' or value.code = 'LA18757-7' or value.code = 'LA18758-5' or value.code = 'LA18759-3' or value.code = 'LA18760-1' or value.code = 'LA18761-9' or value.code = 'LA18762-7' or value.code = 'LA18763-5' or value.code = 'LA18764-3' or value.code = 'LA18765-0' or value.code = 'LA18766-8' or value.code = 'LA18767-6' or value.code = 'LA18768-4' or value.code = 'LA18769-2' or value.code = 'LA18770-0' or value.code = 'LA18771-8' or value.code = 'LA18772-6' or value.code = 'LA18773-4' or value.code = 'LA18774-2' or value.code = 'LA18775-9' or value.code = 'LA18776-7' or value.code = 'LA18777-5' or value.code = 'LA18778-3' or value.code = 'LA18779-1' or value.code = 'LA18780-9' or value.code = 'LA18781-7' or value.code = 'LA18782-5' or value.code = 'LA18783-3' or value.code = 'LA18784-1' or value.code = 'LA18785-8' or value.code = 'LA18786-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uGxWQNp2EeKVkrUHX3NooA" name="ExtremitiesAssessmentTargetSiteCodeP" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uGxWQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uG2OwNp2EeKVkrUHX3NooA" name="ExtremitiesAssessmentValue" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uG210Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17229-8' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17260-3' or value.code = 'LA17261-1' or value.code = 'LA17262-9' or value.code = 'LA17263-7' or value.code = 'LA17264-5' or value.code = 'LA17265-2' or value.code = 'LA17266-0' or value.code = 'LA17267-8' or value.code = 'LA17268-6' or value.code = 'LA17269-4' or value.code = 'LA17270-2' or value.code = 'LA17271-0' or value.code = 'LA17272-8' or value.code = 'LA17273-6' or value.code = 'LA17274-4' or value.code = 'LA17344-5' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18249-5' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uG7HQNp2EeKVkrUHX3NooA" name="ExtremitiesAssessmentEffectiveTime" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uG7HQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uG9jgNp2EeKVkrUHX3NooA" name="ExtremitiesAssessmentMoodCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uG-KkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Nd-qIJoqEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rsLuIJoqEeG_FLcaRgAa7g" name="EyeAssessment">
      <ownedRule xmi:id="_uHAm0Np2EeKVkrUHX3NooA" name="EyeAssessmentTemplateId" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHAm0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.121')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHH7kNp2EeKVkrUHX3NooA" name="EyeAssessmentCodeP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHIioNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHDqINp2EeKVkrUHX3NooA" name="EyeAssessmentCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHDqIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67534-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHOpQNp2EeKVkrUHX3NooA" name="EyeAssessmentTargetSiteCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHOpQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18787-4' or value.code = 'LA18788-2' or value.code = 'LA18789-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHS6sNp2EeKVkrUHX3NooA" name="EyeAssessmentTargetSiteCodeP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHS6sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHYaQNp2EeKVkrUHX3NooA" name="EyeAssessmentValue" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHYaQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA14698-7' or value.code = 'LA15255-5' or value.code = 'LA15256-3' or value.code = 'LA17275-1' or value.code = 'LA17276-9' or value.code = 'LA17277-7' or value.code = 'LA17278-5' or value.code = 'LA17279-3' or value.code = 'LA17280-1' or value.code = 'LA17281-9' or value.code = 'LA17282-7' or value.code = 'LA17283-5' or value.code = 'LA17284-3' or value.code = 'LA17285-0' or value.code = 'LA17710-7' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18250-3' or value.code = 'LA18251-1' or value.code = 'LA18253-7' or value.code = 'LA18254-5' or value.code = 'LA18255-2' or value.code = 'LA18256-0' or value.code = 'LA18257-8' or value.code = 'LA18258-6' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHcrsNp2EeKVkrUHX3NooA" name="EyeAssessmentValueP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHcrsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHg9INp2EeKVkrUHX3NooA" name="EyeAssessmentEffectiveTime" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHg9Idp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHkAcNp2EeKVkrUHX3NooA" name="EyeAssessmentMoodCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHkAcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_r7ptgJoqEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EyfEMJorEeG_FLcaRgAa7g" name="MentalStatusAssessment">
      <ownedComment xmi:id="_RzIm8ETYEeKEm6ZghGGtvw">
        <body>NEMSIS Trace: EExam.03</body>
      </ownedComment>
      <ownedRule xmi:id="_uHnDwNp2EeKVkrUHX3NooA" name="MentalStatusAssessmentTemplateId" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHnDwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.122')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHu_kNp2EeKVkrUHX3NooA" name="MentalStatusAssessmentCodeP" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHu_kdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uHquINp2EeKVkrUHX3NooA" name="MentalStatusAssessmentCode" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uHquIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67535-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uH0fINp2EeKVkrUHX3NooA" name="MentalStatusAssessmentValue" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uH0fIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17286-8' or value.code = 'LA17287-6' or value.code = 'LA17288-4' or value.code = 'LA17289-2' or value.code = 'LA17290-0' or value.code = 'LA18259-4' or value.code = 'LA18260-2' or value.code = 'LA6560-2' or value.code = 'LA6630-3' or value.code = 'LA7438-0' or value.code = 'LA9343-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uH5-sNp2EeKVkrUHX3NooA" name="MentalStatusAssessmentMoodCode" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uH5-sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FC2bcJorEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_A65pUHwIEeGW3cDolvqrTA" name="CardiacArrestTiming">
      <ownedRule xmi:id="_uH8a8Np2EeKVkrUHX3NooA" name="CardiacArrestTimingTemplateId" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uH8a8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.123')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uH_eQNp2EeKVkrUHX3NooA" name="CardiacArrestTimingCode" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIAFUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67502-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uIFk4Np2EeKVkrUHX3NooA" name="CardiacArrestTimingValue" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIFk4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17054-0' or value.code = 'LA17055-7' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uIJ2UNp2EeKVkrUHX3NooA" name="CardiacArrestTimingMoodCode" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIKdYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_C6NOoHwIEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_tcPw4HwKEeGW3cDolvqrTA" name="CardiacArrestCause">
      <ownedRule xmi:id="_uIM5oNp2EeKVkrUHX3NooA" name="CardiacArrestCauseTemplateId" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIM5odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.124')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uIP88Np2EeKVkrUHX3NooA" name="CardiacArrestCauseCode" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIP88dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67503-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uIVcgNp2EeKVkrUHX3NooA" name="CardiacArrestCauseValue" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIWDkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17056-5' or value.code = 'LA17058-1' or value.code = 'LA17059-9' or value.code = 'LA17977-2' or value.code = 'LA17978-0' or value.code = 'LA17979-8' or value.code = 'LA17980-6' or value.code = 'LA9539-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uIaVANp2EeKVkrUHX3NooA" name="CardiacArrestCauseMoodCode" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIaVAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zBCPIHwKEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QFoU0HwNEeGW3cDolvqrTA" name="PriorCPR">
      <ownedRule xmi:id="_tXeAQNp2EeKVkrUHX3NooA" name="PriorCPRPriorCPRProviderParticipation" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXeAQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uIcxQNp2EeKVkrUHX3NooA" name="PriorCPRTemplateId" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIdYUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.125')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uIgboNp2EeKVkrUHX3NooA" name="PriorCPRCode" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIgbodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67506-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uIktENp2EeKVkrUHX3NooA" name="PriorCPRValue" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIktEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uInwYNp2EeKVkrUHX3NooA" name="PriorCPRMoodCode" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uInwYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SI5NEHwNEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qsAEkHwPEeGW3cDolvqrTA" name="PriorAEDUse">
      <ownedRule xmi:id="_tXiRsNp2EeKVkrUHX3NooA" name="PriorAEDUsePriorAEDProviderParticipation" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tXiRsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uIyvgNp2EeKVkrUHX3NooA" name="PriorAEDUseTemplateId" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uIzWkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.126')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uI2Z4Np2EeKVkrUHX3NooA" name="PriorAEDUseCode" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uI2Z4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67508-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uI75cNp2EeKVkrUHX3NooA" name="PriorAEDUseValue" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uI75cdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17066-4' or value.code = 'LA17067-2' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJAx8Np2EeKVkrUHX3NooA" name="PriorAEDUseMoodCode" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJAx8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_s7rBIHwPEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ia0ocHwREeGW3cDolvqrTA" name="ArrestRhythm">
      <ownedRule xmi:id="_uJLxENp2EeKVkrUHX3NooA" name="ArrestRhythmTemplateId" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJMYINp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.127')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJPbcNp2EeKVkrUHX3NooA" name="ArrestRhythmCode" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJPbcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67512-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJU7ANp2EeKVkrUHX3NooA" name="ArrestRhythmValue" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJU7Adp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17394-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJZzgNp2EeKVkrUHX3NooA" name="ArrestRhythmMoodCode" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJZzgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KdqC4HwREeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gnLCQHwSEeGW3cDolvqrTA" name="ReturnOfSpontaneousCirculation">
      <ownedRule xmi:id="_uJcPwNp2EeKVkrUHX3NooA" name="ReturnOfSpontaneousCirculationTemplateId" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJcPwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.128')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJf6INp2EeKVkrUHX3NooA" name="ReturnOfSpontaneousCirculationCode" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJf6Idp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67513-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJlZsNp2EeKVkrUHX3NooA" name="ReturnOfSpontaneousCirculationValue" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJlZsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17075-5' or value.code = 'LA17076-3' or value.code = 'LA17077-1' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJprINp2EeKVkrUHX3NooA" name="ReturnOfSpontaneousCirculationMoodCode" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJqSMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_i9zicHwSEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_khXxgHwTEeGW3cDolvqrTA" name="DestinationRhythm">
      <ownedRule xmi:id="_uJsHYNp2EeKVkrUHX3NooA" name="DestinationRhythmTemplateId" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJsucNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.129')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJvxwNp2EeKVkrUHX3NooA" name="DestinationRhythmCode" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJvxwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67519-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJ1RUNp2EeKVkrUHX3NooA" name="DestinationRhythmValue" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJ14YNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12904-1' or value.code = 'LA12904-1' or value.code = 'LA17059-9' or value.code = 'LA17059-9' or value.code = 'LA17068-0' or value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17074-8' or value.code = 'LA17083-9' or value.code = 'LA17083-9' or value.code = 'LA17084-7' or value.code = 'LA17084-7' or value.code = 'LA17085-4' or value.code = 'LA17085-4' or value.code = 'LA17086-2' or value.code = 'LA17086-2' or value.code = 'LA17087-0' or value.code = 'LA17087-0' or value.code = 'LA17088-8' or value.code = 'LA17088-8' or value.code = 'LA17089-6' or value.code = 'LA17089-6' or value.code = 'LA17090-4' or value.code = 'LA17090-4' or value.code = 'LA17091-2' or value.code = 'LA17091-2' or value.code = 'LA17093-8' or value.code = 'LA17093-8' or value.code = 'LA17094-6' or value.code = 'LA17094-6' or value.code = 'LA17095-3' or value.code = 'LA17095-3' or value.code = 'LA17096-1' or value.code = 'LA17096-1' or value.code = 'LA17097-9' or value.code = 'LA17097-9' or value.code = 'LA17098-7' or value.code = 'LA17098-7' or value.code = 'LA17099-5' or value.code = 'LA17099-5' or value.code = 'LA17100-1' or value.code = 'LA17100-1' or value.code = 'LA17101-9' or value.code = 'LA17101-9' or value.code = 'LA17703-2' or value.code = 'LA17703-2' or value.code = 'LA17704-0' or value.code = 'LA17704-0' or value.code = 'LA17705-7' or value.code = 'LA17705-7' or value.code = 'LA17706-5' or value.code = 'LA17706-5' or value.code = 'LA17708-1' or value.code = 'LA17708-1' or value.code = 'LA17718-0' or value.code = 'LA17718-0' or value.code = 'LA18205-7' or value.code = 'LA18205-7' or value.code = 'LA18206-5' or value.code = 'LA18206-5' or value.code = 'LA18207-3' or value.code = 'LA18207-3' or value.code = 'LA18208-1' or value.code = 'LA18208-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uJ6J0Np2EeKVkrUHX3NooA" name="DestinationRhythmMoodCode" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJ6J0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mh2bgHwTEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_edpw0JuqEeGzXI65shd6Fw" name="AbandonedProcedureReasonObservation">
      <ownedRule xmi:id="_uJ8mENp2EeKVkrUHX3NooA" name="AbandonedProcedureReasonObservationTemplateId" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uJ9NINp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.130')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKEh4Np2EeKVkrUHX3NooA" name="AbandonedProcedureReasonObservationCodeP" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKEh4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKAQcNp2EeKVkrUHX3NooA" name="AbandonedProcedureReasonObservationCode" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKAQcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKKogNp2EeKVkrUHX3NooA" name="AbandonedProcedureReasonObservationValue" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKKogdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17078-9' or value.code = 'LA17079-7' or value.code = 'LA17080-5' or value.code = 'LA17081-3' or value.code = 'LA17082-1' or value.code = 'LA18204-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKO58Np2EeKVkrUHX3NooA" name="AbandonedProcedureReasonObservationValueP" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKO58dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKTycNp2EeKVkrUHX3NooA" name="AbandonedProcedureReasonObservationMoodCode" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKTycdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_fIxKYJuqEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0IBaIJ0sEeGmCMENP40rhA" name="ProcedurePriorIndicator">
      <ownedRule xmi:id="_uKWOsNp2EeKVkrUHX3NooA" name="ProcedurePriorIndicatorTemplateId" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKWOsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.131')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKexkNp2EeKVkrUHX3NooA" name="ProcedurePriorIndicatorCodeP" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKexkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKagINp2EeKVkrUHX3NooA" name="ProcedurePriorIndicatorCode" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKagIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67542-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKib8Np2EeKVkrUHX3NooA" name="ProcedurePriorIndicatorValue" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKib8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKlfQNp2EeKVkrUHX3NooA" name="ProcedurePriorIndicatorMoodCode" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKlfQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0ln8IJ0sEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iZg7kJ0tEeGmCMENP40rhA" name="ProcedureNumberOfAttemptsObservation">
      <ownedRule xmi:id="_uKoikNp2EeKVkrUHX3NooA" name="ProcedureNumberOfAttemptsObservationTemplateId" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKoikdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.132')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKweYNp2EeKVkrUHX3NooA" name="ProcedureNumberOfAttemptsObservationCodeP" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKweYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uKsM8Np2EeKVkrUHX3NooA" name="ProcedureNumberOfAttemptsObservationCode" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uKsM8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67543-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uK0v0Np2EeKVkrUHX3NooA" name="ProcedureNumberOfAttemptsObservationValue" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uK0v0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uK3zINp2EeKVkrUHX3NooA" name="ProcedureNumberOfAttemptsObservationMoodCode" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uK3zIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jCIawJ0tEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_D32TkJ0uEeGmCMENP40rhA" name="ProcedureSuccessfulObservation">
      <ownedRule xmi:id="_uK62cNp2EeKVkrUHX3NooA" name="ProcedureSuccessfulObservationTemplateId" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uK62cdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.133')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLCyQNp2EeKVkrUHX3NooA" name="ProcedureSuccessfulObservationCodeP" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLCyQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uK-g0Np2EeKVkrUHX3NooA" name="ProcedureSuccessfulObservationCode" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uK-g0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67544-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLHDsNp2EeKVkrUHX3NooA" name="ProcedureSuccessfulObservationValue" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLHDsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLKHANp2EeKVkrUHX3NooA" name="ProcedureSuccessfulObservationMoodCode" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLKHAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EUkEwJ0uEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lVl1sJ0uEeGmCMENP40rhA" name="ProcedureComplicationsObservation">
      <ownedRule xmi:id="_uLMjQNp2EeKVkrUHX3NooA" name="ProcedureComplicationsObservationTemplateId" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLNKUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.179')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLWUQNp2EeKVkrUHX3NooA" name="ProcedureComplicationsObservationCodeP" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLWUQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLRbwNp2EeKVkrUHX3NooA" name="ProcedureComplicationsObservationCode" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLRbwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67545-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLbz0Np2EeKVkrUHX3NooA" name="ProcedureComplicationsObservationValue" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLbz0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA15098-9' or value.code = 'LA15099-7' or value.code = 'LA15424-7' or value.code = 'LA17059-9' or value.code = 'LA17392-4' or value.code = 'LA17393-2' or value.code = 'LA17394-0' or value.code = 'LA17396-5' or value.code = 'LA17397-3' or value.code = 'LA17489-8' or value.code = 'LA17490-6' or value.code = 'LA17713-1' or value.code = 'LA17714-9' or value.code = 'LA18267-7' or value.code = 'LA18268-5' or value.code = 'LA7418-2' or value.code = 'LA7434-9' or value.code = 'LA7443-0' or value.code = 'LA7444-8' or value.code = 'LA9540-1' or value.code = 'LA9541-9' or value.code = 'LA9548-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLhTYNp2EeKVkrUHX3NooA" name="ProcedureComplicationsObservationMoodCode" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLhTYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_l6VhgJ0uEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Z3nhEJ0vEeGmCMENP40rhA" name="ProcedurePatientResponseObservation">
      <ownedRule xmi:id="_uLjvoNp2EeKVkrUHX3NooA" name="ProcedurePatientResponseObservationTemplateId" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLjvodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.135')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLrrcNp2EeKVkrUHX3NooA" name="ProcedurePatientResponseObservationCodeP" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLsSgNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLnaANp2EeKVkrUHX3NooA" name="ProcedurePatientResponseObservationCode" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLnaAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67546-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uLxLANp2EeKVkrUHX3NooA" name="ProcedurePatientResponseObservationValue" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uLxyENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA11011-6' or value.code = 'LA17181-1' or value.code = 'LA65-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uL2DgNp2EeKVkrUHX3NooA" name="ProcedurePatientResponseObservationValueP" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uL2Dgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uL68ANp2EeKVkrUHX3NooA" name="ProcedurePatientResponseObservationMoodCode" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uL68Adp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aVz48J0vEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KR_lQJ4aEeGzbp5zEFWdWg" name="AirwayConfirmationObservation">
      <ownedRule xmi:id="_uL9YQNp2EeKVkrUHX3NooA" name="AirwayConfirmationObservationTemplateId" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uL9YQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.175')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMGiMNp2EeKVkrUHX3NooA" name="AirwayConfirmationObservationCodeP" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMGiMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMBpsNp2EeKVkrUHX3NooA" name="AirwayConfirmationObservationCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMBpsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '71576-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMMo0Np2EeKVkrUHX3NooA" name="AirwayConfirmationObservationMethodCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMMo0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18672-8' or value.code = 'LA18673-6' or value.code = 'LA18674-4' or value.code = 'LA18675-1' or value.code = 'LA18676-9' or value.code = 'LA18677-7' or value.code = 'LA18678-5' or value.code = 'LA18679-3' or value.code = 'LA18680-1' or value.code = 'LA18681-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMRhUNp2EeKVkrUHX3NooA" name="AirwayConfirmationObservationMethodCodeP" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMRhUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMWZ0Np2EeKVkrUHX3NooA" name="AirwayConfirmationObservationValue" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMWZ0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMZdINp2EeKVkrUHX3NooA" name="AirwayConfirmationObservationEffectiveTime" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMZdIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMcgcNp2EeKVkrUHX3NooA" name="AirwayConfirmationObservationMoodCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMcgcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Kq5NcJ4aEeGzbp5zEFWdWg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_N8t6kFhWEeK-i8RB1gvLUA" name="ReasonProcedureNotAttemptedObservation">
      <ownedComment xmi:id="_pw5GULMSEeKNbt70lHd2Eg">
        <body>NEMSIS Trace: EProcedures.03 pertinent negatives, EArrest.03 negative values&#xD;
This is a superset of both value sets: the question is the same, even if the .90 values are appropriate only for CPR and the .95 for all other procedures.</body>
      </ownedComment>
      <ownedRule xmi:id="_uMe8sNp2EeKVkrUHX3NooA" name="ReasonProcedureNotAttemptedObservationTemplateId" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMfjwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.137')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMinENp2EeKVkrUHX3NooA" name="ReasonProcedureNotAttemptedObservationCode" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMinEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67504-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMotsNp2EeKVkrUHX3NooA" name="ReasonProcedureNotAttemptedObservationValue" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMotsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15185-4' or value.code = 'LA18925-0' or value.code = 'LA4216-3' or value.code = 'LA4389-8' or value.code = 'LA17063-1' or value.code = 'LA17064-9' or value.code = 'LA17065-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMs_INp2EeKVkrUHX3NooA" name="ReasonProcedureNotAttemptedObservationValueP" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMs_Idp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uMxQkNp2EeKVkrUHX3NooA" name="ReasonProcedureNotAttemptedObservationMoodCode" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uMxQkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_OeTksFhWEeK-i8RB1gvLUA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4ZsacKg_EeG79fAvHk6H4g" name="ComplaintType">
      <ownedRule xmi:id="_uMzs0Np2EeKVkrUHX3NooA" name="ComplaintTypeTemplateId" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uM0T4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.138')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uM7ooNp2EeKVkrUHX3NooA" name="ComplaintTypeCodeP" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uM8PsNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uM3XMNp2EeKVkrUHX3NooA" name="ComplaintTypeCode" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uM3XMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '72114-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNCWUNp2EeKVkrUHX3NooA" name="ComplaintTypeValue" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNCWUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA18923-5' or value.code = 'LA18924-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNGnwNp2EeKVkrUHX3NooA" name="ComplaintTypeValueP" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNGnwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNLgQNp2EeKVkrUHX3NooA" name="ComplaintTypeMoodCode" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNLgQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4uqk4Kg_EeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g93MsKhAEeG79fAvHk6H4g" name="ComplaintDuration">
      <ownedRule xmi:id="_uNN8gNp2EeKVkrUHX3NooA" name="ComplaintDurationTemplateId" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNN8gdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.139')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNV4UNp2EeKVkrUHX3NooA" name="ComplaintDurationCodeP" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNV4Udp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNRm4Np2EeKVkrUHX3NooA" name="ComplaintDurationCode" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNSN8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67491-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNaJwNp2EeKVkrUHX3NooA" name="ComplaintDurationValue" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNaJwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNdNENp2EeKVkrUHX3NooA" name="ComplaintDurationMoodCode" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNdNEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hRO0oKhAEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YMy4UKhDEeG79fAvHk6H4g" name="ComplaintOrganSystem">
      <ownedRule xmi:id="_uNfpUNp2EeKVkrUHX3NooA" name="ComplaintOrganSystemTemplateId" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNfpUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.140')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNnlINp2EeKVkrUHX3NooA" name="ComplaintOrganSystemCodeP" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNnlIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNjTsNp2EeKVkrUHX3NooA" name="ComplaintOrganSystemCode" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNjTsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69468-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNtrwNp2EeKVkrUHX3NooA" name="ComplaintOrganSystemValue" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNtrwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA16968-2' or value.code = 'LA18114-1' or value.code = 'LA18277-6' or value.code = 'LA18278-4' or value.code = 'LA18279-2' or value.code = 'LA18281-8' or value.code = 'LA18282-6' or value.code = 'LA18283-4' or value.code = 'LA18284-2' or value.code = 'LA18285-9' or value.code = 'LA9534-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uNx9MNp2EeKVkrUHX3NooA" name="ComplaintOrganSystemValueP" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uNykQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uN21sNp2EeKVkrUHX3NooA" name="ComplaintOrganSystemMoodCode" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uN21sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YmnGgKhDEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gBOGYJorEeG_FLcaRgAa7g" name="NeurologicalAssessment">
      <ownedRule xmi:id="_uN5R8Np2EeKVkrUHX3NooA" name="NeurologicalAssessmentTemplateId" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uN55ANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.141')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOBNwNp2EeKVkrUHX3NooA" name="NeurologicalAssessmentCodeP" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOBNwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uN88UNp2EeKVkrUHX3NooA" name="NeurologicalAssessmentCode" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uN88Udp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67536-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOHUYNp2EeKVkrUHX3NooA" name="NeurologicalAssessmentValue" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOHUYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15899-0' or value.code = 'LA17286-8' or value.code = 'LA17291-8' or value.code = 'LA17292-6' or value.code = 'LA17293-4' or value.code = 'LA17294-2' or value.code = 'LA17295-9' or value.code = 'LA17296-7' or value.code = 'LA17297-5' or value.code = 'LA17298-3' or value.code = 'LA17299-1' or value.code = 'LA17300-7' or value.code = 'LA17301-5' or value.code = 'LA17302-3' or value.code = 'LA17303-1' or value.code = 'LA17304-9' or value.code = 'LA17305-6' or value.code = 'LA18261-0' or value.code = 'LA18262-8' or value.code = 'LA18263-6' or value.code = 'LA18264-4' or value.code = 'LA18265-1' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOLl0Np2EeKVkrUHX3NooA" name="NeurologicalAssessmentValueP" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOLl0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOP3QNp2EeKVkrUHX3NooA" name="NeurologicalAssessmentMoodCode" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOP3Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gR4YkJorEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_n1J2EIzgEeGnhceUMXltng" name="ExistenceOfHistoryOfProcedures">
      <ownedRule xmi:id="_uOSTgNp2EeKVkrUHX3NooA" name="ExistenceOfHistoryOfProceduresTemplateId" constrainedElement="_n1J2EIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOSTgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.142')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOVW0Np2EeKVkrUHX3NooA" name="ExistenceOfHistoryOfProceduresCode" constrainedElement="_n1J2EIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOVW0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67792-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOZoQNp2EeKVkrUHX3NooA" name="ExistenceOfHistoryOfProceduresValue" constrainedElement="_n1J2EIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOaPUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOcrkNp2EeKVkrUHX3NooA" name="ExistenceOfHistoryOfProceduresMoodCode" constrainedElement="_n1J2EIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOcrkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oPzKsIzgEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Orea4IzrEeGnhceUMXltng" name="SystolicBloodPressure">
      <ownedComment xmi:id="_2OB_kNOXEeKU4pFWxuU9dw">
        <body>NEMSIS Trace: EVitals.01</body>
      </ownedComment>
      <ownedRule xmi:id="_uOfu4dp2EeKVkrUHX3NooA" name="VitalSignObservationTemplateId" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOgV8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.23.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOkAUNp2EeKVkrUHX3NooA" name="SystolicBloodPressureCode" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOkAUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8480-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOo40Np2EeKVkrUHX3NooA" name="SystolicBloodPressureValue" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOo40dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOsjMNp2EeKVkrUHX3NooA" name="SystolicBloodPressureMoodCode" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOsjMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uOvmgNp2EeKVkrUHX3NooA" name="SystolicBloodPressureEffectiveTime" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOvmgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PIqGIIzrEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l4xA4IzrEeGnhceUMXltng" name="DiastolicBloodPressure">
      <ownedRule xmi:id="_uOyp0dp2EeKVkrUHX3NooA" name="VitalSignObservationTemplateId" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uOzQ4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.144')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uO2UMNp2EeKVkrUHX3NooA" name="DiastolicBloodPressureCode" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uO27QNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8462-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uO7MsNp2EeKVkrUHX3NooA" name="DiastolicBloodPressureValue" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uO7Msdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uO9o8Np2EeKVkrUHX3NooA" name="DiastolicBloodPressureEffectiveTime" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uO-QANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPAsQNp2EeKVkrUHX3NooA" name="DiastolicBloodPressureMoodCode" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPBTUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mVKpAIzrEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__qJ7UIzrEeGnhceUMXltng" name="HeartRate">
      <ownedRule xmi:id="_uPEWoNp2EeKVkrUHX3NooA" name="VitalSignObservationTemplateId" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPEWodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.145')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPMScNp2EeKVkrUHX3NooA" name="HeartRateCodeP" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPMScdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPHZ8Np2EeKVkrUHX3NooA" name="HeartRateCode" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPIBANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8867-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPRK8Np2EeKVkrUHX3NooA" name="HeartRateValue" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPRK8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPTnMNp2EeKVkrUHX3NooA" name="HeartRateEffectiveTime" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPTnMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPWqgNp2EeKVkrUHX3NooA" name="HeartRateMoodCode" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPWqgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_AA5nYIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q7VIMIzsEeGnhceUMXltng" name="RespiratoryRate">
      <ownedRule xmi:id="_uPZt0dp2EeKVkrUHX3NooA" name="VitalSignObservationTemplateId" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPaU4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.146')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPdYMNp2EeKVkrUHX3NooA" name="RespiratoryRateCode" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPdYMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9279-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPhpoNp2EeKVkrUHX3NooA" name="RespiratoryRateValue" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPhpodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPkF4Np2EeKVkrUHX3NooA" name="RespiratoryRateEffectiveTime" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPks8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPnwQNp2EeKVkrUHX3NooA" name="RespiratoryRateMoodCode" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPnwQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RN10gIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_koRz8IzsEeGnhceUMXltng" name="BodyTemperature">
      <ownedRule xmi:id="_uPqzkNp2EeKVkrUHX3NooA" name="VitalSignObservationTemplateId" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPqzkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.176')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPvFANp2EeKVkrUHX3NooA" name="BodyTemperatureCode" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPvFAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8310-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uPzWcNp2EeKVkrUHX3NooA" name="BodyTemperatureValue" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uPz9gNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uP3A0Np2EeKVkrUHX3NooA" name="BodyTemperatureEffectiveTime" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uP3A0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uP6EINp2EeKVkrUHX3NooA" name="BodyTemperatureMoodCode" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uP6EIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_k_CuIIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_01XGkIzsEeGnhceUMXltng" name="OxygenSaturation">
      <ownedRule xmi:id="_uP9HcNp2EeKVkrUHX3NooA" name="OxygenSaturationTemplateId" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uP9Hcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.177')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQAx0Np2EeKVkrUHX3NooA" name="OxygenSaturationCode" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQBY4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '2710-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQFqUNp2EeKVkrUHX3NooA" name="OxygenSaturationValue" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQFqUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQJUsNp2EeKVkrUHX3NooA" name="OxygenSaturationMoodCode" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQJ7wNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1HuB4IzsEeGnhceUMXltng">
        <ownedComment xmi:id="_HYL4YIjvEeKx3P4dlW9OSw">
          <body>NEMSIS Trace: EVitals.01</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MjD2kJ-nEeGorI3CPDW2ww" name="ProtocolAgeCategory">
      <ownedRule xmi:id="_uQMYANp2EeKVkrUHX3NooA" name="ProtocolAgeCategoryTemplateId" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQMYAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.149')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQU64Np2EeKVkrUHX3NooA" name="ProtocolAgeCategoryCodeP" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQU64dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQQCYNp2EeKVkrUHX3NooA" name="ProtocolAgeCategoryCode" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQQCYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67538-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQaacNp2EeKVkrUHX3NooA" name="ProtocolAgeCategoryValue" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQaacdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17571-3' or value.code = 'LA17572-1' or value.code = 'LA17573-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQer4Np2EeKVkrUHX3NooA" name="ProtocolAgeCategoryValueP" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQer4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQi9UNp2EeKVkrUHX3NooA" name="ProtocolAgeCategoryMoodCode" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQjkYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NEM0wJ-nEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lC10cJ-BEeGw9ZRnaFfEZQ" name="DispatchLocationName">
      <ownedRule xmi:id="_uQmAoNp2EeKVkrUHX3NooA" name="DispatchLocationNameTemplateId" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQmAodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.150')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQpD8Np2EeKVkrUHX3NooA" name="DispatchLocationNameCode" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQpD8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69466-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQtVYNp2EeKVkrUHX3NooA" name="DispatchLocationNameValue" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQtVYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQw_wNp2EeKVkrUHX3NooA" name="DispatchLocationNameMoodCode" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQw_wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_loHrwJ-BEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sPMP9p-NEeGorI3CPDW2ww" name="DispatchLocationLatitude">
      <ownedRule xmi:id="_uQzcANp2EeKVkrUHX3NooA" name="DispatchLocationLatitudeTemplateId" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQzcAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.151')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQ2fUNp2EeKVkrUHX3NooA" name="DispatchLocationLatitudeCode" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQ2fUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '52002-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQ7X0Np2EeKVkrUHX3NooA" name="DispatchLocationLatitudeValue" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQ7X0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uQ90ENp2EeKVkrUHX3NooA" name="DispatchLocationLatitudeMoodCode" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uQ90Edp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sPMP-J-NEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UGLMFZ-OEeGorI3CPDW2ww" name="DispatchLocationLongitude">
      <ownedRule xmi:id="_uRAQUNp2EeKVkrUHX3NooA" name="DispatchLocationLongitudeTemplateId" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRA3YNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.152')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRD6sNp2EeKVkrUHX3NooA" name="DispatchLocationLongitudeCode" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRD6sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '52003-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRIMINp2EeKVkrUHX3NooA" name="DispatchLocationLongitudeValue" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRIMIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRLPcNp2EeKVkrUHX3NooA" name="DispatchLocationLongitudeMoodCode" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRLPcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UGLMF5-OEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9i0HIJ99EeGw9ZRnaFfEZQ" name="DispatchDelay">
      <ownedRule xmi:id="_uRNrsNp2EeKVkrUHX3NooA" name="DispatchDelayTemplateId" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRNrsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.153')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRWOkNp2EeKVkrUHX3NooA" name="DispatchDelayCodeP" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRWOkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRRWENp2EeKVkrUHX3NooA" name="DispatchDelayCode" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRRWEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67480-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRbuINp2EeKVkrUHX3NooA" name="DispatchDelayValue" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRbuIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17183-7' or value.code = 'LA17579-6' or value.code = 'LA17580-4' or value.code = 'LA17581-2' or value.code = 'LA17582-0' or value.code = 'LA17584-6' or value.code = 'LA18081-2' or value.code = 'LA7540-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRf_kNp2EeKVkrUHX3NooA" name="DispatchDelayValueP" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRf_kdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRk4ENp2EeKVkrUHX3NooA" name="DispatchDelayMoodCode" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRk4Edp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-MO3kJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pCK4JZ9-EeGw9ZRnaFfEZQ" name="ResponseDelay">
      <ownedRule xmi:id="_uRn7YNp2EeKVkrUHX3NooA" name="ResponseDelayTemplateId" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRn7Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.154')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRv3MNp2EeKVkrUHX3NooA" name="ResponseDelayCodeP" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRv3Mdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uRq-sNp2EeKVkrUHX3NooA" name="ResponseDelayCode" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uRq-sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67557-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uR1WwNp2EeKVkrUHX3NooA" name="ResponseDelayValue" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uR1Wwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17583-8' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uR6PQNp2EeKVkrUHX3NooA" name="ResponseDelayValueP" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uR6PQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uR-gsNp2EeKVkrUHX3NooA" name="ResponseDelayMoodCode" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uR-gsdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pCK4J59-EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Vo79JZ9_EeGw9ZRnaFfEZQ" name="SceneDelay">
      <ownedRule xmi:id="_uSBkANp2EeKVkrUHX3NooA" name="SceneDelayTemplateId" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSBkAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.155')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uSJf0Np2EeKVkrUHX3NooA" name="SceneDelayCodeP" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSJf0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uSEnUNp2EeKVkrUHX3NooA" name="SceneDelayCode" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSFOYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67558-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uSO_YNp2EeKVkrUHX3NooA" name="SceneDelayValue" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSO_Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA17595-2' or value.code = 'LA17596-0' or value.code = 'LA17597-8' or value.code = 'LA18081-2' or value.code = 'LA18272-7' or value.code = 'LA18273-5' or value.code = 'LA18275-0' or value.code = 'LA18276-8' or value.code = 'LA7540-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uSTQ0Np2EeKVkrUHX3NooA" name="SceneDelayValueP" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uST34Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uSYwYNp2EeKVkrUHX3NooA" name="SceneDelayMoodCode" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSYwYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Vo79J59_EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4qwhJZ9_EeGw9ZRnaFfEZQ" name="TransportDelay">
      <ownedRule xmi:id="_uSbMoNp2EeKVkrUHX3NooA" name="TransportDelayTemplateId" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSbModp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.156')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uSjIcNp2EeKVkrUHX3NooA" name="TransportDelayCodeP" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSjvgNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uSe3ANp2EeKVkrUHX3NooA" name="TransportDelayCode" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSe3Adp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67559-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uSpPENp2EeKVkrUHX3NooA" name="TransportDelayValue" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSpPEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17589-5' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uStggNp2EeKVkrUHX3NooA" name="TransportDelayValueP" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSuHkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uSyZANp2EeKVkrUHX3NooA" name="TransportDelayMoodCode" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uSyZAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4qwhJ59_EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_e7LIFZ-AEeGw9ZRnaFfEZQ" name="TurnaroundDelay">
      <ownedRule xmi:id="_uS01QNp2EeKVkrUHX3NooA" name="TurnaroundDelayTemplateId" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uS1cUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.157')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uS8xENp2EeKVkrUHX3NooA" name="TurnaroundDelayCodeP" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uS9YINp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uS4foNp2EeKVkrUHX3NooA" name="TurnaroundDelayCode" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uS4fodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67560-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTC3sNp2EeKVkrUHX3NooA" name="TurnaroundDelayValue" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTC3sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17587-9' or value.code = 'LA17590-3' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA17598-6' or value.code = 'LA17599-4' or value.code = 'LA17600-0' or value.code = 'LA17601-8' or value.code = 'LA17602-6' or value.code = 'LA17603-4' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA7497-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTHJINp2EeKVkrUHX3NooA" name="TurnaroundDelayValueP" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTHwMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTMBoNp2EeKVkrUHX3NooA" name="TurnaroundDelayMoodCode" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTMosNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_e7LIF5-AEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WduLAIzyEeGnhceUMXltng" name="GlasgowTotal">
      <ownedRule xmi:id="_uTOd4Np2EeKVkrUHX3NooA" name="GlasgowTotalTemplateId" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTPE8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.158')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTXAwNp2EeKVkrUHX3NooA" name="GlasgowTotalCodeP" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTXAwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTSIQNp2EeKVkrUHX3NooA" name="GlasgowTotalCode" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTSIQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9269-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTbSMNp2EeKVkrUHX3NooA" name="GlasgowTotalValue" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTbSMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTeVgNp2EeKVkrUHX3NooA" name="GlasgowTotalMoodCode" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTeVgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W9FnkIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZLqX8IzyEeGnhceUMXltng" name="GlasgowQualifier">
      <ownedRule xmi:id="_uTgxwNp2EeKVkrUHX3NooA" name="GlasgowQualifierTemplateId" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTgxwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.159')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTpUoNp2EeKVkrUHX3NooA" name="GlasgowQualifierCodeP" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTpUodp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTkcINp2EeKVkrUHX3NooA" name="GlasgowQualifierCode" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTkcIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '55285-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTtmENp2EeKVkrUHX3NooA" name="GlasgowQualifierValue" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTtmEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uTwpYNp2EeKVkrUHX3NooA" name="GlasgowQualifierMoodCode" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTwpYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZhmywIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bxS9cIzyEeGnhceUMXltng" name="GlasgowEye">
      <ownedRule xmi:id="_uTzFoNp2EeKVkrUHX3NooA" name="GlasgowEyeTemplateId" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uTzssNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.160')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uT7ogNp2EeKVkrUHX3NooA" name="GlasgowEyeCodeP" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uT7ogdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uT2wANp2EeKVkrUHX3NooA" name="GlasgowEyeCode" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uT3XENp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9267-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uT_58Np2EeKVkrUHX3NooA" name="GlasgowEyeValue" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUAhANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUC9QNp2EeKVkrUHX3NooA" name="GlasgowEyeMoodCode" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUDkUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cBadEIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eKfCYIzyEeGnhceUMXltng" name="GlasgowMotor">
      <ownedRule xmi:id="_uUFZgNp2EeKVkrUHX3NooA" name="GlasgowMotorTemplateId" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUGAkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.176')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUPKgNp2EeKVkrUHX3NooA" name="GlasgowMotorCodeP" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUPKgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUKSANp2EeKVkrUHX3NooA" name="GlasgowMotorCode" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUKSAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9268-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUTb8Np2EeKVkrUHX3NooA" name="GlasgowMotorValue" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUTb8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUWfQNp2EeKVkrUHX3NooA" name="GlasgowMotorMoodCode" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUWfQdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ee3-AIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_hLJ-EIzyEeGnhceUMXltng" name="GlasgowVerbal">
      <ownedRule xmi:id="_uUY7gNp2EeKVkrUHX3NooA" name="GlasgowVerbalTemplateId" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUZikNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.162')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUheYNp2EeKVkrUHX3NooA" name="GlasgowVerbalCodeP" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUheYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUdM8Np2EeKVkrUHX3NooA" name="GlasgowVerbalCode" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUdM8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9270-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUlv0Np2EeKVkrUHX3NooA" name="GlasgowVerbalValue" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUlv0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUozINp2EeKVkrUHX3NooA" name="GlasgowVerbalMoodCode" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUozIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hhtc4IzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9koR4IzuEeGnhceUMXltng" name="StrokeScore">
      <ownedRule xmi:id="_uUr2cNp2EeKVkrUHX3NooA" name="StrokeScoreTemplateId" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUr2cdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.163')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUzLMNp2EeKVkrUHX3NooA" name="StrokeScoreCodeP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUzyQNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uUu5wNp2EeKVkrUHX3NooA" name="StrokeScoreCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uUu5wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67520-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uU5R0Np2EeKVkrUHX3NooA" name="StrokeScoreValue" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uU5R0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17109-2' or value.code = 'LA6576-8' or value.code = 'LA6577-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uU-KUNp2EeKVkrUHX3NooA" name="StrokeScoreValueP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uU-KUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVDp4Np2EeKVkrUHX3NooA" name="StrokeScoreMethodCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVDp4dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17110-0' or value.code = 'LA17111-8' or value.code = 'LA17112-6' or value.code = 'LA17113-4' or value.code = 'LA18300-6' or value.code = 'LA3774-2')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVIiYNp2EeKVkrUHX3NooA" name="StrokeScoreMethodCodeP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVIiYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVMz0Np2EeKVkrUHX3NooA" name="StrokeScoreEffectiveTime" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVMz0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVQeMNp2EeKVkrUHX3NooA" name="StrokeScoreMoodCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVQeMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_95ZoAIzuEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lnVLQIzuEeGnhceUMXltng" name="PainScore">
      <ownedRule xmi:id="_uVS6cNp2EeKVkrUHX3NooA" name="PainScoreTemplateId" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVS6cdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.164')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVV9wNp2EeKVkrUHX3NooA" name="PainScoreCode" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVV9wdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '56840-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVa2QNp2EeKVkrUHX3NooA" name="PainScoreEffectiveTime" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVa2Qdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVegoNp2EeKVkrUHX3NooA" name="PainScoreMoodCode" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVfHsNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_l6CE0IzuEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xgaHgIztEeGnhceUMXltng" name="LevelOfResponsiveness">
      <ownedRule xmi:id="_uVg84Np2EeKVkrUHX3NooA" name="LevelOfResponsivenessTemplateId" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVhj8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.165')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVo4sNp2EeKVkrUHX3NooA" name="LevelOfResponsivenessCodeP" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVpfwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVknQNp2EeKVkrUHX3NooA" name="LevelOfResponsivenessCode" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVlOUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67775-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uVu_UNp2EeKVkrUHX3NooA" name="LevelOfResponsivenessValue" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uVu_Udp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17107-6' or value.code = 'LA17108-4' or value.code = 'LA9340-6' or value.code = 'LA9343-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWIA4Np2EeKVkrUHX3NooA" name="LevelOfResponsivenessValueP" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWIn8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWM5YNp2EeKVkrUHX3NooA" name="LevelOfResponsivenessEffectiveTime" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWM5Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWP8sNp2EeKVkrUHX3NooA" name="LevelOfResponsivenessMoodCode" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWP8sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_x_aXsIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jmDsgIztEeGnhceUMXltng" name="BloodGlucose">
      <ownedRule xmi:id="_uWSY8Np2EeKVkrUHX3NooA" name="BloodGlucoseTemplateId" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWSY8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.166')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWaUwNp2EeKVkrUHX3NooA" name="BloodGlucoseCodeP" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWaUwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWWDUNp2EeKVkrUHX3NooA" name="BloodGlucoseCode" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWWDUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '2339-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWemMNp2EeKVkrUHX3NooA" name="BloodGlucoseValue" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWemMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWhCcNp2EeKVkrUHX3NooA" name="BloodGlucoseEffectiveTime" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWhCcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWkFwNp2EeKVkrUHX3NooA" name="BloodGlucoseMoodCode" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWkFwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j7fJ8IztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WFit0IztEeGnhceUMXltng" name="CarbonMonoxide">
      <ownedRule xmi:id="_uWmiANp2EeKVkrUHX3NooA" name="CarbonMonoxideTemplateId" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWmiAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.167')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWud0Np2EeKVkrUHX3NooA" name="CarbonMonoxideCodeP" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWvE4Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWqMYNp2EeKVkrUHX3NooA" name="CarbonMonoxideCode" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWqMYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '19911-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uWzWUNp2EeKVkrUHX3NooA" name="CarbonMonoxideValue" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uWzWUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uW1ykNp2EeKVkrUHX3NooA" name="CarbonMonoxideEffectiveTime" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uW1ykdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uW4O0Np2EeKVkrUHX3NooA" name="CarbonMonoxideMoodCode" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uW4O0dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WP_qUIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IU2lIIztEeGnhceUMXltng" name="CarbonDioxide">
      <ownedRule xmi:id="_uW6rENp2EeKVkrUHX3NooA" name="CarbonDioxideTemplateId" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uW7SINp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.168')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXDN8Np2EeKVkrUHX3NooA" name="CarbonDioxideCodeP" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXDN8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uW-VcNp2EeKVkrUHX3NooA" name="CarbonDioxideCode" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uW-Vcdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '19889-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXHfYNp2EeKVkrUHX3NooA" name="CarbonDioxideValue" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXHfYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXJ7oNp2EeKVkrUHX3NooA" name="CarbonDioxideEffectiveTime" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXJ7odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXM-8Np2EeKVkrUHX3NooA" name="CarbonDioxideMoodCode" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXM-8dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_I1iQUIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uMxJUIzpEeGnhceUMXltng" name="CardiacRhythm">
      <ownedRule xmi:id="_ti50MNp2EeKVkrUHX3NooA" name="CardiacRhythmParticipant1" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ti50Mdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXPbMNp2EeKVkrUHX3NooA" name="CardiacRhythmTemplateId" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXPbMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.169')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXXXANp2EeKVkrUHX3NooA" name="CardiacRhythmCodeP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXXXAdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXTFkNp2EeKVkrUHX3NooA" name="CardiacRhythmCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXTFkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67519-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXc2kNp2EeKVkrUHX3NooA" name="CardiacRhythmMethodCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXddoNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18682-7' or value.code = 'LA18683-5' or value.code = 'LA18684-3' or value.code = 'LA18685-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXhvENp2EeKVkrUHX3NooA" name="CardiacRhythmMethodCodeP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXhvEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXn1sNp2EeKVkrUHX3NooA" name="CardiacRhythmValue" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXn1sdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12904-1' or value.code = 'LA12904-1' or value.code = 'LA17059-9' or value.code = 'LA17059-9' or value.code = 'LA17068-0' or value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17074-8' or value.code = 'LA17083-9' or value.code = 'LA17083-9' or value.code = 'LA17084-7' or value.code = 'LA17084-7' or value.code = 'LA17085-4' or value.code = 'LA17085-4' or value.code = 'LA17086-2' or value.code = 'LA17086-2' or value.code = 'LA17087-0' or value.code = 'LA17087-0' or value.code = 'LA17088-8' or value.code = 'LA17088-8' or value.code = 'LA17089-6' or value.code = 'LA17089-6' or value.code = 'LA17090-4' or value.code = 'LA17090-4' or value.code = 'LA17091-2' or value.code = 'LA17091-2' or value.code = 'LA17093-8' or value.code = 'LA17093-8' or value.code = 'LA17094-6' or value.code = 'LA17094-6' or value.code = 'LA17095-3' or value.code = 'LA17095-3' or value.code = 'LA17096-1' or value.code = 'LA17096-1' or value.code = 'LA17097-9' or value.code = 'LA17097-9' or value.code = 'LA17098-7' or value.code = 'LA17098-7' or value.code = 'LA17099-5' or value.code = 'LA17099-5' or value.code = 'LA17100-1' or value.code = 'LA17100-1' or value.code = 'LA17101-9' or value.code = 'LA17101-9' or value.code = 'LA17703-2' or value.code = 'LA17703-2' or value.code = 'LA17704-0' or value.code = 'LA17704-0' or value.code = 'LA17705-7' or value.code = 'LA17705-7' or value.code = 'LA17706-5' or value.code = 'LA17706-5' or value.code = 'LA17708-1' or value.code = 'LA17708-1' or value.code = 'LA17718-0' or value.code = 'LA17718-0' or value.code = 'LA18205-7' or value.code = 'LA18205-7' or value.code = 'LA18206-5' or value.code = 'LA18206-5' or value.code = 'LA18207-3' or value.code = 'LA18207-3' or value.code = 'LA18208-1' or value.code = 'LA18208-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXsHINp2EeKVkrUHX3NooA" name="CardiacRhythmValueP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXsHIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXwYkNp2EeKVkrUHX3NooA" name="CardiacRhythmEffectiveTime" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXwYkdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uXy00Np2EeKVkrUHX3NooA" name="CardiacRhythmMoodCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uXy00dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_unG78IzpEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RNfAcIzyEeGnhceUMXltng" name="GlasgowComaScoreOrganizer">
      <ownedRule xmi:id="_tZ1XwNp2EeKVkrUHX3NooA" name="GlasgowComaScoreOrganizerGlasgowEye" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZ1Xwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowEye))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZ4bENp2EeKVkrUHX3NooA" name="GlasgowComaScoreOrganizerGlasgowMotor" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZ4bEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowMotor))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZ63UNp2EeKVkrUHX3NooA" name="GlasgowComaScoreOrganizerGlasgowQualifier" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZ7eYNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowQualifier))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_tZ96oNp2EeKVkrUHX3NooA" name="GlasgowComaScoreOrganizerGlasgowTotal" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZ96odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowTotal))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_taA98Np2EeKVkrUHX3NooA" name="GlasgowComaScoreOrganizerGlasgowVerbal" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_taBlANp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowVerbal))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uX_pINp2EeKVkrUHX3NooA" name="GlasgowComaScoreOrganizerTemplateId" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYAQMNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.170')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYD6kNp2EeKVkrUHX3NooA" name="GlasgowComaScoreOrganizerEffectiveTime" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYD6kdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SdkvUIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_tZ3M8Np2EeKVkrUHX3NooA" name="getGlasgowEye" isQuery="true" bodyCondition="_tZ30ANp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tZ30ANp2EeKVkrUHX3NooA" name="body" constrainedElement="_tZ3M8Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZ30Adp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowEye))->asSequence()->any(true).oclAsType(emspcr::GlasgowEye)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tZ3M8dp2EeKVkrUHX3NooA" type="_bxS9cIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tZ3M8tp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tZ6QQNp2EeKVkrUHX3NooA" name="getGlasgowMotor" isQuery="true" bodyCondition="_tZ6QQ9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tZ6QQ9p2EeKVkrUHX3NooA" name="body" constrainedElement="_tZ6QQNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZ6QRNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowMotor))->asSequence()->any(true).oclAsType(emspcr::GlasgowMotor)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tZ6QQdp2EeKVkrUHX3NooA" type="_eKfCYIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tZ6QQtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tZ8sgNp2EeKVkrUHX3NooA" name="getGlasgowQualifier" isQuery="true" bodyCondition="_tZ9Tktp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_tZ9Tktp2EeKVkrUHX3NooA" name="body" constrainedElement="_tZ8sgNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_tZ9Tk9p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowQualifier))->asSequence()->any(true).oclAsType(emspcr::GlasgowQualifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_tZ9TkNp2EeKVkrUHX3NooA" type="_ZLqX8IzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tZ9Tkdp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_tZ_v0Np2EeKVkrUHX3NooA" name="getGlasgowTotal" isQuery="true" bodyCondition="_taAW4tp2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_taAW4tp2EeKVkrUHX3NooA" name="body" constrainedElement="_tZ_v0Np2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_taAW49p2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowTotal))->asSequence()->any(true).oclAsType(emspcr::GlasgowTotal)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_taAW4Np2EeKVkrUHX3NooA" type="_WduLAIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_taAW4dp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_taDaMNp2EeKVkrUHX3NooA" name="getGlasgowVerbal" isQuery="true" bodyCondition="_taDaM9p2EeKVkrUHX3NooA">
        <ownedRule xmi:id="_taDaM9p2EeKVkrUHX3NooA" name="body" constrainedElement="_taDaMNp2EeKVkrUHX3NooA">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_taDaNNp2EeKVkrUHX3NooA">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowVerbal))->asSequence()->any(true).oclAsType(emspcr::GlasgowVerbal)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_taDaMdp2EeKVkrUHX3NooA" type="_hLJ-EIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_taDaMtp2EeKVkrUHX3NooA" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_k-cIsJ-ZEeGorI3CPDW2ww" name="ResponseBeginningOdometerReading">
      <ownedRule xmi:id="_uYG94Np2EeKVkrUHX3NooA" name="ResponseBeginningOdometerReadingTemplateId" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYHk8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.171')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYO5sNp2EeKVkrUHX3NooA" name="ResponseBeginningOdometerReadingCodeP" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYPgwNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYKoQNp2EeKVkrUHX3NooA" name="ResponseBeginningOdometerReadingCode" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYLPUNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67484-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYTLINp2EeKVkrUHX3NooA" name="ResponseBeginningOdometerReadingValue" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYTLIdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYVnYNp2EeKVkrUHX3NooA" name="ResponseBeginningOdometerReadingMoodCode" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYVnYdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lfuQ0J-ZEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ib1zpZ-aEeGorI3CPDW2ww" name="ResponseOnSceneOdometerReading">
      <ownedRule xmi:id="_uYYDoNp2EeKVkrUHX3NooA" name="ResponseOnSceneOdometerReadingTemplateId" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYYqsNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.172')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYgmgNp2EeKVkrUHX3NooA" name="ResponseOnSceneOdometerReadingCodeP" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYhNkNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYcVENp2EeKVkrUHX3NooA" name="ResponseOnSceneOdometerReadingCode" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYcVEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67485-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYk38Np2EeKVkrUHX3NooA" name="ResponseOnSceneOdometerReadingValue" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYk38dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYnUMNp2EeKVkrUHX3NooA" name="ResponseOnSceneOdometerReadingMoodCode" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYn7QNp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ib1zp5-aEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7kghNZ-aEeGorI3CPDW2ww" name="ResponseDestinationOdometerReading">
      <ownedRule xmi:id="_uYqXgNp2EeKVkrUHX3NooA" name="ResponseDestinationOdometerReadingTemplateId" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYqXgdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.173')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYy6YNp2EeKVkrUHX3NooA" name="ResponseDestinationOdometerReadingCodeP" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYy6Ydp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uYuB4Np2EeKVkrUHX3NooA" name="ResponseDestinationOdometerReadingCode" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uYuo8Np2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67486-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uY2kwNp2EeKVkrUHX3NooA" name="ResponseDestinationOdometerReadingValue" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uY2kwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uY5oENp2EeKVkrUHX3NooA" name="ResponseDestinationOdometerReadingMoodCode" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uY5oEdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7kghN5-aEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TCM6tZ-bEeGorI3CPDW2ww" name="ResponseEndingOdometerReading">
      <ownedRule xmi:id="_uY8EUNp2EeKVkrUHX3NooA" name="ResponseEndingOdometerReadingTemplateId" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uY8EUdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.174')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uZEnMNp2EeKVkrUHX3NooA" name="ResponseEndingOdometerReadingCodeP" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uZEnMdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uZAVwNp2EeKVkrUHX3NooA" name="ResponseEndingOdometerReadingCode" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uZAVwdp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67487-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uZI4oNp2EeKVkrUHX3NooA" name="ResponseEndingOdometerReadingValue" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uZI4odp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_uZL78Np2EeKVkrUHX3NooA" name="ResponseEndingOdometerReadingMoodCode" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_uZL78dp2EeKVkrUHX3NooA">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TCM6t5-bEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <profileApplication xmi:id="_xpUkQWeQEeGtXKebdWh3hg">
      <eAnnotations xmi:id="_xpUkQmeQEeGtXKebdWh3hg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_xpUkQ2eQEeGtXKebdWh3hg">
      <eAnnotations xmi:id="_xpUkRGeQEeGtXKebdWh3hg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_tQkHANp2EeKVkrUHX3NooA">
      <eAnnotations xmi:id="_tRG5kNp2EeKVkrUHX3NooA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_xs1LQGeQEeGtXKebdWh3hg" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="emspcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/emspcr" packageName="emspcr" prefix="emspcr" base_Namespace="_xpUkQGeQEeGtXKebdWh3hg"/>
  <CDA:CDATemplate xmi:id="_xs3ngGeQEeGtXKebdWh3hg" base_Class="_xs1LQWeQEeGtXKebdWh3hg" templateId="2.16.840.1.113883.17.3.10.2" assigningAuthorityName=""/>
  <CDA:PropertyValidation xmi:id="_0IF3U2eREeGtXKebdWh3hg">
    <ruleId>CONF:5261</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_0pgRkGetEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_NkgWkGeuEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_iLBHkGeuEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_TAlPsGlZEeG4boS-IbG8Zw"/>
  <CDA:PropertyValidation xmi:id="_TblwsGlZEeG4boS-IbG8Zw"/>
  <CDA:PropertyValidation xmi:id="_x7o9MGlaEeG4boS-IbG8Zw"/>
  <CDA:AssociationValidation xmi:id="_j-FAsGlbEeG4boS-IbG8Zw">
    <ruleId>CONF:10078</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_QfqDsGlcEeG4boS-IbG8Zw">
    <ruleId>CONF:10079</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_WJI_QGldEeG4boS-IbG8Zw" base_Class="_S-YTcGldEeG4boS-IbG8Zw" templateId="2.16.840.1.113883.17.3.10.1.5"/>
  <CDA:ValueSetConstraint xmi:id="_-lMo8HSCEeGa4IXs2ghZEw" identifier="2.16.840.1.113883.1.11.1" name="HL7 AdministrativeGenderCode"/>
  <CDA:CDATemplate xmi:id="_EFDesHSVEeGa4IXs2ghZEw" base_Class="_3dRe0HSUEeGa4IXs2ghZEw" templateId="2.16.840.1.113883.17.3.10.1.17"/>
  <CDA:PropertyValidation xmi:id="_djjwEns9EeGs2I-Db78R9w">
    <ruleId>CONF:5372</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_djk-MHs9EeGs2I-Db78R9w">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol.model/model/consol-vocab.uml#_2SbZNRSVEeGGzu7fmW9pXw"/>
  </CDA:ValueSetConstraint>
  <CDA:PropertyValidation xmi:id="_-DZQw3tDEeGs2I-Db78R9w">
    <ruleId>CONF:9406</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_uyNtAHwEEeGW3cDolvqrTA" base_Class="_pIikMHwDEeGW3cDolvqrTA" templateId="2.16.840.1.113883.17.3.10.1.14"/>
  <CDA:CDATemplate xmi:id="_19lEcH9aEeGht55Sz1eBOw" base_Class="_i4C-AH9aEeGht55Sz1eBOw" templateId="2.16.840.1.113883.17.3.10.1.12"/>
  <CDA:CDATemplate xmi:id="_vwwq8H9cEeGht55Sz1eBOw" base_Class="_nSjIgH9cEeGht55Sz1eBOw" templateId="2.16.840.1.113883.17.3.10.1.13"/>
  <CDA:CDATemplate xmi:id="_1HUMgIzcEeGnhceUMXltng" base_Class="_VtMvAIzcEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.19"/>
  <CDA:CDATemplate xmi:id="_9vjNoIzcEeGnhceUMXltng" base_Class="_aDO5AIcnEeGqF6qfYwLiQw" templateId="2.16.840.1.113883.17.3.10.1.15"/>
  <CDA:CDATemplate xmi:id="_4-4sQIziEeGnhceUMXltng" base_Class="_1XH7YIziEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.22"/>
  <CDA:CDATemplate xmi:id="_LBR30JoiEeG_FLcaRgAa7g" base_Class="_6223oJohEeG_FLcaRgAa7g" templateId="2.16.840.1.113883.17.3.10.1.20"/>
  <CDA:CDATemplate xmi:id="_pLL-wJovEeG_FLcaRgAa7g" base_Class="_c7crcJovEeG_FLcaRgAa7g" templateId="2.16.840.1.113883.17.3.10.1.18"/>
  <CDA:CDATemplate xmi:id="_i8pMAJunEeGzXI65shd6Fw" base_Class="_4QFw8JumEeGzXI65shd6Fw" templateId="2.16.840.1.113883.17.3.10.1.21"/>
  <CDA:CDATemplate xmi:id="_bIdNwJ9nEeGw9ZRnaFfEZQ" base_Class="_OV4TIJ9nEeGw9ZRnaFfEZQ" templateId="2.16.840.1.113883.17.3.10.1.2"/>
  <CDA:CDATemplate xmi:id="_YpfO8J99EeGw9ZRnaFfEZQ" base_Class="_LI7M8J99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.113883.17.3.10.1.3"/>
  <CDA:CDATemplate xmi:id="_uS5Z0J-dEeGorI3CPDW2ww" base_Class="_i-lM8J-dEeGorI3CPDW2ww" templateId="2.16.840.1.113883.17.3.10.1.4"/>
  <CDA:CDATemplate xmi:id="_7_pEYJ-iEeGorI3CPDW2ww" base_Class="_iDmQYJ9mEeGw9ZRnaFfEZQ" templateId="2.16.840.1.113883.17.3.10.1.1"/>
  <CDA:CDATemplate xmi:id="_BeU6oJ-jEeGorI3CPDW2ww" base_Class="_jCzkkIzkEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.23"/>
  <CDA:CDATemplate xmi:id="_UM3A4J-kEeGorI3CPDW2ww" base_Class="_GGotEJ-kEeGorI3CPDW2ww" templateId="2.16.840.1.113883.17.3.10.1.6"/>
  <CDA:CDATemplate xmi:id="_eW46AJ-mEeGorI3CPDW2ww" base_Class="_aK7P4J-mEeGorI3CPDW2ww" templateId="2.16.840.1.113883.17.3.10.1.7"/>
  <CDA:CDATemplate xmi:id="_oGeIAKK3EeGOxth0BgV-QA" base_Class="_h3A8IKK3EeGOxth0BgV-QA" templateId="2.16.840.1.113883.17.3.10.1.8"/>
  <CDA:CDATemplate xmi:id="_34FNUKK8EeGOxth0BgV-QA" base_Class="_olqMIKK8EeGOxth0BgV-QA" templateId="2.16.840.1.113883.17.3.10.1.9"/>
  <CDA:PropertyValidation xmi:id="_0bvFMKhBEeG79fAvHk6H4g" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_HtwEIKxCEeGLnrdLmr5TaQ" base_Class="_ClVY0KxCEeGLnrdLmr5TaQ" templateId="2.16.840.1.113883.17.3.10.1.10"/>
  <CDA:PropertyValidation xmi:id="_pu1gUMHtEeGOXu0EprM3pw">
    <ruleId>CONF:10869</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_yQRV4MHtEeGOXu0EprM3pw" templateId="2.16.840.1.1133883.17.3.10.1.24" assigningAuthorityName="NEMSIS"/>
  <CDA:AssociationValidation xmi:id="_ZLZtwMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10083</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ZndXoMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10089</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oEqchcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10256</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2iuzIMH5EeGOXu0EprM3pw">
    <ruleId>CONF:10833</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_GV2tpcH6EeGOXu0EprM3pw">
    <ruleId>CONF:10246</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_hEsHwMH6EeGOXu0EprM3pw">
    <ruleId>CONF:10791</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_iyCaZcH6EeGOXu0EprM3pw">
    <ruleId>CONF:10800</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_k-MI5cH6EeGOXu0EprM3pw">
    <ruleId>CONF:10815</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_p0Fg1cH6EeGOXu0EprM3pw">
    <ruleId>CONF:10795</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_sW_idcH6EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10767</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_yFAYtMH7EeGOXu0EprM3pw">
    <ruleId>CONF:10137</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LJi0NMH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10562</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MDkMdMH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10567</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_kuzXJcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10663</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_lnVhpcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10667</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_m84YRcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10672</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rkQzFcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10682</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_tSqOlcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10692</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wESotcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10687</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_08REQMH8EeGOXu0EprM3pw">
    <ruleId>CONF:10677</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Tk-dhMH-EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10444</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fgB6RcH-EeGOXu0EprM3pw">
    <ruleId>CONF:10704</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_gGtfxcH-EeGOXu0EprM3pw">
    <ruleId>CONF:10708</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConformsTo xmi:id="_-U6TQMF7EeGgQc6fI_Esjg" base_Generalization="_17RuAJ99EeGw9ZRnaFfEZQ">
    <ruleId>CONF:10582</ruleId>
  </CDA:ConformsTo>
  <CDA:AssociationValidation xmi:id="_cFsE5cH_EeGOXu0EprM3pw">
    <ruleId>CONF:10581</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_eZ3uBcH_EeGOXu0EprM3pw">
    <ruleId>CONF:10625</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fnFIBcH_EeGOXu0EprM3pw">
    <ruleId>CONF:10646</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Dcu8tcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10740</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Fkaa4MIAEeGOXu0EprM3pw">
    <ruleId>CONF:10748</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Q0x74MIAEeGOXu0EprM3pw">
    <ruleId>CONF:10717</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_SsZk1cIAEeGOXu0EprM3pw">
    <ruleId>CONF:10727</ruleId>
  </CDA:AssociationValidation>
  <CDA:PropertyValidation xmi:id="_3PX-IJoiEeG_FLcaRgAa7g">
    <ruleId>CONF:10347</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_kFhMxcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10346</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_lAJB8MIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10417</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_mH2Q4MIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10422</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_nimXpcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10426</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oaiFNMIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10430</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_pZK3tcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10434</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1xTAQMcJEeGjDJAyT0XW9Q">
    <ruleId>CONF:10211</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_o9Dm0McLEeGjDJAyT0XW9Q">
    <ruleId>CONF:10223</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1ws4cMcLEeGjDJAyT0XW9Q">
    <ruleId>CONF:10226</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_AzzZgMcMEeGjDJAyT0XW9Q" severity="INFO">
    <ruleId>CONF:10229</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oGU2UMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10105</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rbYtoMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10113</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_tClU8McPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10116</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_vkEaQMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10119</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_xmj2cMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10122</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_y7-xQMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10125</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_0eLj0McPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10128</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2uXdwMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10131</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_SD3AgMcWEeGjDJAyT0XW9Q">
    <ruleId>CONF:10805</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XSxVYMcWEeGjDJAyT0XW9Q" severity="INFO">
    <ruleId>CONF:10810</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_HAbYwClBEeKLlLf58wNPLQ" base_Class="_xCcE0Iy7EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.98"/>
  <CDA:AssociationValidation xmi:id="_JU580ClBEeKLlLf58wNPLQ"/>
  <CDA:AssociationValidation xmi:id="_o4WhUCpFEeK1vdrMJapHMg"/>
  <CDA:AssociationValidation xmi:id="_qbdS0CpFEeK1vdrMJapHMg"/>
  <CDA:AssociationValidation xmi:id="_blUNsDZpEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_oLbZoDZpEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_ZlnNgDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_abZmADZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_cDm58DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_dpWIsDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_eTpp8DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_e_yXMDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_fpGZ8DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_gTy8wDZuEeKLbZOfNmD-hA"/>
  <CDA:CDATemplate xmi:id="_v3VFQETWEeKEm6ZghGGtvw" base_Class="_Orea4IzrEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.23.1"/>
  <CDA:AssociationValidation xmi:id="_oj1QMETbEeKEm6ZghGGtvw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_l9si8Fg4EeK-i8RB1gvLUA" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_vXaGAMcJEeGjDJAyT0XW9Q">
    <ruleId>CONF:10205</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_uaz1sMcbEeGjDJAyT0XW9Q" code="67850-8" displayName="Drug allergy">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:10206</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:CodeSystemConstraint xmi:id="_l3drEIzEEeGnhceUMXltng" code="106190000" displayName="allergy">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_ya6aMCWsEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:10207</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_Hok2AFtWEeKHUos6g4FwAg" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_K5wT8IjqEeKx3P4dlW9OSw" severity="INFO">
    <ruleId>CONF:7304</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_Au9-IIjuEeKx3P4dlW9OSw" base_Class="_koRz8IzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.176"/>
  <CDA:CDATemplate xmi:id="_DkbvYIjuEeKx3P4dlW9OSw" base_Class="_01XGkIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.177"/>
  <CDA:ConformsTo xmi:id="_Hwu7QIjvEeKx3P4dlW9OSw" severity="INFO" base_Generalization="_1HuB4IzsEeGnhceUMXltng"/>
  <CDA:AssociationValidation xmi:id="_UXD80LMkEeKNbt70lHd2Eg"/>
  <CDA:AssociationValidation xmi:id="_Y-A50LMkEeKNbt70lHd2Eg" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_GE89K8OxEeKN86BM1f2PZA"/>
  <CDA:AssociationValidation xmi:id="_BTWusMO0EeKGkaWx5djLmw" severity="INFO"/>
  <CDA:CDATemplate xmi:id="_glO-wETXEeKEm6ZghGGtvw" base_Class="_GGe8UJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.178"/>
  <CDA:CDATemplate xmi:id="_pTz4cETXEeKEm6ZghGGtvw" base_Class="_bFfQYJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.180"/>
  <CDA:AssociationValidation xmi:id="_BlWooMWsEeK3RfDsHamIUQ"/>
  <CDA:AssociationValidation xmi:id="_c_2E0MlPEeK2gbjCtOEivw"/>
  <CDA:CDATemplate xmi:id="_IqZVstICEeKRzPZKi7WbBQ" base_Class="_Qlqj8HwGEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.27" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVtdICEeKRzPZKi7WbBQ" base_Class="_JnfD8IzoEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.28" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVuNICEeKRzPZKi7WbBQ" base_Class="_Dq57UIzpEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.29" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVu9ICEeKRzPZKi7WbBQ" base_Class="_F-GKoLMNEeKNbt70lHd2Eg" templateId="2.16.840.1.1133883.17.3.10.1.30" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVvtICEeKRzPZKi7WbBQ" base_Class="_Dfaa4J-eEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.31" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVwdICEeKRzPZKi7WbBQ" base_Class="_j3YnxZ-eEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.32" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVxNICEeKRzPZKi7WbBQ" base_Class="_nv-0gp-fEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.33" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVx9ICEeKRzPZKi7WbBQ" base_Class="_EagUtZ-fEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.34" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVytICEeKRzPZKi7WbBQ" base_Class="_cm1D5Z-hEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.35" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVzdICEeKRzPZKi7WbBQ" base_Class="_083apZ-hEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.36" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV0NICEeKRzPZKi7WbBQ" base_Class="_Q4zL9Z-gEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.37" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV09ICEeKRzPZKi7WbBQ" base_Class="_1u74sKxCEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.38" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV1tICEeKRzPZKi7WbBQ" base_Class="_JKerYKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.39" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV2dICEeKRzPZKi7WbBQ" base_Class="_UyaX0KxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.40" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV3NICEeKRzPZKi7WbBQ" base_Class="_iGh5QKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.41" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV39ICEeKRzPZKi7WbBQ" base_Class="_yt7JUKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.42" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV4tICEeKRzPZKi7WbBQ" base_Class="_6w124KxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.43" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV5dICEeKRzPZKi7WbBQ" base_Class="_DaIA4KxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.44" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV6NICEeKRzPZKi7WbBQ" base_Class="_KrhK4KxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.45" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV69ICEeKRzPZKi7WbBQ" base_Class="_UFgZEKxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.46" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV7tICEeKRzPZKi7WbBQ" base_Class="_xCcE0Iy7EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.47" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV8dICEeKRzPZKi7WbBQ" base_Class="_3C3WwMWqEeK3RfDsHamIUQ" templateId="2.16.840.1.1133883.17.3.10.1.48" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV9NICEeKRzPZKi7WbBQ" base_Class="_CFApcIzGEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.49" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV99ICEeKRzPZKi7WbBQ" base_Class="_KEFo8HSVEeGa4IXs2ghZEw" templateId="2.16.840.1.1133883.17.3.10.1.50" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV-tICEeKRzPZKi7WbBQ" base_Class="_aS16EHSWEeGa4IXs2ghZEw" templateId="2.16.840.1.1133883.17.3.10.1.51" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV_dICEeKRzPZKi7WbBQ" base_Class="_lTHsIIcXEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.52" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWANICEeKRzPZKi7WbBQ" base_Class="_vuraIIcZEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.53" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWA9ICEeKRzPZKi7WbBQ" base_Class="_nvhVwIcaEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.54" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWBtICEeKRzPZKi7WbBQ" base_Class="_zMwjMIccEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.55" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWCdICEeKRzPZKi7WbBQ" base_Class="_bsVJUIcdEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.56" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWDNICEeKRzPZKi7WbBQ" base_Class="_2lRhsIcdEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.57" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWD9ICEeKRzPZKi7WbBQ" base_Class="_auKbcIceEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.58" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWEtICEeKRzPZKi7WbBQ" base_Class="_wKL4IIceEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.59" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWFdICEeKRzPZKi7WbBQ" base_Class="_W_uRYIzdEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.60" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWGNICEeKRzPZKi7WbBQ" base_Class="_5XgZ4IzdEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.61" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWG9ICEeKRzPZKi7WbBQ" base_Class="_HLO9kIzgEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.62" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWHtICEeKRzPZKi7WbBQ" base_Class="_KEZzkKg-EeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.63" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWIdICEeKRzPZKi7WbBQ" base_Class="_7nP0MKhCEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.64" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWJNICEeKRzPZKi7WbBQ" base_Class="_0C-8EKhDEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.65" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWJ9ICEeKRzPZKi7WbBQ" base_Class="_KOxo0KhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.66" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWKtICEeKRzPZKi7WbBQ" base_Class="_g5iJgKhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.67" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWLdICEeKRzPZKi7WbBQ" base_Class="_0mPksKhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.68" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWMNICEeKRzPZKi7WbBQ" base_Class="_NZgqAKhFEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.69" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWM9ICEeKRzPZKi7WbBQ" base_Class="_Mr964IzjEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.70" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWNtICEeKRzPZKi7WbBQ" base_Class="_oJHzkIzjEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.71" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWOdICEeKRzPZKi7WbBQ" base_Class="_5JQlAJovEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.72" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWPNICEeKRzPZKi7WbBQ" base_Class="_46UUAJ9nEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.73" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWP9ICEeKRzPZKi7WbBQ" base_Class="__LltsJ97EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.74" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWQtICEeKRzPZKi7WbBQ" base_Class="_sUm-oIcnEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.75" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWRdICEeKRzPZKi7WbBQ" base_Class="_RZqlsIcoEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.76" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWSNICEeKRzPZKi7WbBQ" base_Class="_mwn8MIcoEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.77" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWS9ICEeKRzPZKi7WbBQ" base_Class="_zbYvIJoiEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.78" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWTtICEeKRzPZKi7WbBQ" base_Class="_sW8QcJosEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.79" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWUdICEeKRzPZKi7WbBQ" base_Class="_S1I0sJotEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.80" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWVNICEeKRzPZKi7WbBQ" base_Class="_rhjrIJotEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.81" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWV9ICEeKRzPZKi7WbBQ" base_Class="_HuCH8JouEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.82" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWWtICEeKRzPZKi7WbBQ" base_Class="_qlUP4JouEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.83" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWXdICEeKRzPZKi7WbBQ" base_Class="_Ox86UKK4EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.84" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWYNICEeKRzPZKi7WbBQ" base_Class="_JNrkAKK5EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.85" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWY9ICEeKRzPZKi7WbBQ" base_Class="_wPLCkKK5EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.86" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWZtICEeKRzPZKi7WbBQ" base_Class="_E-SEAKK8EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.87" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWadICEeKRzPZKi7WbBQ" base_Class="_ayUKMMk3EeK2gbjCtOEivw" templateId="2.16.840.1.1133883.17.3.10.1.88" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWbNICEeKRzPZKi7WbBQ" base_Class="_p4XEAJ-kEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.89" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWb9ICEeKRzPZKi7WbBQ" base_Class="_gU4tMJ-lEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.90" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWctICEeKRzPZKi7WbBQ" base_Class="_rNkl4GleEeG4boS-IbG8Zw" templateId="2.16.840.1.1133883.17.3.10.1.91" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWddICEeKRzPZKi7WbBQ" base_Class="_To2-YGleEeG4boS-IbG8Zw" templateId="2.16.840.1.1133883.17.3.10.1.92" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWeNICEeKRzPZKi7WbBQ" base_Class="_rDpggp-mEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.93" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWe9ICEeKRzPZKi7WbBQ" base_Class="_n-zaBZ-nEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.94" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWftICEeKRzPZKi7WbBQ" base_Class="_0padgJ99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.95" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWgdICEeKRzPZKi7WbBQ" base_Class="_MiN-UJ-BEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.96" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWhNICEeKRzPZKi7WbBQ" base_Class="_yVviAJ-OEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.97" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWh9ICEeKRzPZKi7WbBQ" base_Class="_l_V6IJ-bEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.98" assigningAuthorityName="NEMSIS"/>
  <CDA:AssociationValidation xmi:id="_yi4e8MHkEeGspaMtPNX3NA">
    <ruleId>CONF:10081</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_VesLcMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10082</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ojtiRcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10198</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_pM63VcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10199</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_p4qjBcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10136</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_q0w-5cHzEeGOXu0EprM3pw">
    <ruleId>CONF:10220</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rJl_ZcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10221</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rgp0hcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10222</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_soEIhcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10560</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_s_kplcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10561</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_uSS1tcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10656</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_u7NP1cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10657</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wIap1cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10658</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wvi7RcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10659</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_xhO25cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10660</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_zJ-WVcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10095</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_zZTLxcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10096</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_znR9ZcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10097</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_z28KBcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10098</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_0xftxcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10099</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1F4CVcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10100</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1YBiRcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10101</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1tSAlcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10102</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2CyWhcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10103</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2Xmv9cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10104</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_BqfcoMH4EeGOXu0EprM3pw">
    <ruleId>CONF:10255</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_DpAXxcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10244</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_H0NM5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10832</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LDJ1JcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10759</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LofW1cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10761</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_L8cNlcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10762</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MLUXFcH4EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10763</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Mb04RcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10764</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MwEC5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10765</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_NBUyBcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10766</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ODYE5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10736</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_OqDqZcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10738</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_PjoWtcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10577</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_TIJmVcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10578</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Tq0OhcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10579</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_UGxxwMH4EeGOXu0EprM3pw">
    <ruleId>CONF:10580</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_U-IQhcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10714</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Vljc5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10716</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XbNW9cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10340</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XpMIlcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10341</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_X2SJZcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10342</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YEasBcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10343</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YUoSRcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10344</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YlcVdcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10345</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ZJ5GVcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10702</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Zd-f9cH4EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10703</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_atHzpcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10062</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_a-YixcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10063</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_biripcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10443</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fpb_1cH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10661</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_gBvvkMlPEeK2gbjCtOEivw"/>
  <CDA:CDATemplate xmi:id="_X2C4wJusEeGzXI65shd6Fw" base_Class="_K8JK8JuoEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.98"/>
  <CDA:CDATemplate xmi:id="_tffVAJ0uEeGmCMENP40rhA" base_Class="_lVl1sJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.179"/>
  <CDA:CDATemplate xmi:id="_t4AbcJ4aEeGzbp5zEFWdWg" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg" templateId="2.16.840.1.1133883.17.3.10.1.175"/>
  <CDA:CDATemplate xmi:id="_5wW8wIzzEeGnhceUMXltng" base_Class="_eKfCYIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.176"/>
  <CDA:CDATemplate xmi:id="_sP30sNOUEeKU4pFWxuU9dw" base_Class="_iWVVYIy-EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.102" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30sdOUEeKU4pFWxuU9dw" base_Class="_t_nG0IzYEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.103" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30stOUEeKU4pFWxuU9dw" base_Class="_UleZUIzZEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.104" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30s9OUEeKU4pFWxuU9dw" base_Class="_E9ekgJoxEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.105" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30tNOUEeKU4pFWxuU9dw" base_Class="_j9MusJsmEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.106" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30tdOUEeKU4pFWxuU9dw" base_Class="_Qzy_cJsnEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.107" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ttOUEeKU4pFWxuU9dw" base_Class="_pVW0QJsoEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.108" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30t9OUEeKU4pFWxuU9dw" base_Class="_GGe8UJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.109" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30uNOUEeKU4pFWxuU9dw" base_Class="_whTHIJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.110" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30udOUEeKU4pFWxuU9dw" base_Class="_bFfQYJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.111" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30utOUEeKU4pFWxuU9dw" base_Class="_QU_s0JolEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.112" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30u9OUEeKU4pFWxuU9dw" base_Class="_6VcsUJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.113" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30vNOUEeKU4pFWxuU9dw" base_Class="_oE3bcJolEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.114" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30vdOUEeKU4pFWxuU9dw" base_Class="_CiNc8JomEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.115" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30vtOUEeKU4pFWxuU9dw" base_Class="_Zjp_UJomEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.116" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30v9OUEeKU4pFWxuU9dw" base_Class="_WMI_AJooEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.117" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30wNOUEeKU4pFWxuU9dw" base_Class="_O7rMoJopEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.118" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30wdOUEeKU4pFWxuU9dw" base_Class="_pgmc0JopEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.119" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30wtOUEeKU4pFWxuU9dw" base_Class="_NK7yUJoqEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.120" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30w9OUEeKU4pFWxuU9dw" base_Class="_rsLuIJoqEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.121" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30xNOUEeKU4pFWxuU9dw" base_Class="_EyfEMJorEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.122" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30xdOUEeKU4pFWxuU9dw" base_Class="_A65pUHwIEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.123" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30xtOUEeKU4pFWxuU9dw" base_Class="_tcPw4HwKEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.124" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30x9OUEeKU4pFWxuU9dw" base_Class="_QFoU0HwNEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.125" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30yNOUEeKU4pFWxuU9dw" base_Class="_qsAEkHwPEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.126" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ydOUEeKU4pFWxuU9dw" base_Class="_Ia0ocHwREeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.127" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ytOUEeKU4pFWxuU9dw" base_Class="_gnLCQHwSEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.128" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30y9OUEeKU4pFWxuU9dw" base_Class="_khXxgHwTEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.129" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30zNOUEeKU4pFWxuU9dw" base_Class="_edpw0JuqEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.130" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30zdOUEeKU4pFWxuU9dw" base_Class="_0IBaIJ0sEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.131" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ztOUEeKU4pFWxuU9dw" base_Class="_iZg7kJ0tEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.132" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30z9OUEeKU4pFWxuU9dw" base_Class="_D32TkJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.133" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP300NOUEeKU4pFWxuU9dw" base_Class="_lVl1sJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.134" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP300dOUEeKU4pFWxuU9dw" base_Class="_Z3nhEJ0vEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.135" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP300tOUEeKU4pFWxuU9dw" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg" templateId="2.16.840.1.1133883.17.3.10.1.136" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3009OUEeKU4pFWxuU9dw" base_Class="_N8t6kFhWEeK-i8RB1gvLUA" templateId="2.16.840.1.1133883.17.3.10.1.137" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP301NOUEeKU4pFWxuU9dw" base_Class="_4ZsacKg_EeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.138" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP301dOUEeKU4pFWxuU9dw" base_Class="_g93MsKhAEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.139" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP301tOUEeKU4pFWxuU9dw" base_Class="_YMy4UKhDEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.140" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3019OUEeKU4pFWxuU9dw" base_Class="_gBOGYJorEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.141" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP302NOUEeKU4pFWxuU9dw" base_Class="_n1J2EIzgEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.142" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP302dOUEeKU4pFWxuU9dw" base_Class="_Orea4IzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.143" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP302tOUEeKU4pFWxuU9dw" base_Class="_l4xA4IzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.144" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3029OUEeKU4pFWxuU9dw" base_Class="__qJ7UIzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.145" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP303NOUEeKU4pFWxuU9dw" base_Class="_Q7VIMIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.146" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP303dOUEeKU4pFWxuU9dw" base_Class="_koRz8IzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.147" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP303tOUEeKU4pFWxuU9dw" base_Class="_01XGkIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.148" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3039OUEeKU4pFWxuU9dw" base_Class="_MjD2kJ-nEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.149" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP304NOUEeKU4pFWxuU9dw" base_Class="_lC10cJ-BEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.150" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP304dOUEeKU4pFWxuU9dw" base_Class="_sPMP9p-NEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.151" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP304tOUEeKU4pFWxuU9dw" base_Class="_UGLMFZ-OEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.152" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3049OUEeKU4pFWxuU9dw" base_Class="_9i0HIJ99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.153" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP305NOUEeKU4pFWxuU9dw" base_Class="_pCK4JZ9-EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.154" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP305dOUEeKU4pFWxuU9dw" base_Class="_Vo79JZ9_EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.155" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP305tOUEeKU4pFWxuU9dw" base_Class="_4qwhJZ9_EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.156" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3059OUEeKU4pFWxuU9dw" base_Class="_e7LIFZ-AEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.157" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP306NOUEeKU4pFWxuU9dw" base_Class="_WduLAIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.158" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP306dOUEeKU4pFWxuU9dw" base_Class="_ZLqX8IzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.159" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP306tOUEeKU4pFWxuU9dw" base_Class="_bxS9cIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.160" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3069OUEeKU4pFWxuU9dw" base_Class="_eKfCYIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.161" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP307NOUEeKU4pFWxuU9dw" base_Class="_hLJ-EIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.162" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP307dOUEeKU4pFWxuU9dw" base_Class="_9koR4IzuEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.163" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP307tOUEeKU4pFWxuU9dw" base_Class="_lnVLQIzuEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.164" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3079OUEeKU4pFWxuU9dw" base_Class="_xgaHgIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.165" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP308NOUEeKU4pFWxuU9dw" base_Class="_jmDsgIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.166" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP308dOUEeKU4pFWxuU9dw" base_Class="_WFit0IztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.167" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP308tOUEeKU4pFWxuU9dw" base_Class="_IU2lIIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.168" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3089OUEeKU4pFWxuU9dw" base_Class="_uMxJUIzpEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.169" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP309NOUEeKU4pFWxuU9dw" base_Class="_RNfAcIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.170" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP309dOUEeKU4pFWxuU9dw" base_Class="_k-cIsJ-ZEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.171" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP309tOUEeKU4pFWxuU9dw" base_Class="_ib1zpZ-aEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.172" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3099OUEeKU4pFWxuU9dw" base_Class="_7kghNZ-aEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.173" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30-NOUEeKU4pFWxuU9dw" base_Class="_TCM6tZ-bEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.174" assigningAuthorityName="NEMSIS"/>
  <Ecore:EPackage xmi:id="_tSuDINp2EeKVkrUHX3NooA" base_Package="_xpUkQGeQEeGtXKebdWh3hg" packageName="emspcr" nsPrefix="emspcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/emspcr" basePackage="org.openhealthtools.mdht.uml.cda" prefix="emspcr">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.emspcr'</annotation>
  </Ecore:EPackage>
  <CDA:ConformsTo xmi:id="_tSy7oNp2EeKVkrUHX3NooA" base_Generalization="_xs3ngWeQEeGtXKebdWh3hg"/>
  <Ecore:EClass xmi:id="_tS1X4Np2EeKVkrUHX3NooA" base_Class="_xs1LQWeQEeGtXKebdWh3hg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientCareReportTemplateId PatientCareReportClassCode PatientCareReportMoodCode PatientCareReportCode PatientCareReportCodeP PatientCareReportTitle PatientCareReportId PatientCareReportConfidentialityCode PatientCareReportRecordTarget PatientCareReportBilling PatientCareReportCurrentMedication PatientCareReportAllergiesAndAdverseReactionsSection PatientCareReportPastMedicalHistory PatientCareReportSocialHistory PatientCareReportPhysicalAssessmentSection PatientCareReportProceduresPerformedSection PatientCareReportPatientCareNarrative PatientCareReportSceneSection PatientCareReportComponentOf PatientCareReportDispatchSection PatientCareReportPersonnelAdverseEventSection PatientCareReportProtocolSection PatientCareReportResponseSection PatientCareReportSituationSection PatientCareReportVitalSignsSection PatientCareReportCustodian PatientCareReportDocumentationOf PatientCareReportRelatedDocument PatientCareReportParticipant PatientCareReportInjuryIncidentDescriptionSection' templateId.root='2.16.840.1.113883.17.3.10.2' classCode='DOCCLIN' moodCode='EVN' code.code='67796-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Patient Care Report' constraints.validation.dependOn.PatientCareReportCode='PatientCareReportCodeP' title.mixed='EMS Patient Care Report' constraints.validation.info='PatientCareReportVersionNumber PatientCareReportCardiacArrestEvent PatientCareReportMedicationsAdministeredSection PatientCareReportDispositionSection PatientCareReportTimesSection' confidentialityCode.codeSystem='2.16.840.1.113883.5.25' confidentialityCode.codeSystemName='ConfidentialityCode' constraints.validation.warning='PatientCareReportAdvanceDirectives PatientCareReportAuthorParticipation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTarget constraints.validation.error='RecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTargetPatientRole constraints.validation.error='PatientRoleAddr PatientRoleId PatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTargetPatientRolePatient constraints.validation.warning='PatientBirthTime' constraints.validation.error='PatientName PatientAdministrativeGenderCode PatientAdministrativeGenderCodeP' administrativeGenderCode.codeSystem='2.16.840.1.113883.5.1' administrativeGenderCode.codeSystemName='AdministrativeGenderCode' constraints.validation.dependOn.PatientAdministrativeGenderCode='PatientAdministrativeGenderCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipation constraints.validation.error='AuthorParticipationAuthorRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRole constraints.validation.error='AuthorRoleId AuthorRoleAddr AuthorRoleTelecom AuthorRoleHumanAuthor AuthorRoleAuthoringDevice'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRoleHumanAuthor constraints.validation.error='HumanAuthorName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRoleAuthoringDevice constraints.validation.error='AuthoringDeviceManufacturerModelName AuthoringDeviceSoftwareName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationship typeCode='COMP' constraints.validation.error='EncompassingEncounterRelationshipTypeCode EncompassingEncounterRelationshipEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounter constraints.validation.error='EncompassingEncounterEffectiveTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocation constraints.validation.error='LocationHealthCareFacility'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacility constraints.validation.error='HealthCareFacilityId HealthCareFacilityCode HealthCareFacilityPlace' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacilityPlace constraints.validation.info='PlaceName PlaceAddr' classCode='PLC' constraints.validation.error='PlaceClassCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipation constraints.validation.error='CustodianParticipationCustodianRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipationCustodianRole constraints.validation.error='CustodianRoleCustodian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipationCustodianRoleCustodian constraints.validation.error='CustodianAddr CustodianId CustodianName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipation constraints.validation.error='ServiceEventParticipationServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEvent code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='ServiceEventCode ServiceEventId ServiceEventPerformerParticipation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipation functionCode.codeSystem='2.16.840.1.113883.6.1' functionCode.codeSystemName='LOINC' constraints.validation.error='PerformerParticipationFunctionCode PerformerParticipationPerformerRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRole code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PerformerRoleCode PerformerRoleCodeP PerformerRoleId PerformerRoleAddr PerformerRoleTelecom PerformerRolePerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRolePerformer constraints.validation.error='PerformerName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportParentDocumentRelationship typeCode='RPLC' constraints.validation.info='ParentDocumentRelationshipParentDocument'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportParentDocumentRelationshipParentDocument constraints.validation.error='ParentDocumentId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipation typeCode='DST' constraints.validation.error='DestinationParticipantParticipationTypeCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipationDestinationRole constraints.validation.warning='DestinationRoleAddr' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='DestinationRoleCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipationDestinationRoleDestinationOrganization constraints.validation.error='DestinationOrganizationName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tWAAoNp2EeKVkrUHX3NooA" base_Class="_VtMvAIzcEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PastMedicalHistorySectionTemplateId PastMedicalHistorySectionCode PastMedicalHistorySectionCodeP PastMedicalHistorySectionTitle PastMedicalHistorySectionText PastMedicalHistorySectionExistenceOfHistoryOfCondition PastMedicalHistorySectionHistoryOfCondition PastMedicalHistorySectionHistoryOfProceduresOrganizer' templateId.root='2.16.840.1.113883.17.3.10.1.19' code.code='67842-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Past Medical History Section' title.mixed='EMS Past Medical History'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tWV-4Np2EeKVkrUHX3NooA" base_Class="_S-YTcGldEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BillingSectionTemplateId BillingSectionCode BillingSectionTitle BillingSectionText BillingSectionBillingCondition BillingSectionLevelOfServiceObservation' templateId.root='2.16.840.1.113883.17.3.10.1.5' code.code='67659-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Billing Section' title.mixed='EMS Billing Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tWqvANp2EeKVkrUHX3NooA" base_Class="_3dRe0HSUEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryIncidentDescriptionSectionTemplateId InjuryIncidentDescriptionSectionCode InjuryIncidentDescriptionSectionTitle InjuryIncidentDescriptionSectionText InjuryIncidentDescriptionSectionInjuryCauseCategory InjuryIncidentDescriptionSectionInjuryMechanism InjuryIncidentDescriptionSectionTraumaCenterCriteria InjuryIncidentDescriptionSectionInjuryRiskFactor InjuryIncidentDescriptionSectionVehicleImpactArea InjuryIncidentDescriptionSectionPatientLocationInVehicle InjuryIncidentDescriptionSectionVehicleOccupantSafetyEquipment InjuryIncidentDescriptionSectionAirbagDeploymentStatus InjuryIncidentDescriptionSectionHeightOfFall InjuryIncidentDescriptionSectionDisasterType' templateId.root='2.16.840.1.113883.17.3.10.1.17' code.code='11374-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Injury Incident Description Section' title.mixed='Injury Incident Description Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tXDJgNp2EeKVkrUHX3NooA" base_Class="_pIikMHwDEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestEventSectionTemplateId CardiacArrestEventSectionCode CardiacArrestEventSectionTitle CardiacArrestEventSectionText CardiacArrestEventSectionCardiacArrestExistence' templateId.root='2.16.840.1.113883.17.3.10.1.14' code.code='67799-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Cardiac Arrest Section' title.mixed='EMS Cardiac Arrest Event'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tXU2UNp2EeKVkrUHX3NooA" base_Class="_Qlqj8HwGEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='CardiacArrestExistenceCardiacArrestCauseRelationship CardiacArrestExistenceCardiacArrestInformantParticipation CardiacArrestExistencePriorCPRRelationship CardiacArrestExistencePriorAEDRelationship CardiacArrestExistenceSpontaneousCirculationRelationship CardiacArrestExistenceDestinationRhythmRelationship CardiacArrestExistenceArrestRhythmRelationship' constraints.validation.error='CardiacArrestExistenceTemplateId CardiacArrestExistenceCode CardiacArrestExistenceValue CardiacArrestExistenceMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.27' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='ASSERTION' constraints.validation.warning='CardiacArrestExistenceEffectiveTime CardiacArrestExistenceNegationInd' value.code='410429000' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='cardiac arrest' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceCardiacArrestTimingRelationship inversionInd='TRUE' constraints.validation.error='CardiacArrestTimingRelationshipInversionInd CardiacArrestTimingRelationshipTypeCode' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceCardiacArrestCauseRelationship constraints.validation.error='CardiacArrestCauseRelationshipCardiacArrestCause CardiacArrestCauseRelationshipInversionInd CardiacArrestCauseRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceCardiacArrestInformantParticipation constraints.validation.error='CardiacArrestInformantParticipationCardiacArrestInformantRole CardiacArrestInformantParticipationTypeCode' typeCode='INF'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceCardiacArrestInformantParticipationCardiacArrestInformantRole classCode='AGNT' constraints.validation.error='CardiacArrestInformantRoleClassCode CardiacArrestInformantRoleCode' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistencePriorCPRRelationship constraints.validation.error='PriorCPRRelationshipPriorCPR PriorCPRRelationshipInversionInd PriorCPRRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistencePriorAEDRelationship constraints.validation.error='PriorAEDRelationshipPriorAEDUse PriorAEDRelationshipInversionInd PriorAEDRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceArrestRhythmRelationship constraints.validation.error='ArrestRhythmRelationshipObservation ArrestRhythmRelationshipInversionInd ArrestRhythmRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceSpontaneousCirculationRelationship constraints.validation.error='SpontaneousCirculationRelationshipReturnOfSpontaneousCirculation SpontaneousCirculationRelationshipInversionInd SpontaneousCirculationRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceDestinationRhythmRelationship constraints.validation.error='DestinationRhythmRelationshipDestinationRhythm DestinationRhythmRelationshipInversionInd DestinationRhythmRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tXfOYNp2EeKVkrUHX3NooA" base_Class="_QFoU0HwNEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='PriorCPRPriorCPRProviderParticipation' constraints.validation.error='PriorCPRTemplateId PriorCPRCode PriorCPRValue PriorCPRMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.125' code.code='67506-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='CPR prior to EMS arrival' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorCPRPriorCPRProviderParticipation constraints.validation.error='PriorCPRProviderParticipationPriorCPRProvider PriorCPRProviderParticipationTypeCode' typeCode='RESP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorCPRPriorCPRProviderParticipationPriorCPRProvider code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PriorCPRProviderCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tXjf0Np2EeKVkrUHX3NooA" base_Class="_qsAEkHwPEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PriorAEDUsePriorAEDProviderParticipation PriorAEDUseTemplateId PriorAEDUseCode PriorAEDUseValue PriorAEDUseMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.126' code.code='67508-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='AED use prior to EMS arrival' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorAEDUsePriorAEDProviderParticipation constraints.validation.error='PriorAEDProviderParticipationPriorAEDProvider PriorAEDProviderParticipationTypeCode' typeCode='RESP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorAEDUsePriorAEDProviderParticipationPriorAEDProvider code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PriorAEDProviderCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tXxiQNp2EeKVkrUHX3NooA" base_Class="_i4C-AH9aEeGht55Sz1eBOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectivesSectionTemplateId AdvanceDirectivesSectionCode AdvanceDirectivesSectionTitle AdvanceDirectivesSectionText AdvanceDirectivesSectionAdvancedDirectiveObservation' templateId.root='2.16.840.1.113883.17.3.10.1.12' code.code='67840-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Advance Directives Section' title.mixed='EMS Advance Directives Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tYZNUNp2EeKVkrUHX3NooA" base_Class="_nSjIgH9cEeGht55Sz1eBOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergiesAndAdverseReactionsSectionTemplateId AllergiesAndAdverseReactionsSectionCode AllergiesAndAdverseReactionsSectionTitle AllergiesAndAdverseReactionsSectionText AllergiesAndAdverseReactionsSectionObservation AllergiesAndAdverseReactionsSectionDrugAllergyProblemAct AllergiesAndAdverseReactionsSectionEnvironmentalAllergies' templateId.root='2.16.840.1.113883.17.3.10.1.13' code.code='48765-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Allergies and Adverse Reactions  Section' title.mixed='EMS Allergies and Adverse Reactions'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_tYn20Np2EeKVkrUHX3NooA" base_Generalization="_cWgjMIcnEeGqF6qfYwLiQw"/>
  <Ecore:EClass xmi:id="_tYpsANp2EeKVkrUHX3NooA" base_Class="_aDO5AIcnEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentMedicationSectionTemplateId CurrentMedicationSectionTitle CurrentMedicationSectionText CurrentMedicationSectionCurrentlyOnMedication CurrentMedicationSectionPatientOnAnticoagulants CurrentMedicationSectionCurrentMedication' templateId.root='2.16.840.1.113883.17.3.10.1.15' title.mixed='EMS Current Medications Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tZCGgNp2EeKVkrUHX3NooA" base_Class="_CFApcIzGEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EnvironmentalAllergiesExistenceOfEnvironmentalAllergy EnvironmentalAllergiesTemplateId' constraints.validation.info='EnvironmentalAllergiesEnvironmentalAllergy' templateId.root='2.16.840.1.1133883.17.3.10.1.49'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tZNFoNp2EeKVkrUHX3NooA" base_Class="_1XH7YIziEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SocialHistorySectionTemplateId SocialHistorySectionCode SocialHistorySectionCodeP SocialHistorySectionTitle SocialHistorySectionText SocialHistorySectionExistenceOfDrugUseIndication SocialHistorySectionDrugUseIndication' templateId.root='2.16.840.1.113883.17.3.10.1.22' code.code='67843-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Social History Section' title.mixed='EMS Social History'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_tZic0Np2EeKVkrUHX3NooA" base_Generalization="_jC0LoIzkEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_tZk5ENp2EeKVkrUHX3NooA" base_Class="_jCzkkIzkEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='emspcrVitalSignsSectionTemplateId emspcrVitalSignsSectionCode emspcrVitalSignsSectionTitle emspcrVitalSignsSectionText emspcrVitalSignsSectionVitalSignsOrganizer emspcrVitalSignsSectionPriorAidVitals emspcrVitalSignsSectionAdditionalVitalSignsOrganizer' templateId.root='2.16.840.1.113883.17.3.10.1.23' code.code='8716-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vital Signs' title.mixed='EMS Vital Signs'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tZ2l4Np2EeKVkrUHX3NooA" base_Class="_RNfAcIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowComaScoreOrganizerGlasgowEye GlasgowComaScoreOrganizerGlasgowMotor GlasgowComaScoreOrganizerGlasgowVerbal GlasgowComaScoreOrganizerTemplateId' constraints.validation.info='GlasgowComaScoreOrganizerGlasgowQualifier GlasgowComaScoreOrganizerEffectiveTime' constraints.validation.warning='GlasgowComaScoreOrganizerGlasgowTotal' templateId.root='2.16.840.1.1133883.17.3.10.1.170'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_taEBQNp2EeKVkrUHX3NooA" base_Generalization="_CzqWIJoiEeG_FLcaRgAa7g"/>
  <Ecore:EClass xmi:id="_taF2cNp2EeKVkrUHX3NooA" base_Class="_6223oJohEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhysicalAssessmentSectionTemplateId PhysicalAssessmentSectionCode PhysicalAssessmentSectionCodeP PhysicalAssessmentSectionTitle PhysicalAssessmentSectionText PhysicalAssessmentSectionPhysicalAssessmentOrganizer PhysicalAssessmentSectionPatientPregnancy PhysicalAssessmentSectionLastOralIntake PhysicalAssessmentSectionPatientAge PhysicalAssessmentSectionThrombolyticContraindications PhysicalAssessmentSectionBarriersToPatientCare' templateId.root='2.16.840.1.113883.17.3.10.1.20' code.code='29545-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical Assessment Section' constraints.validation.dependOn.PhysicalAssessmentSectionCode='PhysicalAssessmentSectionCodeP' title.mixed='EMS Physical Assessment Section'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_tadp4Np2EeKVkrUHX3NooA" base_Generalization="_d57s8JovEeG_FLcaRgAa7g"/>
  <Ecore:EClass xmi:id="_taffENp2EeKVkrUHX3NooA" base_Class="_c7crcJovEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='emspcrMedicationsAdministeredSectionTemplateId emspcrMedicationsAdministeredSectionCode emspcrMedicationsAdministeredSectionTitle emspcrMedicationsAdministeredSectionText emspcrMedicationsAdministeredSectionMedicationAdministered' templateId.root='2.16.840.1.113883.17.3.10.1.18' title.mixed='Medications Administered Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tas6cNp2EeKVkrUHX3NooA" base_Class="_5JQlAJovEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='MedicationAdministeredMedicationNotAdministeredEntryRelationship MedicationAdministeredMedicationComplicationRelationship MedicationAdministeredMedicationPerformerParticipation MedicationAdministeredMedicationAuthorizationRelationship MedicationAdministeredMedicationAdministrationDeviceParticipant MedicationAdministeredNegationInd MedicationAdministeredApproachSiteCodeP' constraints.validation.error='MedicationAdministeredMedicationConsumable MedicationAdministeredMedicationAdministeredResponseRelationship MedicationAdministeredMedicationPriorAdministrationRelationship MedicationAdministeredTemplateId MedicationAdministeredClassCode MedicationAdministeredDoseQuantity MedicationAdministeredEffectiveTime MedicationAdministeredRouteCode MedicationAdministeredRouteCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.72' classCode='SBADM' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1.1' routeCode.codeSystemName='FDA Route of Administration' constraints.validation.dependOn.MedicationAdministeredRouteCode='MedicationAdministeredRouteCodeP' approachSiteCode.code='15562006' approachSiteCode.codeSystem='2.16.840.1.113883.6.96' approachSiteCode.codeSystemName='SNOMEDCT' approachSiteCode.displayName='structure of respiratory region of nose' constraints.validation.warning='MedicationAdministeredApproachSiteCode' constraints.validation.dependOn.MedicationAdministeredApproachSiteCode='MedicationAdministeredApproachSiteCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationNotAdministeredReasonEntryRelationship constraints.validation.error='MedicationNotAdministeredReasonEntryRelationshipMedicationNotAdministeredReasonObservation MedicationNotAdministeredReasonEntryRelationshipInversionInd MedicationNotAdministeredReasonEntryRelationshipTypeCode MedicationNotAdministeredReasonEntryRelationshipTypeCodeP' inversionInd='TRUE' typeCode='RSON' constraints.validation.dependOn.MedicationNotAdministeredReasonEntryRelationshipTypeCode='MedicationNotAdministeredReasonEntryRelationshipTypeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumable constraints.validation.error='MedicationAdministeredConsumableMedicationManfacturedProduct'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProduct constraints.validation.error='MedicationManfacturedProductMedicationLabeledDrug'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProductMedicationMaterial code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='MedicationMaterialCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredResponseRelationship constraints.validation.error='MedicationAdministeredResponseRelationshipMedicationResponseObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationComplicationRelationship constraints.validation.error='MedicationComplicationRelationshipMedicationComplicationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPriorAdministrationRelationship constraints.validation.error='MedicationPriorAdministrationRelationshipMedicationPriorAdministrationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPerformerParticipation constraints.validation.error='MedicationPerformerParticipationMedicationPerformerRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPerformerParticipationMedicationPerformerRole code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='MedicationPerformerRoleCode MedicationPerformerRoleCodeP MedicationPerformerRoleId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAuthorizationRelationship constraints.validation.error='MedicationAuthorizationRelationshipMedicationAuthorization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorization classCode='INFRM' constraints.validation.error='MedicationAuthorizationClassCode MedicationAuthorizationClassCodeP MedicationAuthorizationCode' constraints.validation.dependOn.MedicationAuthorizationClassCode='MedicationAuthorizationClassCodeP' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipant constraints.validation.error='MedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRole MedicationAdministrationDeviceParticipantTypeCode' typeCode='DEV'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRole classCode='MANU' constraints.validation.error='MedicationAdministrationDeviceRoleClassCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDevice constraints.validation.error='MedicationAdministrationDeviceCode'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_tbNQwNp2EeKVkrUHX3NooA" base_Generalization="_4mzn0JumEeGzXI65shd6Fw"/>
  <Ecore:EClass xmi:id="_tbOe4Np2EeKVkrUHX3NooA" base_Class="_4QFw8JumEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProceduresPerformedSectionTemplateId ProceduresPerformedSectionCode ProceduresPerformedSectionCodeP ProceduresPerformedSectionTitle ProceduresPerformedSectionText' templateId.root='2.16.840.1.113883.17.3.10.1.21' code.code='29554-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Procedures Performed Section' constraints.validation.dependOn.ProceduresPerformedSectionCode='ProceduresPerformedSectionCodeP' title.mixed='EMS Procedures Performed' constraints.validation.info='ProceduresPerformedSectionProcedureActivityProcedure1'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tbmSUNp2EeKVkrUHX3NooA" base_Class="_K8JK8JuoEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='emspcrProcedureAbandonedProcedureRelationship emspcrProcedureAirwayConfirmationRelationship emspcrProcedureStatusCodeP emspcrProcedureApproachSiteCodeP emspcrProcedureNegationInd' constraints.validation.error='emspcrProcedureProcedurePriorRelationship emspcrProcedureProcedureNumberOfAttemptsRelationship emspcrProcedureProcedureSuccessfulRelationship emspcrProcedureProcedureComplicationsRelationship emspcrProcedureProcedurePatientResponseRelationship emspcrProcedureProcedurePerformer emspcrProcedureTemplateId emspcrProcedureCode emspcrProcedureEffectiveTime emspcrProcedureStatusCode emspcrProcedureApproachSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.98' statusCode.code='Aborted' constraints.validation.dependOn.emspcrProcedureStatusCode='emspcrProcedureStatusCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.6.1' approachSiteCode.codeSystemName='LOINC' constraints.validation.dependOn.emspcrProcedureApproachSiteCode='emspcrProcedureApproachSiteCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAbandonedProcedureRelationship constraints.validation.error='AbandonedProcedureRelationshipAbandonedProcedureReasonObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePriorRelationship constraints.validation.error='ProcedurePriorRelationshipProcedurePriorIndicator'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureNumberOfAttemptsRelationship constraints.validation.error='ProcedureNumberOfAttemptsRelationshipProcedureNumberOfAttemptsObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureSuccessfulRelationship constraints.validation.error='ProcedureSuccessfulRelationshipProcedureSuccessfulObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureComplicationsRelationship constraints.validation.error='ProcedureComplicationsRelationshipProcedureComplicationsObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePatientResponseRelationship constraints.validation.error='ProcedurePatientResponseRelationshipProcedurePatientResponseObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePerformer constraints.validation.error='ProcedurePerformerProcedurePerformerEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePerformerProcedurePerformerEntity code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='ProcedurePerformerEntityCode ProcedurePerformerEntityCodeP ProcedurePerformerEntityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayConfirmationRelationship constraints.validation.error='AirwayConfirmationRelationshipAirwayConfirmationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureReasonProcedureNotAttemptedRelationship constraints.validation.error='ReasonProcedureNotAttemptedRelationshipReasonProcedureNotAttemptedObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipant constraints.validation.error='AirwayDeviceParticipantAirwayDeviceParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipantAirwayDeviceParticipantRole constraints.validation.error='AirwayDeviceParticipantRoleAirwayDeviceParticipantType'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipantAirwayDeviceParticipantRoleAirwayDeviceParticipantType code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='AirwayDeviceParticipantTypeCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tcLhINp2EeKVkrUHX3NooA" base_Class="_iDmQYJ9mEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientCareNarrativeSectionTemplateId PatientCareNarrativeSectionCode PatientCareNarrativeSectionCodeP PatientCareNarrativeSectionTitle PatientCareNarrativeSectionText' templateId.root='2.16.840.1.113883.17.3.10.1.1' code.code='67781-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Patient Care Report Narrative Section' title.mixed='EMS Patient Care Report Narrative'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tchfYNp2EeKVkrUHX3NooA" base_Class="_OV4TIJ9nEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchSectionTemplateId DispatchSectionCode DispatchSectionTitle DispatchSectionText DispatchSectionEmergencyMedicalDispatchObservation DispatchSectionComplaintReportedByDispatch' templateId.root='2.16.840.1.113883.17.3.10.1.2' code.code='67660-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Dispatch Section' title.mixed='EMS Dispatch'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tcwv8Np2EeKVkrUHX3NooA" base_Class="_LI7M8J99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseSectionTemplateId ResponseSectionCode ResponseSectionCodeP ResponseSectionTitle ResponseSectionText ResponseSectionDelayOrganizer ResponseSectionDispatchLocationOrganizer ResponseSectionResponseOdometerReadingOrganizer ResponseSectionResponseModeToScene' templateId.root='2.16.840.1.113883.17.3.10.1.3' code.code='67664-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response Section' title.mixed='EMS Response'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tdGuMNp2EeKVkrUHX3NooA" base_Class="_0padgJ99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DelayOrganizerDispatchDelayRelationship DelayOrganizerResponseDelayRelationship DelayOrganizerSceneDelayRelationship DelayOrganizerTransportDelayRelationship DelayOrganizerTurnaoundDelayRelationship DelayOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.95'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerDispatchDelayRelationship constraints.validation.error='DispatchDelayRelationshipDispatchDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerResponseDelayRelationship constraints.validation.error='ResponseDelayRelationshipResponseDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerSceneDelayRelationship constraints.validation.error='SceneDelayRelationshipSceneDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerTransportDelayRelationship constraints.validation.error='TransportDelayRelationshipTransportDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerTurnaoundDelayRelationship constraints.validation.error='TurnaoundDelayRelationshipTurnaroundDelay'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tdcscNp2EeKVkrUHX3NooA" base_Class="_MiN-UJ-BEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='DispatchLocationOrganizerDispatchLocationNameRelationship DispatchLocationOrganizerDispatchLocationLatitudeRelationship DispatchLocationOrganizerDispatchLocationLongtudeRelationship' constraints.validation.error='DispatchLocationOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.96'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationNameRelationship constraints.validation.error='DispatchLocationNameRelationshipDispatchLocationName DispatchLocationNameRelationshipTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationLatitudeRelationship constraints.validation.error='DispatchLocationLatitudeRelationshipDispatchLocationLatitude DispatchLocationLatitudeRelationshipTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationLongitudeRelationship constraints.validation.error='DispatchLocationLongitudeRelationshipObservation DispatchLocationLongitudeRelationshipTemplateId' templateId.root='null'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tdnrkNp2EeKVkrUHX3NooA" base_Class="_yVviAJ-OEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship' constraints.validation.error='ResponseOdometerReadingOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.97'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship constraints.validation.error='ResponseBeginningOdometerReadingRelationshipResponseBeginningOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship constraints.validation.error='ResponseOnSceneOdometerReadingRelationshipResponseOnSceneOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship constraints.validation.error='ResponseDestinationOdometerReadingRelationshipResponseDestinationOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship constraints.validation.error='ResponseEndingOdometerReadingRelationshipResponseEndingOdometerReading'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tdw1gNp2EeKVkrUHX3NooA" base_Class="_i-lM8J-dEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispositionSectionTemplateId DispositionSectionCode DispositionSectionCodeP DispositionSectionTitle DispositionSectionText DispositionSectionNumberOfPatientsObservation DispositionSectionIncidentDispositionObservation DispositionSectionTransportModeObservation DispositionSectionTransportMethodObservation DispositionSectionReasonForChoosingDestinationObservation DispositionSectionPrearrivalActivationObservation DispositionSectionPatientConditionChangeAtDestinationObservation' templateId.root='2.16.840.1.113883.17.3.10.1.4' code.code='67796-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Disposition Section' title.mixed='EMS Disposition' constraints.validation.info='DispositionSectionEntry4'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_teGMsNp2EeKVkrUHX3NooA" base_Class="_GGotEJ-kEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PersonnelAdverseEventSectionTemplateId PersonnelAdverseEventSectionCode PersonnelAdverseEventSectionCodeP PersonnelAdverseEventSectionTitle PersonnelAdverseEventSectionText PersonnelAdverseEventSectionAdverseEventIndicator PersonnelAdverseEventSectionAdverseEventTypeObservation' templateId.root='2.16.840.1.113883.17.3.10.1.6' code.code='67658-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Exposures or Injuries of EMS Personnel Section' title.mixed='Exposures or Injuries of EMS Personnel'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_teZusNp2EeKVkrUHX3NooA" base_Class="_aK7P4J-mEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolSectionTemplateId ProtocolSectionCode ProtocolSectionTitle ProtocolSectionText ProtocolSectionProtocolObservation ProtocolSectionCandidatePatientRegistryType' templateId.root='2.16.840.1.113883.17.3.10.1.7' code.code='67537-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Protocol Section' title.mixed='EMS Protocol Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_teoYMNp2EeKVkrUHX3NooA" base_Class="_h3A8IKK3EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SceneSectionTemplateId SceneSectionCode SceneSectionTitle SceneSectionText SceneSectionFirstUnitIndicator SceneSectionFirstUnitOnScene SceneSectionScenePatientCount SceneSectionMassCasualtyIndicator SceneSectionLocationTypeObservation' templateId.root='2.16.840.1.113883.17.3.10.1.8' code.code='67665-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Scene Section' title.mixed='EMS Scene'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_te6sENp2EeKVkrUHX3NooA" base_Class="_olqMIKK8EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SituationSectionTemplateId SituationSectionCode SituationSectionCodeP SituationSectionTitle SituationSectionText SituationSectionComplaint SituationSectionPossibleInjury SituationSectionProviderPrimaryImpression SituationSectionPrimarySymptom SituationSectionOtherSymptoms SituationSectionProviderSecondaryImpressions SituationSectionInitialPatientAcuity' templateId.root='2.16.840.1.113883.17.3.10.1.9' code.code='67666-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Situation Section' title.mixed='EMS Situation Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tfTGkNp2EeKVkrUHX3NooA" base_Class="_KEZzkKg-EeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='ComplaintComplaintDurationRelationship ComplaintComplaintTypeRelationship ComplaintValue' constraints.validation.warning='ComplaintComplaintOrganSystemRelationship ComplaintTargetSiteCodeP' constraints.validation.error='ComplaintTemplateId ComplaintCode ComplaintCodeP ComplaintTargetSiteCode ComplaintEffectiveTime ComplaintMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.63' code.code='10154-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS complaint' constraints.validation.dependOn.ComplaintCode='ComplaintCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrComplaintComplaintOrganSystemRelationship constraints.validation.error='ComplaintOrganSystemRelationshipComplaintOrganSystem'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tfcQgNp2EeKVkrUHX3NooA" base_Class="_ClVY0KxCEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TimesSectionTemplateId TimesSectionCode TimesSectionTitle TimesSectionText TimesSectionCallTime TimesSectionUnitNotifiedTime TimesSectionUnitEnRouteTime TimesSectionUnitOnSceneTime TimesSectionUnitAtPatienttTime TimesSectionUnitLeftSceneTime TimesSectionPatientArrivedAtDestinationTime TimesSectionUnitBackInServiceTime TimesSectionDispatchNotifiedTime' templateId.root='2.16.840.1.113883.17.3.10.1.10' code.code='67667-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Times Section' title.mixed='EMS Times'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tf7YsNp2EeKVkrUHX3NooA" base_Class="_HLO9kIzgEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HistoryOfProceduresOrganizerExistenceOfHistoryOfProcedureComponent HistoryOfProceduresOrganizerTemplateId' constraints.validation.info='HistoryOfProceduresOrganizerHistoryOfProceduresComponent' templateId.root='2.16.840.1.1133883.17.3.10.1.62'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrHistoryOfProceduresOrganizerExistenceOfHistoryOfProcedureComponent constraints.validation.error='ExistenceOfHistoryOfProcedureComponentProcedure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrHistoryOfProceduresOrganizerHistoryOfProceduresComponent constraints.validation.error='HistoryOfProceduresComponentHistoryOfProcedure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrHistoryOfProceduresOrganizerHistoryOfProceduresComponentHistoryOfProcedure code.codeSystem='2.16.840.1.113883.6.4' code.codeSystemName='ICD-10 PCS' constraints.validation.error='HistoryOfProcedureCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tgn8QNp2EeKVkrUHX3NooA" base_Class="_mwn8MIcoEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentMedicationCurrentMedicationConsumable CurrentMedicationTemplateId CurrentMedicationRouteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.77' constraints.validation.warning='CurrentMedicationDoseQuantity CurrentMedicationRouteCodeP' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1.1' routeCode.codeSystemName='FDA Route of Administration' constraints.validation.dependOn.CurrentMedicationRouteCode='CurrentMedicationRouteCodeP' constraints.validation.info='CurrentMedicationNegationInd CurrentMedicationNullFlavor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumable constraints.validation.error='CurrentMedicationConsumableManufacturedProduct'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumableCurrentMedicationProduct constraints.validation.error='CurrentMedicationProductManufacturedLabeledDrug'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrug code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='CurrentMedicationDrugCode CurrentMedicationDrugCodeP' constraints.validation.dependOn.CurrentMedicationDrugCode='CurrentMedicationDrugCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_thGdYNp2EeKVkrUHX3NooA" base_Class="_JnfD8IzoEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='emspcrVitalSignsOrganizerSystolicBloodPressureComponent emspcrVitalSignsOrganizerDiastolicBloodPressureComponent emspcrVitalSignsOrganizerHeartRateComponent emspcrVitalSignsOrganizerRespiratoryRateComponent emspcrVitalSignsOrganizerBodyTemperatureComponent emspcrVitalSignsOrganizerOxygenSaturationComponent' constraints.validation.error='emspcrVitalSignsOrganizerTemplateId emspcrVitalSignsOrganizerEffectiveTime' templateId.root='2.16.840.1.1133883.17.3.10.1.28'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerSystolicBloodPressureComponent constraints.validation.error='SystolicBloodPressureComponentSystolicBloodPressure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerDiastolicBloodPressureComponent constraints.validation.error='DiastolicBloodPressureComponentDiastolicBloodPressure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerHeartRateComponent constraints.validation.error='HeartRateComponentHeartRate'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerRespiratoryRateComponent constraints.validation.error='RespiratoryRateComponentRespiratoryRate'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerBodyTemperatureComponent constraints.validation.error='BodyTemperatureComponentBodyTemperature'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerOxygenSaturationComponent constraints.validation.error='OxygenSaturationComponentOxygenSaturation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_thjwYNp2EeKVkrUHX3NooA" base_Class="_F-GKoLMNEeKNbt70lHd2Eg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='AdditionalVitalSignsOrganizerStrokeScoreComponent AdditionalVitalSignsOrganizerPainScoreComponent AdditionalVitalSignsOrganizerLevelOfResponsivenessComponent AdditionalVitalSignsOrganizerBloodGlucoseComponent AdditionalVitalSignsOrganizerCarbonMonoxideComponent AdditionalVitalSignsOrganizerCarbonDioxideComponent AdditionalVitalSignsOrganizerCardiacRhythmComponent AdditionalVitalSignsOrganizerEffectiveTime' constraints.validation.error='AdditionalVitalSignsOrganizerTemplateId AdditionalVitalSignsOrganizerMoodCode AdditionalVitalSignsOrganizerGlasgowComaScoreOrganizer' templateId.root='2.16.840.1.1133883.17.3.10.1.30' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_th35cNp2EeKVkrUHX3NooA" base_Class="_zbYvIJoiEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='PhysicalAssessmentOrganizerComponent1 PhysicalAssessmentOrganizerComponent2 PhysicalAssessmentOrganizerComponent3 PhysicalAssessmentOrganizerComponent4 PhysicalAssessmentOrganizerComponent5 PhysicalAssessmentOrganizerComponent6 PhysicalAssessmentOrganizerComponent7 PhysicalAssessmentOrganizerComponent8 PhysicalAssessmentOrganizerComponent9 PhysicalAssessmentOrganizerComponent10 PhysicalAssessmentOrganizerComponent11 PhysicalAssessmentOrganizerComponent12 PhysicalAssessmentOrganizerComponent13 PhysicalAssessmentOrganizerComponent14' constraints.validation.error='PhysicalAssessmentOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.78'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerBodyWeightComponent constraints.validation.error='BodyWeightComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerLengthBasedPatientBodyWeightClassComponent constraints.validation.error='LengthBasedPatientBodyWeightClassComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerSkinAssessmentComponent constraints.validation.error='SkinAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerHeadAssessmentComponent constraints.validation.error='HeadAssessmentComponentObservation HeadAssessmentComponentTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerFaceAssessmentComponent constraints.validation.error='FaceAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerNeckAssessmentComponent constraints.validation.error='NeckAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerChestAndLungsAssessmentComponent constraints.validation.error='ChestAndLungsAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerHeartAssessmentComponent constraints.validation.error='HeartAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerAbdomenAssessmentComponent constraints.validation.error='AbdomenAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerPelvicAndGenitourinaryAssessmentComponent constraints.validation.error='PelvicAndGenitourinaryAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerBackAndSpineAssessmentComponent constraints.validation.error='BackAndSpineAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerExtremitiesAssessmentComponent constraints.validation.error='ExtremitiesAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerEyeAssessmentComponent constraints.validation.info='EyeAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerMentalStatusAssessmentComponent constraints.validation.info='MentalStatusAssessmentComponentObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ti2J0Np2EeKVkrUHX3NooA" base_Class="_3C3WwMWqEeK3RfDsHamIUQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugAllergyProblemActParticipant1 DrugAllergyProblemActTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.48'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDrugAllergyProblemActDrugAllergyParticipation constraints.validation.error='DrugAllergyParticipationDrugAllergyParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDrugAllergyProblemActDrugAllergyParticipationDrugAllergyParticipantRole constraints.validation.error='DrugAllergyParticipantRoleDrugAllergyEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ti7pYNp2EeKVkrUHX3NooA" base_Class="_uMxJUIzpEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='CardiacRhythmParticipant1' constraints.validation.error='CardiacRhythmTemplateId CardiacRhythmCode CardiacRhythmCodeP CardiacRhythmMethodCode CardiacRhythmMethodCodeP CardiacRhythmValue CardiacRhythmValueP CardiacRhythmMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.169' code.code='67519-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac rhythm' constraints.validation.dependOn.CardiacRhythmCode='CardiacRhythmCodeP' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' constraints.validation.info='CardiacRhythmEffectiveTime' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipant constraints.validation.error='ECGParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipantECGParticipantRole constraints.validation.error='ECGParticipantRolePlayingDevice'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipantECGParticipantRoleECGDevice code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='ECGDeviceCode ECGDeviceCodeP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_tkcFQNp2EeKVkrUHX3NooA" base_Generalization="_KLr9MIzoEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_tknEYNp2EeKVkrUHX3NooA" base_Class="_Dq57UIzpEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PriorAidVitalsTemplateId PriorAidVitalsCode PriorAidVitalsValue PriorAidVitalsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.29' code.code='67518-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Obtained prior to units EMS care' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tlEXYNp2EeKVkrUHX3NooA" base_Class="_Dfaa4J-eEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NumberOfPatientsObservationTemplateId NumberOfPatientsObservationCode NumberOfPatientsObservationCodeP NumberOfPatientsObservationValue NumberOfPatientsObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.31' code.code='67547-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Number of patients' constraints.validation.dependOn.NumberOfPatientsObservationCode='NumberOfPatientsObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tlaVoNp2EeKVkrUHX3NooA" base_Class="_j3YnxZ-eEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='IncidentDispositionObservationTemplateId IncidentDispositionObservationCode IncidentDispositionObservationCodeP IncidentDispositionObservationValue IncidentDispositionObservationValueP IncidentDispositionObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.32' code.code='67548-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS incident disposition' constraints.validation.dependOn.IncidentDispositionObservationCode='IncidentDispositionObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tl3BkNp2EeKVkrUHX3NooA" base_Class="_nv-0gp-fEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportModeObservationTemplateId TransportModeObservationCode TransportModeObservationCodeP TransportModeObservationValue TransportModeObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.33' code.code='67550-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS transport mode' constraints.validation.dependOn.TransportModeObservationCode='TransportModeObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tmTGcNp2EeKVkrUHX3NooA" base_Class="_EagUtZ-fEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportMethodObservationTemplateId TransportMethodObservationCode TransportMethodObservationCodeP TransportMethodObservationValue TransportMethodObservationValueP TransportMethodObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.34' code.code='67549-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS transport method' constraints.validation.dependOn.TransportMethodObservationCode='TransportMethodObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tmwZcNp2EeKVkrUHX3NooA" base_Class="_cm1D5Z-hEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonForChoosingDestinationObservationTemplateId ReasonForChoosingDestinationObservationCode ReasonForChoosingDestinationObservationCodeP ReasonForChoosingDestinationObservationValue ReasonForChoosingDestinationObservationValueP ReasonForChoosingDestinationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.35' code.code='67552-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS reason for choosing destination' constraints.validation.dependOn.ReasonForChoosingDestinationObservationCode='ReasonForChoosingDestinationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tnNscNp2EeKVkrUHX3NooA" base_Class="_083apZ-hEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PrearrivalActivationObservationTemplateId PrearrivalActivationObservationCode PrearrivalActivationObservationCodeP PrearrivalActivationObservationValue PrearrivalActivationObservationEffectiveTime PrearrivalActivationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.36' code.code='69462-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS prearrival activation performed' constraints.validation.dependOn.PrearrivalActivationObservationCode='PrearrivalActivationObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tnmuANp2EeKVkrUHX3NooA" base_Class="_Q4zL9Z-gEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientConditionChangeAtDestinationObservationTemplateId PatientConditionChangeAtDestinationObservationCode PatientConditionChangeAtDestinationObservationCodeP PatientConditionChangeAtDestinationObservationValue PatientConditionChangeAtDestinationObservationValueP PatientConditionChangeAtDestinationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.37' code.code='67551-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS patient condition change at destination' constraints.validation.dependOn.PatientConditionChangeAtDestinationObservationCode='PatientConditionChangeAtDestinationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_toeQsNp2EeKVkrUHX3NooA" base_Class="_1u74sKxCEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CallTimeTemplateId CallTimeCode CallTimeCodeP CallTimeValue CallTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.38' code.code='69469-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Call time' constraints.validation.dependOn.CallTimeCode='CallTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_towkkNp2EeKVkrUHX3NooA" base_Class="_JKerYKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitNotifiedTimeTemplateId UnitNotifiedTimeCode UnitNotifiedTimeCodeP UnitNotifiedTimeValue UnitNotifiedTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.39' code.code='69471-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit notified time' constraints.validation.dependOn.UnitNotifiedTimeCode='UnitNotifiedTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tpC4cNp2EeKVkrUHX3NooA" base_Class="_UyaX0KxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitEnRouteTimeTemplateId UnitEnRouteTimeCode UnitEnRouteTimeCodeP UnitEnRouteTimeValue UnitEnRouteTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.40' code.code='69472-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit en route time' constraints.validation.dependOn.UnitEnRouteTimeCode='UnitEnRouteTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tpVMUNp2EeKVkrUHX3NooA" base_Class="_iGh5QKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitOnSceneTimeTemplateId UnitOnSceneTimeCode UnitOnSceneTimeCodeP UnitOnSceneTimeValue UnitOnSceneTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.41' code.code='69473-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit on scene time' constraints.validation.dependOn.UnitOnSceneTimeCode='UnitOnSceneTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tpoHQNp2EeKVkrUHX3NooA" base_Class="_yt7JUKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitAtPatienttTimeTemplateId UnitAtPatienttTimeCode UnitAtPatienttTimeCodeP UnitAtPatienttTimeValue UnitAtPatienttTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.42' code.code='69474-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit at patient time' constraints.validation.dependOn.UnitAtPatienttTimeCode='UnitAtPatienttTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tp7pQNp2EeKVkrUHX3NooA" base_Class="_6w124KxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitLeftSceneTimeTemplateId UnitLeftSceneTimeCode UnitLeftSceneTimeCodeP UnitLeftSceneTimeValue UnitLeftSceneTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.43' code.code='69475-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit left scene time' constraints.validation.dependOn.UnitLeftSceneTimeCode='UnitLeftSceneTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tqNWENp2EeKVkrUHX3NooA" base_Class="_DaIA4KxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientArrivedAtDestinationTimeTemplateId PatientArrivedAtDestinationTimeCode PatientArrivedAtDestinationTimeCodeP PatientArrivedAtDestinationTimeValue PatientArrivedAtDestinationTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.44' code.code='69476-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient arrived at destination time' constraints.validation.dependOn.PatientArrivedAtDestinationTimeCode='PatientArrivedAtDestinationTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tqfp8Np2EeKVkrUHX3NooA" base_Class="_KrhK4KxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitBackInServiceTimeTemplateId UnitBackInServiceTimeCode UnitBackInServiceTimeCodeP UnitBackInServiceTimeValue UnitBackInServiceTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.45' code.code='69477-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit back in service time' constraints.validation.dependOn.UnitBackInServiceTimeCode='UnitBackInServiceTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tqx90Np2EeKVkrUHX3NooA" base_Class="_UFgZEKxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchNotifiedTimeTemplateId DispatchNotifiedTimeCode DispatchNotifiedTimeCodeP DispatchNotifiedTimeValue DispatchNotifiedTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.46' code.code='69470-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch notified time' constraints.validation.dependOn.DispatchNotifiedTimeCode='DispatchNotifiedTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_trH8ENp2EeKVkrUHX3NooA" base_Class="_xCcE0Iy7EeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvancedDirectiveObservationTemplateId AdvancedDirectiveObservationCode AdvancedDirectiveObservationValue AdvancedDirectiveObservationValueP AdvancedDirectiveObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.98' code.code='67516-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Advanced directive' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_trg9oNp2EeKVkrUHX3NooA" base_Generalization="_4F12sMWqEeK3RfDsHamIUQ"/>
  <Ecore:EClass xmi:id="_trvnINp2EeKVkrUHX3NooA" base_Class="_KEFo8HSVEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryCauseCategoryTemplateId InjuryCauseCategoryCode InjuryCauseCategoryValue InjuryCauseCategoryMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.50' code.code='69543-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Injury Cause' value.codeSystem='2.16.840.1.113883.6.3.1' value.codeSystemName='ICD-10' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tsE-UNp2EeKVkrUHX3NooA" base_Class="_aS16EHSWEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryMechanismTemplateId InjuryMechanismCode InjuryMechanismValue InjuryMechanismMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.51' code.code='67494-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Injury Mechanism' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tsZHYNp2EeKVkrUHX3NooA" base_Class="_lTHsIIcXEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TraumaCenterCriteriaTemplateId TraumaCenterCriteriaCode TraumaCenterCriteriaValue TraumaCenterCriteriaMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.52' code.code='67495-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Trauma Center Critieria' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tsvFoNp2EeKVkrUHX3NooA" base_Class="_vuraIIcZEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryRiskFactorTemplateId InjuryRiskFactorCode InjuryRiskFactorValue InjuryRiskFactorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.53' code.code='67496-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Other injury risk factors' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ttD1wNp2EeKVkrUHX3NooA" base_Class="_nvhVwIcaEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VehicleImpactAreaTemplateId VehicleImpactAreaCode VehicleImpactAreaValue VehicleImpactAreaMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.54' code.code='67497-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Location of impact on the vehicle' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ttXXwNp2EeKVkrUHX3NooA" base_Class="_zMwjMIccEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientLocationInVehicleTemplateId PatientLocationInVehicleCode PatientLocationInVehicleValue PatientLocationInVehicleMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.55' code.code='67498-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Location of patient in vehicle' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tt90sNp2EeKVkrUHX3NooA" base_Class="_bsVJUIcdEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VehicleOccupantSafetyEquipmentTemplateId VehicleOccupantSafetyEquipmentCode VehicleOccupantSafetyEquipmentValue VehicleOccupantSafetyEquipmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.56' code.code='67499-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Safety equipment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tuR9wNp2EeKVkrUHX3NooA" base_Class="_2lRhsIcdEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AirbagDeploymentStatusTemplateId AirbagDeploymentStatusCode AirbagDeploymentStatusValue AirbagDeploymentStatusMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.57' code.code='67500-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Airbag deployment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tumG0Np2EeKVkrUHX3NooA" base_Class="_auKbcIceEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeightOfFallTemplateId HeightOfFallCode HeightOfFallValue HeightOfFallMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.58' code.code='67501-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Height of fall' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tu2lgNp2EeKVkrUHX3NooA" base_Class="_wKL4IIceEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DisasterTypeTemplateId DisasterTypeCode DisasterTypeValue DisasterTypeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.59' code.code='69463-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Suspected intentional or unintentional disaster' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tvNK0Np2EeKVkrUHX3NooA" base_Class="_W_uRYIzdEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfHistoryOfConditionTemplateId ExistenceOfHistoryOfConditionCode ExistenceOfHistoryOfConditionValue ExistenceOfHistoryOfConditionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.60' code.code='67793-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Has the patient had any significant medical conditions' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tvamMNp2EeKVkrUHX3NooA" base_Class="_5XgZ4IzdEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HistoryOfConditionTemplateId HistoryOfConditionCode HistoryOfConditionCodeP HistoryOfConditionValue HistoryOfConditionValueP HistoryOfConditionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.61' code.code='68487-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS History of Condition' constraints.validation.dependOn.HistoryOfConditionCode='HistoryOfConditionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_twlq4Np2EeKVkrUHX3NooA" base_Class="_7nP0MKhCEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PossibleInjuryTemplateId PossibleInjuryCode PossibleInjuryCodeP PossibleInjuryValue PossibleInjuryMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.64' code.code='69467-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Possible injury' constraints.validation.dependOn.PossibleInjuryCode='PossibleInjuryCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tw7CENp2EeKVkrUHX3NooA" base_Class="_0C-8EKhDEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProviderPrimaryImpressionTemplateId ProviderPrimaryImpressionCode ProviderPrimaryImpressionCodeP ProviderPrimaryImpressionValue ProviderPrimaryImpressionValueP ProviderPrimaryImpressionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.65' code.code='67492-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Provider Primary Impression' constraints.validation.dependOn.ProviderPrimaryImpressionCode='ProviderPrimaryImpressionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_txWf4Np2EeKVkrUHX3NooA" base_Class="_KOxo0KhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PrimarySymptomTemplateId PrimarySymptomCode PrimarySymptomCodeP PrimarySymptomValue PrimarySymptomValueP PrimarySymptomMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.66' code.code='67774-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Primary Symptom' constraints.validation.dependOn.PrimarySymptomCode='PrimarySymptomCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tx1BANp2EeKVkrUHX3NooA" base_Class="_g5iJgKhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OtherSymptomsTemplateId OtherSymptomsCode OtherSymptomsCodeP OtherSymptomsValue OtherSymptomsValueP OtherSymptomsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.67' code.code='67776-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Other symptoms' constraints.validation.dependOn.OtherSymptomsCode='OtherSymptomsCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tyRF4Np2EeKVkrUHX3NooA" base_Class="_0mPksKhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProviderSecondaryImpressionsTemplateId ProviderSecondaryImpressionsCode ProviderSecondaryImpressionsCodeP ProviderSecondaryImpressionsValue ProviderSecondaryImpressionsValueP ProviderSecondaryImpressionsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.68' code.code='69542-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Provider Secondary Impressions' constraints.validation.dependOn.ProviderSecondaryImpressionsCode='ProviderSecondaryImpressionsCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tyu_8Np2EeKVkrUHX3NooA" base_Class="_NZgqAKhFEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InitialPatientAcuityTemplateId InitialPatientAcuityCode InitialPatientAcuityCodeP InitialPatientAcuityValue InitialPatientAcuityValueP InitialPatientAcuityMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.69' code.code='67493-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Initial Patient Acuity' constraints.validation.dependOn.InitialPatientAcuityCode='InitialPatientAcuityCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tzOvMNp2EeKVkrUHX3NooA" base_Class="_Mr964IzjEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfDrugUseIndicationTemplateId ExistenceOfDrugUseIndicationCode ExistenceOfDrugUseIndicationCodeP ExistenceOfDrugUseIndicationValue ExistenceOfDrugUseIndicationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.70' code.code='69757-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Indications of drug or alcohol use by the patient' constraints.validation.dependOn.ExistenceOfDrugUseIndicationCode='ExistenceOfDrugUseIndicationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_tziRMNp2EeKVkrUHX3NooA" base_Class="_oJHzkIzjEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugUseIndicationTemplateId DrugUseIndicationCode DrugUseIndicationValue DrugUseIndicationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.71' code.code='67669-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Alcohol - drug use' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_tz2aQNp2EeKVkrUHX3NooA" base_Generalization="_6L6U0JovEeG_FLcaRgAa7g"/>
  <Ecore:EClass xmi:id="_t1gnINp2EeKVkrUHX3NooA" base_Class="_46UUAJ9nEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EmergencyMedicalDispatchObservationTemplateId EmergencyMedicalDispatchObservationCode EmergencyMedicalDispatchObservationCodeP EmergencyMedicalDispatchObservationValue EmergencyMedicalDispatchObservationValueP EmergencyMedicalDispatchObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.73' code.code='67488-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMDPerformed' constraints.validation.dependOn.EmergencyMedicalDispatchObservationCode='EmergencyMedicalDispatchObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t19TENp2EeKVkrUHX3NooA" base_Class="__LltsJ97EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintReportedByDispatchTemplateId ComplaintReportedByDispatchCode ComplaintReportedByDispatchCodeP ComplaintReportedByDispatchValue ComplaintReportedByDispatchValueP ComplaintReportedByDispatchMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.74' code.code='67570-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complaint reported by dispatch' constraints.validation.dependOn.ComplaintReportedByDispatchCode='ComplaintReportedByDispatchCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t2Z_ANp2EeKVkrUHX3NooA" base_Class="_sUm-oIcnEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentlyOnMedicationTemplateId CurrentlyOnMedicationCode CurrentlyOnMedicationValue CurrentlyOnMedicationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.75' code.code='67791-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Currently on medication' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t2rr0Np2EeKVkrUHX3NooA" base_Class="_RZqlsIcoEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientOnAnticoagulantsTemplateId PatientOnAnticoagulantsCode PatientOnAnticoagulantsValue PatientOnAnticoagulantsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.76' code.code='69749-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient on anticoagulants' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t268YNp2EeKVkrUHX3NooA" base_Generalization="_pv80EIcoEeGqF6qfYwLiQw"/>
  <Ecore:EClass xmi:id="_t3wp4Np2EeKVkrUHX3NooA" base_Class="_sW8QcJosEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientPregnancyTemplateId PatientPregnancyCode PatientPregnancyCodeP PatientPregnancyValue PatientPregnancyValueP PatientPregnancyMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.79' code.code='67471-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient Pregnancy' constraints.validation.dependOn.PatientPregnancyCode='PatientPregnancyCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t4PyENp2EeKVkrUHX3NooA" base_Class="_S1I0sJotEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LastOralIntakeTemplateId LastOralIntakeCode LastOralIntakeCodeP LastOralIntakeValue LastOralIntakeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.80' code.code='67517-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Last oral intake' constraints.validation.dependOn.LastOralIntakeCode='LastOralIntakeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t4lJQNp2EeKVkrUHX3NooA" base_Class="_rhjrIJotEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientAgeTemplateId PatientAgeCode PatientAgeCodeP PatientAgeValue PatientAgeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.81' code.code='30525-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient age' constraints.validation.dependOn.PatientAgeCode='PatientAgeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t455YNp2EeKVkrUHX3NooA" base_Class="_HuCH8JouEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ThrombolyticContraindicationsTemplateId ThrombolyticContraindicationsCode ThrombolyticContraindicationsCodeP ThrombolyticContraindicationsValue ThrombolyticContraindicationsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.82' code.code='67523-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Contraindications to thrombolytic use' constraints.validation.dependOn.ThrombolyticContraindicationsCode='ThrombolyticContraindicationsCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t5S68Np2EeKVkrUHX3NooA" base_Class="_qlUP4JouEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BarriersToPatientCareTemplateId BarriersToPatientCareCode BarriersToPatientCareCodeP BarriersToPatientCareValue BarriersToPatientCareValueP BarriersToPatientCareMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.83' code.code='67523-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Barriers to patient care' constraints.validation.dependOn.BarriersToPatientCareCode='BarriersToPatientCareCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t5z4UNp2EeKVkrUHX3NooA" base_Class="_Ox86UKK4EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FirstUnitIndicatorTemplateId FirstUnitIndicatorCode FirstUnitIndicatorCodeP FirstUnitIndicatorValue FirstUnitIndicatorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.84' code.code='67481-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS reporter is first unit on scene' constraints.validation.dependOn.FirstUnitIndicatorCode='FirstUnitIndicatorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t6FlINp2EeKVkrUHX3NooA" base_Class="_JNrkAKK5EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FirstUnitOnSceneTemplateId FirstUnitOnSceneCode FirstUnitOnSceneCodeP FirstUnitOnSceneValue FirstUnitOnSceneMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.85' code.code='67481-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Name of first unit on scene' constraints.validation.dependOn.FirstUnitOnSceneCode='FirstUnitOnSceneCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t6d_oNp2EeKVkrUHX3NooA" base_Class="_wPLCkKK5EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ScenePatientCountTemplateId ScenePatientCountCode ScenePatientCountCodeP ScenePatientCountValue ScenePatientCountMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.86' code.code='67489-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Count of patients at scene' constraints.validation.dependOn.ScenePatientCountCode='ScenePatientCountCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t6vscNp2EeKVkrUHX3NooA" base_Class="_E-SEAKK8EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MassCasualtyIndicatorTemplateId MassCasualtyIndicatorCode MassCasualtyIndicatorCodeP MassCasualtyIndicatorValue MassCasualtyIndicatorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.87' code.code='67490-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Mass Casualty Incident Indicator' constraints.validation.dependOn.MassCasualtyIndicatorCode='MassCasualtyIndicatorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t7D1gNp2EeKVkrUHX3NooA" base_Class="_ayUKMMk3EeK2gbjCtOEivw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LocationTypeObservationTemplateId LocationTypeObservationCode' templateId.root='2.16.840.1.1133883.17.3.10.1.88' code.code='eScene.09' code.codeSystemName='' code.displayName='Location type' value1.codeSystem='2.16.840.1.113883.6.90' value1.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t7ZzwNp2EeKVkrUHX3NooA" base_Class="_p4XEAJ-kEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdverseEventIndicatorTemplateId AdverseEventIndicatorCode AdverseEventIndicatorCodeP AdverseEventIndicatorValue AdverseEventIndicatorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.89' code.code='67554-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS personnel exposed or injured' constraints.validation.dependOn.AdverseEventIndicatorCode='AdverseEventIndicatorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t7vK8Np2EeKVkrUHX3NooA" base_Class="_gU4tMJ-lEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdverseEventTypeObservationTemplateId AdverseEventTypeObservationCode AdverseEventTypeObservationCodeP AdverseEventTypeObservationValue AdverseEventTypeObservationValueP AdverseEventTypeObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.90' code.code='67555-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS personnel adverse event type' constraints.validation.dependOn.AdverseEventTypeObservationCode='AdverseEventTypeObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t8Md8Np2EeKVkrUHX3NooA" base_Class="_rNkl4GleEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BillingConditionTemplateId BillingConditionCode BillingConditionCodeP BillingConditionValue BillingConditionValueP BillingConditionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.91' code.code='67556-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Billing condition' constraints.validation.dependOn.BillingConditionCode='BillingConditionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t8vQgNp2EeKVkrUHX3NooA" base_Class="_To2-YGleEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LevelOfServiceObservationTemplateId LevelOfServiceObservationCode LevelOfServiceObservationCodeP LevelOfServiceObservationValue LevelOfServiceObservationValueP LevelOfServiceObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.92' code.code='69464-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS level of service' constraints.validation.dependOn.LevelOfServiceObservationCode='LevelOfServiceObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t9L8cNp2EeKVkrUHX3NooA" base_Class="_rDpggp-mEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolObservationTemplateId ProtocolObservationCode ProtocolObservationCodeP ProtocolObservationValue ProtocolObservationValueP ProtocolObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.93' code.code='67537-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS protocol' constraints.validation.dependOn.ProtocolObservationCode='ProtocolObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProtocolObservationProtocolAgeCategoryRelationship constraints.validation.error='ProtocolAgeCategoryRelationshipProtocolAgeCategory'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t9p2gNp2EeKVkrUHX3NooA" base_Class="_n-zaBZ-nEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CandidatePatientRegistryTypeTemplateId CandidatePatientRegistryTypeCode CandidatePatientRegistryTypeCodeP CandidatePatientRegistryTypeValue CandidatePatientRegistryTypeValueP CandidatePatientRegistryTypeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.94' code.code='67553-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS candidate patient registry' constraints.validation.dependOn.CandidatePatientRegistryTypeCode='CandidatePatientRegistryTypeCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_t-jOYNp2EeKVkrUHX3NooA" base_Class="_l_V6IJ-bEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseModeToSceneTemplateId ResponseModeToSceneCode ResponseModeToSceneCodeP ResponseModeToSceneValue ResponseModeToSceneValueP ResponseModeToSceneMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.98' code.code='67482-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response mode to scene' constraints.validation.dependOn.ResponseModeToSceneCode='ResponseModeToSceneCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_t-8P8Np2EeKVkrUHX3NooA" base_Generalization="_L0nEAJuoEeGzXI65shd6Fw"/>
  <Ecore:EClass xmi:id="_t_55QNp2EeKVkrUHX3NooA" base_Class="_iWVVYIy-EeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfDrugAllergyObservationTemplateId ExistenceOfDrugAllergyObservationCode ExistenceOfDrugAllergyObservationValue ExistenceOfDrugAllergyObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.102' code.code='67794-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Existence of drug allergy' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uAHUoNp2EeKVkrUHX3NooA" base_Class="_t_nG0IzYEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfEnvironmentalAllergyTemplateId ExistenceOfEnvironmentalAllergyCode ExistenceOfEnvironmentalAllergyValue ExistenceOfEnvironmentalAllergyMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.103' code.code='69747-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Existence of environmental allergy' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uAUwANp2EeKVkrUHX3NooA" base_Class="_UleZUIzZEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EnvironmentalAllergyTemplateId EnvironmentalAllergyCode EnvironmentalAllergyValue EnvironmentalAllergyMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.104' code.code='69748-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Known allergies to food or environmental agents' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uAlOsNp2EeKVkrUHX3NooA" base_Class="_E9ekgJoxEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationNotAdministeredReasonObservationTemplateId MedicationNotAdministeredReasonObservationCode MedicationNotAdministeredReasonObservationValue MedicationNotAdministeredReasonObservationValueP MedicationNotAdministeredReasonObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.105' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uA7M8Np2EeKVkrUHX3NooA" base_Class="_j9MusJsmEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationResponseObservationTemplateId MedicationResponseObservationCode MedicationResponseObservationCodeP MedicationResponseObservationValue MedicationResponseObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.106' code.code='67540-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response to medication' constraints.validation.dependOn.MedicationResponseObservationCode='MedicationResponseObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uBQkINp2EeKVkrUHX3NooA" base_Class="_Qzy_cJsnEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationComplicationObservationTemplateId MedicationComplicationObservationCode MedicationComplicationObservationCodeP MedicationComplicationObservationValue MedicationComplicationObservationValueP MedicationComplicationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.107' code.code='67541-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medication complication' constraints.validation.dependOn.MedicationComplicationObservationCode='MedicationComplicationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uBqMwNp2EeKVkrUHX3NooA" base_Class="_pVW0QJsoEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationPriorAdministrationObservationTemplateId MedicationPriorAdministrationObservationCode MedicationPriorAdministrationObservationCodeP MedicationPriorAdministrationObservationValue MedicationPriorAdministrationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.108' code.code='67539-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Prior administration' constraints.validation.dependOn.MedicationPriorAdministrationObservationCode='MedicationPriorAdministrationObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uB75kNp2EeKVkrUHX3NooA" base_Class="_GGe8UJojEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientBodyWeightTemplateId PatientBodyWeightCode PatientBodyWeightValue PatientBodyWeightMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.178' code.code='8335-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uCesINp2EeKVkrUHX3NooA" base_Class="_whTHIJojEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LengthBasedPatientBodyWeightClassTemplateId LengthBasedPatientBodyWeightClassCode LengthBasedPatientBodyWeightClassCodeP LengthBasedPatientBodyWeightClassValue LengthBasedPatientBodyWeightClassEffectiveTime LengthBasedPatientBodyWeightClassMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.110' code.code='67670-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.LengthBasedPatientBodyWeightClassCode='LengthBasedPatientBodyWeightClassCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uC2fkNp2EeKVkrUHX3NooA" base_Class="_bFfQYJokEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SkinAssessmentTemplateId SkinAssessmentCode SkinAssessmentCodeP SkinAssessmentValue SkinAssessmentValueP SkinAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.180' code.code='67524-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.SkinAssessmentCode='SkinAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uDSkcNp2EeKVkrUHX3NooA" base_Class="_QU_s0JolEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FaceAssessmentTemplateId FaceAssessmentCode FaceAssessmentCodeP FaceAssessmentValue FaceAssessmentValueP FaceAssessmentEffectiveTime FaceAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.112' code.code='67526-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.FaceAssessmentCode='FaceAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uDupUNp2EeKVkrUHX3NooA" base_Class="_6VcsUJokEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeadAssessmentTemplateId HeadAssessmentCode HeadAssessmentCodeP HeadAssessmentValue HeadAssessmentEffectiveTime HeadAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.113' code.code='67525-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.HeadAssessmentCode='HeadAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uEF1sNp2EeKVkrUHX3NooA" base_Class="_oE3bcJolEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NeckAssessmentTemplateId NeckAssessmentCode NeckAssessmentValue NeckAssessmentEffectiveTime NeckAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.114' code.code='67527-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Neck assessment finding' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uEYwoNp2EeKVkrUHX3NooA" base_Class="_CiNc8JomEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ChestAndLungsAssessmentTemplateId ChestAndLungsAssessmentCode ChestAndLungsAssessmentValue ChestAndLungsAssessmentEffectiveTime ChestAndLungsAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.115' code.code='67528-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Chest and lungs assessment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uErrkNp2EeKVkrUHX3NooA" base_Class="_Zjp_UJomEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeartAssessmentTemplateId HeartAssessmentCode HeartAssessmentCodeP HeartAssessmentValue HeartAssessmentValueP HeartAssessmentEffectiveTime HeartAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.116' code.code='67529-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Heart assessment finding' constraints.validation.dependOn.HeartAssessmentCode='HeartAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uFI-kNp2EeKVkrUHX3NooA" base_Class="_WMI_AJooEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AbdomenAssessmentTemplateId AbdomenAssessmentCode AbdomenAssessmentValue AbdomenAssessmentTargetSiteCode AbdomenAssessmentEffectiveTime AbdomenAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.117' code.code='67530-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Abdomen assessment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uFiAINp2EeKVkrUHX3NooA" base_Class="_O7rMoJopEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PelvicAndGenitourinaryAssessmentTemplateId PelvicAndGenitourinaryAssessmentCode PelvicAndGenitourinaryAssessmentValue PelvicAndGenitourinaryAssessmentValueP PelvicAndGenitourinaryAssessmentEffectiveTime PelvicAndGenitourinaryAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.118' code.code='67531-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Pelvic and genitourinary assessment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uF5MgNp2EeKVkrUHX3NooA" base_Class="_pgmc0JopEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BackAndSpineAssessmentTemplateId BackAndSpineAssessmentCode BackAndSpineAssessmentCodeP BackAndSpineAssessmentTargetSiteCode BackAndSpineAssessmentTargetSiteCodeP BackAndSpineAssessmentValue BackAndSpineAssessmentValueP BackAndSpineAssessmentEffectiveTime BackAndSpineAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.119' code.code='67532-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Back and spine assessment' constraints.validation.dependOn.BackAndSpineAssessmentCode='BackAndSpineAssessmentCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uGfpcNp2EeKVkrUHX3NooA" base_Class="_NK7yUJoqEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExtremitiesAssessmentTemplateId ExtremitiesAssessmentCode ExtremitiesAssessmentCodeP ExtremitiesAssessmentTargetSiteCode ExtremitiesAssessmentValue ExtremitiesAssessmentEffectiveTime ExtremitiesAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.120' code.code='67533-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Extremities assessment' constraints.validation.dependOn.ExtremitiesAssessmentCode='ExtremitiesAssessmentCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' constraints.validation.info='ExtremitiesAssessmentTargetSiteCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uHBN4Np2EeKVkrUHX3NooA" base_Class="_rsLuIJoqEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EyeAssessmentTemplateId EyeAssessmentCode EyeAssessmentCodeP EyeAssessmentTargetSiteCode EyeAssessmentTargetSiteCodeP EyeAssessmentValue EyeAssessmentValueP EyeAssessmentEffectiveTime EyeAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.121' code.code='67534-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Eye assessment' constraints.validation.dependOn.EyeAssessmentCode='EyeAssessmentCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uHoR4Np2EeKVkrUHX3NooA" base_Class="_EyfEMJorEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MentalStatusAssessmentTemplateId MentalStatusAssessmentCode MentalStatusAssessmentValue MentalStatusAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.122' code.code='67535-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Mental status assessment' constraints.validation.info='MentalStatusAssessmentCodeP' constraints.validation.dependOn.MentalStatusAssessmentCode='MentalStatusAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uH9pENp2EeKVkrUHX3NooA" base_Class="_A65pUHwIEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestTimingTemplateId CardiacArrestTimingCode CardiacArrestTimingValue CardiacArrestTimingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.123' code.code='67502-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac arrest occurrence' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uIOHwNp2EeKVkrUHX3NooA" base_Class="_tcPw4HwKEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestCauseTemplateId CardiacArrestCauseCode CardiacArrestCauseValue CardiacArrestCauseMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.124' code.code='67503-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac arrest cause' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uJM_MNp2EeKVkrUHX3NooA" base_Class="_Ia0ocHwREeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ArrestRhythmTemplateId ArrestRhythmCode ArrestRhythmValue ArrestRhythmMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.127' code.code='67512-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='First monitored rhythm' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uJdd4Np2EeKVkrUHX3NooA" base_Class="_gnLCQHwSEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReturnOfSpontaneousCirculationTemplateId ReturnOfSpontaneousCirculationCode ReturnOfSpontaneousCirculationValue ReturnOfSpontaneousCirculationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.128' code.code='67513-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Return of spontaneous circulation' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uJtVgNp2EeKVkrUHX3NooA" base_Class="_khXxgHwTEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DestinationRhythmTemplateId DestinationRhythmCode DestinationRhythmValue DestinationRhythmMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.129' code.code='67519-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac rhythm' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uJ90MNp2EeKVkrUHX3NooA" base_Class="_edpw0JuqEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AbandonedProcedureReasonObservationTemplateId AbandonedProcedureReasonObservationCode AbandonedProcedureReasonObservationCodeP AbandonedProcedureReasonObservationValue AbandonedProcedureReasonObservationValueP AbandonedProcedureReasonObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.130' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.AbandonedProcedureReasonObservationCode='AbandonedProcedureReasonObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uKXc0Np2EeKVkrUHX3NooA" base_Class="_0IBaIJ0sEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedurePriorIndicatorTemplateId ProcedurePriorIndicatorCode ProcedurePriorIndicatorCodeP ProcedurePriorIndicatorValue ProcedurePriorIndicatorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.131' code.code='67542-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure performed prior to EMS arrival' constraints.validation.dependOn.ProcedurePriorIndicatorCode='ProcedurePriorIndicatorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uKpJoNp2EeKVkrUHX3NooA" base_Class="_iZg7kJ0tEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureNumberOfAttemptsObservationTemplateId ProcedureNumberOfAttemptsObservationCode ProcedureNumberOfAttemptsObservationCodeP ProcedureNumberOfAttemptsObservationValue ProcedureNumberOfAttemptsObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.132' code.code='67543-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Number of procedure attempts' constraints.validation.dependOn.ProcedureNumberOfAttemptsObservationCode='ProcedureNumberOfAttemptsObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uK8EkNp2EeKVkrUHX3NooA" base_Class="_D32TkJ0uEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureSuccessfulObservationTemplateId ProcedureSuccessfulObservationCode ProcedureSuccessfulObservationCodeP ProcedureSuccessfulObservationValue ProcedureSuccessfulObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.133' code.code='67544-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure successful indicator' constraints.validation.dependOn.ProcedureSuccessfulObservationCode='ProcedureSuccessfulObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uLOYcNp2EeKVkrUHX3NooA" base_Class="_lVl1sJ0uEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureComplicationsObservationTemplateId ProcedureComplicationsObservationCode ProcedureComplicationsObservationCodeP ProcedureComplicationsObservationValue ProcedureComplicationsObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.179' code.code='67545-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure complication' constraints.validation.dependOn.ProcedureComplicationsObservationCode='ProcedureComplicationsObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uLk9wNp2EeKVkrUHX3NooA" base_Class="_Z3nhEJ0vEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedurePatientResponseObservationTemplateId ProcedurePatientResponseObservationCode ProcedurePatientResponseObservationCodeP ProcedurePatientResponseObservationValue ProcedurePatientResponseObservationValueP ProcedurePatientResponseObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.135' code.code='67546-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure patient response' constraints.validation.dependOn.ProcedurePatientResponseObservationCode='ProcedurePatientResponseObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uL-mYNp2EeKVkrUHX3NooA" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AirwayConfirmationObservationTemplateId AirwayConfirmationObservationCode AirwayConfirmationObservationCodeP AirwayConfirmationObservationMethodCode AirwayConfirmationObservationMethodCodeP AirwayConfirmationObservationValue AirwayConfirmationObservationEffectiveTime AirwayConfirmationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.175' code.code='71576-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.AirwayConfirmationObservationCode='AirwayConfirmationObservationCodeP' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uMgK0Np2EeKVkrUHX3NooA" base_Class="_N8t6kFhWEeK-i8RB1gvLUA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonProcedureNotAttemptedObservationTemplateId ReasonProcedureNotAttemptedObservationCode ReasonProcedureNotAttemptedObservationValue ReasonProcedureNotAttemptedObservationValueP ReasonProcedureNotAttemptedObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.137' code.code='67504-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Reason Not Attempted' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uM068Np2EeKVkrUHX3NooA" base_Class="_4ZsacKg_EeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintTypeTemplateId ComplaintTypeCode ComplaintTypeCodeP ComplaintTypeValue ComplaintTypeValueP ComplaintTypeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.138' code.code='72114-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complaint type' constraints.validation.dependOn.ComplaintTypeCode='ComplaintTypeCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uNPKoNp2EeKVkrUHX3NooA" base_Class="_g93MsKhAEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintDurationTemplateId ComplaintDurationCode ComplaintDurationCodeP ComplaintDurationValue ComplaintDurationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.139' code.code='67491-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complaint duration' constraints.validation.dependOn.ComplaintDurationCode='ComplaintDurationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uNg3cNp2EeKVkrUHX3NooA" base_Class="_YMy4UKhDEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintOrganSystemTemplateId ComplaintOrganSystemCode ComplaintOrganSystemCodeP ComplaintOrganSystemValue ComplaintOrganSystemValueP ComplaintOrganSystemMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.140' code.code='69468-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Organ system' constraints.validation.dependOn.ComplaintOrganSystemCode='ComplaintOrganSystemCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uN6gENp2EeKVkrUHX3NooA" base_Class="_gBOGYJorEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NeurologicalAssessmentTemplateId NeurologicalAssessmentCode NeurologicalAssessmentCodeP NeurologicalAssessmentValue NeurologicalAssessmentValueP NeurologicalAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.141' code.code='67536-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Neurological status assessment' constraints.validation.dependOn.NeurologicalAssessmentCode='NeurologicalAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uOThoNp2EeKVkrUHX3NooA" base_Class="_n1J2EIzgEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfHistoryOfProceduresTemplateId ExistenceOfHistoryOfProceduresCode ExistenceOfHistoryOfProceduresValue ExistenceOfHistoryOfProceduresMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.142' code.code='67792-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS existence of history of procedures' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uOfu4Np2EeKVkrUHX3NooA" base_Generalization="_PIqGIIzrEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_uOhkENp2EeKVkrUHX3NooA" base_Class="_Orea4IzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SystolicBloodPressureTemplateId SystolicBloodPressureCode SystolicBloodPressureValue SystolicBloodPressureMoodCode SystolicBloodPressureEffectiveTime' templateId.root='2.16.840.1.113883.17.3.10.1.23.1' code.code='8480-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Intravascular systolic' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uOyp0Np2EeKVkrUHX3NooA" base_Generalization="_mVKpAIzrEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_uOz38Np2EeKVkrUHX3NooA" base_Class="_l4xA4IzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DiastolicBloodPressureTemplateId DiastolicBloodPressureCode DiastolicBloodPressureValue DiastolicBloodPressureMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.144' code.code='8462-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Intravascular diastolic' constraints.validation.info='DiastolicBloodPressureEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uPDvkNp2EeKVkrUHX3NooA" base_Generalization="_AA5nYIzsEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_uPE9sNp2EeKVkrUHX3NooA" base_Class="__qJ7UIzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeartRateTemplateId HeartRateCode HeartRateCodeP HeartRateValue HeartRateMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.145' code.code='8867-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Heart rate' constraints.validation.dependOn.HeartRateCode='HeartRateCodeP' constraints.validation.info='HeartRateEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uPZt0Np2EeKVkrUHX3NooA" base_Generalization="_RN10gIzsEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_uPa78Np2EeKVkrUHX3NooA" base_Class="_Q7VIMIzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='RespiratoryRateTemplateId RespiratoryRateCode RespiratoryRateValue RespiratoryRateMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.146' code.code='9279-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Breaths' constraints.validation.info='RespiratoryRateEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_uPqMgNp2EeKVkrUHX3NooA" base_Generalization="_k_CuIIzsEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_uPsBsNp2EeKVkrUHX3NooA" base_Class="_koRz8IzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BodyTemperatureTemplateId BodyTemperatureCode BodyTemperatureValue BodyTemperatureMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.176' code.code='8310-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Body temperature' constraints.validation.info='BodyTemperatureEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uP-VkNp2EeKVkrUHX3NooA" base_Class="_01XGkIzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OxygenSaturationTemplateId OxygenSaturationCode OxygenSaturationValue OxygenSaturationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.177' code.code='2710-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Oxygen saturation' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uQNmINp2EeKVkrUHX3NooA" base_Class="_MjD2kJ-nEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolAgeCategoryTemplateId ProtocolAgeCategoryCode ProtocolAgeCategoryCodeP ProtocolAgeCategoryValue ProtocolAgeCategoryValueP ProtocolAgeCategoryMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.149' code.code='67538-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Protocol age category' constraints.validation.dependOn.ProtocolAgeCategoryCode='ProtocolAgeCategoryCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uQmnsNp2EeKVkrUHX3NooA" base_Class="_lC10cJ-BEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationNameTemplateId DispatchLocationNameCode DispatchLocationNameValue DispatchLocationNameMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.150' code.code='69466-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch Location Name' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uQ0DENp2EeKVkrUHX3NooA" base_Class="_sPMP9p-NEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationLatitudeTemplateId DispatchLocationLatitudeCode DispatchLocationLatitudeValue DispatchLocationLatitudeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.151' code.code='52002-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch Location Latitude' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uRBecNp2EeKVkrUHX3NooA" base_Class="_UGLMFZ-OEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationLongitudeTemplateId DispatchLocationLongitudeCode DispatchLocationLongitudeValue DispatchLocationLongitudeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.152' code.code='52003-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch Location Longitude' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uRO50Np2EeKVkrUHX3NooA" base_Class="_9i0HIJ99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchDelayTemplateId DispatchDelayCode DispatchDelayCodeP DispatchDelayValue DispatchDelayValueP DispatchDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.153' code.code='67480-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch delay' constraints.validation.dependOn.DispatchDelayCode='DispatchDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uRoicNp2EeKVkrUHX3NooA" base_Class="_pCK4JZ9-EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseDelayTemplateId ResponseDelayCode ResponseDelayCodeP ResponseDelayValue ResponseDelayValueP ResponseDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.154' code.code='67557-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response delay' constraints.validation.dependOn.ResponseDelayCode='ResponseDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uSCyINp2EeKVkrUHX3NooA" base_Class="_Vo79JZ9_EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SceneDelayTemplateId SceneDelayCode SceneDelayCodeP SceneDelayValue SceneDelayValueP SceneDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.155' code.code='67558-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Scene delay' constraints.validation.dependOn.SceneDelayCode='SceneDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uScawNp2EeKVkrUHX3NooA" base_Class="_4qwhJZ9_EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportDelayTemplateId TransportDelayCode TransportDelayCodeP TransportDelayValue TransportDelayValueP TransportDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.156' code.code='67559-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport delay' constraints.validation.dependOn.TransportDelayCode='TransportDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uS2DYNp2EeKVkrUHX3NooA" base_Class="_e7LIFZ-AEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TurnaroundDelayTemplateId TurnaroundDelayCode TurnaroundDelayCodeP TurnaroundDelayValue TurnaroundDelayValueP TurnaroundDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.157' code.code='67560-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Turnaround delay' constraints.validation.dependOn.TurnaroundDelayCode='TurnaroundDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uTPsANp2EeKVkrUHX3NooA" base_Class="_WduLAIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowTotalTemplateId GlasgowTotalCode GlasgowTotalCodeP GlasgowTotalValue GlasgowTotalMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.158' code.code='9269-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.total' constraints.validation.dependOn.GlasgowTotalCode='GlasgowTotalCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uTh_4Np2EeKVkrUHX3NooA" base_Class="_ZLqX8IzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowQualifierTemplateId GlasgowQualifierCode GlasgowQualifierCodeP GlasgowQualifierMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.159' code.code='55285-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score special circumstances' constraints.validation.dependOn.GlasgowQualifierCode='GlasgowQualifierCodeP' constraints.validation.info='GlasgowQualifierValue' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uT0TwNp2EeKVkrUHX3NooA" base_Class="_bxS9cIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowEyeTemplateId GlasgowEyeCode GlasgowEyeCodeP GlasgowEyeValue GlasgowEyeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.160' code.code='9267-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.eye opening' constraints.validation.dependOn.GlasgowEyeCode='GlasgowEyeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uUHOsNp2EeKVkrUHX3NooA" base_Class="_eKfCYIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowMotorTemplateId GlasgowMotorCode GlasgowMotorCodeP GlasgowMotorValue GlasgowMotorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.176' code.code='9268-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.motor' constraints.validation.dependOn.GlasgowMotorCode='GlasgowMotorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uUaJoNp2EeKVkrUHX3NooA" base_Class="_hLJ-EIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowVerbalTemplateId GlasgowVerbalCode GlasgowVerbalCodeP GlasgowVerbalValue GlasgowVerbalMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.162' code.code='9270-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.verbal' constraints.validation.dependOn.GlasgowVerbalCode='GlasgowVerbalCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uUsdgNp2EeKVkrUHX3NooA" base_Class="_9koR4IzuEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='StrokeScoreTemplateId StrokeScoreCode StrokeScoreCodeP StrokeScoreValue StrokeScoreValueP StrokeScoreMethodCode StrokeScoreMethodCodeP StrokeScoreMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.163' code.code='67520-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Stroke scale overall interpretation' constraints.validation.dependOn.StrokeScoreCode='StrokeScoreCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC' constraints.validation.info='StrokeScoreEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uVUIkNp2EeKVkrUHX3NooA" base_Class="_lnVLQIzuEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PainScoreTemplateId PainScoreCode PainScoreMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.164' code.code='56840-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Pain severity verbal numeric scale' constraints.validation.info='PainScoreEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uViLANp2EeKVkrUHX3NooA" base_Class="_xgaHgIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LevelOfResponsivenessTemplateId LevelOfResponsivenessCode LevelOfResponsivenessCodeP LevelOfResponsivenessValue LevelOfResponsivenessValueP LevelOfResponsivenessMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.165' code.code='67775-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Level of responsiveness' constraints.validation.dependOn.LevelOfResponsivenessCode='LevelOfResponsivenessCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' constraints.validation.info='LevelOfResponsivenessEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uWTnENp2EeKVkrUHX3NooA" base_Class="_jmDsgIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BloodGlucoseTemplateId BloodGlucoseCode BloodGlucoseCodeP BloodGlucoseValue BloodGlucoseMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.166' code.code='2339-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glucose' constraints.validation.dependOn.BloodGlucoseCode='BloodGlucoseCodeP' constraints.validation.info='BloodGlucoseEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uWnwINp2EeKVkrUHX3NooA" base_Class="_WFit0IztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CarbonMonoxideTemplateId CarbonMonoxideCode CarbonMonoxideCodeP CarbonMonoxideValue CarbonMonoxideMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.167' code.code='19911-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Diffusion capacity.carbon monoxide' constraints.validation.dependOn.CarbonMonoxideCode='CarbonMonoxideCodeP' constraints.validation.info='CarbonMonoxideEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uW75MNp2EeKVkrUHX3NooA" base_Class="_IU2lIIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CarbonDioxideTemplateId CarbonDioxideCode CarbonDioxideCodeP CarbonDioxideValue CarbonDioxideMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.168' code.code='19889-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Carbon dioxide/Gas.total.at end expiration' constraints.validation.dependOn.CarbonDioxideCode='CarbonDioxideCodeP' constraints.validation.info='CarbonDioxideEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uYIMANp2EeKVkrUHX3NooA" base_Class="_k-cIsJ-ZEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseBeginningOdometerReadingTemplateId ResponseBeginningOdometerReadingCode ResponseBeginningOdometerReadingCodeP ResponseBeginningOdometerReadingValue ResponseBeginningOdometerReadingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.171' code.code='67484-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response odometer beginning reading' constraints.validation.dependOn.ResponseBeginningOdometerReadingCode='ResponseBeginningOdometerReadingCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uYZRwNp2EeKVkrUHX3NooA" base_Class="_ib1zpZ-aEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseOnSceneOdometerReadingTemplateId ResponseOnSceneOdometerReadingCode ResponseOnSceneOdometerReadingCodeP ResponseOnSceneOdometerReadingValue ResponseOnSceneOdometerReadingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.172' code.code='67485-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response odometer on-scene reading' constraints.validation.dependOn.ResponseOnSceneOdometerReadingCode='ResponseOnSceneOdometerReadingCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uYrloNp2EeKVkrUHX3NooA" base_Class="_7kghNZ-aEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseDestinationOdometerReadingTemplateId ResponseDestinationOdometerReadingCode ResponseDestinationOdometerReadingCodeP ResponseDestinationOdometerReadingValue ResponseDestinationOdometerReadingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.173' code.code='67486-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response odometer destination reading' constraints.validation.dependOn.ResponseDestinationOdometerReadingCode='ResponseDestinationOdometerReadingCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_uY9ScNp2EeKVkrUHX3NooA" base_Class="_TCM6tZ-bEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseEndingOdometerReadingTemplateId ResponseEndingOdometerReadingCode ResponseEndingOdometerReadingCodeP ResponseEndingOdometerReadingValue ResponseEndingOdometerReadingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.174' code.code='67487-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response odometer ending reading' constraints.validation.dependOn.ResponseEndingOdometerReadingCode='ResponseEndingOdometerReadingCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
</xmi:XMI>
