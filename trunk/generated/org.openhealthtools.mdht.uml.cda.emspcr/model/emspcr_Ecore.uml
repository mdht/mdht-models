<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_xpUkQGeQEeGtXKebdWh3hg" name="emspcr">
    <packageImport xmi:id="_x1tacGeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_x1tacWeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_x1tacmeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.emspcr.model/model/emspcr-vocab.uml#_xpzscGeQEeGtXKebdWh3hg"/>
    </packageImport>
    <packageImport xmi:id="_alO60EU9EeKcguOHLOhl3Q">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_xs1LQWeQEeGtXKebdWh3hg" name="PatientCareReport">
      <ownedComment xmi:id="_mETdgCwsEeOaIuM51LdlNw">
        <body>A report from the EMS crew to the emergency department summarizing the patient's condition and any remedial actions taken</body>
      </ownedComment>
      <ownedRule xmi:id="_X2UEkRpMEeSd5OoVIuDNwg" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2UroBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X2V5wBpMEeSd5OoVIuDNwg" name="PatientCareReportClassCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2V5wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::ActClinicalDocument::DOCCLIN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X2XH4BpMEeSd5OoVIuDNwg" name="PatientCareReportMoodCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2XH4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode') and self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X2Xu8BpMEeSd5OoVIuDNwg" name="GeneralHeaderConstraintsId" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2Xu8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X2bZUBpMEeSd5OoVIuDNwg" name="PatientCareReportCodeP" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2bZURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X2ZkIBpMEeSd5OoVIuDNwg" name="PatientCareReportCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2ZkIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67796-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X2d1kBpMEeSd5OoVIuDNwg" name="GeneralHeaderConstraintsTitle" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2d1kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Patient Care Report')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X2gR0BpMEeSd5OoVIuDNwg" name="PatientCareReportConfidentialityCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2gR0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined() and self.confidentialityCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.confidentialityCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.5.25' and (value.code = 'N' or value.code = 'R' or value.code = 'V'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X2iuEBpMEeSd5OoVIuDNwg" name="GeneralHeaderConstraintsVersionNumber" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X2iuERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.versionNumber.oclIsUndefined() or self.versionNumber.isNullFlavorUndefined()) implies (not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3eiMBpMEeSd5OoVIuDNwg" name="PatientCareReportRecordTarget" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3eiMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4fO0BpMEeSd5OoVIuDNwg" name="PatientCareReportCurrentMedication" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4fO0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSCurrentMedicationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4f15RpMEeSd5OoVIuDNwg" name="PatientCareReportCardiacArrestEvent" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4f15hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSCardiacArrestEventSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4hEABpMEeSd5OoVIuDNwg" name="PatientCareReportAdvanceDirectives" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4hEARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSAdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4lVdRpMEeSd5OoVIuDNwg" name="PatientCareReportAllergiesAndAdverseReactionsSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4lVdhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSAllergiesAndAdverseReactionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4mjkBpMEeSd5OoVIuDNwg" name="PatientCareReportPastMedicalHistorySection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4mjkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPastMedicalHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4vtgBpMEeSd5OoVIuDNwg" name="PatientCareReportSocialHistorySection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4vtgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5D2kBpMEeSd5OoVIuDNwg" name="PatientCareReportPhysicalAssessmentSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5D2kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPhysicalAssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5X_oRpMEeSd5OoVIuDNwg" name="PatientCareReportMedicationsAdministeredSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5YmsBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSMedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5vMABpMEeSd5OoVIuDNwg" name="PatientCareReportProceduresPerformedSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5vMARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSProceduresPerformedSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X53H0BpMEeSd5OoVIuDNwg" name="PatientCareReportPatientCareNarrativeSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X53H0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPatientCareNarrativeSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6y78BpMEeSd5OoVIuDNwg" name="PatientCareReportSceneSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6y78RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSceneSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7EowBpMEeSd5OoVIuDNwg" name="GeneralHeaderConstraintsComponentOf" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7EowRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7KIUBpMEeSd5OoVIuDNwg" name="PatientCareReportDispatchSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7KIURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSDispatchSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7KvZRpMEeSd5OoVIuDNwg" name="PatientCareReportDispositionSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7KvZhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSDispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7L9gBpMEeSd5OoVIuDNwg" name="PatientCareReportPersonnelAdverseEventSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7L9gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPersonnelAdverseEventSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7MklRpMEeSd5OoVIuDNwg" name="PatientCareReportProtocolSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7MklhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSProtocolSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7NysBpMEeSd5OoVIuDNwg" name="PatientCareReportResponseSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7NysRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSResponseSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7OZxRpMEeSd5OoVIuDNwg" name="PatientCareReportSituationSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7PA0BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSituationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7Pn4xpMEeSd5OoVIuDNwg" name="PatientCareReportTimesSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7Pn5BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::TimesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7Q2ABpMEeSd5OoVIuDNwg" name="PatientCareReportVitalSignsSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7Q2ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSVitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7RdFRpMEeSd5OoVIuDNwg" name="PatientCareReportAuthorParticipation" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7RdFhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.author->exists(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7SEIBpMEeSd5OoVIuDNwg" name="GeneralHeaderConstraintsCustodian" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7SrMBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7TSQBpMEeSd5OoVIuDNwg" name="PatientCareReportDocumentationOf" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7TSQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7T5UBpMEeSd5OoVIuDNwg" name="PatientCareReportRelatedDocument" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7T5URpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.relatedDocument->one(relatedDocument : cda::RelatedDocument | not relatedDocument.oclIsUndefined() and relatedDocument.oclIsKindOf(cda::RelatedDocument))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7VHcBpMEeSd5OoVIuDNwg" name="PatientCareReportParticipant" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7VHcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YP96sBpMEeSd5OoVIuDNwg" name="PatientCareReportInjuryIncidentDescriptionSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP96sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSInjuryIncidentDescriptionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YQA-BRpMEeSd5OoVIuDNwg" name="PatientCareReportEMSBillingSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQA-BhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.getAllSections()->exists(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSBillingSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xs3ngWeQEeGtXKebdWh3hg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_X4f14BpMEeSd5OoVIuDNwg" name="getCurrentMedication" bodyCondition="_X4f14xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X4f14xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X4f14BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4f15BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSCurrentMedicationSection))->asSequence()->any(true).oclAsType(emspcr::EMSCurrentMedicationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X4f14RpMEeSd5OoVIuDNwg" type="_aDO5AIcnEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X4f14hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X4gc8BpMEeSd5OoVIuDNwg" name="getCardiacArrestEvent" bodyCondition="_X4gc8xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X4gc8xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X4gc8BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4gc9BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSCardiacArrestEventSection))->asSequence()->any(true).oclAsType(emspcr::EMSCardiacArrestEventSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X4gc8RpMEeSd5OoVIuDNwg" type="_pIikMHwDEeGW3cDolvqrTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X4gc8hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X4hrEBpMEeSd5OoVIuDNwg" name="getAdvanceDirectives" bodyCondition="_X4hrExpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X4hrExpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X4hrEBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4hrFBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSAdvanceDirectivesSection))->asSequence()->any(true).oclAsType(emspcr::EMSAdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X4hrERpMEeSd5OoVIuDNwg" type="_i4C-AH9aEeGht55Sz1eBOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X4hrEhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X4l8gBpMEeSd5OoVIuDNwg" name="getAllergiesAndAdverseReactionsSection" bodyCondition="_X4l8gxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X4l8gxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X4l8gBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4l8hBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSAllergiesAndAdverseReactionsSection))->asSequence()->any(true).oclAsType(emspcr::EMSAllergiesAndAdverseReactionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X4l8gRpMEeSd5OoVIuDNwg" type="_nSjIgH9cEeGht55Sz1eBOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X4l8ghpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X4nKoBpMEeSd5OoVIuDNwg" name="getPastMedicalHistorySection" bodyCondition="_X4nKoxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X4nKoxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X4nKoBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4nKpBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPastMedicalHistorySection))->asSequence()->any(true).oclAsType(emspcr::EMSPastMedicalHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X4nKoRpMEeSd5OoVIuDNwg" type="_VtMvAIzcEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X4nKohpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X4wUkBpMEeSd5OoVIuDNwg" name="getSocialHistorySection" bodyCondition="_X4wUkxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X4wUkxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X4wUkBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4wUlBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSocialHistorySection))->asSequence()->any(true).oclAsType(emspcr::EMSSocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X4wUkRpMEeSd5OoVIuDNwg" type="_1XH7YIziEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X4wUkhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X5EdoBpMEeSd5OoVIuDNwg" name="getPhysicalAssessmentSection" bodyCondition="_X5EdoxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X5EdoxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X5EdoBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5EdpBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPhysicalAssessmentSection))->asSequence()->any(true).oclAsType(emspcr::EMSPhysicalAssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X5EdoRpMEeSd5OoVIuDNwg" type="_6223oJohEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X5EdohpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X5ZNwBpMEeSd5OoVIuDNwg" name="getMedicationsAdministeredSection" bodyCondition="_X5ZNwxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X5ZNwxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X5ZNwBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5ZNxBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSMedicationsAdministeredSection))->asSequence()->any(true).oclAsType(emspcr::EMSMedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X5ZNwRpMEeSd5OoVIuDNwg" type="_c7crcJovEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X5ZNwhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X5vzEBpMEeSd5OoVIuDNwg" name="getProceduresPerformedSection" bodyCondition="_X5vzExpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X5vzExpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X5vzEBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5vzFBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSProceduresPerformedSection))->asSequence()->any(true).oclAsType(emspcr::EMSProceduresPerformedSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X5vzERpMEeSd5OoVIuDNwg" type="_4QFw8JumEeGzXI65shd6Fw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X5vzEhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X58AUBpMEeSd5OoVIuDNwg" name="getPatientCareNarrativeSection" bodyCondition="_X58AUxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X58AUxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X58AUBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X58AVBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPatientCareNarrativeSection))->asSequence()->any(true).oclAsType(emspcr::EMSPatientCareNarrativeSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X58AURpMEeSd5OoVIuDNwg" type="_iDmQYJ9mEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X58AUhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X6zjABpMEeSd5OoVIuDNwg" name="getSceneSection" bodyCondition="_X6zjAxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X6zjAxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X6zjABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6zjBBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSceneSection))->asSequence()->any(true).oclAsType(emspcr::EMSSceneSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X6zjARpMEeSd5OoVIuDNwg" type="_h3A8IKK3EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X6zjAhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7KvYBpMEeSd5OoVIuDNwg" name="getDispatchSection" bodyCondition="_X7KvYxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7KvYxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7KvYBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7KvZBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSDispatchSection))->asSequence()->any(true).oclAsType(emspcr::EMSDispatchSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7KvYRpMEeSd5OoVIuDNwg" type="_OV4TIJ9nEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7KvYhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7LWcBpMEeSd5OoVIuDNwg" name="getDispositionSection" bodyCondition="_X7LWcxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7LWcxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7LWcBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7LWdBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSDispositionSection))->asSequence()->any(true).oclAsType(emspcr::EMSDispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7LWcRpMEeSd5OoVIuDNwg" type="_i-lM8J-dEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7LWchpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7MkkBpMEeSd5OoVIuDNwg" name="getPersonnelAdverseEventSection" bodyCondition="_X7MkkxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7MkkxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7MkkBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7MklBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSPersonnelAdverseEventSection))->asSequence()->any(true).oclAsType(emspcr::EMSPersonnelAdverseEventSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7MkkRpMEeSd5OoVIuDNwg" type="_GGotEJ-kEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7MkkhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7NLoBpMEeSd5OoVIuDNwg" name="getProtocolSection" bodyCondition="_X7NLoxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7NLoxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7NLoBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7NLpBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSProtocolSection))->asSequence()->any(true).oclAsType(emspcr::EMSProtocolSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7NLoRpMEeSd5OoVIuDNwg" type="_aK7P4J-mEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7NLohpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7OZwBpMEeSd5OoVIuDNwg" name="getResponseSection" bodyCondition="_X7OZwxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7OZwxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7OZwBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7OZxBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSResponseSection))->asSequence()->any(true).oclAsType(emspcr::EMSResponseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7OZwRpMEeSd5OoVIuDNwg" type="_LI7M8J99EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7OZwhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7PA0RpMEeSd5OoVIuDNwg" name="getSituationSection" bodyCondition="_X7Pn4RpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7Pn4RpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7PA0RpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7Pn4hpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSSituationSection))->asSequence()->any(true).oclAsType(emspcr::EMSSituationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7PA0hpMEeSd5OoVIuDNwg" type="_olqMIKK8EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7Pn4BpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7QO8BpMEeSd5OoVIuDNwg" name="getTimesSection" bodyCondition="_X7QO8xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7QO8xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7QO8BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7QO9BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::TimesSection))->asSequence()->any(true).oclAsType(emspcr::TimesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7QO8RpMEeSd5OoVIuDNwg" type="_ClVY0KxCEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7QO8hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7RdEBpMEeSd5OoVIuDNwg" name="getVitalSignsSection" bodyCondition="_X7RdExpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7RdExpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7RdEBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7RdFBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSVitalSignsSection))->asSequence()->any(true).oclAsType(emspcr::EMSVitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7RdERpMEeSd5OoVIuDNwg" type="_jCzkkIzkEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7RdEhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YP-hwBpMEeSd5OoVIuDNwg" name="getInjuryIncidentDescriptionSection" bodyCondition="_YP-hwxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YP-hwxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YP-hwBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP-hxBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSInjuryIncidentDescriptionSection))->asSequence()->any(true).oclAsType(emspcr::EMSInjuryIncidentDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YP-hwRpMEeSd5OoVIuDNwg" type="_3dRe0HSUEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YP-hwhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YQCMIBpMEeSd5OoVIuDNwg" name="getEMSBillingSections" bodyCondition="_YQCMIxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YQCMIxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YQCMIBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQCMJBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::EMSBillingSection)).oclAsType(emspcr::EMSBillingSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YQCMIRpMEeSd5OoVIuDNwg" type="_S-YTcGldEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YQCMIhpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VtMvAIzcEeGnhceUMXltng" name="EMSPastMedicalHistorySection">
      <ownedComment xmi:id="_r4pFkCwqEeOaIuM51LdlNw">
        <body>Collection of information regarding the patient's medical history</body>
      </ownedComment>
      <ownedRule xmi:id="_X3hlgBpMEeSd5OoVIuDNwg" name="EMSPastMedicalHistorySectionTemplateId" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3hlgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.19')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3izoBpMEeSd5OoVIuDNwg" name="EMSPastMedicalHistorySectionCode" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3izoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67842-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3lP4BpMEeSd5OoVIuDNwg" name="EMSPastMedicalHistorySectionCodeP" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3lP4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3nFEBpMEeSd5OoVIuDNwg" name="EMSPastMedicalHistorySectionTitle" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3nFERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Past Medical History')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3oTMBpMEeSd5OoVIuDNwg" name="EMSPastMedicalHistorySectionText" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3oTMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAjlsBpMEeSd5OoVIuDNwg" name="EMSPastMedicalHistorySectionExistenceOfHistoryOfCondition" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAjlsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfHistoryOfCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAkz0xpMEeSd5OoVIuDNwg" name="EMSPastMedicalHistorySectionHistoryOfCondition" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAkz1BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::HistoryOfCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W3TxsIzcEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YAkMwBpMEeSd5OoVIuDNwg" name="getExistenceOfHistoryOfCondition" bodyCondition="_YAkz0RpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YAkz0RpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YAkMwBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAkz0hpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfHistoryOfCondition))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfHistoryOfCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YAkMwRpMEeSd5OoVIuDNwg" type="_W_uRYIzdEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YAkz0BpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YAla4BpMEeSd5OoVIuDNwg" name="getHistoryOfConditions" bodyCondition="_YAla4xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YAla4xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YAla4BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAla5BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::HistoryOfCondition)).oclAsType(emspcr::HistoryOfCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YAla4RpMEeSd5OoVIuDNwg" type="_5XgZ4IzdEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YAla4hpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S-YTcGldEeG4boS-IbG8Zw" name="EMSBillingSection">
      <ownedComment xmi:id="_SnBqACUcEeOPwcQY2yBpiA">
        <body>Information pertinent to billing processes</body>
      </ownedComment>
      <ownedRule xmi:id="_X3qIYRpMEeSd5OoVIuDNwg" name="EMSBillingSectionTemplateId" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3qIYhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3r9kBpMEeSd5OoVIuDNwg" name="EMSBillingSectionCode" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3r9kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67659-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3tywBpMEeSd5OoVIuDNwg" name="EMSBillingSectionTitle" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3tywRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Billing Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3vA4BpMEeSd5OoVIuDNwg" name="EMSBillingSectionText" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3vA4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFUw8BpMEeSd5OoVIuDNwg" name="EMSBillingSectionBillingCondition" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFUw8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::BillingCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFiMUBpMEeSd5OoVIuDNwg" name="EMSBillingSectionLevelOfServiceObservation" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFiMURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LevelOfServiceObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_S-YTcWldEeG4boS-IbG8Zw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YFVYABpMEeSd5OoVIuDNwg" name="getBillingCondition" bodyCondition="_YFVYAxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YFVYAxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YFVYABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFVYBBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BillingCondition))->asSequence()->any(true).oclAsType(emspcr::BillingCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YFVYARpMEeSd5OoVIuDNwg" type="_rNkl4GleEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YFVYAhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YFizYBpMEeSd5OoVIuDNwg" name="getLevelOfServiceObservation" bodyCondition="_YFizYxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YFizYxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YFizYBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFizZBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LevelOfServiceObservation))->asSequence()->any(true).oclAsType(emspcr::LevelOfServiceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YFizYRpMEeSd5OoVIuDNwg" type="_To2-YGleEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YFizYhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3dRe0HSUEeGa4IXs2ghZEw" name="EMSInjuryIncidentDescriptionSection">
      <ownedComment xmi:id="_t6nrwCwnEeOaIuM51LdlNw">
        <body>Observations concerning a patient's injury mechanism</body>
      </ownedComment>
      <ownedRule xmi:id="_X3wPABpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionTemplateId" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3wPARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3xdIBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionCode" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3xdIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67800-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3zSUBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionTitle" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3zSURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Injury Incident Description Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X31HgBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionText" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X31HgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_X58BpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionInjuryCauseCategory" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_X58RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryCauseCategory) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_f1wBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionInjuryMechanism" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_f1wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryMechanism) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_nKgBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionTraumaCenterCriteria" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_nKgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TraumaCenterCriteria) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_ufQBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionInjuryRiskFactor" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_vGUBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryRiskFactor) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_2bEBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionVehicleImpactArea" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_2bERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::VehicleImpactArea) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_9v0BpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionPatientLocationInVehicle" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_9v0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientLocationInVehicle) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAFroBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionVehicleOccupantSafetyEquipment" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAFroRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::VehicleOccupantSafetyEquipment) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YANAYBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionAirbagDeploymentStatus" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YANAYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AirbagDeploymentStatus) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAWKUBpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionHeightOfFall" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAWKURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::HeightOfFall) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAcQ8BpMEeSd5OoVIuDNwg" name="EMSInjuryIncidentDescriptionSectionDisasterType" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAcQ8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DisasterType) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3dSF4HSUEeGa4IXs2ghZEw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_X_ZIEBpMEeSd5OoVIuDNwg" name="getInjuryCauseCategory" bodyCondition="_X_ZIExpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X_ZIExpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X_ZIEBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_ZIFBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryCauseCategory))->asSequence()->any(true).oclAsType(emspcr::InjuryCauseCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X_ZIERpMEeSd5OoVIuDNwg" type="_KEFo8HSVEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X_ZIEhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X_gc0BpMEeSd5OoVIuDNwg" name="getInjuryMechanism" bodyCondition="_X_gc0xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X_gc0xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X_gc0BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_gc1BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryMechanism))->asSequence()->any(true).oclAsType(emspcr::InjuryMechanism)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X_gc0RpMEeSd5OoVIuDNwg" type="_aS16EHSWEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X_gc0hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X_nxkBpMEeSd5OoVIuDNwg" name="getTraumaCenterCriteria" bodyCondition="_X_nxkxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X_nxkxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X_nxkBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_nxlBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TraumaCenterCriteria))->asSequence()->any(true).oclAsType(emspcr::TraumaCenterCriteria)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X_nxkRpMEeSd5OoVIuDNwg" type="_lTHsIIcXEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X_nxkhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X_vtYBpMEeSd5OoVIuDNwg" name="getInjuryRiskFactor" bodyCondition="_X_vtYxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X_vtYxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X_vtYBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_vtZBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryRiskFactor))->asSequence()->any(true).oclAsType(emspcr::InjuryRiskFactor)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X_vtYRpMEeSd5OoVIuDNwg" type="_vuraIIcZEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X_vtYhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X_3CIBpMEeSd5OoVIuDNwg" name="getVehicleImpactArea" bodyCondition="_X_3CIxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X_3CIxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X_3CIBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_3CJBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::VehicleImpactArea))->asSequence()->any(true).oclAsType(emspcr::VehicleImpactArea)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X_3CIRpMEeSd5OoVIuDNwg" type="_nvhVwIcaEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X_3CIhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X_-W4BpMEeSd5OoVIuDNwg" name="getPatientLocationInVehicle" bodyCondition="_X_-W4xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X_-W4xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X_-W4BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_-W5BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientLocationInVehicle))->asSequence()->any(true).oclAsType(emspcr::PatientLocationInVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X_-W4RpMEeSd5OoVIuDNwg" type="_zMwjMIccEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X_-W4hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YAGSsBpMEeSd5OoVIuDNwg" name="getVehicleOccupantSafetyEquipment" bodyCondition="_YAGSsxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YAGSsxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YAGSsBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAGStBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::VehicleOccupantSafetyEquipment))->asSequence()->any(true).oclAsType(emspcr::VehicleOccupantSafetyEquipment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YAGSsRpMEeSd5OoVIuDNwg" type="_bsVJUIcdEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YAGSshpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YAOOgBpMEeSd5OoVIuDNwg" name="getAirbagDeploymentStatus" bodyCondition="_YAOOgxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YAOOgxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YAOOgBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAOOhBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AirbagDeploymentStatus))->asSequence()->any(true).oclAsType(emspcr::AirbagDeploymentStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YAOOgRpMEeSd5OoVIuDNwg" type="_2lRhsIcdEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YAOOghpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YAWxYBpMEeSd5OoVIuDNwg" name="getHeightOfFall" bodyCondition="_YAWxYxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YAWxYxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YAWxYBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAWxZBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::HeightOfFall))->asSequence()->any(true).oclAsType(emspcr::HeightOfFall)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YAWxYRpMEeSd5OoVIuDNwg" type="_auKbcIceEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YAWxYhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YAc4ABpMEeSd5OoVIuDNwg" name="getDisasterType" bodyCondition="_YAc4AxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YAc4AxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YAc4ABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAdfEBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DisasterType))->asSequence()->any(true).oclAsType(emspcr::DisasterType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YAc4ARpMEeSd5OoVIuDNwg" type="_wKL4IIceEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YAc4AhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pIikMHwDEeGW3cDolvqrTA" name="EMSCardiacArrestEventSection">
      <ownedComment xmi:id="_eAWn0CUeEeOPwcQY2yBpiA">
        <body>Information regarding a cardiac arrest</body>
      </ownedComment>
      <ownedRule xmi:id="_X35Y8hpMEeSd5OoVIuDNwg" name="EMSCardiacArrestEventSectionTemplateId" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X36AABpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X37OIBpMEeSd5OoVIuDNwg" name="EMSCardiacArrestEventSectionCode" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X37OIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67799-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X39qYBpMEeSd5OoVIuDNwg" name="EMSCardiacArrestEventSectionTitle" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X39qYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Cardiac Arrest Event')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X3-4gBpMEeSd5OoVIuDNwg" name="EMSCardiacArrestEventSectionText" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X3-4gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8N4QBpMEeSd5OoVIuDNwg" name="EMSCardiacArrestEventSectionCardiacArrestExistence" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8N4QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CardiacArrest) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pIlAcHwDEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_X8OfUBpMEeSd5OoVIuDNwg" name="getCardiacArrestExistence" bodyCondition="_X8OfUxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X8OfUxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X8OfUBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8OfVBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CardiacArrest))->asSequence()->any(true).oclAsType(emspcr::CardiacArrest)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X8OfURpMEeSd5OoVIuDNwg" type="_Qlqj8HwGEeGW3cDolvqrTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X8OfUhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i4C-AH9aEeGht55Sz1eBOw" name="EMSAdvanceDirectivesSection">
      <ownedComment xmi:id="_ryjSACSSEeO2bfzIdJE0yg">
        <body>Information regarding patient advance directives</body>
      </ownedComment>
      <ownedRule xmi:id="_X4M68RpMEeSd5OoVIuDNwg" name="EMSAdvanceDirectivesSectionTemplateId" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4NiABpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4OwIBpMEeSd5OoVIuDNwg" name="EMSAdvanceDirectivesSectionCode" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4OwIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67840-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4QlUBpMEeSd5OoVIuDNwg" name="EMSAdvanceDirectivesSectionTitle" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4QlURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS advance directives Narrative NEMSIS')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4SagBpMEeSd5OoVIuDNwg" name="EMSAdvanceDirectivesSectionText" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4SagRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_IpYBpMEeSd5OoVIuDNwg" name="EMSAdvanceDirectivesSectionAdvancedDirectiveObservation" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_IpYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdvanceDirectiveObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kG590H9aEeGht55Sz1eBOw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_X_JQcBpMEeSd5OoVIuDNwg" name="getAdvancedDirectiveObservations" bodyCondition="_X_JQcxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X_JQcxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X_JQcBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_JQdBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdvanceDirectiveObservation)).oclAsType(emspcr::AdvanceDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X_JQcRpMEeSd5OoVIuDNwg" type="_xCcE0Iy7EeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X_JQchpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nSjIgH9cEeGht55Sz1eBOw" name="EMSAllergiesAndAdverseReactionsSection">
      <ownedComment xmi:id="_NTt7kCSTEeO2bfzIdJE0yg">
        <body>Information regarding patient allergies and sensitivities</body>
      </ownedComment>
      <ownedRule xmi:id="_X4TBkBpMEeSd5OoVIuDNwg" name="EMSAllergiesAndAdverseReactionsSectionTemplateId" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4TBkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4U2wBpMEeSd5OoVIuDNwg" name="EMSAllergiesAndAdverseReactionsSectionCode" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4U2wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4Wr8BpMEeSd5OoVIuDNwg" name="EMSAllergiesAndAdverseReactionsSectionTitle" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4Wr8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Allergies and Adverse Reactions')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4X6EBpMEeSd5OoVIuDNwg" name="EMSAllergiesAndAdverseReactionsSectionText" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4X6ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_VdsBpMEeSd5OoVIuDNwg" name="EMSAllergiesAndAdverseReactionsSectionEnvironmentalAllergies" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_WEwBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::NonDrugAllergyOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YQEBUBpMEeSd5OoVIuDNwg" name="EMSAllergiesAndAdverseReactionsSectionEMSDrugAllergyOrganizer" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQEBURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(cda::Organizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_p8HLwH9cEeGht55Sz1eBOw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_X_WEwRpMEeSd5OoVIuDNwg" name="getEnvironmentalAllergies" bodyCondition="_X_Wr0hpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X_Wr0hpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X_WEwRpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_Wr0xpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::NonDrugAllergyOrganizer))->asSequence()->any(true).oclAsType(emspcr::NonDrugAllergyOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X_Wr0BpMEeSd5OoVIuDNwg" type="_CFApcIzGEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X_Wr0RpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YQEoYBpMEeSd5OoVIuDNwg" name="getEMSDrugAllergyOrganizer" bodyCondition="_YQEoYxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YQEoYxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YQEoYBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQEoZBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(cda::Organizer))->asSequence()->any(true).oclAsType(cda::Organizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YQEoYRpMEeSd5OoVIuDNwg" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YQEoYhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aDO5AIcnEeGqF6qfYwLiQw" name="EMSCurrentMedicationSection">
      <ownedComment xmi:id="_Dz0XkCUgEeOPwcQY2yBpiA">
        <body>Information regarding a patient's current medications</body>
      </ownedComment>
      <ownedRule xmi:id="_X4ZIMBpMEeSd5OoVIuDNwg" name="EMSCurrentMedicationSectionTemplateId" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4ZIMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4a9YBpMEeSd5OoVIuDNwg" name="EMSCurrentMedicationSectionCode" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4a9YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67844-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4cykBpMEeSd5OoVIuDNwg" name="EMSCurrentMedicationSectionTitle" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4cykRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Current Medications Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4eAsBpMEeSd5OoVIuDNwg" name="EMSCurrentMedicationSectionText" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4eAsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDMC8BpMEeSd5OoVIuDNwg" name="EMSCurrentMedicationSectionCurrentlyOnMedication" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDMC8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CurrentlyOnMedication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDSJkBpMEeSd5OoVIuDNwg" name="EMSCurrentMedicationSectionPatientOnAnticoagulants" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDSJkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientOnAnticoagulants) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDYQMBpMEeSd5OoVIuDNwg" name="EMSCurrentMedicationSectionCurrentMedication" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDYQMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(emspcr::CurrentMedication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cWgjMIcnEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YDMqABpMEeSd5OoVIuDNwg" name="getCurrentlyOnMedication" bodyCondition="_YDNRERpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YDNRERpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YDMqABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDNREhpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CurrentlyOnMedication))->asSequence()->any(true).oclAsType(emspcr::CurrentlyOnMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YDMqARpMEeSd5OoVIuDNwg" type="_sUm-oIcnEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YDNREBpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YDSwoBpMEeSd5OoVIuDNwg" name="getPatientOnAnticoagulants" bodyCondition="_YDSwoxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YDSwoxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YDSwoBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDSwpBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientOnAnticoagulants))->asSequence()->any(true).oclAsType(emspcr::PatientOnAnticoagulants)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YDSwoRpMEeSd5OoVIuDNwg" type="_RZqlsIcoEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YDSwohpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YDY3QBpMEeSd5OoVIuDNwg" name="getCurrentMedications" bodyCondition="_YDY3QxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YDY3QxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YDY3QBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDY3RBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(emspcr::CurrentMedication)).oclAsType(emspcr::CurrentMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YDY3QRpMEeSd5OoVIuDNwg" type="_mwn8MIcoEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YDY3QhpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1XH7YIziEeGnhceUMXltng" name="EMSSocialHistorySection">
      <ownedComment xmi:id="_nF9UcC0AEeO0H9tywllqaQ">
        <body>Information about the patient's social environment</body>
      </ownedComment>
      <ownedRule xmi:id="_X4nKpRpMEeSd5OoVIuDNwg" name="EMSSocialHistorySectionTemplateId" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4nKphpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4o_0BpMEeSd5OoVIuDNwg" name="EMSSocialHistorySectionCode" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4o_0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67843-3' and value.codeSystem = '2.16.840.1.113883.6.1'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4q1ABpMEeSd5OoVIuDNwg" name="EMSSocialHistorySectionCodeP" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4q1ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4sqMBpMEeSd5OoVIuDNwg" name="EMSSocialHistorySectionTitle" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4sqMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Social History')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4ufYBpMEeSd5OoVIuDNwg" name="EMSSocialHistorySectionText" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4ufYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YB9T4BpMEeSd5OoVIuDNwg" name="EMSSocialHistorySectionExistenceOfDrugUseIndication" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB9T4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfDrugUseIndication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YB-iBRpMEeSd5OoVIuDNwg" name="EMSSocialHistorySectionDrugUseIndication" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB-iBhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DrugUseIndication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1XIicIziEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YB-iABpMEeSd5OoVIuDNwg" name="getExistenceOfDrugUseIndication" bodyCondition="_YB-iAxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YB-iAxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YB-iABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB-iBBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfDrugUseIndication))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfDrugUseIndication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YB-iARpMEeSd5OoVIuDNwg" type="_Mr964IzjEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YB-iAhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YB_JEBpMEeSd5OoVIuDNwg" name="getDrugUseIndications" bodyCondition="_YB_JExpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YB_JExpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YB_JEBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB_JFBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DrugUseIndication)).oclAsType(emspcr::DrugUseIndication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YB_JERpMEeSd5OoVIuDNwg" type="_oJHzkIzjEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YB_JEhpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jCzkkIzkEeGnhceUMXltng" name="EMSVitalSignsSection">
      <ownedComment xmi:id="_6jIiAC0EEeO0H9tywllqaQ">
        <body>Collection of vital signs and other observations about the patient's status</body>
      </ownedComment>
      <ownedRule xmi:id="_X4wUlRpMEeSd5OoVIuDNwg" name="EMSVitalSignsSectionTemplateId" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4wUlhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4yJwBpMEeSd5OoVIuDNwg" name="EMSVitalSignsSectionCode" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4yJwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4z-8BpMEeSd5OoVIuDNwg" name="EMSVitalSignsSectionTitle" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4z-8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Vital Signs')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X41NEBpMEeSd5OoVIuDNwg" name="EMSVitalSignsSectionText" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X41NERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8ryUBpMEeSd5OoVIuDNwg" name="EMSVitalSignsSectionVitalSignsOrganizer" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8ryURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::VitalSignsOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8sZZRpMEeSd5OoVIuDNwg" name="EMSVitalSignsSectionAdditionalVitalSignsOrganizer" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8tAcBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::AdditionalVitalSignsOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jC0LoIzkEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_X8sZYBpMEeSd5OoVIuDNwg" name="getVitalSignsOrganizers" bodyCondition="_X8sZYxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X8sZYxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X8sZYBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8sZZBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::VitalSignsOrganizer)).oclAsType(emspcr::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X8sZYRpMEeSd5OoVIuDNwg" type="_JnfD8IzoEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X8sZYhpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X8tAcRpMEeSd5OoVIuDNwg" name="getAdditionalVitalSignsOrganizers" bodyCondition="_X8tngRpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X8tngRpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X8tAcRpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8tnghpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::AdditionalVitalSignsOrganizer)).oclAsType(emspcr::AdditionalVitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X8tAchpMEeSd5OoVIuDNwg" type="_F-GKoLMNEeKNbt70lHd2Eg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X8tngBpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6223oJohEeG_FLcaRgAa7g" name="EMSPhysicalAssessmentSection">
      <ownedComment xmi:id="_Jd_okCwlEeOaIuM51LdlNw">
        <body>A collection of qualitative assessments of the patient's physical condition and other facts</body>
      </ownedComment>
      <ownedRule xmi:id="_X476wRpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionTemplateId" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X476whpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X49v8BpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionCode" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X49v8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '29545-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4_lIBpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionCodeP" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4_lIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5BaUBpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionTitle" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5BaURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Physical Assessment Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5CocBpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionText" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5CocRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDkdcBpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionPhysicalAssessmentOrganizer" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDkdcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::PhysicalAssessmentOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDrLIBpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionPatientPregnancy" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDrLIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientPregnancy) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YD3YYBpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionLastOralIntake" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YD3YYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LastOralIntake) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEBJYBpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionPatientAge" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEBJYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientAge) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEJFMBpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionThrombolyticContraindications" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEJFMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ThrombolyticContraindications) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YESPIBpMEeSd5OoVIuDNwg" name="EMSPhysicalAssessmentSectionBarriersToPatientCare" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YESPIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::BarriersToPatientCare) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CzqWIJoiEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YDlEgBpMEeSd5OoVIuDNwg" name="getPhysicalAssessmentOrganizer" bodyCondition="_YDlEgxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YDlEgxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YDlEgBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDlEhBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::PhysicalAssessmentOrganizer))->asSequence()->any(true).oclAsType(emspcr::PhysicalAssessmentOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YDlEgRpMEeSd5OoVIuDNwg" type="_zbYvIJoiEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YDlEghpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YDryMBpMEeSd5OoVIuDNwg" name="getPatientPregnancy" bodyCondition="_YDryMxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YDryMxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YDryMBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDryNBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientPregnancy))->asSequence()->any(true).oclAsType(emspcr::PatientPregnancy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YDryMRpMEeSd5OoVIuDNwg" type="_sW8QcJosEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YDryMhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YD3_cBpMEeSd5OoVIuDNwg" name="getLastOralIntake" bodyCondition="_YD3_cxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YD3_cxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YD3_cBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YD3_dBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LastOralIntake))->asSequence()->any(true).oclAsType(emspcr::LastOralIntake)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YD3_cRpMEeSd5OoVIuDNwg" type="_S1I0sJotEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YD3_chpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YEBwcBpMEeSd5OoVIuDNwg" name="getPatientAge" bodyCondition="_YEBwcxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YEBwcxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YEBwcBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEBwdBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientAge))->asSequence()->any(true).oclAsType(emspcr::PatientAge)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YEBwcRpMEeSd5OoVIuDNwg" type="_rhjrIJotEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YEBwchpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YEJsQBpMEeSd5OoVIuDNwg" name="getThrombolyticContraindications" bodyCondition="_YEJsQxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YEJsQxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YEJsQBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEJsRBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ThrombolyticContraindications))->asSequence()->any(true).oclAsType(emspcr::ThrombolyticContraindications)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YEJsQRpMEeSd5OoVIuDNwg" type="_HuCH8JouEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YEJsQhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YES2MBpMEeSd5OoVIuDNwg" name="getBarriersToPatientCare" bodyCondition="_YETdQhpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YETdQhpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YES2MBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YETdQxpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BarriersToPatientCare))->asSequence()->any(true).oclAsType(emspcr::BarriersToPatientCare)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YETdQBpMEeSd5OoVIuDNwg" type="_qlUP4JouEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YETdQRpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_c7crcJovEeG_FLcaRgAa7g" name="EMSMedicationsAdministeredSection">
      <ownedComment xmi:id="_X8kYsCwqEeOaIuM51LdlNw">
        <body>Collection of information regarding the administration of medications</body>
      </ownedComment>
      <ownedRule xmi:id="_X5EdpRpMEeSd5OoVIuDNwg" name="EMSMedicationsAdministeredSectionTemplateId" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5FEsBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5GS0BpMEeSd5OoVIuDNwg" name="EMSMedicationsAdministeredSectionCode" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5GS0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67849-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5IIABpMEeSd5OoVIuDNwg" name="EMSMedicationsAdministeredSectionCodeP" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5IIARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5J9MBpMEeSd5OoVIuDNwg" name="EMSMedicationsAdministeredSectionTitle" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5J9MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Medications Administered Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5LLUBpMEeSd5OoVIuDNwg" name="EMSMedicationsAdministeredSectionText" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5LLURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCMkcBpMEeSd5OoVIuDNwg" name="EMSMedicationsAdministeredSectionMedicationAdministered" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCMkcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(emspcr::MedicationAdministered) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_d57s8JovEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YCNLgBpMEeSd5OoVIuDNwg" name="getMedicationAdministereds" bodyCondition="_YCNLgxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YCNLgxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YCNLgBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCNLhBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(emspcr::MedicationAdministered)).oclAsType(emspcr::MedicationAdministered)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YCNLgRpMEeSd5OoVIuDNwg" type="_5JQlAJovEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YCNLghpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4QFw8JumEeGzXI65shd6Fw" name="EMSProceduresPerformedSection">
      <ownedComment xmi:id="_UKGrQCz8EeO0H9tywllqaQ">
        <body>Information regarding procedures performed by the EMS personnel or by others prior to EMS unit arrival</body>
      </ownedComment>
      <ownedRule xmi:id="_X5ZNxRpMEeSd5OoVIuDNwg" name="EMSProceduresPerformedSectionTemplateId" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5ZNxhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.21')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5bC8BpMEeSd5OoVIuDNwg" name="EMSProceduresPerformedSectionCode" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5bC8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '29554-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5c4IBpMEeSd5OoVIuDNwg" name="EMSProceduresPerformedSectionCodeP" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5c4IRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5etUBpMEeSd5OoVIuDNwg" name="EMSProceduresPerformedSectionTitle" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5etURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Procedures Performed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5f7cBpMEeSd5OoVIuDNwg" name="EMSProceduresPerformedSectionText" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5f7cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8I_wBpMEeSd5OoVIuDNwg" name="EMSProceduresPerformedSectionProcedureActivityProcedure1" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8I_wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(emspcr::Procedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4mzn0JumEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_X8Jm0BpMEeSd5OoVIuDNwg" name="getProcedureActivityProcedure1s" bodyCondition="_X8Jm0xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X8Jm0xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X8Jm0BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8Jm1BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(emspcr::Procedure)).oclAsType(emspcr::Procedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X8Jm0RpMEeSd5OoVIuDNwg" type="_K8JK8JuoEeGzXI65shd6Fw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X8Jm0hpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iDmQYJ9mEeGw9ZRnaFfEZQ" name="EMSPatientCareNarrativeSection">
      <ownedComment xmi:id="_eq61ICwsEeOaIuM51LdlNw">
        <body>A narrative description of the EMS encounter</body>
      </ownedComment>
      <ownedRule xmi:id="_X5vzFRpMEeSd5OoVIuDNwg" name="EMSPatientCareNarrativeSectionTemplateId" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5waIBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5xoQBpMEeSd5OoVIuDNwg" name="EMSPatientCareNarrativeSectionCode" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5xoQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67781-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5zdcBpMEeSd5OoVIuDNwg" name="EMSPatientCareNarrativeSectionCodeP" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5zdcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X51SoBpMEeSd5OoVIuDNwg" name="EMSPatientCareNarrativeSectionTitle" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X51SoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Patient Care Report Narrative')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X52gwBpMEeSd5OoVIuDNwg" name="EMSPatientCareNarrativeSectionText" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X52gwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ioK9EJ9mEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_OV4TIJ9nEeGw9ZRnaFfEZQ" name="EMSDispatchSection">
      <ownedComment xmi:id="_h4oSMCUkEeOEaIF_MBGm_A">
        <body>Information regarding the dispatch process</body>
      </ownedComment>
      <ownedRule xmi:id="_X58nYBpMEeSd5OoVIuDNwg" name="EMSDispatchSectionTemplateId" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X58nYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X591gBpMEeSd5OoVIuDNwg" name="EMSDispatchSectionCode" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X591gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67660-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5_qsBpMEeSd5OoVIuDNwg" name="EMSDispatchSectionTitle" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5_qsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Dispatch')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6A40BpMEeSd5OoVIuDNwg" name="EMSDispatchSectionText" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6A40RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YC0PgBpMEeSd5OoVIuDNwg" name="EMSDispatchSectionEmergencyMedicalDispatchObservation" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YC0PgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::EmergencyMedicalDispatchObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDBD0BpMEeSd5OoVIuDNwg" name="EMSDispatchSectionComplaintReportedByDispatch" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDBD0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ComplaintReportedByDispatch) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PS8YUJ9nEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YC02kBpMEeSd5OoVIuDNwg" name="getEmergencyMedicalDispatchObservation" bodyCondition="_YC02kxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YC02kxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YC02kBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YC02lBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::EmergencyMedicalDispatchObservation))->asSequence()->any(true).oclAsType(emspcr::EmergencyMedicalDispatchObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YC02kRpMEeSd5OoVIuDNwg" type="_46UUAJ9nEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YC02khpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YDBq4BpMEeSd5OoVIuDNwg" name="getComplaintReportedByDispatch" bodyCondition="_YDBq4xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YDBq4xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YDBq4BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDBq5BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ComplaintReportedByDispatch))->asSequence()->any(true).oclAsType(emspcr::ComplaintReportedByDispatch)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YDBq4RpMEeSd5OoVIuDNwg" type="__LltsJ97EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YDBq4hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LI7M8J99EeGw9ZRnaFfEZQ" name="EMSResponseSection">
      <ownedComment xmi:id="_Ag0QICz_EeO0H9tywllqaQ">
        <body>Information regarding the EMS crew's response to dispatch</body>
      </ownedComment>
      <ownedRule xmi:id="_X6CG8BpMEeSd5OoVIuDNwg" name="EMSResponseSectionTemplateId" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6CG8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6DVEBpMEeSd5OoVIuDNwg" name="EMSResponseSectionCode" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6DVERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67664-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6FKQBpMEeSd5OoVIuDNwg" name="EMSResponseSectionCodeP" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6FKQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6G_cBpMEeSd5OoVIuDNwg" name="EMSResponseSectionTitle" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6G_cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Response')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6INkBpMEeSd5OoVIuDNwg" name="EMSResponseSectionText" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6INkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGCioBpMEeSd5OoVIuDNwg" name="EMSResponseSectionDelayOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGCioRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::DelayOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGFl8BpMEeSd5OoVIuDNwg" name="EMSResponseSectionDispatchLocationOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGFl8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::DispatchLocationOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGKecBpMEeSd5OoVIuDNwg" name="EMSResponseSectionResponseOdometerReadingOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGKecRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::ResponseOdometerReadingOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGNhwBpMEeSd5OoVIuDNwg" name="EMSResponseSectionResponseModeToScene" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGNhwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ResponseModeToScene) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_M0JYoJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YGDJsBpMEeSd5OoVIuDNwg" name="getDelayOrganizer" bodyCondition="_YGDJsxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YGDJsxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YGDJsBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGDJtBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::DelayOrganizer))->asSequence()->any(true).oclAsType(emspcr::DelayOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YGDJsRpMEeSd5OoVIuDNwg" type="_0padgJ99EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YGDJshpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YGGNABpMEeSd5OoVIuDNwg" name="getDispatchLocationOrganizer" bodyCondition="_YGGNAxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YGGNAxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YGGNABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGGNBBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::DispatchLocationOrganizer))->asSequence()->any(true).oclAsType(emspcr::DispatchLocationOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YGGNARpMEeSd5OoVIuDNwg" type="_MiN-UJ-BEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YGGNAhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YGLFgBpMEeSd5OoVIuDNwg" name="getResponseOdometerReadingOrganizer" bodyCondition="_YGLFgxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YGLFgxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YGLFgBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGLFhBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::ResponseOdometerReadingOrganizer))->asSequence()->any(true).oclAsType(emspcr::ResponseOdometerReadingOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YGLFgRpMEeSd5OoVIuDNwg" type="_yVviAJ-OEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YGLFghpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YGOI0BpMEeSd5OoVIuDNwg" name="getResponseModeToScene" bodyCondition="_YGOI0xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YGOI0xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YGOI0BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGOI1BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ResponseModeToScene))->asSequence()->any(true).oclAsType(emspcr::ResponseModeToScene)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YGOI0RpMEeSd5OoVIuDNwg" type="_l_V6IJ-bEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YGOI0hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i-lM8J-dEeGorI3CPDW2ww" name="EMSDispositionSection">
      <ownedComment xmi:id="_juoxkCUkEeOEaIF_MBGm_A">
        <body>Information regarding the disposition of the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_X6ZTUBpMEeSd5OoVIuDNwg" name="EMSDispositionSectionTemplateId" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6ZTURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6bIgBpMEeSd5OoVIuDNwg" name="EMSDispositionSectionCode" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6bIgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67661-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6cWoBpMEeSd5OoVIuDNwg" name="EMSDispositionSectionCodeP" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6cWoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6eL0BpMEeSd5OoVIuDNwg" name="EMSDispositionSectionTitle" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6eL0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Disposition')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6fZ8BpMEeSd5OoVIuDNwg" name="EMSDispositionSectionText" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6fZ8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X87C4BpMEeSd5OoVIuDNwg" name="EMSDispositionSectionNumberOfPatientsObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X87C4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::NumberOfPatientsTransportedObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9C-sBpMEeSd5OoVIuDNwg" name="EMSDispositionSectionIncidentDispositionObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9C-sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::IncidentDispositionObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9N90BpMEeSd5OoVIuDNwg" name="EMSDispositionSectionTransportModeObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9N90RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportModeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9YV4BpMEeSd5OoVIuDNwg" name="EMSDispositionSectionTransportMethodObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9YV4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportMethodObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9jVABpMEeSd5OoVIuDNwg" name="EMSDispositionSectionReasonForChoosingDestinationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9jVARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ReasonForChoosingDestinationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9uUIBpMEeSd5OoVIuDNwg" name="EMSDispositionSectionPrearrivalActivationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9uUIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PrearrivalActivationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X923ABpMEeSd5OoVIuDNwg" name="EMSDispositionSectionPatientConditionChangeAtDestinationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X923ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientConditionChangeAtDestinationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kGvu4J-dEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_X87p8BpMEeSd5OoVIuDNwg" name="getNumberOfPatientsObservation" bodyCondition="_X87p8xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X87p8xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X87p8BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X87p9BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::NumberOfPatientsTransportedObservation))->asSequence()->any(true).oclAsType(emspcr::NumberOfPatientsTransportedObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X87p8RpMEeSd5OoVIuDNwg" type="_Dfaa4J-eEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X87p8hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X9DlwBpMEeSd5OoVIuDNwg" name="getIncidentDispositionObservation" bodyCondition="_X9DlwxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X9DlwxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X9DlwBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9DlxBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::IncidentDispositionObservation))->asSequence()->any(true).oclAsType(emspcr::IncidentDispositionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X9DlwRpMEeSd5OoVIuDNwg" type="_j3YnxZ-eEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X9DlwhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X9Ok4BpMEeSd5OoVIuDNwg" name="getTransportModeObservation" bodyCondition="_X9Ok4xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X9Ok4xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X9Ok4BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9Ok5BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportModeObservation))->asSequence()->any(true).oclAsType(emspcr::TransportModeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X9Ok4RpMEeSd5OoVIuDNwg" type="_nv-0gp-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X9Ok4hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X9ZkABpMEeSd5OoVIuDNwg" name="getTransportMethodObservation" bodyCondition="_X9ZkAxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X9ZkAxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X9ZkABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9ZkBBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportMethodObservation))->asSequence()->any(true).oclAsType(emspcr::TransportMethodObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X9ZkARpMEeSd5OoVIuDNwg" type="_EagUtZ-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X9ZkAhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X9j8EBpMEeSd5OoVIuDNwg" name="getReasonForChoosingDestinationObservation" bodyCondition="_X9kjIhpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X9kjIhpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X9j8EBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9kjIxpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ReasonForChoosingDestinationObservation))->asSequence()->any(true).oclAsType(emspcr::ReasonForChoosingDestinationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X9kjIBpMEeSd5OoVIuDNwg" type="_cm1D5Z-hEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X9kjIRpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X9u7MBpMEeSd5OoVIuDNwg" name="getPrearrivalActivationObservation" bodyCondition="_X9u7MxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X9u7MxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X9u7MBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9u7NBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PrearrivalActivationObservation))->asSequence()->any(true).oclAsType(emspcr::PrearrivalActivationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X9u7MRpMEeSd5OoVIuDNwg" type="_083apZ-hEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X9u7MhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X93eEBpMEeSd5OoVIuDNwg" name="getPatientConditionChangeAtDestinationObservation" bodyCondition="_X93eExpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X93eExpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X93eEBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X93eFBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientConditionChangeAtDestinationObservation))->asSequence()->any(true).oclAsType(emspcr::PatientConditionChangeAtDestinationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X93eERpMEeSd5OoVIuDNwg" type="_Q4zL9Z-gEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X93eEhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GGotEJ-kEeGorI3CPDW2ww" name="EMSPersonnelAdverseEventSection">
      <ownedComment xmi:id="_MbR_cCwtEeOaIuM51LdlNw">
        <body>Information regarding adverse events affecting EMS personnel</body>
      </ownedComment>
      <ownedRule xmi:id="_X6goEBpMEeSd5OoVIuDNwg" name="EMSPersonnelAdverseEventSectionTemplateId" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6goERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6h2MBpMEeSd5OoVIuDNwg" name="EMSPersonnelAdverseEventSectionCode" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6h2MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67658-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6jrYBpMEeSd5OoVIuDNwg" name="EMSPersonnelAdverseEventSectionCodeP" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6jrYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6lgkBpMEeSd5OoVIuDNwg" name="EMSPersonnelAdverseEventSectionTitle" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6lgkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Exposures or Injuries of EMS Personnel')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6musBpMEeSd5OoVIuDNwg" name="EMSPersonnelAdverseEventSectionText" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6musRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFB2ABpMEeSd5OoVIuDNwg" name="EMSPersonnelAdverseEventSectionAdverseEventIndicator" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFB2ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdverseEventIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFKY4BpMEeSd5OoVIuDNwg" name="EMSPersonnelAdverseEventSectionAdverseEventTypeObservation" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFKY4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdverseEventTypeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GrtJAJ-kEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YFCdEBpMEeSd5OoVIuDNwg" name="getAdverseEventIndicator" bodyCondition="_YFCdExpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YFCdExpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YFCdEBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFDEIBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdverseEventIndicator))->asSequence()->any(true).oclAsType(emspcr::AdverseEventIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YFCdERpMEeSd5OoVIuDNwg" type="_p4XEAJ-kEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YFCdEhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YFK_8BpMEeSd5OoVIuDNwg" name="getAdverseEventTypeObservations" bodyCondition="_YFK_8xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YFK_8xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YFK_8BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFK_9BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdverseEventTypeObservation)).oclAsType(emspcr::AdverseEventTypeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YFK_8RpMEeSd5OoVIuDNwg" type="_gU4tMJ-lEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YFK_8hpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aK7P4J-mEeGorI3CPDW2ww" name="EMSProtocolSection">
      <ownedComment xmi:id="_kDY4ICz8EeO0H9tywllqaQ">
        <body>Information about the protocol used by EMS personnel to direct the clinical care of the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_X6n80BpMEeSd5OoVIuDNwg" name="EMSProtocolSectionTemplateId" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6n80RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6pK8BpMEeSd5OoVIuDNwg" name="EMSProtocolSectionCode" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6pK8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67663-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6rAIBpMEeSd5OoVIuDNwg" name="EMSProtocolSectionTitle" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6rAIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Protocol Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6sOQBpMEeSd5OoVIuDNwg" name="EMSProtocolSectionText" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6sOQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFskYBpMEeSd5OoVIuDNwg" name="EMSProtocolSectionProtocolObservation" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFskYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProtocolObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YF3jgBpMEeSd5OoVIuDNwg" name="EMSProtocolSectionCandidatePatientRegistryType" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YF3jgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CandidatePatientRegistryType) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_a15fgJ-mEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YFtLcBpMEeSd5OoVIuDNwg" name="getProtocolObservation" bodyCondition="_YFtLcxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YFtLcxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YFtLcBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFtLdBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProtocolObservation))->asSequence()->any(true).oclAsType(emspcr::ProtocolObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YFtLcRpMEeSd5OoVIuDNwg" type="_rDpggp-mEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YFtLchpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YF4KkBpMEeSd5OoVIuDNwg" name="getCandidatePatientRegistryType" bodyCondition="_YF4KkxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YF4KkxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YF4KkBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YF4xoBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CandidatePatientRegistryType))->asSequence()->any(true).oclAsType(emspcr::CandidatePatientRegistryType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YF4KkRpMEeSd5OoVIuDNwg" type="_n-zaBZ-nEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YF4KkhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_h3A8IKK3EeGOxth0BgV-QA" name="EMSSceneSection">
      <ownedComment xmi:id="_dKMO4C0AEeO0H9tywllqaQ">
        <body>Information about the environment in which the patient is found</body>
      </ownedComment>
      <ownedRule xmi:id="_X6s1UBpMEeSd5OoVIuDNwg" name="EMSSceneSectionTemplateId" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6tcYBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6uqgBpMEeSd5OoVIuDNwg" name="EMSSceneSectionCode" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6uqgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67665-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6wfsBpMEeSd5OoVIuDNwg" name="EMSSceneSectionTitle" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6wfsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Scene')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6xt0BpMEeSd5OoVIuDNwg" name="EMSSceneSectionText" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6xt0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEdOQBpMEeSd5OoVIuDNwg" name="EMSSceneSectionFirstUnitIndicator" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEdOQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::FirstUnitIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEecYBpMEeSd5OoVIuDNwg" name="EMSSceneSectionFirstUnitOnScene" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEecYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::FirstUnitOnScene) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEse0BpMEeSd5OoVIuDNwg" name="EMSSceneSectionScenePatientCount" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEse0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ScenePatientCount) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEts8BpMEeSd5OoVIuDNwg" name="EMSSceneSectionMassCasualtyIndicator" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEts8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::MassCasualtyIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YE7vYBpMEeSd5OoVIuDNwg" name="EMSSceneSectionLocationTypeObservation" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE7vYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LocationTypeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_in9Q4KK3EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YEd1UBpMEeSd5OoVIuDNwg" name="getFirstUnitIndicator" bodyCondition="_YEd1UxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YEd1UxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YEd1UBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEd1VBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::FirstUnitIndicator))->asSequence()->any(true).oclAsType(emspcr::FirstUnitIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YEd1URpMEeSd5OoVIuDNwg" type="_Ox86UKK4EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YEd1UhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YEfDcBpMEeSd5OoVIuDNwg" name="getFirstUnitOnScene" bodyCondition="_YEfDcxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YEfDcxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YEfDcBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEfDdBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::FirstUnitOnScene))->asSequence()->any(true).oclAsType(emspcr::FirstUnitOnScene)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YEfDcRpMEeSd5OoVIuDNwg" type="_JNrkAKK5EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YEfDchpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YEtF4BpMEeSd5OoVIuDNwg" name="getScenePatientCount" bodyCondition="_YEtF4xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YEtF4xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YEtF4BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEtF5BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ScenePatientCount))->asSequence()->any(true).oclAsType(emspcr::ScenePatientCount)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YEtF4RpMEeSd5OoVIuDNwg" type="_wPLCkKK5EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YEtF4hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YEuUABpMEeSd5OoVIuDNwg" name="getMassCasualtyIndicator" bodyCondition="_YEuUAxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YEuUAxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YEuUABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEuUBBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::MassCasualtyIndicator))->asSequence()->any(true).oclAsType(emspcr::MassCasualtyIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YEuUARpMEeSd5OoVIuDNwg" type="_E-SEAKK8EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YEuUAhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YE8WcBpMEeSd5OoVIuDNwg" name="getLocationTypeObservation" bodyCondition="_YE8WcxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YE8WcxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YE8WcBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE8WdBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LocationTypeObservation))->asSequence()->any(true).oclAsType(emspcr::LocationTypeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YE8WcRpMEeSd5OoVIuDNwg" type="_ayUKMMk3EeK2gbjCtOEivw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YE8WchpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_olqMIKK8EeGOxth0BgV-QA" name="EMSSituationSection">
      <ownedComment xmi:id="_iWUVgC0AEeO0H9tywllqaQ">
        <body>Information about patient symptoms and complaints</body>
      </ownedComment>
      <ownedRule xmi:id="_X6zjBRpMEeSd5OoVIuDNwg" name="EMSSituationSectionTemplateId" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X60KEBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X61YMBpMEeSd5OoVIuDNwg" name="EMSSituationSectionCode" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X61YMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67666-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X63NYBpMEeSd5OoVIuDNwg" name="EMSSituationSectionCodeP" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X63NYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X65CkBpMEeSd5OoVIuDNwg" name="EMSSituationSectionTitle" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X65CkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Situation Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X66QsBpMEeSd5OoVIuDNwg" name="EMSSituationSectionText" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X66QsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YA0EYBpMEeSd5OoVIuDNwg" name="EMSSituationSectionComplaint" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA0EYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->exists(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::Complaint) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBA4sBpMEeSd5OoVIuDNwg" name="EMSSituationSectionPossibleInjury" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBA4sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PossibleInjury) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBI0gBpMEeSd5OoVIuDNwg" name="EMSSituationSectionProviderPrimaryImpression" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBI0gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProviderPrimaryImpression) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBSlgBpMEeSd5OoVIuDNwg" name="EMSSituationSectionPrimarySymptom" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBSlgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PrimarySymptom) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBc9kBpMEeSd5OoVIuDNwg" name="EMSSituationSectionOtherSymptoms" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBc9kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::OtherSymptoms) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBn8sBpMEeSd5OoVIuDNwg" name="EMSSituationSectionProviderSecondaryImpressions" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBn8sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProviderSecondaryImpressions) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBy70BpMEeSd5OoVIuDNwg" name="EMSSituationSectionInitialPatientAcuity" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBy70RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InitialPatientAcuity) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pG54AKK8EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_YA0rcBpMEeSd5OoVIuDNwg" name="getComplaints" bodyCondition="_YA0rcxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YA0rcxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YA0rcBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA0rdBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::Complaint)).oclAsType(emspcr::Complaint)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YA0rcRpMEeSd5OoVIuDNwg" type="_KEZzkKg-EeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YA0rchpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YBBfwBpMEeSd5OoVIuDNwg" name="getPossibleInjury" bodyCondition="_YBBfwxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YBBfwxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YBBfwBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBBfxBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PossibleInjury))->asSequence()->any(true).oclAsType(emspcr::PossibleInjury)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YBBfwRpMEeSd5OoVIuDNwg" type="_7nP0MKhCEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YBBfwhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YBJbkBpMEeSd5OoVIuDNwg" name="getProviderPrimaryImpression" bodyCondition="_YBJbkxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YBJbkxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YBJbkBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBJblBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProviderPrimaryImpression))->asSequence()->any(true).oclAsType(emspcr::ProviderPrimaryImpression)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YBJbkRpMEeSd5OoVIuDNwg" type="_0C-8EKhDEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YBJbkhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YBTMkBpMEeSd5OoVIuDNwg" name="getPrimarySymptom" bodyCondition="_YBTMkxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YBTMkxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YBTMkBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBTMlBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PrimarySymptom))->asSequence()->any(true).oclAsType(emspcr::PrimarySymptom)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YBTMkRpMEeSd5OoVIuDNwg" type="_KOxo0KhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YBTMkhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YBdkoBpMEeSd5OoVIuDNwg" name="getOtherSymptoms" bodyCondition="_YBdkoxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YBdkoxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YBdkoBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBdkpBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::OtherSymptoms))->asSequence()->any(true).oclAsType(emspcr::OtherSymptoms)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YBdkoRpMEeSd5OoVIuDNwg" type="_g5iJgKhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YBdkohpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YBojwBpMEeSd5OoVIuDNwg" name="getProviderSecondaryImpressions" bodyCondition="_YBojwxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YBojwxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YBojwBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBojxBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProviderSecondaryImpressions))->asSequence()->any(true).oclAsType(emspcr::ProviderSecondaryImpressions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YBojwRpMEeSd5OoVIuDNwg" type="_0mPksKhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YBojwhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YBzi4BpMEeSd5OoVIuDNwg" name="getInitialPatientAcuity" bodyCondition="_YBzi4xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YBzi4xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YBzi4BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBzi5BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InitialPatientAcuity))->asSequence()->any(true).oclAsType(emspcr::InitialPatientAcuity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YBzi4RpMEeSd5OoVIuDNwg" type="_NZgqAKhFEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YBzi4hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ClVY0KxCEeGLnrdLmr5TaQ" name="TimesSection">
      <ownedComment xmi:id="_Ba_AEC0EEeO0H9tywllqaQ">
        <body>Set of times for defined events in the EMS trip</body>
      </ownedComment>
      <ownedRule xmi:id="_X6-iIBpMEeSd5OoVIuDNwg" name="TimesSectionTemplateId" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6-iIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7AXUBpMEeSd5OoVIuDNwg" name="TimesSectionCode" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7AXURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in 
value.code = '67667-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7CMgBpMEeSd5OoVIuDNwg" name="TimesSectionTitle" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7CMgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Times')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7DaoBpMEeSd5OoVIuDNwg" name="TimesSectionText" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7DaoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-B2IBpMEeSd5OoVIuDNwg" name="TimesSectionCallTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-B2IRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CallTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-CdNRpMEeSd5OoVIuDNwg" name="TimesSectionUnitNotifiedTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-CdNhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitNotifiedTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-DrUBpMEeSd5OoVIuDNwg" name="TimesSectionUnitEnRouteTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-DrURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitEnRouteTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-E5cBpMEeSd5OoVIuDNwg" name="TimesSectionUnitOnSceneTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-E5cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitOnSceneTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-GHkBpMEeSd5OoVIuDNwg" name="TimesSectionUnitAtPatienttTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-GHkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitAtPatientTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-GupRpMEeSd5OoVIuDNwg" name="TimesSectionUnitLeftSceneTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-GuphpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitLeftSceneTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-H8wBpMEeSd5OoVIuDNwg" name="TimesSectionPatientArrivedAtDestinationTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-H8wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientArrivedAtDestinationTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-JK4BpMEeSd5OoVIuDNwg" name="TimesSectionUnitBackInServiceTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-JK4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitBackInServiceTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-KZABpMEeSd5OoVIuDNwg" name="TimesSectionDispatchNotifiedTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-KZARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.nullFlavor &lt;> vocab::NullFlavor::NI implies entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DispatchNotifiedTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DaW8UKxCEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_X-CdMBpMEeSd5OoVIuDNwg" name="getCallTime" bodyCondition="_X-CdMxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X-CdMxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X-CdMBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-CdNBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CallTime))->asSequence()->any(true).oclAsType(emspcr::CallTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X-CdMRpMEeSd5OoVIuDNwg" type="_1u74sKxCEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-CdMhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X-DEQBpMEeSd5OoVIuDNwg" name="getUnitNotifiedTime" bodyCondition="_X-DEQxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X-DEQxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X-DEQBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-DERBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitNotifiedTime))->asSequence()->any(true).oclAsType(emspcr::UnitNotifiedTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X-DEQRpMEeSd5OoVIuDNwg" type="_JKerYKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-DEQhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X-ESYBpMEeSd5OoVIuDNwg" name="getUnitEnRouteTime" bodyCondition="_X-ESYxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X-ESYxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X-ESYBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-ESZBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitEnRouteTime))->asSequence()->any(true).oclAsType(emspcr::UnitEnRouteTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X-ESYRpMEeSd5OoVIuDNwg" type="_UyaX0KxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-ESYhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X-FggBpMEeSd5OoVIuDNwg" name="getUnitOnSceneTime" bodyCondition="_X-FggxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X-FggxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X-FggBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-FghBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitOnSceneTime))->asSequence()->any(true).oclAsType(emspcr::UnitOnSceneTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X-FggRpMEeSd5OoVIuDNwg" type="_iGh5QKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-FgghpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X-GuoBpMEeSd5OoVIuDNwg" name="getUnitAtPatienttTime" bodyCondition="_X-GuoxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X-GuoxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X-GuoBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-GupBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitAtPatientTime))->asSequence()->any(true).oclAsType(emspcr::UnitAtPatientTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X-GuoRpMEeSd5OoVIuDNwg" type="_yt7JUKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-GuohpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X-HVsBpMEeSd5OoVIuDNwg" name="getUnitLeftSceneTime" bodyCondition="_X-HVsxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X-HVsxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X-HVsBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-HVtBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitLeftSceneTime))->asSequence()->any(true).oclAsType(emspcr::UnitLeftSceneTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X-HVsRpMEeSd5OoVIuDNwg" type="_6w124KxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-HVshpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X-Ij0BpMEeSd5OoVIuDNwg" name="getPatientArrivedAtDestinationTime" bodyCondition="_X-Ij0xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X-Ij0xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X-Ij0BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-Ij1BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientArrivedAtDestinationTime))->asSequence()->any(true).oclAsType(emspcr::PatientArrivedAtDestinationTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X-Ij0RpMEeSd5OoVIuDNwg" type="_DaIA4KxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-Ij0hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X-Jx8BpMEeSd5OoVIuDNwg" name="getUnitBackInServiceTime" bodyCondition="_X-Jx8xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X-Jx8xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X-Jx8BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-Jx9BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitBackInServiceTime))->asSequence()->any(true).oclAsType(emspcr::UnitBackInServiceTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X-Jx8RpMEeSd5OoVIuDNwg" type="_KrhK4KxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-Jx8hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X-LAEBpMEeSd5OoVIuDNwg" name="getDispatchNotifiedTime" bodyCondition="_X-LAExpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X-LAExpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X-LAEBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-LAFBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DispatchNotifiedTime))->asSequence()->any(true).oclAsType(emspcr::DispatchNotifiedTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X-LAERpMEeSd5OoVIuDNwg" type="_UFgZEKxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X-LAEhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Qlqj8HwGEeGW3cDolvqrTA" name="CardiacArrest">
      <ownedComment xmi:id="_f_M6ICUeEeOPwcQY2yBpiA">
        <body>Characteristics of a patient's cardiac arrest</body>
      </ownedComment>
      <ownedRule xmi:id="_X4AtsRpMEeSd5OoVIuDNwg" name="CardiacArrestCauseRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4AtshpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4B70BpMEeSd5OoVIuDNwg" name="CardiacArrestInformantParticipation" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4B70RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.informant->one(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(cda::Informant12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4DJ8RpMEeSd5OoVIuDNwg" name="CardiacArrestPriorCPRRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4DJ8hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4IpgBpMEeSd5OoVIuDNwg" name="CardiacArrestPriorAEDRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4IpgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4LFwBpMEeSd5OoVIuDNwg" name="CardiacArrestSpontaneousCirculationRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4LFwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4Ls0BpMEeSd5OoVIuDNwg" name="CardiacArrestDestinationRhythmRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4Ls0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7b1IRpMEeSd5OoVIuDNwg" name="CardiacArrestArrestRhythmRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7b1IhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8OfVRpMEeSd5OoVIuDNwg" name="CardiacArrestTemplateId" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8PGYBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8Q7kBpMEeSd5OoVIuDNwg" name="CardiacArrestMoodCode" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8Q7kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8SJsBpMEeSd5OoVIuDNwg" name="CardiacArrestCode" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8SJsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8T-4BpMEeSd5OoVIuDNwg" name="CardiacArrestNegationInd" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8T-4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8VNABpMEeSd5OoVIuDNwg" name="CardiacArrestEffectiveTime" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8VNARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8WbIBpMEeSd5OoVIuDNwg" name="CardiacArrestValue" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8WbIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.code = '410429000' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RvtVMHwGEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JnfD8IzoEeGnhceUMXltng" name="VitalSignsOrganizer">
      <ownedComment xmi:id="_WDhRYIzpEeGnhceUMXltng">
        <body>A collection vital signs observations&#xD;
For any observation within the organizer, if the NEMSIS value is &quot;Refused,&quot; the value SHALL be &quot;NI;&quot; the string &quot;Refused&quot; MAY be recorded in Observation.text.</body>
      </ownedComment>
      <ownedRule xmi:id="_X7gtoBpMEeSd5OoVIuDNwg" name="EMSPCRVitalSignsOrganizerSystolicBloodPressureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7gtoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7ii0BpMEeSd5OoVIuDNwg" name="EMSPCRVitalSignsOrganizerDiastolicBloodPressureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7ii0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7jw8RpMEeSd5OoVIuDNwg" name="EMSPCRVitalSignsOrganizerHeartRateComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7jw8hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7k_ERpMEeSd5OoVIuDNwg" name="EMSPCRVitalSignsOrganizerRespiratoryRateComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7lmIBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7m0QBpMEeSd5OoVIuDNwg" name="EMSPCRVitalSignsOrganizerBodyTemperatureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7m0QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7qeoBpMEeSd5OoVIuDNwg" name="EMSPCRVitalSignsOrganizerOxygenSaturationComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7qeoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8tnhBpMEeSd5OoVIuDNwg" name="VitalSignsOrganizerTemplateId" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8uOkBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8vcsBpMEeSd5OoVIuDNwg" name="EMSPCRVitalSignsOrganizerEffectiveTime" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8vcsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KLr9MIzoEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OlbCRSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_YP_I0BpMEeSd5OoVIuDNwg" name="getPriorAidVitals" bodyCondition="_YP_I0xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YP_I0xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YP_I0BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP_I1BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PriorAidVitals))->asSequence()->any(true).oclAsType(emspcr::PriorAidVitals)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YP_I0RpMEeSd5OoVIuDNwg" type="_Dq57UIzpEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YP_I0hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dq57UIzpEeGnhceUMXltng" name="PriorAidVitals">
      <ownedComment xmi:id="_zSptECz7EeO0H9tywllqaQ">
        <body>Indication of whether this set of vital signs was obtained prior to the documenting EMS unit's care</body>
      </ownedComment>
      <ownedRule xmi:id="_X8xR4BpMEeSd5OoVIuDNwg" name="PriorAidVitalsTemplateId" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8xR4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8ygABpMEeSd5OoVIuDNwg" name="PriorAidVitalsMoodCode" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8ygARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8zuIBpMEeSd5OoVIuDNwg" name="PriorAidVitalsCode" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8zuIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67518-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X81jUBpMEeSd5OoVIuDNwg" name="PriorAidVitalsValue" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X81jURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EHmeYIzpEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_F-GKoLMNEeKNbt70lHd2Eg" name="AdditionalVitalSignsOrganizer">
      <ownedComment xmi:id="_9LwoQCSMEeO2bfzIdJE0yg">
        <body>Common observations regarding the state of the patient that are not typically included in strict definitions of vital signs.</body>
      </ownedComment>
      <ownedRule xmi:id="_X7rFsBpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerStrokeScoreComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7rFsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::StrokeScore))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7sT1RpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerPainScoreComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7sT1hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::PainScore))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7th8BpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerLevelOfResponsivenessComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7th8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::LevelOfResponsiveness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7uwEBpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerBloodGlucoseComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7uwERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::BloodGlucose))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7vXJRpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerCarbonMonoxideComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7vXJhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::CarbonMonoxide))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7wlQhpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerCarbonDioxideComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7wlQxpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::CarbonDioxide))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7xzYBpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerCardiacRhythmComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7xzYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::CardiacRhythm))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X82KYBpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerTemplateId" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X82KYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X83_kBpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerMoodCode" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X83_kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X85NsBpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerEffectiveTime" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X85NsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGtRABpMEeSd5OoVIuDNwg" name="AdditionalVitalSignsOrganizerGlasgowComaScoreOrganizer" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGtRARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.organizer.oclIsUndefined() and component.organizer.oclIsKindOf(emspcr::GlasgowComaScoreOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_HOxvYLMNEeKNbt70lHd2Eg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_X7sT0BpMEeSd5OoVIuDNwg" name="getStrokeScoreComponent" bodyCondition="_X7sT0xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7sT0xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7sT0BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7sT1BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::StrokeScore))->asSequence()->any(true).oclAsType(emspcr::StrokeScore)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7sT0RpMEeSd5OoVIuDNwg" type="_9koR4IzuEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7sT0hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7s64BpMEeSd5OoVIuDNwg" name="getPainScoreComponent" bodyCondition="_X7s64xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7s64xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7s64BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7s65BpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PainScore))->asSequence()->any(true).oclAsType(emspcr::PainScore)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7s64RpMEeSd5OoVIuDNwg" type="_lnVLQIzuEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7s64hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7uJABpMEeSd5OoVIuDNwg" name="getLevelOfResponsivenessComponent" bodyCondition="_X7uJAxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7uJAxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7uJABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7uJBBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LevelOfResponsiveness))->asSequence()->any(true).oclAsType(emspcr::LevelOfResponsiveness)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7uJARpMEeSd5OoVIuDNwg" type="_xgaHgIztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7uJAhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7vXIBpMEeSd5OoVIuDNwg" name="getBloodGlucoseComponent" bodyCondition="_X7vXIxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7vXIxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7vXIBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7vXJBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BloodGlucose))->asSequence()->any(true).oclAsType(emspcr::BloodGlucose)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7vXIRpMEeSd5OoVIuDNwg" type="_jmDsgIztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7vXIhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7v-MBpMEeSd5OoVIuDNwg" name="getCarbonMonoxideComponent" bodyCondition="_X7wlQBpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7wlQBpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7v-MBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7wlQRpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CarbonMonoxide))->asSequence()->any(true).oclAsType(emspcr::CarbonMonoxide)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7v-MRpMEeSd5OoVIuDNwg" type="_WFit0IztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7v-MhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7xMUBpMEeSd5OoVIuDNwg" name="getCarbonDioxideComponent" bodyCondition="_X7xMUxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7xMUxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7xMUBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7xMVBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CarbonDioxide))->asSequence()->any(true).oclAsType(emspcr::CarbonDioxide)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7xMURpMEeSd5OoVIuDNwg" type="_IU2lIIztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7xMUhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X7yacBpMEeSd5OoVIuDNwg" name="getCardiacRhythmComponent" bodyCondition="_X7yacxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X7yacxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X7yacBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7yadBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CardiacRhythm))->asSequence()->any(true).oclAsType(emspcr::CardiacRhythm)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X7yacRpMEeSd5OoVIuDNwg" type="_uMxJUIzpEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X7yachpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YGt4EBpMEeSd5OoVIuDNwg" name="getGlasgowComaScoreOrganizers" bodyCondition="_YGt4ExpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YGt4ExpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YGt4EBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGt4FBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::GlasgowComaScoreOrganizer)).oclAsType(emspcr::GlasgowComaScoreOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YGt4ERpMEeSd5OoVIuDNwg" type="_RNfAcIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YGt4EhpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dfaa4J-eEeGorI3CPDW2ww" name="NumberOfPatientsTransportedObservation">
      <ownedComment xmi:id="_eFOZACwqEeOaIuM51LdlNw">
        <body>The number of patients transported by this EMS crew and unit</body>
      </ownedComment>
      <ownedRule xmi:id="_X87p9RpMEeSd5OoVIuDNwg" name="NumberOfPatientsTransportedObservationTemplateId" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X87p9hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.31')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X884EBpMEeSd5OoVIuDNwg" name="NumberOfPatientsTransportedObservationMoodCode" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X884ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8_7YBpMEeSd5OoVIuDNwg" name="NumberOfPatientsTransportedObservationCodeP" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8_7YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8-tQBpMEeSd5OoVIuDNwg" name="NumberOfPatientsTransportedObservationCode" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8-tQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67547-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9BwkBpMEeSd5OoVIuDNwg" name="NumberOfPatientsTransportedObservationValue" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9BwkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D6EWkJ-eEeGorI3CPDW2ww">
        <ownedComment xmi:id="_p4JPUEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDisposition.11</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j3YnxZ-eEeGorI3CPDW2ww" name="IncidentDispositionObservation">
      <ownedComment xmi:id="_ac6V4CwnEeOaIuM51LdlNw">
        <body>Outcome of incident, including disposition of patient and other outcomes</body>
      </ownedComment>
      <ownedRule xmi:id="_X9DlxRpMEeSd5OoVIuDNwg" name="IncidentDispositionObservationTemplateId" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9EM0BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.32')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9Fa8BpMEeSd5OoVIuDNwg" name="IncidentDispositionObservationMoodCode" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9Fa8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9IeQBpMEeSd5OoVIuDNwg" name="IncidentDispositionObservationCodeP" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9IeQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9GpEBpMEeSd5OoVIuDNwg" name="IncidentDispositionObservationCode" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9GpERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67548-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9K6gBpMEeSd5OoVIuDNwg" name="IncidentDispositionObservationValue" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9K6gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17154-8' or value.code = 'LA17155-5' or value.code = 'LA17156-3' or value.code = 'LA17157-1' or value.code = 'LA17158-9' or value.code = 'LA17159-7' or value.code = 'LA17160-5' or value.code = 'LA17161-3' or value.code = 'LA17162-1' or value.code = 'LA17163-9' or value.code = 'LA17164-7' or value.code = 'LA17165-4' or value.code = 'LA17166-2' or value.code = 'LA17167-0' or value.code = 'LA18080-4' or value.code = 'LA18212-3' or value.code = 'LA18213-1' or value.code = 'LA18214-9' or value.code = 'LA18215-6' or value.code = 'LA18216-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9MIoBpMEeSd5OoVIuDNwg" name="IncidentDispositionObservationValueP" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9MIoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j3Ynx5-eEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nv-0gp-fEeGorI3CPDW2ww" name="TransportModeObservation">
      <ownedComment xmi:id="_NBNcUC0EEeO0H9tywllqaQ">
        <body>Indication of whether the transport was emergent or non-emergent</body>
      </ownedComment>
      <ownedRule xmi:id="_X9Ok5RpMEeSd5OoVIuDNwg" name="TransportModeObservationTemplateId" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9Ok5hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9PzABpMEeSd5OoVIuDNwg" name="TransportModeObservationMoodCode" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9PzARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9S2UBpMEeSd5OoVIuDNwg" name="TransportModeObservationCodeP" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9S2URpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9RoMBpMEeSd5OoVIuDNwg" name="TransportModeObservationCode" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9RoMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67550-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9VSkBpMEeSd5OoVIuDNwg" name="TransportModeObservationValue" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9VSkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17168-8' or value.code = 'LA17169-6' or value.code = 'LA17170-4' or value.code = 'LA17171-2' or value.code = 'LA17172-0' or value.code = 'LA17173-8' or value.code = 'LA17174-6' or value.code = 'LA17175-3' or value.code = 'LA17176-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9XHwBpMEeSd5OoVIuDNwg" name="TransportModeObservationValueP" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9XHwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_nv-0hJ-fEeGorI3CPDW2ww">
        <ownedComment xmi:id="_uDDJgEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDisposition.17</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EagUtZ-fEeGorI3CPDW2ww" name="TransportMethodObservation">
      <ownedComment xmi:id="_Ht-BEC0EEeO0H9tywllqaQ">
        <body>Vehicle or device used to transport patient</body>
      </ownedComment>
      <ownedRule xmi:id="_X9ZkBRpMEeSd5OoVIuDNwg" name="TransportMethodObservationTemplateId" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9ZkBhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9ayIBpMEeSd5OoVIuDNwg" name="TransportMethodObservationMoodCode" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9ayIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9ecgBpMEeSd5OoVIuDNwg" name="TransportMethodObservationCodeP" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9ecgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9cnUBpMEeSd5OoVIuDNwg" name="TransportMethodObservationCode" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9cnURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67549-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9gRsBpMEeSd5OoVIuDNwg" name="TransportMethodObservationValue" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9gRsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17168-8' or value.code = 'LA17169-6' or value.code = 'LA17170-4' or value.code = 'LA17171-2' or value.code = 'LA17172-0' or value.code = 'LA17173-8' or value.code = 'LA17174-6' or value.code = 'LA17175-3' or value.code = 'LA17176-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9iG4BpMEeSd5OoVIuDNwg" name="TransportMethodObservationValueP" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9iG4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EagUt5-fEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_cm1D5Z-hEeGorI3CPDW2ww" name="ReasonForChoosingDestinationObservation">
      <ownedComment xmi:id="_OCvZgCz-EeO0H9tywllqaQ">
        <body>The reason the unit chose to deliver the patient to the destination</body>
      </ownedComment>
      <ownedRule xmi:id="_X9kjJBpMEeSd5OoVIuDNwg" name="ReasonForChoosingDestinationObservationTemplateId" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9kjJRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9lxQBpMEeSd5OoVIuDNwg" name="ReasonForChoosingDestinationObservationMoodCode" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9mYUBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9o0kBpMEeSd5OoVIuDNwg" name="ReasonForChoosingDestinationObservationCodeP" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9o0kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9nmcBpMEeSd5OoVIuDNwg" name="ReasonForChoosingDestinationObservationCode" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9nmcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67552-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9rQ0BpMEeSd5OoVIuDNwg" name="ReasonForChoosingDestinationObservationValue" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9rQ0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17182-9' or value.code = 'LA17184-5' or value.code = 'LA17185-2' or value.code = 'LA17186-0' or value.code = 'LA17187-8' or value.code = 'LA17188-6' or value.code = 'LA17189-4' or value.code = 'LA17190-2' or value.code = 'LA17191-0' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9tGABpMEeSd5OoVIuDNwg" name="ReasonForChoosingDestinationObservationValueP" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9tGARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cm1q8Z-hEeGorI3CPDW2ww">
        <ownedComment xmi:id="_xob70EM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDisposition.20</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_083apZ-hEeGorI3CPDW2ww" name="PrearrivalActivationObservation">
      <ownedComment xmi:id="_f1D3kCwtEeOaIuM51LdlNw">
        <body>Indication of whether destination was activated prior to patient arrival</body>
      </ownedComment>
      <ownedRule xmi:id="_X9viQBpMEeSd5OoVIuDNwg" name="PrearrivalActivationObservationTemplateId" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9viQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9wwYBpMEeSd5OoVIuDNwg" name="PrearrivalActivationObservationMoodCode" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9wwYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9zzsBpMEeSd5OoVIuDNwg" name="PrearrivalActivationObservationCodeP" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9zzsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9x-gBpMEeSd5OoVIuDNwg" name="PrearrivalActivationObservationCode" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9x-gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69462-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X91B0BpMEeSd5OoVIuDNwg" name="PrearrivalActivationObservationEffectiveTime" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X91B0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X92P8BpMEeSd5OoVIuDNwg" name="PrearrivalActivationObservationValue" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X92P8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_083ap5-hEeGorI3CPDW2ww">
        <ownedComment xmi:id="_Na520J-iEeGorI3CPDW2ww">
          <body>NEMSIS Trace: EDisposition.24</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q4zL9Z-gEeGorI3CPDW2ww" name="PatientConditionChangeAtDestinationObservation">
      <ownedComment xmi:id="_tNsiECwsEeOaIuM51LdlNw">
        <body>Whether the patient's condition had changed on arrival at destination</body>
      </ownedComment>
      <ownedRule xmi:id="_X94FIBpMEeSd5OoVIuDNwg" name="PatientConditionChangeAtDestinationObservationTemplateId" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X94FIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.37')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X95TQBpMEeSd5OoVIuDNwg" name="PatientConditionChangeAtDestinationObservationMoodCode" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X95TQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X98WkBpMEeSd5OoVIuDNwg" name="PatientConditionChangeAtDestinationObservationCodeP" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X98WkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X96hYBpMEeSd5OoVIuDNwg" name="PatientConditionChangeAtDestinationObservationCode" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X96hYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67551-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X9-LwBpMEeSd5OoVIuDNwg" name="PatientConditionChangeAtDestinationObservationValue" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X9-y0BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA11011-6' or value.code = 'LA17181-1' or value.code = 'LA65-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-AA8BpMEeSd5OoVIuDNwg" name="PatientConditionChangeAtDestinationObservationValueP" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-AA8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Q4zL95-gEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1u74sKxCEeGLnrdLmr5TaQ" name="CallTime">
      <ownedComment xmi:id="_njZWQCUcEeOPwcQY2yBpiA">
        <body>Time at which the public safety answering point call center is notified of an emergency</body>
      </ownedComment>
      <ownedRule xmi:id="_X-LAFRpMEeSd5OoVIuDNwg" name="CallTimeTemplateId" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-LAFhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-MOMBpMEeSd5OoVIuDNwg" name="CallTimeMoodCode" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-MOMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-PRgBpMEeSd5OoVIuDNwg" name="CallTimeCodeP" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-PRgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-NcUBpMEeSd5OoVIuDNwg" name="CallTimeCode" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-NcURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69469-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-RGsBpMEeSd5OoVIuDNwg" name="CallTimeValue" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-RGsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4A3fEKxCEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JKerYKxDEeGLnrdLmr5TaQ" name="UnitNotifiedTime">
      <ownedComment xmi:id="_eaVEQC0EEeO0H9tywllqaQ">
        <body>Time the unit was dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="_X-RtwBpMEeSd5OoVIuDNwg" name="UnitNotifiedTimeTemplateId" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-RtwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.39')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-S74BpMEeSd5OoVIuDNwg" name="UnitNotifiedTimeMoodCode" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-S74RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-V_MBpMEeSd5OoVIuDNwg" name="UnitNotifiedTimeCodeP" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-V_MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-UKABpMEeSd5OoVIuDNwg" name="UnitNotifiedTimeCode" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-UKARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69471-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-X0YBpMEeSd5OoVIuDNwg" name="UnitNotifiedTimeValue" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-X0YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JKerYqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UyaX0KxDEeGLnrdLmr5TaQ" name="UnitEnRouteTime">
      <ownedComment xmi:id="_ZSckcC0EEeO0H9tywllqaQ">
        <body>Time unit begins moving toward the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_X-YbcBpMEeSd5OoVIuDNwg" name="UnitEnRouteTimeTemplateId" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-YbcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.40')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-ZpkBpMEeSd5OoVIuDNwg" name="UnitEnRouteTimeMoodCode" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-ZpkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-cs4BpMEeSd5OoVIuDNwg" name="UnitEnRouteTimeCodeP" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-cs4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-a3sBpMEeSd5OoVIuDNwg" name="UnitEnRouteTimeCode" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-a3sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69472-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-d7ABpMEeSd5OoVIuDNwg" name="UnitEnRouteTimeValue" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-eiEBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UyaX0qxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iGh5QKxDEeGLnrdLmr5TaQ" name="UnitOnSceneTime">
      <ownedComment xmi:id="_gdOJEC0EEeO0H9tywllqaQ">
        <body>Time the unit arrived at the incident scene</body>
      </ownedComment>
      <ownedRule xmi:id="_X-fJIBpMEeSd5OoVIuDNwg" name="UnitOnSceneTimeTemplateId" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-fJIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-gXQBpMEeSd5OoVIuDNwg" name="UnitOnSceneTimeMoodCode" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-gXQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-jakBpMEeSd5OoVIuDNwg" name="UnitOnSceneTimeCodeP" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-jakRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-hlYBpMEeSd5OoVIuDNwg" name="UnitOnSceneTimeCode" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-hlYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69473-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-lPwBpMEeSd5OoVIuDNwg" name="UnitOnSceneTimeValue" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-lPwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iGh5QqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yt7JUKxDEeGLnrdLmr5TaQ" name="UnitAtPatientTime">
      <ownedComment xmi:id="_V7AukC0EEeO0H9tywllqaQ">
        <body>Time the unit arrived at the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_X-l20BpMEeSd5OoVIuDNwg" name="UnitAtPatientTimeTemplateId" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-l20RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-nE8BpMEeSd5OoVIuDNwg" name="UnitAtPatientTimeMoodCode" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-nE8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-qIQBpMEeSd5OoVIuDNwg" name="UnitAtPatientTimeCodeP" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-qIQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-o6IBpMEeSd5OoVIuDNwg" name="UnitAtPatientTimeCode" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-o6IRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69474-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-r9cBpMEeSd5OoVIuDNwg" name="UnitAtPatientTimeValue" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-r9cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yt7JUqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6w124KxDEeGLnrdLmr5TaQ" name="UnitLeftSceneTime">
      <ownedComment xmi:id="_bskdgC0EEeO0H9tywllqaQ">
        <body>Time the unit left the incident scene</body>
      </ownedComment>
      <ownedRule xmi:id="_X-tLkBpMEeSd5OoVIuDNwg" name="UnitLeftSceneTimeTemplateId" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-tLkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-uZsBpMEeSd5OoVIuDNwg" name="UnitLeftSceneTimeMoodCode" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-uZsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-xdABpMEeSd5OoVIuDNwg" name="UnitLeftSceneTimeCodeP" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-xdARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-vn0BpMEeSd5OoVIuDNwg" name="UnitLeftSceneTimeCode" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-vn0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69475-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-zSMBpMEeSd5OoVIuDNwg" name="UnitLeftSceneTimeValue" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-zSMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6w124qxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DaIA4KxEEeGLnrdLmr5TaQ" name="PatientArrivedAtDestinationTime">
      <ownedComment xmi:id="_vPjXACwqEeOaIuM51LdlNw">
        <body>The time the EMS crew delivered the patient to the destination</body>
      </ownedComment>
      <ownedRule xmi:id="_X-z5QBpMEeSd5OoVIuDNwg" name="PatientArrivedAtDestinationTimeTemplateId" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-z5QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-1HYBpMEeSd5OoVIuDNwg" name="PatientArrivedAtDestinationTimeMoodCode" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-1HYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-4KsBpMEeSd5OoVIuDNwg" name="PatientArrivedAtDestinationTimeCodeP" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-4KsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-2VgBpMEeSd5OoVIuDNwg" name="PatientArrivedAtDestinationTimeCode" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-2VgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69476-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-5_4BpMEeSd5OoVIuDNwg" name="PatientArrivedAtDestinationTimeValue" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-5_4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DaIA4qxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KrhK4KxEEeGLnrdLmr5TaQ" name="UnitBackInServiceTime">
      <ownedComment xmi:id="_W6OI0C0EEeO0H9tywllqaQ">
        <body>Time the unit is back in service</body>
      </ownedComment>
      <ownedRule xmi:id="_X-7OABpMEeSd5OoVIuDNwg" name="UnitBackInServiceTimeTemplateId" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-7OARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-8cIBpMEeSd5OoVIuDNwg" name="UnitBackInServiceTimeMoodCode" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-8cIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-_fcBpMEeSd5OoVIuDNwg" name="UnitBackInServiceTimeCodeP" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-_fcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X-9qQBpMEeSd5OoVIuDNwg" name="UnitBackInServiceTimeCode" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X-9qQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69477-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_AtkBpMEeSd5OoVIuDNwg" name="UnitBackInServiceTimeValue" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_AtkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KrhK4qxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UFgZEKxEEeGLnrdLmr5TaQ" name="DispatchNotifiedTime">
      <ownedComment xmi:id="_RMVUACUkEeOEaIF_MBGm_A">
        <body>The time the dispatching organization was notified of an emergency</body>
      </ownedComment>
      <ownedRule xmi:id="_X_B7sBpMEeSd5OoVIuDNwg" name="DispatchNotifiedTimeTemplateId" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_B7sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.46')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_DJ0BpMEeSd5OoVIuDNwg" name="DispatchNotifiedTimeMoodCode" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_DJ0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_GNIBpMEeSd5OoVIuDNwg" name="DispatchNotifiedTimeCodeP" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_GNIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_EX8BpMEeSd5OoVIuDNwg" name="DispatchNotifiedTimeCode" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_EX8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69470-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_ICUBpMEeSd5OoVIuDNwg" name="DispatchNotifiedTimeValue" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_ICURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UFgZEqxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xCcE0Iy7EeGnhceUMXltng" name="AdvanceDirectiveObservation">
      <ownedComment xmi:id="_i_N0ICSSEeO2bfzIdJE0yg">
        <body>Whether an advance directive exists and how it is expressed</body>
      </ownedComment>
      <ownedRule xmi:id="_X_J3gBpMEeSd5OoVIuDNwg" name="AdvanceDirectiveObservationTemplateId" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_J3gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.98')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_LFoBpMEeSd5OoVIuDNwg" name="AdvanceDirectiveObservationMoodCode" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_LssBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_M60BpMEeSd5OoVIuDNwg" name="AdvanceDirectiveObservationCode" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_M60RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67516-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_PXEBpMEeSd5OoVIuDNwg" name="AdvanceDirectiveObservationValue" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_PXERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA17319-7' or value.code = 'LA17320-5' or value.code = 'LA17321-3' or value.code = 'LA17322-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_RMQBpMEeSd5OoVIuDNwg" name="AdvanceDirectiveObservationValueP" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_RMQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xhZ4wIy7EeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3C3WwMWqEeK3RfDsHamIUQ" name="EMSDrugAllergy">
      <ownedComment xmi:id="_qKVCoCUkEeOEaIF_MBGm_A">
        <body>An allergy or sensitivity to a drug.&#xD;
In the contained observation, as the Consolidated guide specifies, the code is &quot;ASSERTION,&quot; and the value selected from 2.16.840.1.113883.3.88.12.3221.6.2. In this case, the value should be 416098002 (	Drug allergy (disorder)), System = SNOMED CT, 2.16.840.1.113883.6.5. &#xD;
The drug, to be placed in the participating product, is encoded in RxNorm.</body>
      </ownedComment>
      <ownedRule xmi:id="_X8KN4BpMEeSd5OoVIuDNwg" name="EMSDrugAllergyParticipant1" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8KN4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_SaYBpMEeSd5OoVIuDNwg" name="EMSDrugAllergyTemplateId" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_SaYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.48')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4F12sMWqEeK3RfDsHamIUQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_YiANsDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CFApcIzGEeGnhceUMXltng" name="NonDrugAllergyOrganizer">
      <ownedComment xmi:id="_ZC-C4IzaEeGnhceUMXltng">
        <body>Information regarding patient allergies and sensitivities to materials other than drugs</body>
      </ownedComment>
      <ownedRule xmi:id="_X4jgQBpMEeSd5OoVIuDNwg" name="NonDrugAllergyOrganizerExistenceOfNonDrugAllergy" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4jgQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::ExistenceOfNonDrugAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X4kuYBpMEeSd5OoVIuDNwg" name="NonDrugAllergyOrganizerNonDrugAllergy" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4kuYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::NonDrugAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_Wr1BpMEeSd5OoVIuDNwg" name="NonDrugAllergyOrganizerTemplateId" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_Wr1RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.49')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DFRMkIzGEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_X4kHURpMEeSd5OoVIuDNwg" name="getExistenceOfNonDrugAllergy" bodyCondition="_X4kHVBpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X4kHVBpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X4kHURpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4kHVRpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfNonDrugAllergy))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfNonDrugAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X4kHUhpMEeSd5OoVIuDNwg" type="_t_nG0IzYEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X4kHUxpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X4lVcBpMEeSd5OoVIuDNwg" name="getNonDrugAllergies" bodyCondition="_X4lVcxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X4lVcxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X4lVcBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4lVdBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::NonDrugAllergy)).oclAsType(emspcr::NonDrugAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X4lVcRpMEeSd5OoVIuDNwg" type="_UleZUIzZEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X4lVchpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KEFo8HSVEeGa4IXs2ghZEw" name="InjuryCauseCategory">
      <ownedComment xmi:id="_p6OYcCwnEeOaIuM51LdlNw">
        <body>Mechanism causing injury</body>
      </ownedComment>
      <ownedRule xmi:id="_X_ZIFRpMEeSd5OoVIuDNwg" name="InjuryCauseCategoryTemplateId" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_ZIFhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.50')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_aWMBpMEeSd5OoVIuDNwg" name="InjuryCauseCategoryMoodCode" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_aWMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_bkUBpMEeSd5OoVIuDNwg" name="InjuryCauseCategoryCode" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_bkURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69543-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_eAkBpMEeSd5OoVIuDNwg" name="InjuryCauseCategoryValue" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_eAkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_N8NKAHSVEeGa4IXs2ghZEw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aS16EHSWEeGa4IXs2ghZEw" name="InjuryMechanism">
      <ownedComment xmi:id="_ztNVcCwnEeOaIuM51LdlNw">
        <body>General classification of physical force causing injury</body>
      </ownedComment>
      <ownedRule xmi:id="_X_hD4BpMEeSd5OoVIuDNwg" name="InjuryMechanismTemplateId" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_hD4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.51')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_iSABpMEeSd5OoVIuDNwg" name="InjuryMechanismMoodCode" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_iSARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_jgIBpMEeSd5OoVIuDNwg" name="InjuryMechanismCode" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_jgIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67494-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_lVUBpMEeSd5OoVIuDNwg" name="InjuryMechanismValue" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_l8YBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17335-3' or value.code = 'LA17336-1' or value.code = 'LA46-8' or value.code = 'LA7318-4')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_dAw44HSWEeGa4IXs2ghZEw">
        <ownedComment xmi:id="_8OISsEM9EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EInjury.02</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lTHsIIcXEeGqF6qfYwLiQw" name="TraumaCenterCriteria">
      <ownedComment xmi:id="_RvtLwC0EEeO0H9tywllqaQ">
        <body>Field Triage Criteria for transport to a trauma center as defined by the Centers for Disease Control and Prevention and the American College of Surgeons-Committee on Trauma</body>
      </ownedComment>
      <ownedRule xmi:id="_X_oYoBpMEeSd5OoVIuDNwg" name="TraumaCenterCriteriaTemplateId" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_oYoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.52')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_pmwBpMEeSd5OoVIuDNwg" name="TraumaCenterCriteriaMoodCode" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_pmwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_q04BpMEeSd5OoVIuDNwg" name="TraumaCenterCriteriaCode" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_q04RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67495-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_tRIBpMEeSd5OoVIuDNwg" name="TraumaCenterCriteriaValue" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_tRIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17337-9' or value.code = 'LA17338-7' or value.code = 'LA17339-5' or value.code = 'LA17340-3' or value.code = 'LA17341-1' or value.code = 'LA17342-9' or value.code = 'LA17343-7' or value.code = 'LA17344-5' or value.code = 'LA17345-2' or value.code = 'LA17346-0' or value.code = 'LA17347-8')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_orogEIcXEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vuraIIcZEeGqF6qfYwLiQw" name="InjuryRiskFactor">
      <ownedComment xmi:id="_37Nm8CwnEeOaIuM51LdlNw">
        <body>Factors predictive of need for trauma center care</body>
      </ownedComment>
      <ownedRule xmi:id="_X_vtZRpMEeSd5OoVIuDNwg" name="InjuryRiskFactorTemplateId" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_vtZhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.53')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_w7gBpMEeSd5OoVIuDNwg" name="InjuryRiskFactorMoodCode" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_w7gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_yJoBpMEeSd5OoVIuDNwg" name="InjuryRiskFactorCode" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_yJoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67496-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_0l4BpMEeSd5OoVIuDNwg" name="InjuryRiskFactorValue" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_0l4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17348-6' or value.code = 'LA17349-4' or value.code = 'LA17350-2' or value.code = 'LA17352-8' or value.code = 'LA17353-6' or value.code = 'LA17357-7' or value.code = 'LA17360-1' or value.code = 'LA18124-0')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_x1Ee4IcZEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nvhVwIcaEeGqF6qfYwLiQw" name="VehicleImpactArea">
      <ownedComment xmi:id="_pG2RUC0EEeO0H9tywllqaQ">
        <body>Area of vehicle struck in a vehicle collision</body>
      </ownedComment>
      <ownedRule xmi:id="_X_3pMBpMEeSd5OoVIuDNwg" name="VehicleImpactAreaTemplateId" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_3pMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.54')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_43UBpMEeSd5OoVIuDNwg" name="VehicleImpactAreaMoodCode" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_43URpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_6FcBpMEeSd5OoVIuDNwg" name="VehicleImpactAreaCode" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_6FcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67497-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X_76oBpMEeSd5OoVIuDNwg" name="VehicleImpactAreaValue" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_76oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA10137-0' or value.code = 'LA10138-8' or value.code = 'LA10139-6' or value.code = 'LA10140-4' or value.code = 'LA10141-2' or value.code = 'LA13942-0' or value.code = 'LA14557-5' or value.code = 'LA14558-3' or value.code = 'LA6112-2' or value.code = 'LA6113-0' or value.code = 'LA6114-8' or value.code = 'LA6115-5')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Kp4xcIccEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zMwjMIccEeGqF6qfYwLiQw" name="PatientLocationInVehicle">
      <ownedComment xmi:id="_xAfeQCwsEeOaIuM51LdlNw">
        <body>Patient's location in a vehicle during a vehicle collision</body>
      </ownedComment>
      <ownedRule xmi:id="_X_-98BpMEeSd5OoVIuDNwg" name="PatientLocationInVehicleTemplateId" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X_-98RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.55')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAAMEBpMEeSd5OoVIuDNwg" name="PatientLocationInVehicleMoodCode" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAAMERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YABaMBpMEeSd5OoVIuDNwg" name="PatientLocationInVehicleCode" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YABaMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67498-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAD2cBpMEeSd5OoVIuDNwg" name="PatientLocationInVehicleValue" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAD2cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17361-9' or value.code = 'LA17362-7' or value.code = 'LA17363-5' or value.code = 'LA17364-3' or value.code = 'LA17365-0' or value.code = 'LA17366-8' or value.code = 'LA17367-6' or value.code = 'LA17368-4' or value.code = 'LA17369-2' or value.code = 'LA17370-0' or value.code = 'LA17371-8' or value.code = 'LA17372-6' or value.code = 'LA17373-4' or value.code = 'LA17374-2' or value.code = 'LA4489-6')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1NY-MIccEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bsVJUIcdEeGqF6qfYwLiQw" name="VehicleOccupantSafetyEquipment">
      <ownedComment xmi:id="_qLhaYC0EEeO0H9tywllqaQ">
        <body>Safety equipment in use by the patient at the time of the injury</body>
      </ownedComment>
      <ownedRule xmi:id="_YAGStRpMEeSd5OoVIuDNwg" name="VehicleOccupantSafetyEquipmentTemplateId" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAG5wBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.56')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAIH4BpMEeSd5OoVIuDNwg" name="VehicleOccupantSafetyEquipmentMoodCode" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAIH4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAJWABpMEeSd5OoVIuDNwg" name="VehicleOccupantSafetyEquipmentCode" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAJWARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67499-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YALLMBpMEeSd5OoVIuDNwg" name="VehicleOccupantSafetyEquipmentValue" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YALLMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17375-9' or value.code = 'LA17376-7' or value.code = 'LA17377-5' or value.code = 'LA17378-3' or value.code = 'LA17379-1' or value.code = 'LA17380-9' or value.code = 'LA17382-5' or value.code = 'LA46-8' or value.code = 'LA9381-0' or value.code = 'LA9391-9' or value.code = 'LA9392-7' or value.code = 'LA9393-5')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gbauoIcdEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2lRhsIcdEeGqF6qfYwLiQw" name="AirbagDeploymentStatus">
      <ownedComment xmi:id="_8L1NkCSSEeO2bfzIdJE0yg">
        <body>Airbag presence, deployment, and location</body>
      </ownedComment>
      <ownedRule xmi:id="_YAOOhRpMEeSd5OoVIuDNwg" name="AirbagDeploymentStatusTemplateId" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAOOhhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.57')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAPcoBpMEeSd5OoVIuDNwg" name="AirbagDeploymentStatusMoodCode" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAPcoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAQqwBpMEeSd5OoVIuDNwg" name="AirbagDeploymentStatusCode" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAQqwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67500-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YATHABpMEeSd5OoVIuDNwg" name="AirbagDeploymentStatusValue" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YATHARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17384-1' or value.code = 'LA17385-8' or value.code = 'LA17386-6' or value.code = 'LA17387-4' or value.code = 'LA17388-2' or value.code = 'LA46-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAU8MBpMEeSd5OoVIuDNwg" name="AirbagDeploymentStatusValueP" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAU8MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4RXQEIcdEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_auKbcIceEeGqF6qfYwLiQw" name="HeightOfFall">
      <ownedComment xmi:id="_07CscCwlEeOaIuM51LdlNw">
        <body>Distance patient fell, if injury is fall-related</body>
      </ownedComment>
      <ownedRule xmi:id="_YAXYcBpMEeSd5OoVIuDNwg" name="HeightOfFallTemplateId" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAXYcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.58')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAYmkBpMEeSd5OoVIuDNwg" name="HeightOfFallMoodCode" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAYmkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAZ0sBpMEeSd5OoVIuDNwg" name="HeightOfFallCode" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAZ0sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67501-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAbp4BpMEeSd5OoVIuDNwg" name="HeightOfFallValue" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAbp4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cRczIIceEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wKL4IIceEeGqF6qfYwLiQw" name="DisasterType">
      <ownedComment xmi:id="_mWXJICUhEeOPwcQY2yBpiA">
        <body>Kind of disaster causing or contributing to the patient's complaint</body>
      </ownedComment>
      <ownedRule xmi:id="_YAdfERpMEeSd5OoVIuDNwg" name="DisasterTypeTemplateId" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAdfEhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.59')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAetMBpMEeSd5OoVIuDNwg" name="DisasterTypeMoodCode" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAetMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAf7UBpMEeSd5OoVIuDNwg" name="DisasterTypeCode" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAf7URpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69463-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAhwgBpMEeSd5OoVIuDNwg" name="DisasterTypeValue" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAhwgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17594-5' or value.code = 'LA18089-5' or value.code = 'LA18090-3' or value.code = 'LA18091-1' or value.code = 'LA18092-9' or value.code = 'LA18093-7' or value.code = 'LA18094-5' or value.code = 'LA18095-2' or value.code = 'LA18096-0' or value.code = 'LA18097-8' or value.code = 'LA18098-6' or value.code = 'LA18099-4' or value.code = 'LA18100-0' or value.code = 'LA18101-8')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xljC4IceEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_W_uRYIzdEeGnhceUMXltng" name="ExistenceOfHistoryOfCondition">
      <ownedComment xmi:id="_rMTBsCU_EeOEaIF_MBGm_A">
        <body>Indicator of whether patient has a history of significant medical conditions</body>
      </ownedComment>
      <ownedRule xmi:id="_YAmB8BpMEeSd5OoVIuDNwg" name="ExistenceOfHistoryOfConditionTemplateId" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAmB8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.60')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAnQEBpMEeSd5OoVIuDNwg" name="ExistenceOfHistoryOfConditionMoodCode" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAnQERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAoeMBpMEeSd5OoVIuDNwg" name="ExistenceOfHistoryOfConditionCode" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAoeMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67793-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YApsUBpMEeSd5OoVIuDNwg" name="ExistenceOfHistoryOfConditionValue" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YApsURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XjAkoIzdEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5XgZ4IzdEeGnhceUMXltng" name="HistoryOfCondition">
      <ownedComment xmi:id="_QAQw0CwnEeOaIuM51LdlNw">
        <body>Medical conditions the patient has or has had</body>
      </ownedComment>
      <ownedRule xmi:id="_YAq6cBpMEeSd5OoVIuDNwg" name="HistoryOfConditionTemplateId" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAq6cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.61')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAsIkBpMEeSd5OoVIuDNwg" name="HistoryOfConditionMoodCode" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAsIkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAuk0BpMEeSd5OoVIuDNwg" name="HistoryOfConditionCodeP" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAuk0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAtWsBpMEeSd5OoVIuDNwg" name="HistoryOfConditionCode" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAtWsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '68487-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAxBEBpMEeSd5OoVIuDNwg" name="HistoryOfConditionValue" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAxBERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YAyPMBpMEeSd5OoVIuDNwg" name="HistoryOfConditionValueP" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YAyPMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5xr0cIzdEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KEZzkKg-EeG79fAvHk6H4g" name="Complaint">
      <ownedComment xmi:id="_Hj9d0CUfEeOPwcQY2yBpiA">
        <body>Statement of the problem by the patient or provider, including duration, system, and whether it is the chief complaint</body>
      </ownedComment>
      <ownedRule xmi:id="_X67e0BpMEeSd5OoVIuDNwg" name="ComplaintDurationRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X67e0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X68s8BpMEeSd5OoVIuDNwg" name="ComplaintTypeRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X68s8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X697ERpMEeSd5OoVIuDNwg" name="ComplaintOrganSystemRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X697EhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YA0rdRpMEeSd5OoVIuDNwg" name="ComplaintTemplateId" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA0rdhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.63')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YA2goBpMEeSd5OoVIuDNwg" name="ComplaintMoodCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA2goRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YA5j8BpMEeSd5OoVIuDNwg" name="ComplaintCodeP" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA5j8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YA3uwBpMEeSd5OoVIuDNwg" name="ComplaintCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA3uwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '10154-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YA6yEBpMEeSd5OoVIuDNwg" name="ComplaintEffectiveTime" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA6yERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YA8AMBpMEeSd5OoVIuDNwg" name="ComplaintValue" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA8AMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YA91YBpMEeSd5OoVIuDNwg" name="ComplaintTargetSiteCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA91YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12703-7' or value.code = 'LA12705-2' or value.code = 'LA12706-0' or value.code = 'LA18111-7' or value.code = 'LA18112-5' or value.code = 'LA18113-3' or value.code = 'LA18114-1' or value.code = 'LA18115-8' or value.code = 'LA18116-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YA_DgBpMEeSd5OoVIuDNwg" name="ComplaintTargetSiteCodeP" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YA_DgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ke-PsKg-EeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7nP0MKhCEeG79fAvHk6H4g" name="PossibleInjury">
      <ownedComment xmi:id="_FHsPsKhDEeG79fAvHk6H4g">
        <body>Indicator of whether a patient may have an injury</body>
      </ownedComment>
      <ownedRule xmi:id="_YBCG0BpMEeSd5OoVIuDNwg" name="PossibleInjuryTemplateId" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBCG0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.64')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBDU8BpMEeSd5OoVIuDNwg" name="PossibleInjuryMoodCode" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBDU8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBGYQBpMEeSd5OoVIuDNwg" name="PossibleInjuryCodeP" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBGYQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBEjEBpMEeSd5OoVIuDNwg" name="PossibleInjuryCode" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBEjERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69467-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBHmYBpMEeSd5OoVIuDNwg" name="PossibleInjuryValue" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBHmYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_72GvkKhCEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0C-8EKhDEeG79fAvHk6H4g" name="ProviderPrimaryImpression">
      <ownedComment xmi:id="_FTlhMKhEEeG79fAvHk6H4g">
        <body>The EMS personnel's impression of the patient's primary problem or most significant condition</body>
      </ownedComment>
      <ownedRule xmi:id="_YBJblRpMEeSd5OoVIuDNwg" name="ProviderPrimaryImpressionTemplateId" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBJblhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.65')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBKpsBpMEeSd5OoVIuDNwg" name="ProviderPrimaryImpressionMoodCode" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBKpsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBNtABpMEeSd5OoVIuDNwg" name="ProviderPrimaryImpressionCodeP" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBNtARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBMe4BpMEeSd5OoVIuDNwg" name="ProviderPrimaryImpressionCode" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBMe4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67492-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBPiMBpMEeSd5OoVIuDNwg" name="ProviderPrimaryImpressionValue" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBPiMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBRXYBpMEeSd5OoVIuDNwg" name="ProviderPrimaryImpressionValueP" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBRXYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0V7GMKhDEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KOxo0KhEEeG79fAvHk6H4g" name="PrimarySymptom">
      <ownedComment xmi:id="__OYq4CwtEeOaIuM51LdlNw">
        <body>The primary symptom present in the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_YBTzoBpMEeSd5OoVIuDNwg" name="PrimarySymptomTemplateId" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBTzoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.66')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBVBwBpMEeSd5OoVIuDNwg" name="PrimarySymptomMoodCode" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBVBwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBYFEBpMEeSd5OoVIuDNwg" name="PrimarySymptomCodeP" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBYFERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBWP4BpMEeSd5OoVIuDNwg" name="PrimarySymptomCode" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBWP4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67774-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBZ6QBpMEeSd5OoVIuDNwg" name="PrimarySymptomValue" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBZ6QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBbvcBpMEeSd5OoVIuDNwg" name="PrimarySymptomValueP" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBbvcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KfRi8KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g5iJgKhEEeG79fAvHk6H4g" name="OtherSymptoms">
      <ownedComment xmi:id="_s_xikKhEEeG79fAvHk6H4g">
        <body>Symptoms other than the primary symptom</body>
      </ownedComment>
      <ownedRule xmi:id="_YBdkpRpMEeSd5OoVIuDNwg" name="OtherSymptomsTemplateId" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBeLsBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.67')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBgA4BpMEeSd5OoVIuDNwg" name="OtherSymptomsMoodCode" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBgA4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBjEMBpMEeSd5OoVIuDNwg" name="OtherSymptomsCodeP" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBjEMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBhPABpMEeSd5OoVIuDNwg" name="OtherSymptomsCode" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBhPARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67776-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBk5YBpMEeSd5OoVIuDNwg" name="OtherSymptomsValue" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBk5YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBmukBpMEeSd5OoVIuDNwg" name="OtherSymptomsValueP" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBmukRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hM9b0KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0mPksKhEEeG79fAvHk6H4g" name="ProviderSecondaryImpressions">
      <ownedComment xmi:id="_xi9kcKhFEeG79fAvHk6H4g">
        <body>The EMS personnel's impression of the patient's secondary problems or conditions</body>
      </ownedComment>
      <ownedRule xmi:id="_YBpK0BpMEeSd5OoVIuDNwg" name="ProviderSecondaryImpressionsTemplateId" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBpK0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.68')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBrAABpMEeSd5OoVIuDNwg" name="ProviderSecondaryImpressionsMoodCode" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBrAARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBuDUBpMEeSd5OoVIuDNwg" name="ProviderSecondaryImpressionsCodeP" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBuDURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBsOIBpMEeSd5OoVIuDNwg" name="ProviderSecondaryImpressionsCode" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBsOIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69542-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBv4gBpMEeSd5OoVIuDNwg" name="ProviderSecondaryImpressionsValue" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBv4gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YBxtsBpMEeSd5OoVIuDNwg" name="ProviderSecondaryImpressionsValueP" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YBxtsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_06tY0KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NZgqAKhFEeG79fAvHk6H4g" name="InitialPatientAcuity">
      <ownedComment xmi:id="_ncS9cCwnEeOaIuM51LdlNw">
        <body>Patient condition indicating urgency of treatment on arrival at patient</body>
      </ownedComment>
      <ownedRule xmi:id="_YB0J8BpMEeSd5OoVIuDNwg" name="InitialPatientAcuityTemplateId" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB0J8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.69')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YB1YEBpMEeSd5OoVIuDNwg" name="InitialPatientAcuityMoodCode" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB1YERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YB4bYBpMEeSd5OoVIuDNwg" name="InitialPatientAcuityCodeP" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB4bYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YB2mMBpMEeSd5OoVIuDNwg" name="InitialPatientAcuityCode" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB2mMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67493-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YB6QkBpMEeSd5OoVIuDNwg" name="InitialPatientAcuityValue" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB6QkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17694-3' or value.code = 'LA17695-0' or value.code = 'LA17696-8' or value.code = 'LA17697-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YB8FwBpMEeSd5OoVIuDNwg" name="InitialPatientAcuityValueP" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB8FwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NnQyIKhFEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Mr964IzjEeGnhceUMXltng" name="ExistenceOfDrugUseIndication">
      <ownedComment xmi:id="_nOkn4CU_EeOEaIF_MBGm_A">
        <body>Indicator of whether there are indications of alcohol or illicit drug use</body>
      </ownedComment>
      <ownedRule xmi:id="_YB_wIBpMEeSd5OoVIuDNwg" name="ExistenceOfDrugUseIndicationTemplateId" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YB_wIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.70')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCA-QBpMEeSd5OoVIuDNwg" name="ExistenceOfDrugUseIndicationMoodCode" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCA-QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCEBkBpMEeSd5OoVIuDNwg" name="ExistenceOfDrugUseIndicationCodeP" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCEBkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCCMYBpMEeSd5OoVIuDNwg" name="ExistenceOfDrugUseIndicationCode" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCCMYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69757-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCFPsBpMEeSd5OoVIuDNwg" name="ExistenceOfDrugUseIndicationValue" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCFPsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NOQvoIzjEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJHzkIzjEeGnhceUMXltng" name="DrugUseIndication">
      <ownedComment xmi:id="_rAufICUkEeOEaIF_MBGm_A">
        <body>Evidence that a patient has been using alcohol or illicit drugs</body>
      </ownedComment>
      <ownedRule xmi:id="_YCF2wBpMEeSd5OoVIuDNwg" name="DrugUseIndicationTemplateId" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCGd0BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.71')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCHE4BpMEeSd5OoVIuDNwg" name="DrugUseIndicationMoodCode" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCHE4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCI6EBpMEeSd5OoVIuDNwg" name="DrugUseIndicationCode" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCI6ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67669-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCKvQBpMEeSd5OoVIuDNwg" name="DrugUseIndicationValue" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCKvQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17323-9' or value.code = 'LA17324-7' or value.code = 'LA17325-4' or value.code = 'LA17326-2' or value.code = 'LA17327-0' or value.code = 'LA17328-8')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oiTIkIzjEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5JQlAJovEeG_FLcaRgAa7g" name="MedicationAdministered">
      <ownedComment xmi:id="_B5uMkCwqEeOaIuM51LdlNw">
        <body>Medications administered in response to the emergency--usually by the EMS crew</body>
      </ownedComment>
      <ownedRule xmi:id="_X5LyYBpMEeSd5OoVIuDNwg" name="MedicationAdministeredMedicationNotAdministeredEntryRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5LyYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5NnkRpMEeSd5OoVIuDNwg" name="MedicationAdministeredMedicationConsumable" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5NnkhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5R5ABpMEeSd5OoVIuDNwg" name="MedicationAdministeredResponseRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5R5ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5SgEBpMEeSd5OoVIuDNwg" name="MedicationAdministeredMedicationComplicationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5SgERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5THIBpMEeSd5OoVIuDNwg" name="MedicationAdministeredMedicationPriorAdministrationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5THIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5VjYRpMEeSd5OoVIuDNwg" name="MedicationAdministeredMedicationPerformerParticipation" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5VjYhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5WxgBpMEeSd5OoVIuDNwg" name="MedicationAdministeredMedicationAuthorizationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5WxgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7dqURpMEeSd5OoVIuDNwg" name="MedicationAdministeredMedicationAdministrationDeviceParticipant" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7dqUhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCNykBpMEeSd5OoVIuDNwg" name="MedicationAdministeredTemplateId" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCNykRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.72')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCPnwBpMEeSd5OoVIuDNwg" name="MedicationAdministeredClassCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCPnwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCQ14BpMEeSd5OoVIuDNwg" name="MedicationAdministeredNegationInd" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCQ14RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCSEABpMEeSd5OoVIuDNwg" name="MedicationAdministeredEffectiveTime" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCSEARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (self.effectiveTime->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCVHUBpMEeSd5OoVIuDNwg" name="MedicationAdministeredRouteCodeP" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCVHURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCTSIBpMEeSd5OoVIuDNwg" name="MedicationAdministeredRouteCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCTSIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1.1' and (value.code = 'C38208' or value.code = 'C38246' or value.code = 'C38216' or value.code = 'C38222' or value.code = 'C38284' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38253' or value.code = 'C38276' or value.code = 'C38285' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38290' or value.code = 'C38192' or value.code = 'C38295' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38304' or value.code = 'C38308' or value.code = 'C38305' or value.code = 'C38271' or value.code = 'NewCode' or value.code = 'C38250'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCYxsBpMEeSd5OoVIuDNwg" name="MedicationAdministeredApproachSiteCodeP" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCYxsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCXjkBpMEeSd5OoVIuDNwg" name="MedicationAdministeredApproachSiteCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCXjkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.code = '15562006' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCam4BpMEeSd5OoVIuDNwg" name="MedicationAdministeredDoseQuantity" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCam4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YCbN8BpMEeSd5OoVIuDNwg" name="MedicationAdministeredRateQuantity" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YCbN8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.rateQuantity.oclIsUndefined() or self.rateQuantity.isNullFlavorUndefined()) implies (not self.rateQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6L6U0JovEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_46UUAJ9nEeGw9ZRnaFfEZQ" name="EmergencyMedicalDispatchObservation">
      <ownedComment xmi:id="_4pAdQCUlEeOEaIF_MBGm_A">
        <body>Whether and how emergency medical dispatch was performed</body>
      </ownedComment>
      <ownedRule xmi:id="_YC02lRpMEeSd5OoVIuDNwg" name="EmergencyMedicalDispatchObservationTemplateId" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YC02lhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.73')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YC2rwBpMEeSd5OoVIuDNwg" name="EmergencyMedicalDispatchObservationMoodCode" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YC2rwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YC69MBpMEeSd5OoVIuDNwg" name="EmergencyMedicalDispatchObservationCodeP" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YC69MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YC4g8BpMEeSd5OoVIuDNwg" name="EmergencyMedicalDispatchObservationCode" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YC4g8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67488-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YC9ZcBpMEeSd5OoVIuDNwg" name="EmergencyMedicalDispatchObservationValue" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YC9ZcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17151-4' or value.code = 'LA17152-2' or value.code = 'LA17153-0' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YC_OoBpMEeSd5OoVIuDNwg" name="EmergencyMedicalDispatchObservationValueP" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YC_OoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5cQjcJ9nEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__LltsJ97EeGw9ZRnaFfEZQ" name="ComplaintReportedByDispatch">
      <ownedComment xmi:id="_xzPHACUfEeOPwcQY2yBpiA">
        <body>The complaint that dispatch reported to the responding unit</body>
      </ownedComment>
      <ownedRule xmi:id="_YDCR8BpMEeSd5OoVIuDNwg" name="ComplaintReportedByDispatchTemplateId" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDCR8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.74')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDDgEBpMEeSd5OoVIuDNwg" name="ComplaintReportedByDispatchMoodCode" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDDgERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDGjYBpMEeSd5OoVIuDNwg" name="ComplaintReportedByDispatchCodeP" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDGjYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDFVQBpMEeSd5OoVIuDNwg" name="ComplaintReportedByDispatchCode" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDFVQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67570-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDI_oBpMEeSd5OoVIuDNwg" name="ComplaintReportedByDispatchValue" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDI_oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15468-4' or value.code = 'LA15903-0' or value.code = 'LA17117-5' or value.code = 'LA17118-3' or value.code = 'LA17119-1' or value.code = 'LA17120-9' or value.code = 'LA17121-7' or value.code = 'LA17122-5' or value.code = 'LA17123-3' or value.code = 'LA17124-1' or value.code = 'LA17125-8' or value.code = 'LA17126-6' or value.code = 'LA17127-4' or value.code = 'LA17128-2' or value.code = 'LA17129-0' or value.code = 'LA17131-6' or value.code = 'LA17132-4' or value.code = 'LA17133-2' or value.code = 'LA17134-0' or value.code = 'LA17135-7' or value.code = 'LA17136-5' or value.code = 'LA17137-3' or value.code = 'LA17138-1' or value.code = 'LA17140-7' or value.code = 'LA17141-5' or value.code = 'LA17142-3' or value.code = 'LA17143-1' or value.code = 'LA17144-9' or value.code = 'LA17145-6' or value.code = 'LA17146-4' or value.code = 'LA17147-2' or value.code = 'LA17148-0' or value.code = 'LA17149-8' or value.code = 'LA17150-6' or value.code = 'LA18093-7' or value.code = 'LA18209-9' or value.code = 'LA18210-7' or value.code = 'LA18211-5' or value.code = 'LA9553-4' or value.code = 'LA9555-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDKNwBpMEeSd5OoVIuDNwg" name="ComplaintReportedByDispatchValueP" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDKNwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_BD2P0J98EeGw9ZRnaFfEZQ">
        <ownedComment xmi:id="_efgjIEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDispatch.01</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sUm-oIcnEeGqF6qfYwLiQw" name="CurrentlyOnMedication">
      <ownedComment xmi:id="_9n5n4CUfEeOPwcQY2yBpiA">
        <body>Whether a patient is currently taking medication</body>
      </ownedComment>
      <ownedRule xmi:id="_YDNRExpMEeSd5OoVIuDNwg" name="CurrentlyOnMedicationTemplateId" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDNRFBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.75')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDOfMBpMEeSd5OoVIuDNwg" name="CurrentlyOnMedicationMoodCode" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDOfMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDPtUBpMEeSd5OoVIuDNwg" name="CurrentlyOnMedicationCode" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDPtURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67791-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDRigBpMEeSd5OoVIuDNwg" name="CurrentlyOnMedicationValue" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDRigRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wcI0sIcnEeGqF6qfYwLiQw">
        <ownedComment xmi:id="_Hz8KIEM8EeKBoM5tGvrHVQ">
          <body>If EHistory.12 has the value &quot;None Reported,&quot; the value is &quot;False&quot;&#xD;
If EHistory.12 has the value &quot;Refused&quot; or &quot;Unable to Complete,&quot; the value is &quot;NI&quot;; the&#xD;
original value may be recorded in Observation.text.</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RZqlsIcoEeGqF6qfYwLiQw" name="PatientOnAnticoagulants">
      <ownedComment xmi:id="_3LdLsCwsEeOaIuM51LdlNw">
        <body>Indication of whether patient is on anticoagulant medication</body>
      </ownedComment>
      <ownedRule xmi:id="_YDTXsBpMEeSd5OoVIuDNwg" name="PatientOnAnticoagulantsTemplateId" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDTXsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.76')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDUl0BpMEeSd5OoVIuDNwg" name="PatientOnAnticoagulantsMoodCode" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDUl0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDVz8BpMEeSd5OoVIuDNwg" name="PatientOnAnticoagulantsCode" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDVz8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69749-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDXpIBpMEeSd5OoVIuDNwg" name="PatientOnAnticoagulantsValue" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDXpIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TXhZgIcoEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mwn8MIcoEeGqF6qfYwLiQw" name="CurrentMedication">
      <ownedComment xmi:id="__kxkQCUfEeOPwcQY2yBpiA">
        <body>A medication a patient is currently taking</body>
      </ownedComment>
      <ownedRule xmi:id="_X7VugBpMEeSd5OoVIuDNwg" name="CurrentMedicationConsumable" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7VugRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDY3RRpMEeSd5OoVIuDNwg" name="CurrentMedicationTemplateId" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDZeUBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.77')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDaFYBpMEeSd5OoVIuDNwg" name="CurrentMedicationNegationInd" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDaFYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDbTgBpMEeSd5OoVIuDNwg" name="CurrentMedicationNullFlavor" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDbTgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('nullFlavor')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDb6kBpMEeSd5OoVIuDNwg" name="CurrentMedicationDoseQuantity" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDb6kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDe94BpMEeSd5OoVIuDNwg" name="CurrentMedicationRouteCodeP" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDe94RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDdvwBpMEeSd5OoVIuDNwg" name="CurrentMedicationRouteCode" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDdvwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.3.26.1.1.1' and (value.code = 'C38208' or value.code = 'C38246' or value.code = 'C38216' or value.code = 'C38222' or value.code = 'C38284' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38253' or value.code = 'C38276' or value.code = 'C38285' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38290' or value.code = 'C38192' or value.code = 'C38295' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38304' or value.code = 'C38308' or value.code = 'C38305' or value.code = 'C38271' or value.code = 'NewCode' or value.code = 'C38250'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pv80EIcoEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_nazskEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zbYvIJoiEeG_FLcaRgAa7g" name="PhysicalAssessmentOrganizer">
      <ownedComment xmi:id="_PlnNcCwtEeOaIuM51LdlNw">
        <body>A collection of qualitative assessments of the patient's physical condition</body>
      </ownedComment>
      <ownedRule xmi:id="_X7yadRpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent1" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7yadhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X71dwBpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent2" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X71dwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X72r4RpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent3" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X72r4hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::SkinAssessment))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X75IIBpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent4" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X75IIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X76WQRpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent5" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X76WQhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X78LcBpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent6" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X78LcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X79ZkRpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent7" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X79ZkhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7_OwRpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent8" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7_OwhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8BD8BpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent9" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8BD8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8CSERpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent10" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8CSEhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8DgMRpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent11" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8DgMhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8FVYBpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent12" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8FVYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8GjgRpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent13" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8GjghpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X8IYsBpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerComponent14" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8IYsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDlrkBpMEeSd5OoVIuDNwg" name="PhysicalAssessmentOrganizerTemplateId" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDlrkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.78')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0BK8wJoiEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_X73S8BpMEeSd5OoVIuDNwg" name="getComponent3" bodyCondition="_X73S8xpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X73S8xpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X73S8BpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X736ABpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::SkinAssessment))->asSequence()->any(true).oclAsType(emspcr::SkinAssessment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X73S8RpMEeSd5OoVIuDNwg" type="_bFfQYJokEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X73S8hpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sW8QcJosEeG_FLcaRgAa7g" name="PatientPregnancy">
      <ownedComment xmi:id="_5GTu0CwsEeOaIuM51LdlNw">
        <body>Indication of whether the patient is pregnant</body>
      </ownedComment>
      <ownedRule xmi:id="_YDryNRpMEeSd5OoVIuDNwg" name="PatientPregnancyTemplateId" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDryNhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.79')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDtAUBpMEeSd5OoVIuDNwg" name="PatientPregnancyMoodCode" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDtAURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDwDoBpMEeSd5OoVIuDNwg" name="PatientPregnancyCodeP" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDwDoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDuOcBpMEeSd5OoVIuDNwg" name="PatientPregnancyCode" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDuOcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67471-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YDzuABpMEeSd5OoVIuDNwg" name="PatientPregnancyValue" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YDzuARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17329-6' or value.code = 'LA17330-4' or value.code = 'LA17331-2' or value.code = 'LA17332-0' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YD1jMBpMEeSd5OoVIuDNwg" name="PatientPregnancyValueP" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YD1jMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_42mPEJosEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S1I0sJotEeG_FLcaRgAa7g" name="LastOralIntake">
      <ownedComment xmi:id="_9AUfkCwnEeOaIuM51LdlNw">
        <body>Time of patient's last oral intake</body>
      </ownedComment>
      <ownedRule xmi:id="_YD4mgBpMEeSd5OoVIuDNwg" name="LastOralIntakeTemplateId" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YD4mgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.80')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YD6bsBpMEeSd5OoVIuDNwg" name="LastOralIntakeMoodCode" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YD6bsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YD-GEBpMEeSd5OoVIuDNwg" name="LastOralIntakeCodeP" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YD-GERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YD8Q4BpMEeSd5OoVIuDNwg" name="LastOralIntakeCode" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YD8Q4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67517-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YD_7QBpMEeSd5OoVIuDNwg" name="LastOralIntakeValue" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YD_7QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TS5HsJotEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rhjrIJotEeG_FLcaRgAa7g" name="PatientAge">
      <ownedComment xmi:id="_tBPFUCwqEeOaIuM51LdlNw">
        <body>The age of the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_YEBwdRpMEeSd5OoVIuDNwg" name="PatientAgeTemplateId" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEBwdhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.81')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEC-kBpMEeSd5OoVIuDNwg" name="PatientAgeMoodCode" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEC-kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEGB4BpMEeSd5OoVIuDNwg" name="PatientAgeCodeP" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEGB4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEEzwBpMEeSd5OoVIuDNwg" name="PatientAgeCode" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEEzwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '30525-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEH3EBpMEeSd5OoVIuDNwg" name="PatientAgeValue" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEH3ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_r9YrgJotEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HuCH8JouEeG_FLcaRgAa7g" name="ThrombolyticContraindications">
      <ownedComment xmi:id="_58NowC0AEeO0H9tywllqaQ">
        <body>Indicator of contraindications to thrombolytic use</body>
      </ownedComment>
      <ownedRule xmi:id="_YEJsRRpMEeSd5OoVIuDNwg" name="ThrombolyticContraindicationsTemplateId" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEKTUBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.82')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YELhcBpMEeSd5OoVIuDNwg" name="ThrombolyticContraindicationsMoodCode" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YELhcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEOkwBpMEeSd5OoVIuDNwg" name="ThrombolyticContraindicationsCodeP" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEOkwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEMvkBpMEeSd5OoVIuDNwg" name="ThrombolyticContraindicationsCode" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEMvkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67523-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YERBABpMEeSd5OoVIuDNwg" name="ThrombolyticContraindicationsValue" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YERBARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17114-2' or value.code = 'LA17115-9' or value.code = 'LA17116-7')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_IFY4AJouEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qlUP4JouEeG_FLcaRgAa7g" name="BarriersToPatientCare">
      <ownedComment xmi:id="_JnimgCUcEeOPwcQY2yBpiA">
        <body>Kinds of circumstances limiting provision of care</body>
      </ownedComment>
      <ownedRule xmi:id="_YETdRBpMEeSd5OoVIuDNwg" name="BarriersToPatientCareTemplateId" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YETdRRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.83')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEUrYBpMEeSd5OoVIuDNwg" name="BarriersToPatientCareMoodCode" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEUrYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEXusBpMEeSd5OoVIuDNwg" name="BarriersToPatientCareCodeP" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEXusRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEV5gBpMEeSd5OoVIuDNwg" name="BarriersToPatientCareCode" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEWgkBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67515-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEaK8BpMEeSd5OoVIuDNwg" name="BarriersToPatientCareValue" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEaK8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17306-4' or value.code = 'LA17307-2' or value.code = 'LA17308-0' or value.code = 'LA17309-8' or value.code = 'LA17310-6' or value.code = 'LA17311-4' or value.code = 'LA17312-2' or value.code = 'LA17313-0' or value.code = 'LA17314-8' or value.code = 'LA17315-5' or value.code = 'LA17316-3' or value.code = 'LA17317-1' or value.code = 'LA17318-9' or value.code = 'LA17711-5' or value.code = 'LA6301-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEcAIBpMEeSd5OoVIuDNwg" name="BarriersToPatientCareValueP" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEcAIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_q6vGQJouEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ox86UKK4EeGOxth0BgV-QA" name="FirstUnitIndicator">
      <ownedComment xmi:id="_biZCICwlEeOaIuM51LdlNw">
        <body>Indicator of whether reporter of PCR is the first unit to arrive at the scene</body>
      </ownedComment>
      <ownedRule xmi:id="_YEfDdRpMEeSd5OoVIuDNwg" name="FirstUnitIndicatorTemplateId" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEfqgBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.84')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEgRkBpMEeSd5OoVIuDNwg" name="FirstUnitIndicatorMoodCode" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEg4oBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEjU4BpMEeSd5OoVIuDNwg" name="FirstUnitIndicatorCodeP" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEjU4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEiGwBpMEeSd5OoVIuDNwg" name="FirstUnitIndicatorCode" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEiGwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67481-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YElKEBpMEeSd5OoVIuDNwg" name="FirstUnitIndicatorValue" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YElKERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PFao4KK4EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JNrkAKK5EeGOxth0BgV-QA" name="FirstUnitOnScene">
      <ownedComment xmi:id="_kR36wCwlEeOaIuM51LdlNw">
        <body>Name of the first unit to arrive at the scene</body>
      </ownedComment>
      <ownedRule xmi:id="_YElxIBpMEeSd5OoVIuDNwg" name="FirstUnitOnSceneTemplateId" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YElxIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.85')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEm_QBpMEeSd5OoVIuDNwg" name="FirstUnitOnSceneMoodCode" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEm_QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEqCkBpMEeSd5OoVIuDNwg" name="FirstUnitOnSceneCodeP" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEqCkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEoNYBpMEeSd5OoVIuDNwg" name="FirstUnitOnSceneCode" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEoNYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67481-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YErQsBpMEeSd5OoVIuDNwg" name="FirstUnitOnSceneValue" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YErQsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Jj_yQKK5EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wPLCkKK5EeGOxth0BgV-QA" name="ScenePatientCount">
      <ownedComment xmi:id="_KZ3_8Cz_EeO0H9tywllqaQ">
        <body>How many patients were at the scene</body>
      </ownedComment>
      <ownedRule xmi:id="_YEuUBRpMEeSd5OoVIuDNwg" name="ScenePatientCountTemplateId" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEuUBhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.86')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEviIBpMEeSd5OoVIuDNwg" name="ScenePatientCountMoodCode" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEviIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEylcBpMEeSd5OoVIuDNwg" name="ScenePatientCountCodeP" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEylcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YEwwQBpMEeSd5OoVIuDNwg" name="ScenePatientCountCode" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YEwwQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67489-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YE0aoBpMEeSd5OoVIuDNwg" name="ScenePatientCountValue" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE0aoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wlAvsKK5EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E-SEAKK8EeGOxth0BgV-QA" name="MassCasualtyIndicator">
      <ownedComment xmi:id="_AWFPkCwqEeOaIuM51LdlNw">
        <body>Indicator of whether the patient injury is part of a mass casualty event</body>
      </ownedComment>
      <ownedRule xmi:id="_YE1BsBpMEeSd5OoVIuDNwg" name="MassCasualtyIndicatorTemplateId" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE1BsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.87')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YE2P0BpMEeSd5OoVIuDNwg" name="MassCasualtyIndicatorMoodCode" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE2P0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YE5TIBpMEeSd5OoVIuDNwg" name="MassCasualtyIndicatorCodeP" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE5TIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YE3d8BpMEeSd5OoVIuDNwg" name="MassCasualtyIndicatorCode" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE3d8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67490-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YE6hQBpMEeSd5OoVIuDNwg" name="MassCasualtyIndicatorValue" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE6hQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FW5YUKK8EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ayUKMMk3EeK2gbjCtOEivw" name="LocationTypeObservation">
      <ownedComment xmi:id="_q9_3sCwpEeOaIuM51LdlNw">
        <body>Kind of location</body>
      </ownedComment>
      <ownedRule xmi:id="_YE8WdRpMEeSd5OoVIuDNwg" name="LocationTypeObservationTemplateId" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE8WdhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.88')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YE-LoBpMEeSd5OoVIuDNwg" name="LocationTypeObservationCode" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YE-LoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '74496-1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFAn4BpMEeSd5OoVIuDNwg" name="LocationTypeObservationValue" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFAn4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bblJoMk3EeK2gbjCtOEivw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_p4XEAJ-kEeGorI3CPDW2ww" name="AdverseEventIndicator">
      <ownedComment xmi:id="_zJGBwCSSEeO2bfzIdJE0yg">
        <body>Indication of whether an adverse event occurred involving EMS personnel</body>
      </ownedComment>
      <ownedRule xmi:id="_YFDEIRpMEeSd5OoVIuDNwg" name="AdverseEventIndicatorTemplateId" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFDEIhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.89')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFESQBpMEeSd5OoVIuDNwg" name="AdverseEventIndicatorMoodCode" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFESQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFHVkBpMEeSd5OoVIuDNwg" name="AdverseEventIndicatorCodeP" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFHVkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFFgYBpMEeSd5OoVIuDNwg" name="AdverseEventIndicatorCode" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFFgYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67554-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFJKwBpMEeSd5OoVIuDNwg" name="AdverseEventIndicatorValue" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFJKwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_q4E0kJ-kEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gU4tMJ-lEeGorI3CPDW2ww" name="AdverseEventTypeObservation">
      <ownedComment xmi:id="_6aZsMCSSEeO2bfzIdJE0yg">
        <body>Kind of adverse event involving EMS personnel</body>
      </ownedComment>
      <ownedRule xmi:id="_YFK_9RpMEeSd5OoVIuDNwg" name="AdverseEventTypeObservationTemplateId" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFK_9hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.90')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFMOEBpMEeSd5OoVIuDNwg" name="AdverseEventTypeObservationMoodCode" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFM1IBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFPRYBpMEeSd5OoVIuDNwg" name="AdverseEventTypeObservationCodeP" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFPRYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFODQBpMEeSd5OoVIuDNwg" name="AdverseEventTypeObservationCode" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFODQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67555-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFRtoBpMEeSd5OoVIuDNwg" name="AdverseEventTypeObservationValue" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFRtoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA17402-1' or value.code = 'LA17403-9' or value.code = 'LA17404-7' or value.code = 'LA17405-4' or value.code = 'LA17406-2' or value.code = 'LA17407-0' or value.code = 'LA17408-8' or value.code = 'LA17409-6' or value.code = 'LA17410-4' or value.code = 'LA17411-2' or value.code = 'LA17412-0' or value.code = 'LA17413-8' or value.code = 'LA17414-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFTi0BpMEeSd5OoVIuDNwg" name="AdverseEventTypeObservationValueP" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFTi0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gwN-UJ-lEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rNkl4GleEeG4boS-IbG8Zw" name="BillingCondition">
      <ownedComment xmi:id="_QK_FYCUcEeOPwcQY2yBpiA">
        <body>Patient condition classified by billing category</body>
      </ownedComment>
      <ownedRule xmi:id="_YFV_EBpMEeSd5OoVIuDNwg" name="BillingConditionTemplateId" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFV_ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.91')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFaQgBpMEeSd5OoVIuDNwg" name="BillingConditionCodeP" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFaQgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFX0QBpMEeSd5OoVIuDNwg" name="BillingConditionCode" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFX0QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67556-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFdT0BpMEeSd5OoVIuDNwg" name="BillingConditionValue" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFdT0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFfJABpMEeSd5OoVIuDNwg" name="BillingConditionValueP" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFfJARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFgXIBpMEeSd5OoVIuDNwg" name="BillingConditionMoodCode" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFgXIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rNkl4WleEeG4boS-IbG8Zw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_To2-YGleEeG4boS-IbG8Zw" name="LevelOfServiceObservation">
      <ownedComment xmi:id="_MF2UQCwoEeOaIuM51LdlNw">
        <body>CMS classification of service level for billing purposes</body>
      </ownedComment>
      <ownedRule xmi:id="_YFizZRpMEeSd5OoVIuDNwg" name="LevelOfServiceObservationTemplateId" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFizZhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.92')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFkBgBpMEeSd5OoVIuDNwg" name="LevelOfServiceObservationMoodCode" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFkBgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFnr4BpMEeSd5OoVIuDNwg" name="LevelOfServiceObservationCodeP" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFnr4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFl2sBpMEeSd5OoVIuDNwg" name="LevelOfServiceObservationCode" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFl2sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69464-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFphEBpMEeSd5OoVIuDNwg" name="LevelOfServiceObservationValue" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFphERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18102-6' or value.code = 'LA18103-4' or value.code = 'LA18104-2' or value.code = 'LA18105-9' or value.code = 'LA18106-7' or value.code = 'LA18107-5' or value.code = 'LA18108-3' or value.code = 'LA18109-1' or value.code = 'LA18110-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFrWQBpMEeSd5OoVIuDNwg" name="LevelOfServiceObservationValueP" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFrWQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W97cwGleEeG4boS-IbG8Zw">
        <ownedComment xmi:id="_ifpNMEM7EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EPayment.50</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rDpggp-mEeGorI3CPDW2ww" name="ProtocolObservation">
      <ownedComment xmi:id="_hgBjgCz8EeO0H9tywllqaQ">
        <body>The protocol used by EMS personnel to direct the clinical care of the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_YFtygBpMEeSd5OoVIuDNwg" name="ProtocolObservationTemplateId" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFtygRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.93')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFvAoBpMEeSd5OoVIuDNwg" name="ProtocolObservationMoodCode" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFvAoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFyD8BpMEeSd5OoVIuDNwg" name="ProtocolObservationCodeP" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFyD8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YFwOwBpMEeSd5OoVIuDNwg" name="ProtocolObservationCode" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YFwOwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67537-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YF0gMBpMEeSd5OoVIuDNwg" name="ProtocolObservationValue" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YF0gMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17398-1' or value.code = 'LA17491-4' or value.code = 'LA17492-2' or value.code = 'LA17494-8' or value.code = 'LA17495-5' or value.code = 'LA17496-3' or value.code = 'LA17497-1' or value.code = 'LA17498-9' or value.code = 'LA17499-7' or value.code = 'LA17500-2' or value.code = 'LA17501-0' or value.code = 'LA17502-8' or value.code = 'LA17503-6' or value.code = 'LA17504-4' or value.code = 'LA17505-1' or value.code = 'LA17506-9' or value.code = 'LA17507-7' or value.code = 'LA17508-5' or value.code = 'LA17509-3' or value.code = 'LA17510-1' or value.code = 'LA17511-9' or value.code = 'LA17512-7' or value.code = 'LA17513-5' or value.code = 'LA17514-3' or value.code = 'LA17515-0' or value.code = 'LA17516-8' or value.code = 'LA17517-6' or value.code = 'LA17518-4' or value.code = 'LA17519-2' or value.code = 'LA17520-0' or value.code = 'LA17521-8' or value.code = 'LA17522-6' or value.code = 'LA17523-4' or value.code = 'LA17524-2' or value.code = 'LA17525-9' or value.code = 'LA17526-7' or value.code = 'LA17527-5' or value.code = 'LA17528-3' or value.code = 'LA17529-1' or value.code = 'LA17530-9' or value.code = 'LA17531-7' or value.code = 'LA17532-5' or value.code = 'LA17533-3' or value.code = 'LA17534-1' or value.code = 'LA17535-8' or value.code = 'LA17536-6' or value.code = 'LA17537-4' or value.code = 'LA17538-2' or value.code = 'LA17539-0' or value.code = 'LA17540-8' or value.code = 'LA17541-6' or value.code = 'LA17542-4' or value.code = 'LA17543-2' or value.code = 'LA17544-0' or value.code = 'LA17545-7' or value.code = 'LA17546-5' or value.code = 'LA17547-3' or value.code = 'LA17548-1' or value.code = 'LA17549-9' or value.code = 'LA17550-7' or value.code = 'LA17551-5' or value.code = 'LA17552-3' or value.code = 'LA17553-1' or value.code = 'LA17554-9' or value.code = 'LA17555-6' or value.code = 'LA17556-4' or value.code = 'LA17557-2' or value.code = 'LA17558-0' or value.code = 'LA17559-8' or value.code = 'LA17560-6' or value.code = 'LA17561-4' or value.code = 'LA17562-2' or value.code = 'LA17563-0' or value.code = 'LA17564-8' or value.code = 'LA17565-5' or value.code = 'LA17566-3' or value.code = 'LA17567-1' or value.code = 'LA17568-9' or value.code = 'LA17569-7' or value.code = 'LA17570-5' or value.code = 'LA18269-3' or value.code = 'LA46-8' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YF2VYBpMEeSd5OoVIuDNwg" name="ProtocolObservationValueP" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YF2VYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rDpghJ-mEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_n-zaBZ-nEeGorI3CPDW2ww" name="CandidatePatientRegistryType">
      <ownedComment xmi:id="_-XojECUcEeOPwcQY2yBpiA">
        <body>Kind of patient registry in which it may be appropriate to include the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_YF4xoRpMEeSd5OoVIuDNwg" name="CandidatePatientRegistryTypeTemplateId" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YF4xohpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.94')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YF5_wBpMEeSd5OoVIuDNwg" name="CandidatePatientRegistryTypeMoodCode" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YF5_wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YF9DEBpMEeSd5OoVIuDNwg" name="CandidatePatientRegistryTypeCodeP" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YF9DERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YF7N4BpMEeSd5OoVIuDNwg" name="CandidatePatientRegistryTypeCode" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YF7N4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67553-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YF_fUBpMEeSd5OoVIuDNwg" name="CandidatePatientRegistryTypeValue" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YF_fURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17057-3' or value.code = 'LA17058-1' or value.code = 'LA17059-9' or value.code = 'LA17398-1' or value.code = 'LA17399-9' or value.code = 'LA17400-5' or value.code = 'LA17401-3' or value.code = 'LA7318-4' or value.code = 'LA9535-1' or value.code = 'LA9553-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGAtcBpMEeSd5OoVIuDNwg" name="CandidatePatientRegistryTypeValueP" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGAtcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_n-zaB5-nEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0padgJ99EeGw9ZRnaFfEZQ" name="DelayOrganizer">
      <ownedComment xmi:id="_GMgGMCUgEeOPwcQY2yBpiA">
        <body>Kinds of delays experienced by a responder</body>
      </ownedComment>
      <ownedRule xmi:id="_X6KCwBpMEeSd5OoVIuDNwg" name="DelayOrganizerDispatchDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6KCwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6L38BpMEeSd5OoVIuDNwg" name="DelayOrganizerResponseDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6L38RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6NGEBpMEeSd5OoVIuDNwg" name="DelayOrganizerSceneDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6NGERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6OUMRpMEeSd5OoVIuDNwg" name="DelayOrganizerTransportDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6OUMhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6QJYBpMEeSd5OoVIuDNwg" name="DelayOrganizerTurnaoundDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6QJYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGDwwBpMEeSd5OoVIuDNwg" name="DelayOrganizerTemplateId" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGDwwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.95')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_17RuAJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MiN-UJ-BEeGw9ZRnaFfEZQ" name="DispatchLocationOrganizer">
      <ownedComment xmi:id="_zi5J8CUjEeOEaIF_MBGm_A">
        <body>Information about the location of the unit when dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="_X6RXgRpMEeSd5OoVIuDNwg" name="DispatchLocationOrganizerDispatchLocationNameRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6RXghpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6TMsRpMEeSd5OoVIuDNwg" name="DispatchLocationOrganizerDispatchLocationLatitudeRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6TzwBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6Ua0BpMEeSd5OoVIuDNwg" name="DispatchLocationOrganizerDispatchLocationLongtudeRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6Ua0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGG0EBpMEeSd5OoVIuDNwg" name="DispatchLocationOrganizerTemplateId" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGG0ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.96')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NzmtsJ-BEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yVviAJ-OEeGorI3CPDW2ww" name="ResponseOdometerReadingOrganizer">
      <ownedComment xmi:id="_70pb8Cz-EeO0H9tywllqaQ">
        <body>Collection of odometer readings at various points in an EMS crew's trip</body>
      </ownedComment>
      <ownedRule xmi:id="_X6Vo8RpMEeSd5OoVIuDNwg" name="ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6Vo8hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6XeIBpMEeSd5OoVIuDNwg" name="ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6XeIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X6YsQRpMEeSd5OoVIuDNwg" name="ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X6YsQhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7ITIBpMEeSd5OoVIuDNwg" name="ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7ITIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGLFhRpMEeSd5OoVIuDNwg" name="ResponseOdometerReadingOrganizerTemplateId" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGLskBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.97')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yynrQJ-OEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l_V6IJ-bEeGorI3CPDW2ww" name="ResponseModeToScene">
      <ownedComment xmi:id="_3myUYCz-EeO0H9tywllqaQ">
        <body>Indication of whether the response was emergent or non-emergent</body>
      </ownedComment>
      <ownedRule xmi:id="_YGOI1RpMEeSd5OoVIuDNwg" name="ResponseModeToSceneTemplateId" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGOI1hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.182')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGPW8BpMEeSd5OoVIuDNwg" name="ResponseModeToSceneMoodCode" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGP-ABpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGTBUBpMEeSd5OoVIuDNwg" name="ResponseModeToSceneCodeP" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGTBURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGRMIBpMEeSd5OoVIuDNwg" name="ResponseModeToSceneCode" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGRMIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67482-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGU2gBpMEeSd5OoVIuDNwg" name="ResponseModeToSceneValue" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGU2gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17177-9' or value.code = 'LA17178-7' or value.code = 'LA17179-5' or value.code = 'LA17180-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGWrsBpMEeSd5OoVIuDNwg" name="ResponseModeToSceneValueP" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGWrsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mlNAQJ-bEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_K8JK8JuoEeGzXI65shd6Fw" name="Procedure">
      <ownedComment xmi:id="_B7Mq0Cz8EeO0H9tywllqaQ">
        <body>Procedure performed by EMS unit</body>
      </ownedComment>
      <ownedRule xmi:id="_X5hwoRpMEeSd5OoVIuDNwg" name="EMSPCRProcedureAbandonedProcedureRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5hwohpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5jl0RpMEeSd5OoVIuDNwg" name="EMSPCRProcedureProcedurePriorRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5jl0hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5kz8RpMEeSd5OoVIuDNwg" name="EMSPCRProcedureProcedureNumberOfAttemptsRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5kz8hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5mpIRpMEeSd5OoVIuDNwg" name="EMSPCRProcedureProcedureSuccessfulRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5mpIhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5nQMBpMEeSd5OoVIuDNwg" name="EMSPCRProcedureProcedureComplicationsRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5nQMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5pscRpMEeSd5OoVIuDNwg" name="EMSPCRProcedureProcedurePatientResponseRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5pschpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5rhoBpMEeSd5OoVIuDNwg" name="EMSPCRProcedureProcedurePerformer" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5rhoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X5svwRpMEeSd5OoVIuDNwg" name="EMSPCRProcedureAirwayConfirmationRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X5svwhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X7p3kRpMEeSd5OoVIuDNwg" name="EMSPCRProcedureReasonProcedureNotAttemptedRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X7p3khpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGZH8BpMEeSd5OoVIuDNwg" name="EMSPCRProcedureTemplateId" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGZH8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.181')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGa9IBpMEeSd5OoVIuDNwg" name="EMSPCRProcedureCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGa9IRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGcLQBpMEeSd5OoVIuDNwg" name="EMSPCRProcedureNegationInd" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGcLQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGfOkBpMEeSd5OoVIuDNwg" name="EMSPCRProcedureStatusCodeP" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGfOkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGdZYBpMEeSd5OoVIuDNwg" name="EMSPCRProcedureStatusCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGdZYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and 
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in 
value.code = 'Aborted')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGgcsBpMEeSd5OoVIuDNwg" name="EMSPCRProcedureEffectiveTime" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGgcsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGjgABpMEeSd5OoVIuDNwg" name="EMSPCRProcedureApproachSiteCodeP" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGjgARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGiR4BpMEeSd5OoVIuDNwg" name="EMSPCRProcedureApproachSiteCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGiR4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18112-5' or value.code = 'LA18113-3' or value.code = 'LA18757-7' or value.code = 'LA18758-5' or value.code = 'LA18790-8' or value.code = 'LA18791-6' or value.code = 'LA18792-4' or value.code = 'LA18793-2' or value.code = 'LA18794-0' or value.code = 'LA18795-7' or value.code = 'LA18796-5' or value.code = 'LA18797-3' or value.code = 'LA18798-1' or value.code = 'LA18799-9' or value.code = 'LA18800-5' or value.code = 'LA18801-3' or value.code = 'LA18802-1' or value.code = 'LA18803-9' or value.code = 'LA18804-7' or value.code = 'LA18805-4' or value.code = 'LA18806-2' or value.code = 'LA18807-0' or value.code = 'LA18808-8' or value.code = 'LA18809-6' or value.code = 'LA18810-4' or value.code = 'LA18811-2' or value.code = 'LA18812-0' or value.code = 'LA18813-8' or value.code = 'LA18814-6' or value.code = 'LA18815-3' or value.code = 'LA18816-1' or value.code = 'LA18817-9' or value.code = 'LA18818-7')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_L0nEAJuoEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_-jiisEbuEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iWVVYIy-EeGnhceUMXltng" name="ExistenceOfDrugAllergyObservation">
      <ownedComment xmi:id="_Zmg2wCU_EeOEaIF_MBGm_A">
        <body>Indicator of whether patient has any allergies or sensitivities to drugs</body>
      </ownedComment>
      <ownedRule xmi:id="_YGufIBpMEeSd5OoVIuDNwg" name="ExistenceOfDrugAllergyObservationTemplateId" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGufIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.102')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGvtQBpMEeSd5OoVIuDNwg" name="ExistenceOfDrugAllergyObservationMoodCode" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGvtQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGw7YBpMEeSd5OoVIuDNwg" name="ExistenceOfDrugAllergyObservationCode" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGw7YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67794-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YGywkBpMEeSd5OoVIuDNwg" name="ExistenceOfDrugAllergyObservationValue" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGywkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iumrcIy-EeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_t_nG0IzYEeGnhceUMXltng" name="ExistenceOfNonDrugAllergy">
      <ownedComment xmi:id="_XMDmgCU_EeOEaIF_MBGm_A">
        <body>Indicator of whether patient has any allergies or sensitivities to materials other than drugs</body>
      </ownedComment>
      <ownedRule xmi:id="_YGzXoBpMEeSd5OoVIuDNwg" name="ExistenceOfNonDrugAllergyTemplateId" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YGz-sBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.103')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YG1M0BpMEeSd5OoVIuDNwg" name="ExistenceOfNonDrugAllergyMoodCode" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YG1M0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YG2a8BpMEeSd5OoVIuDNwg" name="ExistenceOfNonDrugAllergyCode" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YG2a8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69747-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YG4QIBpMEeSd5OoVIuDNwg" name="ExistenceOfNonDrugAllergyValue" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YG4QIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_uYpR4IzYEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UleZUIzZEeGnhceUMXltng" name="NonDrugAllergy">
      <ownedComment xmi:id="_UJoXUCU_EeOEaIF_MBGm_A">
        <body>Patient allergies and sensitivities to materials other than drugs</body>
      </ownedComment>
      <ownedRule xmi:id="_YG43MBpMEeSd5OoVIuDNwg" name="NonDrugAllergyTemplateId" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YG43MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.104')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YG6FUBpMEeSd5OoVIuDNwg" name="NonDrugAllergyMoodCode" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YG6sYBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YG76gBpMEeSd5OoVIuDNwg" name="NonDrugAllergyCode" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YG76gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69748-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YG9vsBpMEeSd5OoVIuDNwg" name="NonDrugAllergyValue" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YG9vsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA18356-8' or value.code = 'LA18357-6' or value.code = 'LA18358-4' or value.code = 'LA18359-2' or value.code = 'LA18360-0' or value.code = 'LA18361-8')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VJHR4IzZEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E9ekgJoxEeG_FLcaRgAa7g" name="MedicationNotAdministeredReasonObservation">
      <ownedComment xmi:id="_IHxqQCwqEeOaIuM51LdlNw">
        <body>Reason for declining to administer a medication</body>
      </ownedComment>
      <ownedRule xmi:id="_YG_k4BpMEeSd5OoVIuDNwg" name="MedicationNotAdministeredReasonObservationTemplateId" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YG_k4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.105')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHAzABpMEeSd5OoVIuDNwg" name="MedicationNotAdministeredReasonObservationMoodCode" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHAzARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHCBIBpMEeSd5OoVIuDNwg" name="MedicationNotAdministeredReasonObservationCode" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHCBIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHEdYBpMEeSd5OoVIuDNwg" name="MedicationNotAdministeredReasonObservationValue" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHEdYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15185-4' or value.code = 'LA18921-9' or value.code = 'LA18922-7' or value.code = 'LA18925-0' or value.code = 'LA4216-3' or value.code = 'LA4389-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHGSkBpMEeSd5OoVIuDNwg" name="MedicationNotAdministeredReasonObservationValueP" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHGSkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FXzwEJoxEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j9MusJsmEeGzXI65shd6Fw" name="MedicationResponseObservation">
      <ownedComment xmi:id="_VfFpoCwqEeOaIuM51LdlNw">
        <body>Whether the patient's condition improved after medication administration</body>
      </ownedComment>
      <ownedRule xmi:id="_YHHgsBpMEeSd5OoVIuDNwg" name="MedicationResponseObservationTemplateId" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHHgsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.106')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHIu0BpMEeSd5OoVIuDNwg" name="MedicationResponseObservationMoodCode" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHIu0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHLyIBpMEeSd5OoVIuDNwg" name="MedicationResponseObservationCodeP" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHLyIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHKkABpMEeSd5OoVIuDNwg" name="MedicationResponseObservationCode" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHKkARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67540-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHOOYBpMEeSd5OoVIuDNwg" name="MedicationResponseObservationValue" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHOOYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA11011-6' or value.code = 'LA17181-1' or value.code = 'LA65-8')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kLrPkJsmEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Qzy_cJsnEeGzXI65shd6Fw" name="MedicationComplicationObservation">
      <ownedComment xmi:id="_F76PoCwqEeOaIuM51LdlNw">
        <body>Complications associated with the administration of a medication</body>
      </ownedComment>
      <ownedRule xmi:id="_YHPcgBpMEeSd5OoVIuDNwg" name="MedicationComplicationObservationTemplateId" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHQDkBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.107')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHRRsBpMEeSd5OoVIuDNwg" name="MedicationComplicationObservationMoodCode" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHRRsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHUVABpMEeSd5OoVIuDNwg" name="MedicationComplicationObservationCodeP" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHUVARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHSf0BpMEeSd5OoVIuDNwg" name="MedicationComplicationObservationCode" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHSf0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67541-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHWKMBpMEeSd5OoVIuDNwg" name="MedicationComplicationObservationValue" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHWKMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA15098-9' or value.code = 'LA15099-7' or value.code = 'LA15424-7' or value.code = 'LA17059-9' or value.code = 'LA17392-4' or value.code = 'LA17393-2' or value.code = 'LA17394-0' or value.code = 'LA17396-5' or value.code = 'TMP-LA17397-3a' or value.code = 'LA17713-1' or value.code = 'LA17714-9' or value.code = 'LA18266-9' or value.code = 'LA18267-7' or value.code = 'LA7418-2' or value.code = 'LA7434-9' or value.code = 'LA7443-0' or value.code = 'LA7444-8' or value.code = 'LA9540-1' or value.code = 'LA9541-9' or value.code = 'LA9548-4' or value.code = 'TMP-LA17397-3b')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHX_YBpMEeSd5OoVIuDNwg" name="MedicationComplicationObservationValueP" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHX_YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R0vfEJsnEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pVW0QJsoEeGzXI65shd6Fw" name="MedicationPriorAdministrationObservation">
      <ownedComment xmi:id="_JEULACwqEeOaIuM51LdlNw">
        <body>Indicator of whether a medication was administered prior to the arrival of the EMS crew</body>
      </ownedComment>
      <ownedRule xmi:id="_YHZNgBpMEeSd5OoVIuDNwg" name="MedicationPriorAdministrationObservationTemplateId" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHZNgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.108')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHaboBpMEeSd5OoVIuDNwg" name="MedicationPriorAdministrationObservationMoodCode" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHaboRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHde8BpMEeSd5OoVIuDNwg" name="MedicationPriorAdministrationObservationCodeP" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHde8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHcQ0BpMEeSd5OoVIuDNwg" name="MedicationPriorAdministrationObservationCode" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHcQ0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67539-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHfUIBpMEeSd5OoVIuDNwg" name="MedicationPriorAdministrationObservationValue" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHfUIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pxFG8JsoEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GGe8UJojEeG_FLcaRgAa7g" name="PatientBodyWeight">
      <ownedComment xmi:id="_1YuUsCwqEeOaIuM51LdlNw">
        <body>Patient's body weight</body>
      </ownedComment>
      <ownedRule xmi:id="_YHf7MBpMEeSd5OoVIuDNwg" name="PatientBodyWeightTemplateId" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHf7MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.178')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHhwYBpMEeSd5OoVIuDNwg" name="PatientBodyWeightMoodCode" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHhwYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHjlkBpMEeSd5OoVIuDNwg" name="PatientBodyWeightCode" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHjlkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8335-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHlawBpMEeSd5OoVIuDNwg" name="PatientBodyWeightValue" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHlawRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GhZ9wJojEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_whTHIJojEeG_FLcaRgAa7g" name="LengthBasedPatientBodyWeightClass">
      <ownedComment xmi:id="_CBf6cCwoEeOaIuM51LdlNw">
        <body>Classification of patient weight based on length</body>
      </ownedComment>
      <ownedRule xmi:id="_YHmB0BpMEeSd5OoVIuDNwg" name="LengthBasedPatientBodyWeightClassTemplateId" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHmo4BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.110')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHn3ABpMEeSd5OoVIuDNwg" name="LengthBasedPatientBodyWeightClassMoodCode" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHn3ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHq6UBpMEeSd5OoVIuDNwg" name="LengthBasedPatientBodyWeightClassCodeP" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHq6URpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHpFIBpMEeSd5OoVIuDNwg" name="LengthBasedPatientBodyWeightClassCode" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHpFIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67670-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHsIcBpMEeSd5OoVIuDNwg" name="LengthBasedPatientBodyWeightClassEffectiveTime" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHsIcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHt9oBpMEeSd5OoVIuDNwg" name="LengthBasedPatientBodyWeightClassValue" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHt9oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15553-3' or value.code = 'LA15554-1' or value.code = 'LA15555-8' or value.code = 'LA17192-8' or value.code = 'LA17193-6' or value.code = 'LA17194-4' or value.code = 'LA17195-1' or value.code = 'LA17196-9' or value.code = 'LA4457-3')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xRpmAJojEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bFfQYJokEeG_FLcaRgAa7g" name="SkinAssessment">
      <ownedComment xmi:id="_NCbYoCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's skin</body>
      </ownedComment>
      <ownedRule xmi:id="_YHvLwBpMEeSd5OoVIuDNwg" name="SkinAssessmentTemplateId" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHvLwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.180')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHwZ4BpMEeSd5OoVIuDNwg" name="SkinAssessmentMoodCode" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHwZ4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YH0EQBpMEeSd5OoVIuDNwg" name="SkinAssessmentCodeP" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YH0EQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YHyPEBpMEeSd5OoVIuDNwg" name="SkinAssessmentCode" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YHyPERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67524-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YH2ggBpMEeSd5OoVIuDNwg" name="SkinAssessmentValue" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YH2ggRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15475-9' or value.code = 'LA17197-7' or value.code = 'LA17198-5' or value.code = 'LA17199-3' or value.code = 'LA17200-9' or value.code = 'LA17201-7' or value.code = 'LA17202-5' or value.code = 'LA17203-3' or value.code = 'LA17204-1' or value.code = 'LA17205-8' or value.code = 'LA17206-6' or value.code = 'LA17207-4' or value.code = 'LA18217-2' or value.code = 'LA18218-0' or value.code = 'LA18219-8' or value.code = 'LA6626-1' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YH4VsBpMEeSd5OoVIuDNwg" name="SkinAssessmentValueP" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YH4VsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_baeB4JokEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QU_s0JolEeG_FLcaRgAa7g" name="FaceAssessment">
      <ownedComment xmi:id="_-I2VQCwkEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's face</body>
      </ownedComment>
      <ownedRule xmi:id="_YH5j0BpMEeSd5OoVIuDNwg" name="FaceAssessmentTemplateId" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YH6K4BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.112')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YH6x8BpMEeSd5OoVIuDNwg" name="FaceAssessmentMoodCode" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YH6x8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YH91QBpMEeSd5OoVIuDNwg" name="FaceAssessmentCodeP" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YH91QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YH8nIBpMEeSd5OoVIuDNwg" name="FaceAssessmentCode" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YH8nIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67526-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YH_qcBpMEeSd5OoVIuDNwg" name="FaceAssessmentEffectiveTime" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YH_qcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIBfoBpMEeSd5OoVIuDNwg" name="FaceAssessmentValue" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIBfoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17211-6' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17216-5' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YICtwBpMEeSd5OoVIuDNwg" name="FaceAssessmentValueP" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YICtwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QvxkUJolEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6VcsUJokEeG_FLcaRgAa7g" name="HeadAssessment">
      <ownedComment xmi:id="__XM-wCwkEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's head</body>
      </ownedComment>
      <ownedRule xmi:id="_YID74BpMEeSd5OoVIuDNwg" name="HeadAssessmentTemplateId" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIEi8BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.113')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIFKABpMEeSd5OoVIuDNwg" name="HeadAssessmentMoodCode" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIFKARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YII0YBpMEeSd5OoVIuDNwg" name="HeadAssessmentCodeP" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YII0YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIG_MBpMEeSd5OoVIuDNwg" name="HeadAssessmentCode" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIG_MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67525-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIKCgBpMEeSd5OoVIuDNwg" name="HeadAssessmentEffectiveTime" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIKCgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIL3sBpMEeSd5OoVIuDNwg" name="HeadAssessmentValue" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIL3sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17211-6' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6p1n8JokEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oE3bcJolEeG_FLcaRgAa7g" name="NeckAssessment">
      <ownedComment xmi:id="_Bw7PMCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's neck</body>
      </ownedComment>
      <ownedRule xmi:id="_YINF0BpMEeSd5OoVIuDNwg" name="NeckAssessmentTemplateId" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YINs4BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.114')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIO7ABpMEeSd5OoVIuDNwg" name="NeckAssessmentMoodCode" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIO7ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIQJIBpMEeSd5OoVIuDNwg" name="NeckAssessmentCode" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIQJIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67527-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIRXQBpMEeSd5OoVIuDNwg" name="NeckAssessmentEffectiveTime" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIRXQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YISlYBpMEeSd5OoVIuDNwg" name="NeckAssessmentValue" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YISlYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17217-3' or value.code = 'LA17219-9' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17612-5' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18226-3' or value.code = 'LA18227-1' or value.code = 'LA18228-9' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_orGVAJolEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CiNc8JomEeG_FLcaRgAa7g" name="ChestAndLungsAssessment">
      <ownedComment xmi:id="_BjODYCUfEeOPwcQY2yBpiA">
        <body>Qualitative assessment of condition of patient's chest and lungs</body>
      </ownedComment>
      <ownedRule xmi:id="_YIUakBpMEeSd5OoVIuDNwg" name="ChestAndLungsAssessmentTemplateId" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIUakRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.115')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIVosBpMEeSd5OoVIuDNwg" name="ChestAndLungsAssessmentMoodCode" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIVosRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIW20BpMEeSd5OoVIuDNwg" name="ChestAndLungsAssessmentCode" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIW20RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67528-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIYsABpMEeSd5OoVIuDNwg" name="ChestAndLungsAssessmentEffectiveTime" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIYsARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIZ6IBpMEeSd5OoVIuDNwg" name="ChestAndLungsAssessmentValue" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIZ6IRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17222-3' or value.code = 'LA17223-1' or value.code = 'LA17224-9' or value.code = 'LA17225-6' or value.code = 'LA17226-4' or value.code = 'LA17227-2' or value.code = 'LA17228-0' or value.code = 'LA17229-8' or value.code = 'LA17230-6' or value.code = 'LA17231-4' or value.code = 'LA17232-2' or value.code = 'LA17233-0' or value.code = 'LA17234-8' or value.code = 'LA17236-3' or value.code = 'LA17237-1' or value.code = 'LA17238-9' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18229-7' or value.code = 'LA18230-5' or value.code = 'LA18231-3' or value.code = 'LA18232-1' or value.code = 'LA18233-9' or value.code = 'LA18234-7' or value.code = 'LA18235-4' or value.code = 'LA18236-2' or value.code = 'LA18237-0' or value.code = 'LA18238-8' or value.code = 'LA18239-6' or value.code = 'LA18240-4' or value.code = 'LA18402-0' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Czwf8JomEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Zjp_UJomEeG_FLcaRgAa7g" name="HeartAssessment">
      <ownedComment xmi:id="_AYJeYCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's heart</body>
      </ownedComment>
      <ownedRule xmi:id="_YIbIQBpMEeSd5OoVIuDNwg" name="HeartAssessmentTemplateId" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIbIQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.116')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIcWYBpMEeSd5OoVIuDNwg" name="HeartAssessmentMoodCode" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIcWYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIfZsBpMEeSd5OoVIuDNwg" name="HeartAssessmentCodeP" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIfZsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIdkgBpMEeSd5OoVIuDNwg" name="HeartAssessmentCode" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIdkgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67529-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIgn0BpMEeSd5OoVIuDNwg" name="HeartAssessmentEffectiveTime" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIgn0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIidABpMEeSd5OoVIuDNwg" name="HeartAssessmentValue" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIidARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17239-7' or value.code = 'LA17240-5' or value.code = 'LA17241-3' or value.code = 'LA18241-2' or value.code = 'LA18242-0' or value.code = 'LA18243-8' or value.code = 'LA18244-6' or value.code = 'LA18245-3' or value.code = 'LA18246-1' or value.code = 'LA6626-1' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIkSMBpMEeSd5OoVIuDNwg" name="HeartAssessmentValueP" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIkSMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Z47rwJomEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WMI_AJooEeG_FLcaRgAa7g" name="AbdomenAssessment">
      <ownedComment xmi:id="_a0PWwCSSEeO2bfzIdJE0yg">
        <body>Qualitative assessment of condition of patient's abdomen</body>
      </ownedComment>
      <ownedRule xmi:id="_YIlgUBpMEeSd5OoVIuDNwg" name="AbdomenAssessmentTemplateId" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIlgURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.117')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YImucBpMEeSd5OoVIuDNwg" name="AbdomenAssessmentMoodCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YImucRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIn8kBpMEeSd5OoVIuDNwg" name="AbdomenAssessmentCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIn8kRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67530-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIpKsBpMEeSd5OoVIuDNwg" name="AbdomenAssessmentEffectiveTime" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIpKsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIqY0BpMEeSd5OoVIuDNwg" name="AbdomenAssessmentValue" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIqY0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17242-1' or value.code = 'LA17243-9' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17246-2' or value.code = 'LA17247-0' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18226-3' or value.code = 'LA18247-9' or value.code = 'LA18248-7' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIs1EBpMEeSd5OoVIuDNwg" name="AbdomenAssessmentTargetSiteCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIs1ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12698-9' or value.code = 'LA18721-3' or value.code = 'LA18722-1' or value.code = 'LA18723-9' or value.code = 'LA18724-7' or value.code = 'LA18725-4')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WiwIMJooEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O7rMoJopEeG_FLcaRgAa7g" name="PelvicAndGenitourinaryAssessment">
      <ownedComment xmi:id="_Gas2sCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's pelvic and genitourinary region</body>
      </ownedComment>
      <ownedRule xmi:id="_YIuDMBpMEeSd5OoVIuDNwg" name="PelvicAndGenitourinaryAssessmentTemplateId" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIuDMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.118')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIvRUBpMEeSd5OoVIuDNwg" name="PelvicAndGenitourinaryAssessmentMoodCode" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIvRURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIxGgBpMEeSd5OoVIuDNwg" name="PelvicAndGenitourinaryAssessmentCode" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIxGgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67531-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YIyUoBpMEeSd5OoVIuDNwg" name="PelvicAndGenitourinaryAssessmentEffectiveTime" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YIy7sBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YI0J0BpMEeSd5OoVIuDNwg" name="PelvicAndGenitourinaryAssessmentValue" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YI0J0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA14123-6' or value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17248-8' or value.code = 'LA17249-6' or value.code = 'LA17250-4' or value.code = 'LA17251-2' or value.code = 'LA17252-0' or value.code = 'LA17253-8' or value.code = 'LA17254-6' or value.code = 'LA17255-3' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YI1_ABpMEeSd5OoVIuDNwg" name="PelvicAndGenitourinaryAssessmentValueP" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YI1_ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PRiu8JopEeG_FLcaRgAa7g">
        <ownedComment xmi:id="_UFXDQJopEeG_FLcaRgAa7g">
          <body>NEMSIS Trace: EExam.12</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pgmc0JopEeG_FLcaRgAa7g" name="BackAndSpineAssessment">
      <ownedComment xmi:id="_E0VWMCUcEeOPwcQY2yBpiA">
        <body>Qualitative assessment of condition of patient's back and spine</body>
      </ownedComment>
      <ownedRule xmi:id="_YI3NIBpMEeSd5OoVIuDNwg" name="BackAndSpineAssessmentTemplateId" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YI3NIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.119')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YI4bQBpMEeSd5OoVIuDNwg" name="BackAndSpineAssessmentMoodCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YI4bQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YI7ekBpMEeSd5OoVIuDNwg" name="BackAndSpineAssessmentCodeP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YI7ekRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YI5pYBpMEeSd5OoVIuDNwg" name="BackAndSpineAssessmentCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YI5pYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67532-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YI8ssBpMEeSd5OoVIuDNwg" name="BackAndSpineAssessmentEffectiveTime" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YI8ssRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YI-h4BpMEeSd5OoVIuDNwg" name="BackAndSpineAssessmentValue" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YI-h4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17256-1' or value.code = 'LA17257-9' or value.code = 'LA17258-7' or value.code = 'LA17259-5' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YI_wABpMEeSd5OoVIuDNwg" name="BackAndSpineAssessmentValueP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YI_wARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJCMQBpMEeSd5OoVIuDNwg" name="BackAndSpineAssessmentTargetSiteCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJCMQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18726-2' or value.code = 'LA18727-0' or value.code = 'LA18728-8' or value.code = 'LA18729-6' or value.code = 'LA18730-4' or value.code = 'LA18731-2' or value.code = 'LA18732-0' or value.code = 'LA18733-8' or value.code = 'LA18734-6' or value.code = 'LA18735-3' or value.code = 'LA18736-1' or value.code = 'LA18737-9' or value.code = 'LA18738-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJEBcBpMEeSd5OoVIuDNwg" name="BackAndSpineAssessmentTargetSiteCodeP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJEBcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_qFpDkJopEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NK7yUJoqEeG_FLcaRgAa7g" name="ExtremitiesAssessment">
      <ownedComment xmi:id="_81IDkCwkEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's extremities</body>
      </ownedComment>
      <ownedRule xmi:id="_YJFPkBpMEeSd5OoVIuDNwg" name="ExtremitiesAssessmentTemplateId" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJFPkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.120')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJGdsBpMEeSd5OoVIuDNwg" name="ExtremitiesAssessmentMoodCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJGdsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJJhABpMEeSd5OoVIuDNwg" name="ExtremitiesAssessmentCodeP" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJJhARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJHr0BpMEeSd5OoVIuDNwg" name="ExtremitiesAssessmentCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJHr0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67533-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJKvIBpMEeSd5OoVIuDNwg" name="ExtremitiesAssessmentEffectiveTime" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJKvIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJL9QBpMEeSd5OoVIuDNwg" name="ExtremitiesAssessmentValue" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJMkUBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17229-8' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17260-3' or value.code = 'LA17261-1' or value.code = 'LA17262-9' or value.code = 'LA17263-7' or value.code = 'LA17264-5' or value.code = 'LA17265-2' or value.code = 'LA17266-0' or value.code = 'LA17267-8' or value.code = 'LA17268-6' or value.code = 'LA17269-4' or value.code = 'LA17270-2' or value.code = 'LA17271-0' or value.code = 'LA17272-8' or value.code = 'LA17273-6' or value.code = 'LA17274-4' or value.code = 'LA17344-5' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18249-5' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJOZgBpMEeSd5OoVIuDNwg" name="ExtremitiesAssessmentTargetSiteCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJOZgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18739-5' or value.code = 'LA18740-3' or value.code = 'LA18741-1' or value.code = 'LA18742-9' or value.code = 'LA18743-7' or value.code = 'LA18744-5' or value.code = 'LA18745-2' or value.code = 'LA18746-0' or value.code = 'LA18747-8' or value.code = 'LA18748-6' or value.code = 'LA18749-4' or value.code = 'LA18750-2' or value.code = 'LA18751-0' or value.code = 'LA18752-8' or value.code = 'LA18753-6' or value.code = 'LA18754-4' or value.code = 'LA18755-1' or value.code = 'LA18756-9' or value.code = 'LA18757-7' or value.code = 'LA18758-5' or value.code = 'LA18759-3' or value.code = 'LA18760-1' or value.code = 'LA18761-9' or value.code = 'LA18762-7' or value.code = 'LA18763-5' or value.code = 'LA18764-3' or value.code = 'LA18765-0' or value.code = 'LA18766-8' or value.code = 'LA18767-6' or value.code = 'LA18768-4' or value.code = 'LA18769-2' or value.code = 'LA18770-0' or value.code = 'LA18771-8' or value.code = 'LA18772-6' or value.code = 'LA18773-4' or value.code = 'LA18774-2' or value.code = 'LA18775-9' or value.code = 'LA18776-7' or value.code = 'LA18777-5' or value.code = 'LA18778-3' or value.code = 'LA18779-1' or value.code = 'LA18780-9' or value.code = 'LA18781-7' or value.code = 'LA18782-5' or value.code = 'LA18783-3' or value.code = 'LA18784-1' or value.code = 'LA18785-8' or value.code = 'LA18786-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJQOsBpMEeSd5OoVIuDNwg" name="ExtremitiesAssessmentTargetSiteCodeP" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJQOsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Nd-qIJoqEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rsLuIJoqEeG_FLcaRgAa7g" name="EyeAssessment">
      <ownedComment xmi:id="_9gdfkCwkEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's eyes</body>
      </ownedComment>
      <ownedRule xmi:id="_YJRc0BpMEeSd5OoVIuDNwg" name="EyeAssessmentTemplateId" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJRc0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.121')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJSq8BpMEeSd5OoVIuDNwg" name="EyeAssessmentMoodCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJSq8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJVuQBpMEeSd5OoVIuDNwg" name="EyeAssessmentCodeP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJVuQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJT5EBpMEeSd5OoVIuDNwg" name="EyeAssessmentCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJT5ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67534-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJXjcBpMEeSd5OoVIuDNwg" name="EyeAssessmentEffectiveTime" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJXjcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJYxkBpMEeSd5OoVIuDNwg" name="EyeAssessmentValue" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJYxkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA14698-7' or value.code = 'LA15255-5' or value.code = 'LA15256-3' or value.code = 'LA17275-1' or value.code = 'LA17276-9' or value.code = 'LA17277-7' or value.code = 'LA17278-5' or value.code = 'LA17279-3' or value.code = 'LA17280-1' or value.code = 'LA17281-9' or value.code = 'LA17282-7' or value.code = 'LA17283-5' or value.code = 'LA17284-3' or value.code = 'LA17285-0' or value.code = 'LA17710-7' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18250-3' or value.code = 'LA18251-1' or value.code = 'LA18253-7' or value.code = 'LA18254-5' or value.code = 'LA18255-2' or value.code = 'LA18256-0' or value.code = 'LA18257-8' or value.code = 'LA18258-6' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJamwBpMEeSd5OoVIuDNwg" name="EyeAssessmentValueP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJamwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJcb8BpMEeSd5OoVIuDNwg" name="EyeAssessmentTargetSiteCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJcb8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18787-4' or value.code = 'LA18788-2' or value.code = 'LA18789-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJdqEBpMEeSd5OoVIuDNwg" name="EyeAssessmentTargetSiteCodeP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJdqERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_r7ptgJoqEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EyfEMJorEeG_FLcaRgAa7g" name="MentalStatusAssessment">
      <ownedComment xmi:id="_b43PICwqEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's mental status</body>
      </ownedComment>
      <ownedRule xmi:id="_YJffQBpMEeSd5OoVIuDNwg" name="MentalStatusAssessmentTemplateId" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJffQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.122')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJgtYBpMEeSd5OoVIuDNwg" name="MentalStatusAssessmentMoodCode" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJgtYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJjwsBpMEeSd5OoVIuDNwg" name="MentalStatusAssessmentCodeP" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJjwsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJh7gBpMEeSd5OoVIuDNwg" name="MentalStatusAssessmentCode" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJh7gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67535-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJll4BpMEeSd5OoVIuDNwg" name="MentalStatusAssessmentValue" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJll4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17286-8' or value.code = 'LA17287-6' or value.code = 'LA17288-4' or value.code = 'LA17289-2' or value.code = 'LA17290-0' or value.code = 'LA18259-4' or value.code = 'LA18260-2' or value.code = 'LA6560-2' or value.code = 'LA6630-3' or value.code = 'LA7438-0' or value.code = 'LA9343-0')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FC2bcJorEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_A65pUHwIEeGW3cDolvqrTA" name="CardiacArrestWithTiming">
      <ownedComment xmi:id="_4tG-UCUeEeOPwcQY2yBpiA">
        <body>Whether a cardiac arrest occurred before or after arrival of EMS crew</body>
      </ownedComment>
      <ownedRule xmi:id="_YJnbEBpMEeSd5OoVIuDNwg" name="CardiacArrestWithTimingTemplateId" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJnbERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.123')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJopMBpMEeSd5OoVIuDNwg" name="CardiacArrestWithTimingMoodCode" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJopMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJp3UBpMEeSd5OoVIuDNwg" name="CardiacArrestWithTimingCode" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJp3URpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67502-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJsTkBpMEeSd5OoVIuDNwg" name="CardiacArrestWithTimingValue" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJsTkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17054-0' or value.code = 'LA17055-7')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_C6NOoHwIEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_tcPw4HwKEeGW3cDolvqrTA" name="CardiacArrestCause">
      <ownedComment xmi:id="_UIoUwCUeEeOPwcQY2yBpiA">
        <body>Kind of event or condition causing cardiac arrest</body>
      </ownedComment>
      <ownedRule xmi:id="_YJthsBpMEeSd5OoVIuDNwg" name="CardiacArrestCauseTemplateId" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJthsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.124')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJuv0BpMEeSd5OoVIuDNwg" name="CardiacArrestCauseMoodCode" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJuv0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJv98BpMEeSd5OoVIuDNwg" name="CardiacArrestCauseCode" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJv98RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67503-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJyaMBpMEeSd5OoVIuDNwg" name="CardiacArrestCauseValue" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJyaMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17056-5' or value.code = 'LA17058-1' or value.code = 'LA17059-9' or value.code = 'LA17977-2' or value.code = 'LA17978-0' or value.code = 'LA17979-8' or value.code = 'LA17980-6' or value.code = 'LA9539-3')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zBCPIHwKEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QFoU0HwNEeGW3cDolvqrTA" name="PriorCPR">
      <ownedComment xmi:id="_52MSkCz7EeO0H9tywllqaQ">
        <body>Indication of whether CPR was provided prior to the documenting EMS unit's care</body>
      </ownedComment>
      <ownedRule xmi:id="_X4E_IBpMEeSd5OoVIuDNwg" name="PriorCPRProviderParticipation" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4E_IRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJzoUBpMEeSd5OoVIuDNwg" name="PriorCPRTemplateId" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJzoURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.125')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJ02cBpMEeSd5OoVIuDNwg" name="PriorCPRMoodCode" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJ02cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJ2EkBpMEeSd5OoVIuDNwg" name="PriorCPRCode" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJ2EkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67506-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJ35wBpMEeSd5OoVIuDNwg" name="PriorCPRValue" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJ35wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SI5NEHwNEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qsAEkHwPEeGW3cDolvqrTA" name="PriorAEDUse">
      <ownedComment xmi:id="_JZX4MCwuEeOaIuM51LdlNw">
        <body>Indication of whether an automated external defibrillator was used on the patient prior to EMS arrival</body>
      </ownedComment>
      <ownedRule xmi:id="_X4GNQRpMEeSd5OoVIuDNwg" name="PriorAEDUsePriorAEDProviderParticipation" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X4GNQhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJ7kIBpMEeSd5OoVIuDNwg" name="PriorAEDUseTemplateId" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJ7kIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.126')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJ8yQBpMEeSd5OoVIuDNwg" name="PriorAEDUseMoodCode" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJ8yQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YJ-AYBpMEeSd5OoVIuDNwg" name="PriorAEDUseCode" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YJ-AYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67508-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKAcoBpMEeSd5OoVIuDNwg" name="PriorAEDUseValue" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKAcoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17066-4' or value.code = 'LA17067-2' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_s7rBIHwPEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ia0ocHwREeGW3cDolvqrTA" name="ArrestRhythm">
      <ownedComment xmi:id="_pVHA8CUbEeOPwcQY2yBpiA">
        <body>First measurement of cardiac rhythm during or shortly after cardiac arrest</body>
      </ownedComment>
      <ownedRule xmi:id="_YKEuEBpMEeSd5OoVIuDNwg" name="ArrestRhythmTemplateId" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKEuERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.127')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKF8MBpMEeSd5OoVIuDNwg" name="ArrestRhythmMoodCode" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKF8MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKHKUBpMEeSd5OoVIuDNwg" name="ArrestRhythmCode" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKHKURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67512-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKJmkBpMEeSd5OoVIuDNwg" name="ArrestRhythmValue" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKJmkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17394-0')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KdqC4HwREeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gnLCQHwSEeGW3cDolvqrTA" name="ReturnOfSpontaneousCirculation">
      <ownedComment xmi:id="_EJoJ4Cz_EeO0H9tywllqaQ">
        <body>Indication whether or not there was any return of spontaneous circulation, and if so, when</body>
      </ownedComment>
      <ownedRule xmi:id="_YKK0sBpMEeSd5OoVIuDNwg" name="ReturnOfSpontaneousCirculationTemplateId" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKK0sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.128')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKMC0BpMEeSd5OoVIuDNwg" name="ReturnOfSpontaneousCirculationMoodCode" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKMC0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKNQ8BpMEeSd5OoVIuDNwg" name="ReturnOfSpontaneousCirculationCode" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKNQ8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67513-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKPtMBpMEeSd5OoVIuDNwg" name="ReturnOfSpontaneousCirculationValue" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKPtMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17075-5' or value.code = 'LA17076-3' or value.code = 'LA17077-1' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKRiYBpMEeSd5OoVIuDNwg" name="ReturnOfSpontaneousCirculationValueP" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKRiYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_i9zicHwSEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_khXxgHwTEeGW3cDolvqrTA" name="DestinationRhythm">
      <ownedComment xmi:id="_HnjScCUhEeOPwcQY2yBpiA">
        <body>Patient's cardiac rhythm classification at destination</body>
      </ownedComment>
      <ownedRule xmi:id="_YKSwgBpMEeSd5OoVIuDNwg" name="DestinationRhythmTemplateId" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKSwgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.129')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKT-oBpMEeSd5OoVIuDNwg" name="DestinationRhythmMoodCode" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKT-oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKVz0BpMEeSd5OoVIuDNwg" name="DestinationRhythmCode" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKVz0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67519-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKXpABpMEeSd5OoVIuDNwg" name="DestinationRhythmValue" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKXpARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12904-1' or value.code = 'LA17059-9' or value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17083-9' or value.code = 'LA17084-7' or value.code = 'LA17085-4' or value.code = 'LA17086-2' or value.code = 'LA17087-0' or value.code = 'LA17088-8' or value.code = 'LA17089-6' or value.code = 'LA17090-4' or value.code = 'LA17091-2' or value.code = 'LA17093-8' or value.code = 'LA17094-6' or value.code = 'LA17095-3' or value.code = 'LA17096-1' or value.code = 'LA17097-9' or value.code = 'LA17394-0' or value.code = 'LA17099-5' or value.code = 'LA17100-1' or value.code = 'LA17101-9' or value.code = 'LA17703-2' or value.code = 'LA17704-0' or value.code = 'LA17705-7' or value.code = 'LA17706-5' or value.code = 'LA17708-1' or value.code = 'LA17718-0' or value.code = 'LA18205-7' or value.code = 'LA18206-5' or value.code = 'LA18207-3' or value.code = 'LA18208-1')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mh2bgHwTEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_edpw0JuqEeGzXI65shd6Fw" name="AbandonedProcedureReasonObservation">
      <ownedComment xmi:id="_PA_LICSSEeO2bfzIdJE0yg">
        <body>An explanation of why efforts to conduct a procedure were abandoned</body>
      </ownedComment>
      <ownedRule xmi:id="_YKZeMBpMEeSd5OoVIuDNwg" name="AbandonedProcedureReasonObservationTemplateId" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKZeMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.130')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKasUBpMEeSd5OoVIuDNwg" name="AbandonedProcedureReasonObservationMoodCode" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKasURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKeWsBpMEeSd5OoVIuDNwg" name="AbandonedProcedureReasonObservationCodeP" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKeWsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKb6cBpMEeSd5OoVIuDNwg" name="AbandonedProcedureReasonObservationCode" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKb6cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKgL4BpMEeSd5OoVIuDNwg" name="AbandonedProcedureReasonObservationValue" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKgL4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17078-9' or value.code = 'LA17079-7' or value.code = 'LA17080-5' or value.code = 'LA17081-3' or value.code = 'LA17082-1' or value.code = 'LA18204-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKiBEBpMEeSd5OoVIuDNwg" name="AbandonedProcedureReasonObservationValueP" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKiBERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_fIxKYJuqEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0IBaIJ0sEeGmCMENP40rhA" name="ProcedurePriorIndicator">
      <ownedComment xmi:id="_P4_bYCz8EeO0H9tywllqaQ">
        <body>Indication of whether a procedure was provided prior to the documenting EMS unit's care</body>
      </ownedComment>
      <ownedRule xmi:id="_YKj2QBpMEeSd5OoVIuDNwg" name="ProcedurePriorIndicatorTemplateId" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKj2QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.131')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKlEYBpMEeSd5OoVIuDNwg" name="ProcedurePriorIndicatorMoodCode" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKlEYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKoHsBpMEeSd5OoVIuDNwg" name="ProcedurePriorIndicatorCodeP" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKoHsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKmSgBpMEeSd5OoVIuDNwg" name="ProcedurePriorIndicatorCode" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKmSgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67542-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKp84BpMEeSd5OoVIuDNwg" name="ProcedurePriorIndicatorValue" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKp84RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0ln8IJ0sEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iZg7kJ0tEeGmCMENP40rhA" name="ProcedureNumberOfAttemptsObservation">
      <ownedComment xmi:id="_LGWLwCz8EeO0H9tywllqaQ">
        <body>How many times the EMS unit attempted a procedure</body>
      </ownedComment>
      <ownedRule xmi:id="_YKqj8BpMEeSd5OoVIuDNwg" name="ProcedureNumberOfAttemptsObservationTemplateId" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKqj8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.132')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKryEBpMEeSd5OoVIuDNwg" name="ProcedureNumberOfAttemptsObservationMoodCode" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKryERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKu1YBpMEeSd5OoVIuDNwg" name="ProcedureNumberOfAttemptsObservationCodeP" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKu1YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKtAMBpMEeSd5OoVIuDNwg" name="ProcedureNumberOfAttemptsObservationCode" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKtnQBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67543-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKwqkBpMEeSd5OoVIuDNwg" name="ProcedureNumberOfAttemptsObservationValue" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKwqkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jCIawJ0tEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_D32TkJ0uEeGmCMENP40rhA" name="ProcedureSuccessfulObservation">
      <ownedComment xmi:id="_XB1GUCz8EeO0H9tywllqaQ">
        <body>Indication of whether a procedure was successful</body>
      </ownedComment>
      <ownedRule xmi:id="_YKxRoBpMEeSd5OoVIuDNwg" name="ProcedureSuccessfulObservationTemplateId" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKxRoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.133')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YKzt4BpMEeSd5OoVIuDNwg" name="ProcedureSuccessfulObservationMoodCode" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YKzt4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YK2xMBpMEeSd5OoVIuDNwg" name="ProcedureSuccessfulObservationCodeP" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YK2xMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YK1jEBpMEeSd5OoVIuDNwg" name="ProcedureSuccessfulObservationCode" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YK1jERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67544-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YK4mYBpMEeSd5OoVIuDNwg" name="ProcedureSuccessfulObservationValue" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YK4mYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EUkEwJ0uEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lVl1sJ0uEeGmCMENP40rhA" name="ProcedureComplicationsObservation">
      <ownedComment xmi:id="_JTGFcCz8EeO0H9tywllqaQ">
        <body>Complications associated with a procedure performed by the EMS unit</body>
      </ownedComment>
      <ownedRule xmi:id="_YK5NcBpMEeSd5OoVIuDNwg" name="ProcedureComplicationsObservationTemplateId" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YK5NcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.179')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YK6bkBpMEeSd5OoVIuDNwg" name="ProcedureComplicationsObservationMoodCode" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YK7CoBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YK_UEBpMEeSd5OoVIuDNwg" name="ProcedureComplicationsObservationCodeP" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YK_UERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YK8QwBpMEeSd5OoVIuDNwg" name="ProcedureComplicationsObservationCode" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YK8QwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67545-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLBJQBpMEeSd5OoVIuDNwg" name="ProcedureComplicationsObservationValue" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLBJQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA15098-9' or value.code = 'LA15099-7' or value.code = 'LA15424-7' or value.code = 'LA17059-9' or value.code = 'LA17392-4' or value.code = 'LA17393-2' or value.code = 'LA17394-0' or value.code = 'LA17396-5' or value.code = 'TMP-LA17397-3a' or value.code = 'LA17489-8' or value.code = 'LA17490-6' or value.code = 'LA17713-1' or value.code = 'LA17714-9' or value.code = 'LA18267-7' or value.code = 'LA18268-5' or value.code = 'LA7418-2' or value.code = 'LA7434-9' or value.code = 'LA7443-0' or value.code = 'LA7444-8' or value.code = 'LA9540-1' or value.code = 'LA9541-9' or value.code = 'LA9548-4' or value.code = 'TMP-LA17397-3b')))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_l6VhgJ0uEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Z3nhEJ0vEeGmCMENP40rhA" name="ProcedurePatientResponseObservation">
      <ownedComment xmi:id="_NYqzsCz8EeO0H9tywllqaQ">
        <body>How a patient responded to a procedure</body>
      </ownedComment>
      <ownedRule xmi:id="_YLC-cBpMEeSd5OoVIuDNwg" name="ProcedurePatientResponseObservationTemplateId" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLC-cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.135')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLEMkBpMEeSd5OoVIuDNwg" name="ProcedurePatientResponseObservationMoodCode" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLEMkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLHP4BpMEeSd5OoVIuDNwg" name="ProcedurePatientResponseObservationCodeP" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLHP4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLFasBpMEeSd5OoVIuDNwg" name="ProcedurePatientResponseObservationCode" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLFasRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67546-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLJFEBpMEeSd5OoVIuDNwg" name="ProcedurePatientResponseObservationValue" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLJFERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA11011-6' or value.code = 'LA17181-1' or value.code = 'LA65-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLK6QBpMEeSd5OoVIuDNwg" name="ProcedurePatientResponseObservationValueP" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLK6QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aVz48J0vEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KR_lQJ4aEeGzbp5zEFWdWg" name="AirwayConfirmationObservation">
      <ownedComment xmi:id="_GBedACSTEeO2bfzIdJE0yg">
        <body>Whether airway placement was confirmed, including time and method</body>
      </ownedComment>
      <ownedRule xmi:id="_YLMIYBpMEeSd5OoVIuDNwg" name="AirwayConfirmationObservationTemplateId" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLMIYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.175')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLNWgBpMEeSd5OoVIuDNwg" name="AirwayConfirmationObservationMoodCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLNWgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLQZ0BpMEeSd5OoVIuDNwg" name="AirwayConfirmationObservationCodeP" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLQZ0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLPLsBpMEeSd5OoVIuDNwg" name="AirwayConfirmationObservationCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLPLsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '71576-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLSPABpMEeSd5OoVIuDNwg" name="AirwayConfirmationObservationEffectiveTime" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLSPARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLTdIBpMEeSd5OoVIuDNwg" name="AirwayConfirmationObservationValue" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLTdIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLUrQBpMEeSd5OoVIuDNwg" name="AirwayConfirmationObservationMethodCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLUrQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18672-8' or value.code = 'LA18673-6' or value.code = 'LA18674-4' or value.code = 'LA18675-1' or value.code = 'LA18676-9' or value.code = 'LA18677-7' or value.code = 'LA18678-5' or value.code = 'LA18679-3' or value.code = 'LA18680-1' or value.code = 'LA18681-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLWgcBpMEeSd5OoVIuDNwg" name="AirwayConfirmationObservationMethodCodeP" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLWgcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Kq5NcJ4aEeGzbp5zEFWdWg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_N8t6kFhWEeK-i8RB1gvLUA" name="ReasonProcedureNotAttemptedObservation">
      <ownedComment xmi:id="_XSkmICz-EeO0H9tywllqaQ">
        <body>Why the EMS crew did not attempt to perform a procedure</body>
      </ownedComment>
      <ownedRule xmi:id="_YLXukBpMEeSd5OoVIuDNwg" name="ReasonProcedureNotAttemptedObservationTemplateId" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLYVoBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.137')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLY8sBpMEeSd5OoVIuDNwg" name="ReasonProcedureNotAttemptedObservationMoodCode" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLY8sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLax4BpMEeSd5OoVIuDNwg" name="ReasonProcedureNotAttemptedObservationCode" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLax4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67504-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLcnEBpMEeSd5OoVIuDNwg" name="ReasonProcedureNotAttemptedObservationValue" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLcnERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15185-4' or value.code = 'LA18925-0' or value.code = 'LA4216-3' or value.code = 'LA4389-8' or value.code = 'LA17063-1' or value.code = 'LA17064-9' or value.code = 'LA17065-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLecQBpMEeSd5OoVIuDNwg" name="ReasonProcedureNotAttemptedObservationValueP" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLecQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_OeTksFhWEeK-i8RB1gvLUA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4ZsacKg_EeG79fAvHk6H4g" name="ComplaintType">
      <ownedComment xmi:id="_7GW4MCUfEeOPwcQY2yBpiA">
        <body>Whether a complaint is a chief complaint</body>
      </ownedComment>
      <ownedRule xmi:id="_YLfqYBpMEeSd5OoVIuDNwg" name="ComplaintTypeTemplateId" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLfqYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.138')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLg4gBpMEeSd5OoVIuDNwg" name="ComplaintTypeMoodCode" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLg4gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLj70BpMEeSd5OoVIuDNwg" name="ComplaintTypeCodeP" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLj70RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLiGoBpMEeSd5OoVIuDNwg" name="ComplaintTypeCode" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLiGoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '72114-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLmYEBpMEeSd5OoVIuDNwg" name="ComplaintTypeValue" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLmYERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA18923-5' or value.code = 'LA18924-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLnmMBpMEeSd5OoVIuDNwg" name="ComplaintTypeValueP" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLnmMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4uqk4Kg_EeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g93MsKhAEeG79fAvHk6H4g" name="ComplaintDuration">
      <ownedComment xmi:id="_nY_8wCUfEeOPwcQY2yBpiA">
        <body>How long a complaint has lasted</body>
      </ownedComment>
      <ownedRule xmi:id="_YLo0UBpMEeSd5OoVIuDNwg" name="ComplaintDurationTemplateId" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLpbYBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.139')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLqCcBpMEeSd5OoVIuDNwg" name="ComplaintDurationMoodCode" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLqCcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLtFwBpMEeSd5OoVIuDNwg" name="ComplaintDurationCodeP" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLtFwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLr3oBpMEeSd5OoVIuDNwg" name="ComplaintDurationCode" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLr3oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67491-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLuT4BpMEeSd5OoVIuDNwg" name="ComplaintDurationValue" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLu68BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hRO0oKhAEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YMy4UKhDEeG79fAvHk6H4g" name="ComplaintOrganSystem">
      <ownedComment xmi:id="_o8qH4CUfEeOPwcQY2yBpiA">
        <body>The system that a complaint seems to affect</body>
      </ownedComment>
      <ownedRule xmi:id="_YLviABpMEeSd5OoVIuDNwg" name="ComplaintOrganSystemTemplateId" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLviARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.140')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLwwIBpMEeSd5OoVIuDNwg" name="ComplaintOrganSystemMoodCode" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLwwIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLzzcBpMEeSd5OoVIuDNwg" name="ComplaintOrganSystemCodeP" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLzzcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YLx-QBpMEeSd5OoVIuDNwg" name="ComplaintOrganSystemCode" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YLx-QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69468-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YL2PsBpMEeSd5OoVIuDNwg" name="ComplaintOrganSystemValue" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YL2PsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA16968-2' or value.code = 'LA18114-1' or value.code = 'LA18277-6' or value.code = 'LA18278-4' or value.code = 'LA18279-2' or value.code = 'LA18281-8' or value.code = 'LA18282-6' or value.code = 'LA18283-4' or value.code = 'LA18284-2' or value.code = 'LA18285-9' or value.code = 'LA9534-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YL3d0BpMEeSd5OoVIuDNwg" name="ComplaintOrganSystemValueP" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YL4E4BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YmnGgKhDEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gBOGYJorEeG_FLcaRgAa7g" name="NeurologicalAssessment">
      <ownedComment xmi:id="_DWs6MCwlEeOaIuM51LdlNw">
        <body>Qualitative assessment of condition of patient's neurological response</body>
      </ownedComment>
      <ownedRule xmi:id="_YL5TABpMEeSd5OoVIuDNwg" name="NeurologicalAssessmentTemplateId" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YL5TARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.141')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YL6hIBpMEeSd5OoVIuDNwg" name="NeurologicalAssessmentMoodCode" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YL6hIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YL9kcBpMEeSd5OoVIuDNwg" name="NeurologicalAssessmentCodeP" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YL9kcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YL8WUBpMEeSd5OoVIuDNwg" name="NeurologicalAssessmentCode" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YL8WURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67536-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMAAsBpMEeSd5OoVIuDNwg" name="NeurologicalAssessmentValue" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMAAsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15899-0' or value.code = 'LA17286-8' or value.code = 'LA17291-8' or value.code = 'LA17292-6' or value.code = 'LA17293-4' or value.code = 'LA17294-2' or value.code = 'LA17295-9' or value.code = 'LA17296-7' or value.code = 'LA17297-5' or value.code = 'LA17298-3' or value.code = 'LA17299-1' or value.code = 'LA17300-7' or value.code = 'LA17301-5' or value.code = 'LA17302-3' or value.code = 'LA17303-1' or value.code = 'LA17304-9' or value.code = 'LA17305-6' or value.code = 'LA18261-0' or value.code = 'LA18262-8' or value.code = 'LA18263-6' or value.code = 'LA18264-4' or value.code = 'LA18265-1' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMB14BpMEeSd5OoVIuDNwg" name="NeurologicalAssessmentValueP" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMB14RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gR4YkJorEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Orea4IzrEeGnhceUMXltng" name="SystolicBloodPressure">
      <ownedComment xmi:id="_0zgpkC0AEeO0H9tywllqaQ">
        <body>Measurement of the patient's systolic blood pressure</body>
      </ownedComment>
      <ownedRule xmi:id="_YMDrEBpMEeSd5OoVIuDNwg" name="VitalSignObservationTemplateId" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMDrERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.23.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMFgQBpMEeSd5OoVIuDNwg" name="SystolicBloodPressureMoodCode" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMFgQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMGuYBpMEeSd5OoVIuDNwg" name="SystolicBloodPressureCode" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMGuYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8480-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMIjkBpMEeSd5OoVIuDNwg" name="VitalSignObservationEffectiveTime" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMIjkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMJKoBpMEeSd5OoVIuDNwg" name="SystolicBloodPressureValue" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMJKoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PIqGIIzrEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l4xA4IzrEeGnhceUMXltng" name="DiastolicBloodPressure">
      <ownedComment xmi:id="_henXECUhEeOPwcQY2yBpiA">
        <body>Patient's diastolic blood pressure</body>
      </ownedComment>
      <ownedRule xmi:id="_YMKYwRpMEeSd5OoVIuDNwg" name="VitalSignObservationTemplateId" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMKYwhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.144')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMLm4BpMEeSd5OoVIuDNwg" name="DiastolicBloodPressureMoodCode" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMLm4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMM1ABpMEeSd5OoVIuDNwg" name="DiastolicBloodPressureCode" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMM1ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8462-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMOqMBpMEeSd5OoVIuDNwg" name="DiastolicBloodPressureEffectiveTime" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMOqMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMPRQBpMEeSd5OoVIuDNwg" name="DiastolicBloodPressureValue" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMPRQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mVKpAIzrEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__qJ7UIzrEeGnhceUMXltng" name="HeartRate">
      <ownedComment xmi:id="_xxZa8CwlEeOaIuM51LdlNw">
        <body>Measurement of rate of heartbeat</body>
      </ownedComment>
      <ownedRule xmi:id="_YMQfYRpMEeSd5OoVIuDNwg" name="VitalSignObservationTemplateId" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMQfYhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.145')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMRtgBpMEeSd5OoVIuDNwg" name="HeartRateMoodCode" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMRtgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMUw0BpMEeSd5OoVIuDNwg" name="HeartRateCodeP" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMUw0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMS7oBpMEeSd5OoVIuDNwg" name="HeartRateCode" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMS7oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8867-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMWmABpMEeSd5OoVIuDNwg" name="HeartRateEffectiveTime" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMWmARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMXNEBpMEeSd5OoVIuDNwg" name="HeartRateValue" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMXNERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_AA5nYIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q7VIMIzsEeGnhceUMXltng" name="RespiratoryRate">
      <ownedComment xmi:id="_Z50VMCz-EeO0H9tywllqaQ">
        <body>Patient's rate of respiration</body>
      </ownedComment>
      <ownedRule xmi:id="_YMYbMRpMEeSd5OoVIuDNwg" name="VitalSignObservationTemplateId" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMYbMhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.146')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMZpUBpMEeSd5OoVIuDNwg" name="RespiratoryRateMoodCode" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMaQYBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMbegBpMEeSd5OoVIuDNwg" name="RespiratoryRateCode" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMbegRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9279-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMcsoBpMEeSd5OoVIuDNwg" name="RespiratoryRateEffectiveTime" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMcsoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMd6wBpMEeSd5OoVIuDNwg" name="RespiratoryRateValue" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMd6wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RN10gIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_koRz8IzsEeGnhceUMXltng" name="BodyTemperature">
      <ownedComment xmi:id="_f3y8gCUcEeOPwcQY2yBpiA">
        <body>Patient's body temperature</body>
      </ownedComment>
      <ownedRule xmi:id="_YMfI4RpMEeSd5OoVIuDNwg" name="VitalSignObservationTemplateId" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMfI4hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.176')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMgXABpMEeSd5OoVIuDNwg" name="BodyTemperatureMoodCode" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMgXARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMiMMBpMEeSd5OoVIuDNwg" name="BodyTemperatureCode" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMiMMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '8310-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMjaUBpMEeSd5OoVIuDNwg" name="BodyTemperatureEffectiveTime" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMjaURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMkocBpMEeSd5OoVIuDNwg" name="BodyTemperatureValue" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMkocRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_k_CuIIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_01XGkIzsEeGnhceUMXltng" name="OxygenSaturation">
      <ownedComment xmi:id="_lLDzQCwqEeOaIuM51LdlNw">
        <body>Measurement of the patient's arterial blood oxygen saturation</body>
      </ownedComment>
      <ownedRule xmi:id="_YMlPgBpMEeSd5OoVIuDNwg" name="OxygenSaturationTemplateId" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMl2kBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.177')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMnEsBpMEeSd5OoVIuDNwg" name="OxygenSaturationMoodCode" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMnEsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMoS0BpMEeSd5OoVIuDNwg" name="OxygenSaturationCode" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMoS0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '2708-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMqIABpMEeSd5OoVIuDNwg" name="OxygenSaturationValue" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMqIARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1HuB4IzsEeGnhceUMXltng">
        <ownedComment xmi:id="_HYL4YIjvEeKx3P4dlW9OSw">
          <body>NEMSIS Trace: EVitals.01</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MjD2kJ-nEeGorI3CPDW2ww" name="ProtocolAgeCategory">
      <ownedComment xmi:id="_eQ6jMCz8EeO0H9tywllqaQ">
        <body>Age range for which a protocol is appropriate</body>
      </ownedComment>
      <ownedRule xmi:id="_YMrWIBpMEeSd5OoVIuDNwg" name="ProtocolAgeCategoryTemplateId" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMrWIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.149')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMskQBpMEeSd5OoVIuDNwg" name="ProtocolAgeCategoryMoodCode" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMskQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMvnkBpMEeSd5OoVIuDNwg" name="ProtocolAgeCategoryCodeP" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMvnkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMtyYBpMEeSd5OoVIuDNwg" name="ProtocolAgeCategoryCode" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMtyYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67538-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMxcwBpMEeSd5OoVIuDNwg" name="ProtocolAgeCategoryValue" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMxcwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17571-3' or value.code = 'LA17572-1' or value.code = 'LA17573-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YMzR8BpMEeSd5OoVIuDNwg" name="ProtocolAgeCategoryValueP" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YMzR8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NEM0wJ-nEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lC10cJ-BEeGw9ZRnaFfEZQ" name="DispatchLocationName">
      <ownedComment xmi:id="_qIr5UCUjEeOEaIF_MBGm_A">
        <body>The name or ID of the dispatch center requesting service from the EMS agency</body>
      </ownedComment>
      <ownedRule xmi:id="_YM0gEBpMEeSd5OoVIuDNwg" name="DispatchLocationNameTemplateId" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YM1HIBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.150')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YM1uMBpMEeSd5OoVIuDNwg" name="DispatchLocationNameMoodCode" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YM2VQBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YM3jYBpMEeSd5OoVIuDNwg" name="DispatchLocationNameCode" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YM3jYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '69466-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YM4xgBpMEeSd5OoVIuDNwg" name="DispatchLocationNameValue" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YM4xgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_loHrwJ-BEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sPMP9p-NEeGorI3CPDW2ww" name="DispatchLocationLatitude">
      <ownedComment xmi:id="_8r6O0CUhEeOPwcQY2yBpiA">
        <body>Latitude of the unit when dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="_YM5_oBpMEeSd5OoVIuDNwg" name="DispatchLocationLatitudeTemplateId" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YM5_oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.151')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YM7NwBpMEeSd5OoVIuDNwg" name="DispatchLocationLatitudeMoodCode" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YM7NwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YM8b4BpMEeSd5OoVIuDNwg" name="DispatchLocationLatitudeCode" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YM8b4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '52002-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YM-REBpMEeSd5OoVIuDNwg" name="DispatchLocationLatitudeValue" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YM-RERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sPMP-J-NEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UGLMFZ-OEeGorI3CPDW2ww" name="DispatchLocationLongitude">
      <ownedComment xmi:id="_-ACJICUhEeOPwcQY2yBpiA">
        <body>Longitude of the unit when dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="_YM-4IBpMEeSd5OoVIuDNwg" name="DispatchLocationLongitudeTemplateId" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YM-4IRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.152')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNAGQBpMEeSd5OoVIuDNwg" name="DispatchLocationLongitudeMoodCode" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNAGQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNBUYBpMEeSd5OoVIuDNwg" name="DispatchLocationLongitudeCode" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNBUYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '52003-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNDJkBpMEeSd5OoVIuDNwg" name="DispatchLocationLongitudeValue" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNDJkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UGLMF5-OEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9i0HIJ99EeGw9ZRnaFfEZQ" name="DispatchDelay">
      <ownedComment xmi:id="_tSspICUhEeOPwcQY2yBpiA">
        <body>Causes of delay to the dispatch process</body>
      </ownedComment>
      <ownedRule xmi:id="_YNDwoBpMEeSd5OoVIuDNwg" name="DispatchDelayTemplateId" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNDwoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.153')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNE-wBpMEeSd5OoVIuDNwg" name="DispatchDelayMoodCode" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNE-wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNICEBpMEeSd5OoVIuDNwg" name="DispatchDelayCodeP" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNICERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNGM4BpMEeSd5OoVIuDNwg" name="DispatchDelayCode" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNGz8BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67480-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNKeUBpMEeSd5OoVIuDNwg" name="DispatchDelayValue" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNKeURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17183-7' or value.code = 'LA17579-6' or value.code = 'LA17580-4' or value.code = 'LA17581-2' or value.code = 'LA17582-0' or value.code = 'LA17584-6' or value.code = 'LA18081-2' or value.code = 'LA7540-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNLscBpMEeSd5OoVIuDNwg" name="DispatchDelayValueP" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNLscRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-MO3kJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pCK4JZ9-EeGw9ZRnaFfEZQ" name="ResponseDelay">
      <ownedComment xmi:id="_zuEKECUhEeOPwcQY2yBpiA">
        <body>Causes of delay to the response process</body>
      </ownedComment>
      <ownedRule xmi:id="_YNNhoBpMEeSd5OoVIuDNwg" name="ResponseDelayTemplateId" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNNhoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.154')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNOvwBpMEeSd5OoVIuDNwg" name="ResponseDelayMoodCode" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNOvwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNRzEBpMEeSd5OoVIuDNwg" name="ResponseDelayCodeP" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNRzERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNP94BpMEeSd5OoVIuDNwg" name="ResponseDelayCode" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNP94RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67557-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNUPUBpMEeSd5OoVIuDNwg" name="ResponseDelayValue" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNUPURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17583-8' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNWEgBpMEeSd5OoVIuDNwg" name="ResponseDelayValueP" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNWEgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pCK4J59-EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Vo79JZ9_EeGw9ZRnaFfEZQ" name="SceneDelay">
      <ownedComment xmi:id="_2ucx4CUhEeOPwcQY2yBpiA">
        <body>Causes of delay at the event scene</body>
      </ownedComment>
      <ownedRule xmi:id="_YNXSoBpMEeSd5OoVIuDNwg" name="SceneDelayTemplateId" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNXSoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.155')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNYgwBpMEeSd5OoVIuDNwg" name="SceneDelayMoodCode" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNYgwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNbkEBpMEeSd5OoVIuDNwg" name="SceneDelayCodeP" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNbkERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNaV8BpMEeSd5OoVIuDNwg" name="SceneDelayCode" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNaV8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67558-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNeAUBpMEeSd5OoVIuDNwg" name="SceneDelayValue" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNeAURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA17595-2' or value.code = 'LA17596-0' or value.code = 'LA17597-8' or value.code = 'LA18081-2' or value.code = 'LA18272-7' or value.code = 'LA18273-5' or value.code = 'LA18275-0' or value.code = 'LA18276-8' or value.code = 'LA7540-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNfOcBpMEeSd5OoVIuDNwg" name="SceneDelayValueP" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNfOcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Vo79J59_EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4qwhJZ9_EeGw9ZRnaFfEZQ" name="TransportDelay">
      <ownedComment xmi:id="_4UTVYCUhEeOPwcQY2yBpiA">
        <body>Causes of delay to the transport process</body>
      </ownedComment>
      <ownedRule xmi:id="_YNhDoBpMEeSd5OoVIuDNwg" name="TransportDelayTemplateId" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNhDoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.156')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNiRwBpMEeSd5OoVIuDNwg" name="TransportDelayMoodCode" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNiRwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNlVEBpMEeSd5OoVIuDNwg" name="TransportDelayCodeP" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNlVERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNjf4BpMEeSd5OoVIuDNwg" name="TransportDelayCode" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNjf4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67559-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNnxUBpMEeSd5OoVIuDNwg" name="TransportDelayValue" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNnxURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17589-5' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNo_cBpMEeSd5OoVIuDNwg" name="TransportDelayValueP" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNo_cRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4qwhJ59_EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_e7LIFZ-AEeGw9ZRnaFfEZQ" name="TurnaroundDelay">
      <ownedComment xmi:id="_UhvOgC0EEeO0H9tywllqaQ">
        <body>Causes of delay to the unit turnaround process</body>
      </ownedComment>
      <ownedRule xmi:id="_YNq0oBpMEeSd5OoVIuDNwg" name="TurnaroundDelayTemplateId" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNq0oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.157')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNsCwBpMEeSd5OoVIuDNwg" name="TurnaroundDelayMoodCode" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNsCwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNvGEBpMEeSd5OoVIuDNwg" name="TurnaroundDelayCodeP" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNvGERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNtQ4BpMEeSd5OoVIuDNwg" name="TurnaroundDelayCode" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNtQ4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67560-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNw7QBpMEeSd5OoVIuDNwg" name="TurnaroundDelayValue" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNw7QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17587-9' or value.code = 'LA17590-3' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA17598-6' or value.code = 'LA17599-4' or value.code = 'LA17600-0' or value.code = 'LA17601-8' or value.code = 'LA17602-6' or value.code = 'LA17603-4' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA7497-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YNywcBpMEeSd5OoVIuDNwg" name="TurnaroundDelayValueP" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YNywcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_e7LIF5-AEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WduLAIzyEeGnhceUMXltng" name="GlasgowTotal">
      <ownedComment xmi:id="_s_-6YCwlEeOaIuM51LdlNw">
        <body>Total Glasgow Coma score</body>
      </ownedComment>
      <ownedRule xmi:id="_YN0loBpMEeSd5OoVIuDNwg" name="GlasgowTotalTemplateId" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YN0loRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.158')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YN1zwBpMEeSd5OoVIuDNwg" name="GlasgowTotalMoodCode" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YN1zwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YN43EBpMEeSd5OoVIuDNwg" name="GlasgowTotalCodeP" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YN43ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YN3B4BpMEeSd5OoVIuDNwg" name="GlasgowTotalCode" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YN3B4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9269-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YN6sQBpMEeSd5OoVIuDNwg" name="GlasgowTotalValue" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YN6sQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W9FnkIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZLqX8IzyEeGnhceUMXltng" name="GlasgowQualifier">
      <ownedComment xmi:id="_r3oyQCwlEeOaIuM51LdlNw">
        <body>Qualifier for Glasgow Coma score</body>
      </ownedComment>
      <ownedRule xmi:id="_YN7TUBpMEeSd5OoVIuDNwg" name="GlasgowQualifierTemplateId" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YN7TURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.159')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YN8hcBpMEeSd5OoVIuDNwg" name="GlasgowQualifierMoodCode" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YN8hcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YN_kwBpMEeSd5OoVIuDNwg" name="GlasgowQualifierCodeP" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YN_kwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YN9vkBpMEeSd5OoVIuDNwg" name="GlasgowQualifierCode" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YN9vkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '55285-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOBZ8BpMEeSd5OoVIuDNwg" name="GlasgowQualifierValue" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOBZ8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17102-7' or value.code = 'LA17103-5' or value.code = 'LA17104-3' or value.code = 'LA17105-0' or value.code = 'LA17106-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YODPIBpMEeSd5OoVIuDNwg" name="GlasgowQualifierValueP" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YODPIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZhmywIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bxS9cIzyEeGnhceUMXltng" name="GlasgowEye">
      <ownedComment xmi:id="_pHDhACwlEeOaIuM51LdlNw">
        <body>Glasgow Coma eye score</body>
      </ownedComment>
      <ownedRule xmi:id="_YOEdQBpMEeSd5OoVIuDNwg" name="GlasgowEyeTemplateId" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOEdQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.160')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOFrYBpMEeSd5OoVIuDNwg" name="GlasgowEyeMoodCode" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOFrYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOIusBpMEeSd5OoVIuDNwg" name="GlasgowEyeCodeP" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOIusRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOG5gBpMEeSd5OoVIuDNwg" name="GlasgowEyeCode" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOG5gRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9267-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOJ80BpMEeSd5OoVIuDNwg" name="GlasgowEyeValue" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOJ80RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cBadEIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eKfCYIzyEeGnhceUMXltng" name="GlasgowMotor">
      <ownedComment xmi:id="_qBPRUCwlEeOaIuM51LdlNw">
        <body>Glasgow Coma motor score</body>
      </ownedComment>
      <ownedRule xmi:id="_YOKj4BpMEeSd5OoVIuDNwg" name="GlasgowMotorTemplateId" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOKj4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.176')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOMZEBpMEeSd5OoVIuDNwg" name="GlasgowMotorMoodCode" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOMZERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOPcYBpMEeSd5OoVIuDNwg" name="GlasgowMotorCodeP" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOPcYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YONnMBpMEeSd5OoVIuDNwg" name="GlasgowMotorCode" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YONnMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9268-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOQqgBpMEeSd5OoVIuDNwg" name="GlasgowMotorValue" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOQqgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ee3-AIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_hLJ-EIzyEeGnhceUMXltng" name="GlasgowVerbal">
      <ownedComment xmi:id="_tuwr8CwlEeOaIuM51LdlNw">
        <body>Glasgow Coma verbal score</body>
      </ownedComment>
      <ownedRule xmi:id="_YOR4oBpMEeSd5OoVIuDNwg" name="GlasgowVerbalTemplateId" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOR4oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.162')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOTGwBpMEeSd5OoVIuDNwg" name="GlasgowVerbalMoodCode" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOTGwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOWKEBpMEeSd5OoVIuDNwg" name="GlasgowVerbalCodeP" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOWKERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOUU4BpMEeSd5OoVIuDNwg" name="GlasgowVerbalCode" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOUU4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '9270-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOXYMBpMEeSd5OoVIuDNwg" name="GlasgowVerbalValue" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOXYMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hhtc4IzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9koR4IzuEeGnhceUMXltng" name="StrokeScore">
      <ownedComment xmi:id="_s1zzMC0AEeO0H9tywllqaQ">
        <body>Result of a stroke scale instrument</body>
      </ownedComment>
      <ownedRule xmi:id="_YOX_QBpMEeSd5OoVIuDNwg" name="StrokeScoreTemplateId" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOX_QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.163')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOZNYBpMEeSd5OoVIuDNwg" name="StrokeScoreMoodCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOZNYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOcQsBpMEeSd5OoVIuDNwg" name="StrokeScoreCodeP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOcQsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YObCkBpMEeSd5OoVIuDNwg" name="StrokeScoreCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YObCkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67520-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOeF4BpMEeSd5OoVIuDNwg" name="StrokeScoreEffectiveTime" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOeF4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOf7EBpMEeSd5OoVIuDNwg" name="StrokeScoreValue" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOf7ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17109-2' or value.code = 'LA6576-8' or value.code = 'LA6577-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOhJMBpMEeSd5OoVIuDNwg" name="StrokeScoreValueP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOhJMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOjlcBpMEeSd5OoVIuDNwg" name="StrokeScoreMethodCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOjlcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17110-0' or value.code = 'LA17111-8' or value.code = 'LA17112-6' or value.code = 'LA17113-4' or value.code = 'LA18300-6' or value.code = 'LA3774-2')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOkzkBpMEeSd5OoVIuDNwg" name="StrokeScoreMethodCodeP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOkzkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_95ZoAIzuEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lnVLQIzuEeGnhceUMXltng" name="PainScore">
      <ownedComment xmi:id="_pTSM4CwqEeOaIuM51LdlNw">
        <body>Assessment of the patient's level of pain</body>
      </ownedComment>
      <ownedRule xmi:id="_YOmowBpMEeSd5OoVIuDNwg" name="PainScoreTemplateId" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOmowRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.164')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOn24BpMEeSd5OoVIuDNwg" name="PainScoreMoodCode" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOn24RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOpFABpMEeSd5OoVIuDNwg" name="PainScoreCode" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOpFARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '56840-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOq6MBpMEeSd5OoVIuDNwg" name="PainScoreEffectiveTime" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOq6MRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_l6CE0IzuEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xgaHgIztEeGnhceUMXltng" name="LevelOfResponsiveness">
      <ownedComment xmi:id="_F3rh0CwoEeOaIuM51LdlNw">
        <body>Patient's responsiveness</body>
      </ownedComment>
      <ownedRule xmi:id="_YOrhQBpMEeSd5OoVIuDNwg" name="LevelOfResponsivenessTemplateId" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOrhQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.165')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOsvYBpMEeSd5OoVIuDNwg" name="LevelOfResponsivenessMoodCode" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOsvYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOvysBpMEeSd5OoVIuDNwg" name="LevelOfResponsivenessCodeP" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOvysRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOukkBpMEeSd5OoVIuDNwg" name="LevelOfResponsivenessCode" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOukkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67775-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOxn4BpMEeSd5OoVIuDNwg" name="LevelOfResponsivenessEffectiveTime" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOxn4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YOy2ABpMEeSd5OoVIuDNwg" name="LevelOfResponsivenessValue" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YOy2ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17107-6' or value.code = 'LA17108-4' or value.code = 'LA9340-6' or value.code = 'LA9343-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YO0rMBpMEeSd5OoVIuDNwg" name="LevelOfResponsivenessValueP" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YO0rMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_x_aXsIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jmDsgIztEeGnhceUMXltng" name="BloodGlucose">
      <ownedComment xmi:id="_eQx7YCUcEeOPwcQY2yBpiA">
        <body>Patient blood glucose measured as a mass concentration</body>
      </ownedComment>
      <ownedRule xmi:id="_YO15UBpMEeSd5OoVIuDNwg" name="BloodGlucoseTemplateId" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YO15URpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.166')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YO3HcBpMEeSd5OoVIuDNwg" name="BloodGlucoseMoodCode" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YO3HcRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YO6KwBpMEeSd5OoVIuDNwg" name="BloodGlucoseCodeP" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YO6KwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YO48oBpMEeSd5OoVIuDNwg" name="BloodGlucoseCode" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YO48oRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '2339-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YO7_8BpMEeSd5OoVIuDNwg" name="BloodGlucoseEffectiveTime" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YO7_8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YO8nABpMEeSd5OoVIuDNwg" name="BloodGlucoseValue" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YO8nARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j7fJ8IztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WFit0IztEeGnhceUMXltng" name="CarbonMonoxide">
      <ownedComment xmi:id="_QoenwCUeEeOPwcQY2yBpiA">
        <body>Measurement of carbon monoxide in patient's bloodstream</body>
      </ownedComment>
      <ownedRule xmi:id="_YO91IBpMEeSd5OoVIuDNwg" name="CarbonMonoxideTemplateId" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YO91IRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.167')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YO_DQBpMEeSd5OoVIuDNwg" name="CarbonMonoxideMoodCode" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YO_DQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPCGkBpMEeSd5OoVIuDNwg" name="CarbonMonoxideCodeP" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPCGkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPARYBpMEeSd5OoVIuDNwg" name="CarbonMonoxideCode" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPARYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '20563-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPD7wBpMEeSd5OoVIuDNwg" name="CarbonMonoxideEffectiveTime" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPD7wRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPEi0BpMEeSd5OoVIuDNwg" name="CarbonMonoxideValue" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPEi0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WP_qUIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IU2lIIztEeGnhceUMXltng" name="CarbonDioxide">
      <ownedComment xmi:id="_AsUigCUdEeOPwcQY2yBpiA">
        <body>Measurement of carbon dioxide in patient's bloodstream</body>
      </ownedComment>
      <ownedRule xmi:id="_YPFw8BpMEeSd5OoVIuDNwg" name="CarbonDioxideTemplateId" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPFw8RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.168')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPG_EBpMEeSd5OoVIuDNwg" name="CarbonDioxideMoodCode" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPG_ERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPKCYBpMEeSd5OoVIuDNwg" name="CarbonDioxideCodeP" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPKCYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPINMBpMEeSd5OoVIuDNwg" name="CarbonDioxideCode" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPINMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '19889-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPLQgBpMEeSd5OoVIuDNwg" name="CarbonDioxideEffectiveTime" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPLQgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPMeoBpMEeSd5OoVIuDNwg" name="CarbonDioxideValue" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPMeoRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_I1iQUIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uMxJUIzpEeGnhceUMXltng" name="CardiacRhythm">
      <ownedComment xmi:id="_7qXZoCUeEeOPwcQY2yBpiA">
        <body>Patient's cardiac rhythm classification</body>
      </ownedComment>
      <ownedRule xmi:id="_X8K08RpMEeSd5OoVIuDNwg" name="CardiacRhythmParticipant1" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X8K08hpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPNFsBpMEeSd5OoVIuDNwg" name="CardiacRhythmTemplateId" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPNswBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.169')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPOT0BpMEeSd5OoVIuDNwg" name="CardiacRhythmMoodCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPOT0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPRXIBpMEeSd5OoVIuDNwg" name="CardiacRhythmCodeP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPRXIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPQJABpMEeSd5OoVIuDNwg" name="CardiacRhythmCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPQJARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67519-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPTMUBpMEeSd5OoVIuDNwg" name="CardiacRhythmEffectiveTime" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPTMURpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPVBgBpMEeSd5OoVIuDNwg" name="CardiacRhythmValue" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPVBgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = element.oclAsType(datatypes::CD) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12904-1' or value.code = 'LA17059-9' or value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17083-9' or value.code = 'LA17084-7' or value.code = 'LA17085-4' or value.code = 'LA17086-2' or value.code = 'LA17087-0' or value.code = 'LA17088-8' or value.code = 'LA17089-6' or value.code = 'LA17090-4' or value.code = 'LA17091-2' or value.code = 'LA17093-8' or value.code = 'LA17094-6' or value.code = 'LA17095-3' or value.code = 'LA17096-1' or value.code = 'LA17097-9' or value.code = 'LA17394-0' or value.code = 'LA17099-5' or value.code = 'LA17100-1' or value.code = 'LA17101-9' or value.code = 'LA17703-2' or value.code = 'LA17704-0' or value.code = 'LA17705-7' or value.code = 'LA17706-5' or value.code = 'LA17708-1' or value.code = 'LA17718-0' or value.code = 'LA18205-7' or value.code = 'LA18206-5' or value.code = 'LA18207-3' or value.code = 'LA18208-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPW2sBpMEeSd5OoVIuDNwg" name="CardiacRhythmValueP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPW2sRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPYr4BpMEeSd5OoVIuDNwg" name="CardiacRhythmMethodCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPYr4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and 
let value : datatypes::CE = element.oclAsType(datatypes::CE) in 
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18682-7' or value.code = 'LA18683-5' or value.code = 'LA18684-3' or value.code = 'LA18685-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPZ6ABpMEeSd5OoVIuDNwg" name="CardiacRhythmMethodCodeP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPZ6ARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_unG78IzpEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RNfAcIzyEeGnhceUMXltng" name="GlasgowComaScoreOrganizer">
      <ownedComment xmi:id="_nTuiMCwlEeOaIuM51LdlNw">
        <body>Collection of Glasgow Coma Score observations</body>
      </ownedComment>
      <ownedRule xmi:id="_X42bMBpMEeSd5OoVIuDNwg" name="GlasgowComaScoreOrganizerGlasgowEye" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X42bMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowEye))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X43pVRpMEeSd5OoVIuDNwg" name="GlasgowComaScoreOrganizerGlasgowMotor" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X43pVhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowMotor))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X443dBpMEeSd5OoVIuDNwg" name="GlasgowComaScoreOrganizerGlasgowQualifier" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X443dRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowQualifier))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X46FkBpMEeSd5OoVIuDNwg" name="GlasgowComaScoreOrganizerGlasgowTotal" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X46FkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowTotal))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_X46spRpMEeSd5OoVIuDNwg" name="GlasgowComaScoreOrganizerGlasgowVerbal" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_X46sphpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowVerbal))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPfZkBpMEeSd5OoVIuDNwg" name="GlasgowComaScoreOrganizerTemplateId" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPgAoBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.170')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPhOwBpMEeSd5OoVIuDNwg" name="GlasgowComaScoreOrganizerEffectiveTime" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPhOwRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SdkvUIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_X43pUBpMEeSd5OoVIuDNwg" name="getGlasgowEye" bodyCondition="_X43pUxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X43pUxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X43pUBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X43pVBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowEye))->asSequence()->any(true).oclAsType(emspcr::GlasgowEye)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X43pURpMEeSd5OoVIuDNwg" type="_bxS9cIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X43pUhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X44QYBpMEeSd5OoVIuDNwg" name="getGlasgowMotor" bodyCondition="_X443chpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X443chpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X44QYBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X443cxpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowMotor))->asSequence()->any(true).oclAsType(emspcr::GlasgowMotor)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X443cBpMEeSd5OoVIuDNwg" type="_eKfCYIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X443cRpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X45egBpMEeSd5OoVIuDNwg" name="getGlasgowQualifier" bodyCondition="_X45egxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X45egxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X45egBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X45ehBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowQualifier))->asSequence()->any(true).oclAsType(emspcr::GlasgowQualifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X45egRpMEeSd5OoVIuDNwg" type="_ZLqX8IzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X45eghpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X46soBpMEeSd5OoVIuDNwg" name="getGlasgowTotal" bodyCondition="_X46soxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X46soxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X46soBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X46spBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowTotal))->asSequence()->any(true).oclAsType(emspcr::GlasgowTotal)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X46soRpMEeSd5OoVIuDNwg" type="_WduLAIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X46sohpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_X47TsBpMEeSd5OoVIuDNwg" name="getGlasgowVerbal" bodyCondition="_X47TsxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_X47TsxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_X47TsBpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_X476wBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowVerbal))->asSequence()->any(true).oclAsType(emspcr::GlasgowVerbal)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_X47TsRpMEeSd5OoVIuDNwg" type="_hLJ-EIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_X47TshpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_k-cIsJ-ZEeGorI3CPDW2ww" name="ResponseBeginningOdometerReading">
      <ownedComment xmi:id="_cuI28Cz-EeO0H9tywllqaQ">
        <body>Odometer reading for the EMS vehicle when dispatched</body>
      </ownedComment>
      <ownedRule xmi:id="_YPic4BpMEeSd5OoVIuDNwg" name="ResponseBeginningOdometerReadingTemplateId" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPic4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.171')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPkSEBpMEeSd5OoVIuDNwg" name="ResponseBeginningOdometerReadingMoodCode" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPkSERpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPnVYBpMEeSd5OoVIuDNwg" name="ResponseBeginningOdometerReadingCodeP" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPnVYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPlgMBpMEeSd5OoVIuDNwg" name="ResponseBeginningOdometerReadingCode" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPlgMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67484-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPojgBpMEeSd5OoVIuDNwg" name="ResponseBeginningOdometerReadingValue" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPojgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lfuQ0J-ZEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ib1zpZ-aEeGorI3CPDW2ww" name="ResponseOnSceneOdometerReading">
      <ownedComment xmi:id="_-NJkYCz-EeO0H9tywllqaQ">
        <body>Odometer reading for the EMS vehicle when the unit arrives at the patient</body>
      </ownedComment>
      <ownedRule xmi:id="_YPpKkBpMEeSd5OoVIuDNwg" name="ResponseOnSceneOdometerReadingTemplateId" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPpKkRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.172')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPqYsBpMEeSd5OoVIuDNwg" name="ResponseOnSceneOdometerReadingMoodCode" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPqYsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPtcABpMEeSd5OoVIuDNwg" name="ResponseOnSceneOdometerReadingCodeP" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPtcARpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPsN4BpMEeSd5OoVIuDNwg" name="ResponseOnSceneOdometerReadingCode" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPsN4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67485-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPuqIBpMEeSd5OoVIuDNwg" name="ResponseOnSceneOdometerReadingValue" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPuqIRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ib1zp5-aEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7kghNZ-aEeGorI3CPDW2ww" name="ResponseDestinationOdometerReading">
      <ownedComment xmi:id="_ozRcwCz-EeO0H9tywllqaQ">
        <body>Odometer reading for the EMS vehicle at patient destination</body>
      </ownedComment>
      <ownedRule xmi:id="_YPv4QBpMEeSd5OoVIuDNwg" name="ResponseDestinationOdometerReadingTemplateId" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPv4QRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.173')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPxGYBpMEeSd5OoVIuDNwg" name="ResponseDestinationOdometerReadingMoodCode" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPxGYRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YP0JsBpMEeSd5OoVIuDNwg" name="ResponseDestinationOdometerReadingCodeP" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP0JsRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YPyUgBpMEeSd5OoVIuDNwg" name="ResponseDestinationOdometerReadingCode" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YPyUgRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67486-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YP1X0BpMEeSd5OoVIuDNwg" name="ResponseDestinationOdometerReadingValue" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP1X0RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7kghN5-aEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TCM6tZ-bEeGorI3CPDW2ww" name="ResponseEndingOdometerReading">
      <ownedComment xmi:id="_sAY5ACz-EeO0H9tywllqaQ">
        <body>Odometer reading for the EMS vehicle when call is complete</body>
      </ownedComment>
      <ownedRule xmi:id="_YP1-4BpMEeSd5OoVIuDNwg" name="ResponseEndingOdometerReadingTemplateId" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP2l8BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.174')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YP3NABpMEeSd5OoVIuDNwg" name="ResponseEndingOdometerReadingMoodCode" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP30EBpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YP63YBpMEeSd5OoVIuDNwg" name="ResponseEndingOdometerReadingCodeP" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP63YRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YP5CMBpMEeSd5OoVIuDNwg" name="ResponseEndingOdometerReadingCode" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP5CMRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and 
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in 
value.code = '67487-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YP8skBpMEeSd5OoVIuDNwg" name="ResponseEndingOdometerReadingValue" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP8skRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TCM6t5-bEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_p9u6QKi8EeO8-7uoZJhFOw" name="NonDrugAllergyOrganizerActuallyDreg">
      <ownedRule xmi:id="_YP_v4BpMEeSd5OoVIuDNwg" name="NonDrugAllergyOrganizerActuallyDregEMSDrugAllergy" constrainedElement="_p9u6QKi8EeO8-7uoZJhFOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YP_v4RpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.act.oclIsUndefined() and component.act.oclIsKindOf(emspcr::EMSDrugAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YQAW8xpMEeSd5OoVIuDNwg" name="NonDrugAllergyOrganizerActuallyDregExistenceOfDrugAllergyObservation" constrainedElement="_p9u6QKi8EeO8-7uoZJhFOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQAW9BpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::ExistenceOfDrugAllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_p-GtsKi8EeO8-7uoZJhFOw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_YP_v4xpMEeSd5OoVIuDNwg" name="getEMSDrugAllergies" bodyCondition="_YQAW8RpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YQAW8RpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YP_v4xpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQAW8hpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(emspcr::EMSDrugAllergy)).oclAsType(emspcr::EMSDrugAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YP_v5BpMEeSd5OoVIuDNwg" type="_3C3WwMWqEeK3RfDsHamIUQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YQAW8BpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YQA-ABpMEeSd5OoVIuDNwg" name="getExistenceOfDrugAllergyObservation" bodyCondition="_YQA-AxpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YQA-AxpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YQA-ABpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQA-BBpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfDrugAllergyObservation))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfDrugAllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YQA-ARpMEeSd5OoVIuDNwg" type="_iWVVYIy-EeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YQA-AhpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JHDCEK9UEeO6uquZyO0R2Q" name="EMSDrugAllergyOrganizer">
      <ownedRule xmi:id="_YQCMJRpMEeSd5OoVIuDNwg" name="EMSDrugAllergyOrganizerEMSDrugAllergy" constrainedElement="_JHDCEK9UEeO6uquZyO0R2Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQCMJhpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.act.oclIsUndefined() and component.act.oclIsKindOf(emspcr::EMSDrugAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_YQDaQBpMEeSd5OoVIuDNwg" name="EMSDrugAllergyOrganizerExistenceOfDrugAllergyObservation" constrainedElement="_JHDCEK9UEeO6uquZyO0R2Q">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQDaQRpMEeSd5OoVIuDNwg">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::ExistenceOfDrugAllergyObservation))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KNE2AK9UEeO6uquZyO0R2Q">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_YQCzMRpMEeSd5OoVIuDNwg" name="getEMSDrugAllergies" bodyCondition="_YQCzNBpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YQCzNBpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YQCzMRpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQCzNRpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(emspcr::EMSDrugAllergy)).oclAsType(emspcr::EMSDrugAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YQCzMhpMEeSd5OoVIuDNwg" type="_3C3WwMWqEeK3RfDsHamIUQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YQCzMxpMEeSd5OoVIuDNwg" value="*"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_YQDaQhpMEeSd5OoVIuDNwg" name="getExistenceOfDrugAllergyObservation" bodyCondition="_YQDaRRpMEeSd5OoVIuDNwg" isQuery="true">
        <ownedRule xmi:id="_YQDaRRpMEeSd5OoVIuDNwg" name="body" constrainedElement="_YQDaQhpMEeSd5OoVIuDNwg">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_YQDaRhpMEeSd5OoVIuDNwg">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfDrugAllergyObservation))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfDrugAllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_YQDaQxpMEeSd5OoVIuDNwg" type="_iWVVYIy-EeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_YQDaRBpMEeSd5OoVIuDNwg" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_xpUkQ2eQEeGtXKebdWh3hg">
      <eAnnotations xmi:id="_xpUkRGeQEeGtXKebdWh3hg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_X1rLYBpMEeSd5OoVIuDNwg">
      <eAnnotations xmi:id="_X1rycBpMEeSd5OoVIuDNwg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_xs1LQGeQEeGtXKebdWh3hg" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="emspcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/emspcr" packageName="emspcr" prefix="emspcr" base_Namespace="_xpUkQGeQEeGtXKebdWh3hg"/>
  <CDA:CDATemplate xmi:id="_xs3ngGeQEeGtXKebdWh3hg" base_Class="_xs1LQWeQEeGtXKebdWh3hg" templateId="2.16.840.1.113883.17.3.10.2" assigningAuthorityName=""/>
  <CDA:PropertyValidation xmi:id="_0IF3U2eREeGtXKebdWh3hg">
    <ruleId>CONF:5261</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_0pgRkGetEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_NkgWkGeuEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_iLBHkGeuEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_TAlPsGlZEeG4boS-IbG8Zw"/>
  <CDA:PropertyValidation xmi:id="_TblwsGlZEeG4boS-IbG8Zw"/>
  <CDA:PropertyValidation xmi:id="_x7o9MGlaEeG4boS-IbG8Zw"/>
  <CDA:AssociationValidation xmi:id="_j-FAsGlbEeG4boS-IbG8Zw">
    <ruleId>CONF:10078</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_QfqDsGlcEeG4boS-IbG8Zw">
    <ruleId>CONF:10079</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_WJI_QGldEeG4boS-IbG8Zw" base_Class="_S-YTcGldEeG4boS-IbG8Zw" templateId="2.16.840.1.113883.17.3.10.1.5"/>
  <CDA:ValueSetConstraint xmi:id="_-lMo8HSCEeGa4IXs2ghZEw" identifier="2.16.840.1.113883.1.11.1" name="HL7 AdministrativeGenderCode"/>
  <CDA:CDATemplate xmi:id="_EFDesHSVEeGa4IXs2ghZEw" base_Class="_3dRe0HSUEeGa4IXs2ghZEw" templateId="2.16.840.1.113883.17.3.10.1.17"/>
  <CDA:PropertyValidation xmi:id="_djjwEns9EeGs2I-Db78R9w">
    <ruleId>CONF:5372</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_djk-MHs9EeGs2I-Db78R9w">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol.model/model/consol-vocab.uml#_2SbZNRSVEeGGzu7fmW9pXw"/>
  </CDA:ValueSetConstraint>
  <CDA:PropertyValidation xmi:id="_-DZQw3tDEeGs2I-Db78R9w">
    <ruleId>CONF:9406</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_uyNtAHwEEeGW3cDolvqrTA" base_Class="_pIikMHwDEeGW3cDolvqrTA" templateId="2.16.840.1.113883.17.3.10.1.14"/>
  <CDA:CDATemplate xmi:id="_19lEcH9aEeGht55Sz1eBOw" base_Class="_i4C-AH9aEeGht55Sz1eBOw" templateId="2.16.840.1.113883.17.3.10.1.12"/>
  <CDA:CDATemplate xmi:id="_vwwq8H9cEeGht55Sz1eBOw" base_Class="_nSjIgH9cEeGht55Sz1eBOw" templateId="2.16.840.1.113883.17.3.10.1.13"/>
  <CDA:CDATemplate xmi:id="_1HUMgIzcEeGnhceUMXltng" base_Class="_VtMvAIzcEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.19"/>
  <CDA:CDATemplate xmi:id="_9vjNoIzcEeGnhceUMXltng" base_Class="_aDO5AIcnEeGqF6qfYwLiQw" templateId="2.16.840.1.113883.17.3.10.1.15"/>
  <CDA:CDATemplate xmi:id="_4-4sQIziEeGnhceUMXltng" base_Class="_1XH7YIziEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.22"/>
  <CDA:CDATemplate xmi:id="_LBR30JoiEeG_FLcaRgAa7g" base_Class="_6223oJohEeG_FLcaRgAa7g" templateId="2.16.840.1.113883.17.3.10.1.20"/>
  <CDA:CDATemplate xmi:id="_pLL-wJovEeG_FLcaRgAa7g" base_Class="_c7crcJovEeG_FLcaRgAa7g" templateId="2.16.840.1.113883.17.3.10.1.18"/>
  <CDA:CDATemplate xmi:id="_i8pMAJunEeGzXI65shd6Fw" base_Class="_4QFw8JumEeGzXI65shd6Fw" templateId="2.16.840.1.113883.17.3.10.1.21"/>
  <CDA:CDATemplate xmi:id="_bIdNwJ9nEeGw9ZRnaFfEZQ" base_Class="_OV4TIJ9nEeGw9ZRnaFfEZQ" templateId="2.16.840.1.113883.17.3.10.1.2"/>
  <CDA:CDATemplate xmi:id="_YpfO8J99EeGw9ZRnaFfEZQ" base_Class="_LI7M8J99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.113883.17.3.10.1.3"/>
  <CDA:CDATemplate xmi:id="_uS5Z0J-dEeGorI3CPDW2ww" base_Class="_i-lM8J-dEeGorI3CPDW2ww" templateId="2.16.840.1.113883.17.3.10.1.4"/>
  <CDA:CDATemplate xmi:id="_7_pEYJ-iEeGorI3CPDW2ww" base_Class="_iDmQYJ9mEeGw9ZRnaFfEZQ" templateId="2.16.840.1.113883.17.3.10.1.1"/>
  <CDA:CDATemplate xmi:id="_BeU6oJ-jEeGorI3CPDW2ww" base_Class="_jCzkkIzkEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.23"/>
  <CDA:CDATemplate xmi:id="_UM3A4J-kEeGorI3CPDW2ww" base_Class="_GGotEJ-kEeGorI3CPDW2ww" templateId="2.16.840.1.113883.17.3.10.1.6"/>
  <CDA:CDATemplate xmi:id="_eW46AJ-mEeGorI3CPDW2ww" base_Class="_aK7P4J-mEeGorI3CPDW2ww" templateId="2.16.840.1.113883.17.3.10.1.7"/>
  <CDA:CDATemplate xmi:id="_oGeIAKK3EeGOxth0BgV-QA" base_Class="_h3A8IKK3EeGOxth0BgV-QA" templateId="2.16.840.1.113883.17.3.10.1.8"/>
  <CDA:CDATemplate xmi:id="_34FNUKK8EeGOxth0BgV-QA" base_Class="_olqMIKK8EeGOxth0BgV-QA" templateId="2.16.840.1.113883.17.3.10.1.9"/>
  <CDA:PropertyValidation xmi:id="_0bvFMKhBEeG79fAvHk6H4g" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_HtwEIKxCEeGLnrdLmr5TaQ" base_Class="_ClVY0KxCEeGLnrdLmr5TaQ" templateId="2.16.840.1.113883.17.3.10.1.10"/>
  <CDA:PropertyValidation xmi:id="_pu1gUMHtEeGOXu0EprM3pw">
    <ruleId>CONF:10869</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_yQRV4MHtEeGOXu0EprM3pw" templateId="2.16.840.1.1133883.17.3.10.1.24" assigningAuthorityName="NEMSIS"/>
  <CDA:AssociationValidation xmi:id="_ZLZtwMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10083</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ZndXoMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10089</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oEqchcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10256</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2iuzIMH5EeGOXu0EprM3pw">
    <ruleId>CONF:10833</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_GV2tpcH6EeGOXu0EprM3pw">
    <ruleId>CONF:10246</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_hEsHwMH6EeGOXu0EprM3pw">
    <ruleId>CONF:10791</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_iyCaZcH6EeGOXu0EprM3pw">
    <ruleId>CONF:10800</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_k-MI5cH6EeGOXu0EprM3pw">
    <ruleId>CONF:10815</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_p0Fg1cH6EeGOXu0EprM3pw">
    <ruleId>CONF:10795</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_sW_idcH6EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10767</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_yFAYtMH7EeGOXu0EprM3pw">
    <ruleId>CONF:10137</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LJi0NMH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10562</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MDkMdMH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10567</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_kuzXJcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10663</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_lnVhpcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10667</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_m84YRcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10672</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rkQzFcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10682</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_tSqOlcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10692</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wESotcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10687</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_08REQMH8EeGOXu0EprM3pw">
    <ruleId>CONF:10677</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Tk-dhMH-EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10444</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fgB6RcH-EeGOXu0EprM3pw">
    <ruleId>CONF:10704</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_gGtfxcH-EeGOXu0EprM3pw">
    <ruleId>CONF:10708</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConformsTo xmi:id="_-U6TQMF7EeGgQc6fI_Esjg" base_Generalization="_17RuAJ99EeGw9ZRnaFfEZQ">
    <ruleId>CONF:10582</ruleId>
  </CDA:ConformsTo>
  <CDA:AssociationValidation xmi:id="_cFsE5cH_EeGOXu0EprM3pw">
    <ruleId>CONF:10581</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_eZ3uBcH_EeGOXu0EprM3pw">
    <ruleId>CONF:10625</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fnFIBcH_EeGOXu0EprM3pw">
    <ruleId>CONF:10646</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Dcu8tcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10740</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Fkaa4MIAEeGOXu0EprM3pw">
    <ruleId>CONF:10748</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Q0x74MIAEeGOXu0EprM3pw">
    <ruleId>CONF:10717</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_SsZk1cIAEeGOXu0EprM3pw">
    <ruleId>CONF:10727</ruleId>
  </CDA:AssociationValidation>
  <CDA:PropertyValidation xmi:id="_3PX-IJoiEeG_FLcaRgAa7g">
    <ruleId>CONF:10347</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_kFhMxcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10346</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_lAJB8MIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10417</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_mH2Q4MIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10422</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_nimXpcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10426</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oaiFNMIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10430</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_pZK3tcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10434</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1xTAQMcJEeGjDJAyT0XW9Q">
    <ruleId>CONF:10211</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_o9Dm0McLEeGjDJAyT0XW9Q">
    <ruleId>CONF:10223</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1ws4cMcLEeGjDJAyT0XW9Q">
    <ruleId>CONF:10226</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_AzzZgMcMEeGjDJAyT0XW9Q" severity="INFO">
    <ruleId>CONF:10229</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oGU2UMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10105</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rbYtoMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10113</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_tClU8McPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10116</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_vkEaQMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10119</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_xmj2cMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10122</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_y7-xQMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10125</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_0eLj0McPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10128</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2uXdwMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10131</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_SD3AgMcWEeGjDJAyT0XW9Q">
    <ruleId>CONF:10805</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XSxVYMcWEeGjDJAyT0XW9Q" severity="INFO">
    <ruleId>CONF:10810</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_HAbYwClBEeKLlLf58wNPLQ" base_Class="_xCcE0Iy7EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.98"/>
  <CDA:AssociationValidation xmi:id="_JU580ClBEeKLlLf58wNPLQ"/>
  <CDA:AssociationValidation xmi:id="_o4WhUCpFEeK1vdrMJapHMg"/>
  <CDA:AssociationValidation xmi:id="_qbdS0CpFEeK1vdrMJapHMg"/>
  <CDA:AssociationValidation xmi:id="_blUNsDZpEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_oLbZoDZpEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_ZlnNgDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_abZmADZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_cDm58DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_dpWIsDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_eTpp8DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_e_yXMDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_fpGZ8DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_gTy8wDZuEeKLbZOfNmD-hA"/>
  <CDA:CDATemplate xmi:id="_v3VFQETWEeKEm6ZghGGtvw" base_Class="_Orea4IzrEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.23.1"/>
  <CDA:AssociationValidation xmi:id="_oj1QMETbEeKEm6ZghGGtvw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_l9si8Fg4EeK-i8RB1gvLUA" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_vXaGAMcJEeGjDJAyT0XW9Q">
    <ruleId>CONF:10205</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_uaz1sMcbEeGjDJAyT0XW9Q" code="67850-8" displayName="Drug allergy">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:10206</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:CodeSystemConstraint xmi:id="_l3drEIzEEeGnhceUMXltng" code="106190000" displayName="allergy">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_ya6aMCWsEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:10207</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_Hok2AFtWEeKHUos6g4FwAg" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_K5wT8IjqEeKx3P4dlW9OSw" severity="INFO">
    <ruleId>CONF:7304</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_Au9-IIjuEeKx3P4dlW9OSw" base_Class="_koRz8IzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.176"/>
  <CDA:CDATemplate xmi:id="_DkbvYIjuEeKx3P4dlW9OSw" base_Class="_01XGkIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.177"/>
  <CDA:ConformsTo xmi:id="_Hwu7QIjvEeKx3P4dlW9OSw" severity="INFO" base_Generalization="_1HuB4IzsEeGnhceUMXltng">
    <ruleId>CONF:11280</ruleId>
  </CDA:ConformsTo>
  <CDA:AssociationValidation xmi:id="_UXD80LMkEeKNbt70lHd2Eg"/>
  <CDA:AssociationValidation xmi:id="_Y-A50LMkEeKNbt70lHd2Eg" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_GE89K8OxEeKN86BM1f2PZA"/>
  <CDA:AssociationValidation xmi:id="_BTWusMO0EeKGkaWx5djLmw" severity="INFO"/>
  <CDA:CDATemplate xmi:id="_glO-wETXEeKEm6ZghGGtvw" base_Class="_GGe8UJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.178"/>
  <CDA:CDATemplate xmi:id="_pTz4cETXEeKEm6ZghGGtvw" base_Class="_bFfQYJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.180"/>
  <CDA:AssociationValidation xmi:id="_BlWooMWsEeK3RfDsHamIUQ"/>
  <CDA:AssociationValidation xmi:id="_c_2E0MlPEeK2gbjCtOEivw"/>
  <CDA:CDATemplate xmi:id="_IqZVstICEeKRzPZKi7WbBQ" base_Class="_Qlqj8HwGEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.27" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVtdICEeKRzPZKi7WbBQ" base_Class="_JnfD8IzoEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.28" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVuNICEeKRzPZKi7WbBQ" base_Class="_Dq57UIzpEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.29" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVu9ICEeKRzPZKi7WbBQ" base_Class="_F-GKoLMNEeKNbt70lHd2Eg" templateId="2.16.840.1.1133883.17.3.10.1.30" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVvtICEeKRzPZKi7WbBQ" base_Class="_Dfaa4J-eEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.31" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVwdICEeKRzPZKi7WbBQ" base_Class="_j3YnxZ-eEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.32" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVxNICEeKRzPZKi7WbBQ" base_Class="_nv-0gp-fEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.33" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVx9ICEeKRzPZKi7WbBQ" base_Class="_EagUtZ-fEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.34" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVytICEeKRzPZKi7WbBQ" base_Class="_cm1D5Z-hEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.35" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVzdICEeKRzPZKi7WbBQ" base_Class="_083apZ-hEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.36" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV0NICEeKRzPZKi7WbBQ" base_Class="_Q4zL9Z-gEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.37" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV09ICEeKRzPZKi7WbBQ" base_Class="_1u74sKxCEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.38" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV1tICEeKRzPZKi7WbBQ" base_Class="_JKerYKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.39" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV2dICEeKRzPZKi7WbBQ" base_Class="_UyaX0KxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.40" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV3NICEeKRzPZKi7WbBQ" base_Class="_iGh5QKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.41" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV39ICEeKRzPZKi7WbBQ" base_Class="_yt7JUKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.42" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV4tICEeKRzPZKi7WbBQ" base_Class="_6w124KxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.43" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV5dICEeKRzPZKi7WbBQ" base_Class="_DaIA4KxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.44" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV6NICEeKRzPZKi7WbBQ" base_Class="_KrhK4KxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.45" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV69ICEeKRzPZKi7WbBQ" base_Class="_UFgZEKxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.46" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV7tICEeKRzPZKi7WbBQ" base_Class="_xCcE0Iy7EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.47" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV8dICEeKRzPZKi7WbBQ" base_Class="_3C3WwMWqEeK3RfDsHamIUQ" templateId="2.16.840.1.1133883.17.3.10.1.48" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV9NICEeKRzPZKi7WbBQ" base_Class="_CFApcIzGEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.49" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV99ICEeKRzPZKi7WbBQ" base_Class="_KEFo8HSVEeGa4IXs2ghZEw" templateId="2.16.840.1.1133883.17.3.10.1.50" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV-tICEeKRzPZKi7WbBQ" base_Class="_aS16EHSWEeGa4IXs2ghZEw" templateId="2.16.840.1.1133883.17.3.10.1.51" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV_dICEeKRzPZKi7WbBQ" base_Class="_lTHsIIcXEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.52" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWANICEeKRzPZKi7WbBQ" base_Class="_vuraIIcZEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.53" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWA9ICEeKRzPZKi7WbBQ" base_Class="_nvhVwIcaEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.54" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWBtICEeKRzPZKi7WbBQ" base_Class="_zMwjMIccEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.55" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWCdICEeKRzPZKi7WbBQ" base_Class="_bsVJUIcdEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.56" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWDNICEeKRzPZKi7WbBQ" base_Class="_2lRhsIcdEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.57" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWD9ICEeKRzPZKi7WbBQ" base_Class="_auKbcIceEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.58" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWEtICEeKRzPZKi7WbBQ" base_Class="_wKL4IIceEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.59" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWFdICEeKRzPZKi7WbBQ" base_Class="_W_uRYIzdEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.60" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWGNICEeKRzPZKi7WbBQ" base_Class="_5XgZ4IzdEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.61" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWHtICEeKRzPZKi7WbBQ" base_Class="_KEZzkKg-EeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.63" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWIdICEeKRzPZKi7WbBQ" base_Class="_7nP0MKhCEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.64" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWJNICEeKRzPZKi7WbBQ" base_Class="_0C-8EKhDEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.65" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWJ9ICEeKRzPZKi7WbBQ" base_Class="_KOxo0KhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.66" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWKtICEeKRzPZKi7WbBQ" base_Class="_g5iJgKhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.67" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWLdICEeKRzPZKi7WbBQ" base_Class="_0mPksKhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.68" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWMNICEeKRzPZKi7WbBQ" base_Class="_NZgqAKhFEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.69" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWM9ICEeKRzPZKi7WbBQ" base_Class="_Mr964IzjEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.70" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWNtICEeKRzPZKi7WbBQ" base_Class="_oJHzkIzjEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.71" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWOdICEeKRzPZKi7WbBQ" base_Class="_5JQlAJovEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.72" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWPNICEeKRzPZKi7WbBQ" base_Class="_46UUAJ9nEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.73" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWP9ICEeKRzPZKi7WbBQ" base_Class="__LltsJ97EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.74" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWQtICEeKRzPZKi7WbBQ" base_Class="_sUm-oIcnEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.75" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWRdICEeKRzPZKi7WbBQ" base_Class="_RZqlsIcoEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.76" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWSNICEeKRzPZKi7WbBQ" base_Class="_mwn8MIcoEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.77" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWS9ICEeKRzPZKi7WbBQ" base_Class="_zbYvIJoiEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.78" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWTtICEeKRzPZKi7WbBQ" base_Class="_sW8QcJosEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.79" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWUdICEeKRzPZKi7WbBQ" base_Class="_S1I0sJotEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.80" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWVNICEeKRzPZKi7WbBQ" base_Class="_rhjrIJotEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.81" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWV9ICEeKRzPZKi7WbBQ" base_Class="_HuCH8JouEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.82" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWWtICEeKRzPZKi7WbBQ" base_Class="_qlUP4JouEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.83" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWXdICEeKRzPZKi7WbBQ" base_Class="_Ox86UKK4EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.84" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWYNICEeKRzPZKi7WbBQ" base_Class="_JNrkAKK5EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.85" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWY9ICEeKRzPZKi7WbBQ" base_Class="_wPLCkKK5EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.86" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWZtICEeKRzPZKi7WbBQ" base_Class="_E-SEAKK8EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.87" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWadICEeKRzPZKi7WbBQ" base_Class="_ayUKMMk3EeK2gbjCtOEivw" templateId="2.16.840.1.1133883.17.3.10.1.88" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWbNICEeKRzPZKi7WbBQ" base_Class="_p4XEAJ-kEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.89" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWb9ICEeKRzPZKi7WbBQ" base_Class="_gU4tMJ-lEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.90" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWctICEeKRzPZKi7WbBQ" base_Class="_rNkl4GleEeG4boS-IbG8Zw" templateId="2.16.840.1.1133883.17.3.10.1.91" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWddICEeKRzPZKi7WbBQ" base_Class="_To2-YGleEeG4boS-IbG8Zw" templateId="2.16.840.1.1133883.17.3.10.1.92" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWeNICEeKRzPZKi7WbBQ" base_Class="_rDpggp-mEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.93" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWe9ICEeKRzPZKi7WbBQ" base_Class="_n-zaBZ-nEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.94" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWftICEeKRzPZKi7WbBQ" base_Class="_0padgJ99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.95" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWgdICEeKRzPZKi7WbBQ" base_Class="_MiN-UJ-BEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.96" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWhNICEeKRzPZKi7WbBQ" base_Class="_yVviAJ-OEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.97" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWh9ICEeKRzPZKi7WbBQ" base_Class="_l_V6IJ-bEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.182" assigningAuthorityName="NEMSIS"/>
  <CDA:AssociationValidation xmi:id="_yi4e8MHkEeGspaMtPNX3NA">
    <ruleId>CONF:10081</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_VesLcMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10082</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ojtiRcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10198</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_pM63VcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10199</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_p4qjBcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10136</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_q0w-5cHzEeGOXu0EprM3pw">
    <ruleId>CONF:10220</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rJl_ZcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10221</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rgp0hcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10222</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_soEIhcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10560</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_s_kplcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10561</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_uSS1tcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10656</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_u7NP1cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10657</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wIap1cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10658</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wvi7RcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10659</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_xhO25cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10660</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_zJ-WVcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10095</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_zZTLxcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10096</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_znR9ZcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10097</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_z28KBcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10098</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_0xftxcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10099</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1F4CVcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10100</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1YBiRcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10101</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1tSAlcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10102</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2CyWhcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10103</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2Xmv9cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10104</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_BqfcoMH4EeGOXu0EprM3pw">
    <ruleId>CONF:10255</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_DpAXxcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10244</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_H0NM5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10832</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LDJ1JcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10759</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LofW1cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10761</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_L8cNlcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10762</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MLUXFcH4EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10763</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Mb04RcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10764</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MwEC5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10765</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_NBUyBcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10766</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ODYE5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10736</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_OqDqZcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10738</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_PjoWtcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10577</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_TIJmVcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10578</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Tq0OhcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10579</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_UGxxwMH4EeGOXu0EprM3pw">
    <ruleId>CONF:10580</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_U-IQhcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10714</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Vljc5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10716</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XbNW9cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10340</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XpMIlcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10341</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_X2SJZcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10342</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YEasBcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10343</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YUoSRcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10344</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YlcVdcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10345</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ZJ5GVcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10702</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Zd-f9cH4EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10703</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_atHzpcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10062</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_a-YixcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10063</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_biripcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10443</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fpb_1cH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10661</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_gBvvkMlPEeK2gbjCtOEivw"/>
  <CDA:CDATemplate xmi:id="_X2C4wJusEeGzXI65shd6Fw" base_Class="_K8JK8JuoEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.181"/>
  <CDA:CDATemplate xmi:id="_tffVAJ0uEeGmCMENP40rhA" base_Class="_lVl1sJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.179"/>
  <CDA:CDATemplate xmi:id="_t4AbcJ4aEeGzbp5zEFWdWg" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg" templateId="2.16.840.1.1133883.17.3.10.1.175"/>
  <CDA:CDATemplate xmi:id="_5wW8wIzzEeGnhceUMXltng" base_Class="_eKfCYIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.176"/>
  <CDA:CDATemplate xmi:id="_sP30sNOUEeKU4pFWxuU9dw" base_Class="_iWVVYIy-EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.102" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30sdOUEeKU4pFWxuU9dw" base_Class="_t_nG0IzYEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.103" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30stOUEeKU4pFWxuU9dw" base_Class="_UleZUIzZEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.104" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30s9OUEeKU4pFWxuU9dw" base_Class="_E9ekgJoxEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.105" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30tNOUEeKU4pFWxuU9dw" base_Class="_j9MusJsmEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.106" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30tdOUEeKU4pFWxuU9dw" base_Class="_Qzy_cJsnEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.107" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ttOUEeKU4pFWxuU9dw" base_Class="_pVW0QJsoEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.108" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30t9OUEeKU4pFWxuU9dw" base_Class="_GGe8UJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.109" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30uNOUEeKU4pFWxuU9dw" base_Class="_whTHIJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.110" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30udOUEeKU4pFWxuU9dw" base_Class="_bFfQYJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.111" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30utOUEeKU4pFWxuU9dw" base_Class="_QU_s0JolEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.112" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30u9OUEeKU4pFWxuU9dw" base_Class="_6VcsUJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.113" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30vNOUEeKU4pFWxuU9dw" base_Class="_oE3bcJolEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.114" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30vdOUEeKU4pFWxuU9dw" base_Class="_CiNc8JomEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.115" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30vtOUEeKU4pFWxuU9dw" base_Class="_Zjp_UJomEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.116" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30v9OUEeKU4pFWxuU9dw" base_Class="_WMI_AJooEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.117" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30wNOUEeKU4pFWxuU9dw" base_Class="_O7rMoJopEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.118" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30wdOUEeKU4pFWxuU9dw" base_Class="_pgmc0JopEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.119" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30wtOUEeKU4pFWxuU9dw" base_Class="_NK7yUJoqEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.120" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30w9OUEeKU4pFWxuU9dw" base_Class="_rsLuIJoqEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.121" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30xNOUEeKU4pFWxuU9dw" base_Class="_EyfEMJorEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.122" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30xdOUEeKU4pFWxuU9dw" base_Class="_A65pUHwIEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.123" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30xtOUEeKU4pFWxuU9dw" base_Class="_tcPw4HwKEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.124" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30x9OUEeKU4pFWxuU9dw" base_Class="_QFoU0HwNEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.125" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30yNOUEeKU4pFWxuU9dw" base_Class="_qsAEkHwPEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.126" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ydOUEeKU4pFWxuU9dw" base_Class="_Ia0ocHwREeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.127" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ytOUEeKU4pFWxuU9dw" base_Class="_gnLCQHwSEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.128" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30y9OUEeKU4pFWxuU9dw" base_Class="_khXxgHwTEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.129" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30zNOUEeKU4pFWxuU9dw" base_Class="_edpw0JuqEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.130" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30zdOUEeKU4pFWxuU9dw" base_Class="_0IBaIJ0sEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.131" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ztOUEeKU4pFWxuU9dw" base_Class="_iZg7kJ0tEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.132" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30z9OUEeKU4pFWxuU9dw" base_Class="_D32TkJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.133" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP300NOUEeKU4pFWxuU9dw" base_Class="_lVl1sJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.134" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP300dOUEeKU4pFWxuU9dw" base_Class="_Z3nhEJ0vEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.135" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP300tOUEeKU4pFWxuU9dw" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg" templateId="2.16.840.1.1133883.17.3.10.1.136" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3009OUEeKU4pFWxuU9dw" base_Class="_N8t6kFhWEeK-i8RB1gvLUA" templateId="2.16.840.1.1133883.17.3.10.1.137" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP301NOUEeKU4pFWxuU9dw" base_Class="_4ZsacKg_EeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.138" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP301dOUEeKU4pFWxuU9dw" base_Class="_g93MsKhAEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.139" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP301tOUEeKU4pFWxuU9dw" base_Class="_YMy4UKhDEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.140" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3019OUEeKU4pFWxuU9dw" base_Class="_gBOGYJorEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.141" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP302dOUEeKU4pFWxuU9dw" base_Class="_Orea4IzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.143" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP302tOUEeKU4pFWxuU9dw" base_Class="_l4xA4IzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.144" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3029OUEeKU4pFWxuU9dw" base_Class="__qJ7UIzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.145" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP303NOUEeKU4pFWxuU9dw" base_Class="_Q7VIMIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.146" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP303dOUEeKU4pFWxuU9dw" base_Class="_koRz8IzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.147" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP303tOUEeKU4pFWxuU9dw" base_Class="_01XGkIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.148" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3039OUEeKU4pFWxuU9dw" base_Class="_MjD2kJ-nEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.149" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP304NOUEeKU4pFWxuU9dw" base_Class="_lC10cJ-BEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.150" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP304dOUEeKU4pFWxuU9dw" base_Class="_sPMP9p-NEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.151" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP304tOUEeKU4pFWxuU9dw" base_Class="_UGLMFZ-OEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.152" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3049OUEeKU4pFWxuU9dw" base_Class="_9i0HIJ99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.153" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP305NOUEeKU4pFWxuU9dw" base_Class="_pCK4JZ9-EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.154" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP305dOUEeKU4pFWxuU9dw" base_Class="_Vo79JZ9_EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.155" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP305tOUEeKU4pFWxuU9dw" base_Class="_4qwhJZ9_EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.156" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3059OUEeKU4pFWxuU9dw" base_Class="_e7LIFZ-AEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.157" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP306NOUEeKU4pFWxuU9dw" base_Class="_WduLAIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.158" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP306dOUEeKU4pFWxuU9dw" base_Class="_ZLqX8IzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.159" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP306tOUEeKU4pFWxuU9dw" base_Class="_bxS9cIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.160" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3069OUEeKU4pFWxuU9dw" base_Class="_eKfCYIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.161" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP307NOUEeKU4pFWxuU9dw" base_Class="_hLJ-EIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.162" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP307dOUEeKU4pFWxuU9dw" base_Class="_9koR4IzuEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.163" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP307tOUEeKU4pFWxuU9dw" base_Class="_lnVLQIzuEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.164" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3079OUEeKU4pFWxuU9dw" base_Class="_xgaHgIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.165" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP308NOUEeKU4pFWxuU9dw" base_Class="_jmDsgIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.166" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP308dOUEeKU4pFWxuU9dw" base_Class="_WFit0IztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.167" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP308tOUEeKU4pFWxuU9dw" base_Class="_IU2lIIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.168" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3089OUEeKU4pFWxuU9dw" base_Class="_uMxJUIzpEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.169" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP309NOUEeKU4pFWxuU9dw" base_Class="_RNfAcIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.170" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP309dOUEeKU4pFWxuU9dw" base_Class="_k-cIsJ-ZEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.171" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP309tOUEeKU4pFWxuU9dw" base_Class="_ib1zpZ-aEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.172" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3099OUEeKU4pFWxuU9dw" base_Class="_7kghNZ-aEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.173" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30-NOUEeKU4pFWxuU9dw" base_Class="_TCM6tZ-bEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.174" assigningAuthorityName="NEMSIS"/>
  <Ecore:EPackage xmi:id="_X2TdgBpMEeSd5OoVIuDNwg" base_Package="_xpUkQGeQEeGtXKebdWh3hg" packageName="emspcr" nsPrefix="emspcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/emspcr" basePackage="org.openhealthtools.mdht.uml.cda" prefix="emspcr">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.emspcr'</annotation>
  </Ecore:EPackage>
  <CDA:ConformsTo xmi:id="_X2UEkBpMEeSd5OoVIuDNwg" base_Generalization="_xs3ngWeQEeGtXKebdWh3hg"/>
  <Ecore:EClass xmi:id="_X2UroRpMEeSd5OoVIuDNwg" base_Class="_xs1LQWeQEeGtXKebdWh3hg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GeneralHeaderConstraintsTemplateId PatientCareReportClassCode PatientCareReportMoodCode GeneralHeaderConstraintsId PatientCareReportCode PatientCareReportCodeP GeneralHeaderConstraintsTitle PatientCareReportConfidentialityCode PatientCareReportRecordTarget PatientCareReportCurrentMedication PatientCareReportAllergiesAndAdverseReactionsSection PatientCareReportPastMedicalHistorySection PatientCareReportSocialHistorySection PatientCareReportPhysicalAssessmentSection PatientCareReportProceduresPerformedSection PatientCareReportPatientCareNarrativeSection PatientCareReportSceneSection GeneralHeaderConstraintsComponentOf PatientCareReportDispatchSection PatientCareReportPersonnelAdverseEventSection PatientCareReportProtocolSection PatientCareReportResponseSection PatientCareReportSituationSection PatientCareReportVitalSignsSection PatientCareReportAuthorParticipation GeneralHeaderConstraintsCustodian PatientCareReportDocumentationOf PatientCareReportParticipant PatientCareReportInjuryIncidentDescriptionSection' templateId.root='2.16.840.1.113883.17.3.10.2' classCode='DOCCLIN' moodCode='EVN' code.code='67796-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS patient care report - version 3.1 Document NEMSIS' constraints.validation.dependOn.PatientCareReportCode='PatientCareReportCodeP' title.mixed='EMS Patient Care Report' confidentialityCode.codeSystem='2.16.840.1.113883.5.25' confidentialityCode.codeSystemName='ConfidentialityCode' constraints.validation.info='GeneralHeaderConstraintsVersionNumber PatientCareReportCardiacArrestEvent PatientCareReportMedicationsAdministeredSection PatientCareReportDispositionSection PatientCareReportTimesSection PatientCareReportRelatedDocument' constraints.validation.warning='PatientCareReportAdvanceDirectives PatientCareReportEMSBillingSection'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTarget constraints.validation.error='PatientCareReportRecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTargetPatientRole constraints.validation.error='PatientCareReportRecordTargetPatientRoleAddr PatientCareReportRecordTargetPatientRoleId PatientCareReportRecordTargetPatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTargetPatientRolePatient constraints.validation.warning='PatientCareReportRecordTargetPatientRolePatientBirthTime PatientCareReportRecordTargetPatientRolePatientName' ethnicGroupCode.codeSystem='2.16.840.1.113883.6.238' ethnicGroupCode.codeSystemName='Race and Ethnicity - CDC' constraints.validation.error='PatientCareReportRecordTargetPatientRolePatientEthnicGroupCode PatientCareReportRecordTargetPatientRolePatientRaceCode PatientCareReportRecordTargetPatientRolePatientAdministrativeGenderCode' constraints.validation.info='PatientCareReportRecordTargetPatientRolePatientEthnicGroupCodeP PatientCareReportRecordTargetPatientRolePatientSDTCRaceCode' constraints.validation.dependOn.PatientCareReportRecordTargetPatientRolePatientEthnicGroupCode='PatientCareReportRecordTargetPatientRolePatientEthnicGroupCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipation constraints.validation.error='PatientCareReportAuthorParticipationAuthorRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRole constraints.validation.error='PatientCareReportAuthorParticipationAuthorRoleId PatientCareReportAuthorParticipationAuthorRoleAddr PatientCareReportAuthorParticipationAuthorRoleTelecom' constraints.validation.info='PatientCareReportAuthorParticipationAuthorRoleHumanAuthor PatientCareReportAuthorParticipationAuthorRoleAuthoringDevice'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRoleHumanAuthor constraints.validation.error='PatientCareReportAuthorParticipationAuthorRoleHumanAuthorName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRoleAuthoringDevice constraints.validation.error='GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceManufacturerModelName GeneralHeaderConstraintsAuthorAssignedAuthorAuthoringDeviceSoftwareName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationship typeCode='COMP' constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipTypeCode PatientCareReportEncompassingEncounterRelationshipEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounter constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEncompassingEncounterEffectiveTime PatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocation constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacility'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacility constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacilityId PatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacilityCode PatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacilityPlace' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacilityPlace classCode='PLC' constraints.validation.error='PatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacilityPlaceClassCode' constraints.validation.info='PatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacilityPlaceName PatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacilityPlaceAddr'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipation constraints.validation.error='PatientCareReportCustodianParticipationCustodianRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipationCustodianRole constraints.validation.error='PatientCareReportCustodianParticipationCustodianRoleCustodian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipationCustodianRoleCustodian constraints.validation.error='PatientCareReportCustodianParticipationCustodianRoleCustodianAddr PatientCareReportCustodianParticipationCustodianRoleCustodianId PatientCareReportCustodianParticipationCustodianRoleCustodianName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipation constraints.validation.error='PatientCareReportServiceEventParticipationServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEvent code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PatientCareReportServiceEventParticipationServiceEventCode PatientCareReportServiceEventParticipationServiceEventId PatientCareReportServiceEventParticipationServiceEventPerformerParticipation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipation functionCode.codeSystem='2.16.840.1.113883.6.1' functionCode.codeSystemName='LOINC' constraints.validation.error='PatientCareReportServiceEventParticipationServiceEventPerformerParticipationFunctionCode PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRole code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleCode PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleCodeP PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleId PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleAddr PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRoleTelecom PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRolePerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRolePerformer constraints.validation.error='PatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRolePerformerName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportParentDocumentRelationship typeCode='RPLC' constraints.validation.info='PatientCareReportParentDocumentRelationshipParentDocument'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportParentDocumentRelationshipParentDocument constraints.validation.error='PatientCareReportParentDocumentRelationshipParentDocumentId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipation typeCode='DST' constraints.validation.error='PatientCareReportDestinationParticipantParticipationTypeCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipationDestinationRole constraints.validation.warning='PatientCareReportDestinationParticipantParticipationDestinationRoleAddr' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PatientCareReportDestinationParticipantParticipationDestinationRoleCode' classCode='SDLOC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipationDestinationRoleDestinationOrganization constraints.validation.error='PatientCareReportDestinationParticipantParticipationDestinationRoleDestinationOrganizationName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X3hlghpMEeSd5OoVIuDNwg" base_Class="_VtMvAIzcEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSPastMedicalHistorySectionTemplateId EMSPastMedicalHistorySectionCode EMSPastMedicalHistorySectionCodeP EMSPastMedicalHistorySectionTitle EMSPastMedicalHistorySectionText EMSPastMedicalHistorySectionExistenceOfHistoryOfCondition EMSPastMedicalHistorySectionHistoryOfCondition' templateId.root='2.16.840.1.113883.17.3.10.1.19' code.code='67842-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS past medical history Narrative NEMSIS' title.mixed='EMS Past Medical History'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X3qvcBpMEeSd5OoVIuDNwg" base_Class="_S-YTcGldEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSBillingSectionTemplateId EMSBillingSectionCode EMSBillingSectionTitle EMSBillingSectionText EMSBillingSectionBillingCondition EMSBillingSectionLevelOfServiceObservation' templateId.root='2.16.840.1.113883.17.3.10.1.5' code.code='67659-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS billing Narrative NEMSIS' title.mixed='EMS Billing Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X3wPAhpMEeSd5OoVIuDNwg" base_Class="_3dRe0HSUEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSInjuryIncidentDescriptionSectionTemplateId EMSInjuryIncidentDescriptionSectionCode EMSInjuryIncidentDescriptionSectionTitle EMSInjuryIncidentDescriptionSectionText EMSInjuryIncidentDescriptionSectionInjuryCauseCategory EMSInjuryIncidentDescriptionSectionInjuryMechanism EMSInjuryIncidentDescriptionSectionTraumaCenterCriteria EMSInjuryIncidentDescriptionSectionInjuryRiskFactor EMSInjuryIncidentDescriptionSectionVehicleImpactArea EMSInjuryIncidentDescriptionSectionPatientLocationInVehicle EMSInjuryIncidentDescriptionSectionVehicleOccupantSafetyEquipment EMSInjuryIncidentDescriptionSectionAirbagDeploymentStatus EMSInjuryIncidentDescriptionSectionHeightOfFall EMSInjuryIncidentDescriptionSectionDisasterType' templateId.root='2.16.840.1.113883.17.3.10.1.17' code.code='67800-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS injury incident description Narrative NEMSIS' title.mixed='Injury Incident Description Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X36AARpMEeSd5OoVIuDNwg" base_Class="_pIikMHwDEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSCardiacArrestEventSectionTemplateId EMSCardiacArrestEventSectionCode EMSCardiacArrestEventSectionTitle EMSCardiacArrestEventSectionText EMSCardiacArrestEventSectionCardiacArrestExistence' templateId.root='2.16.840.1.113883.17.3.10.1.14' code.code='67799-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS cardiac arrest event Narrative NEMSIS' title.mixed='EMS Cardiac Arrest Event'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X4BUwBpMEeSd5OoVIuDNwg" base_Class="_Qlqj8HwGEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='CardiacArrestCauseRelationship CardiacArrestInformantParticipation CardiacArrestPriorCPRRelationship CardiacArrestPriorAEDRelationship CardiacArrestSpontaneousCirculationRelationship CardiacArrestDestinationRhythmRelationship CardiacArrestArrestRhythmRelationship' constraints.validation.error='CardiacArrestTemplateId CardiacArrestMoodCode CardiacArrestCode CardiacArrestValue' templateId.root='2.16.840.1.1133883.17.3.10.1.27' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='ASSERTION' constraints.validation.warning='CardiacArrestNegationInd CardiacArrestEffectiveTime' value.code='410429000' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='cardiac arrest'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestCardiacArrestTimingRelationship typeCode='SUBJ' constraints.validation.error='CardiacArrestCardiacArrestTimingRelationshipTypeCode CardiacArrestCardiacArrestTimingRelationshipInversionInd' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestCardiacArrestCauseRelationship constraints.validation.error='CardiacArrestCardiacArrestCauseRelationshipCardiacArrestCause CardiacArrestCardiacArrestCauseRelationshipTypeCode CardiacArrestCardiacArrestCauseRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestCardiacArrestInformantParticipation constraints.validation.error='CardiacArrestCardiacArrestInformantParticipationCardiacArrestInformantRole CardiacArrestCardiacArrestInformantParticipationTypeCode' typeCode='INF'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestCardiacArrestInformantParticipationCardiacArrestInformantRole classCode='AGNT' constraints.validation.error='CardiacArrestCardiacArrestInformantParticipationCardiacArrestInformantRoleClassCode CardiacArrestCardiacArrestInformantParticipationCardiacArrestInformantRoleCode' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestPriorCPRRelationship constraints.validation.error='CardiacArrestPriorCPRRelationshipPriorCPR CardiacArrestPriorCPRRelationshipTypeCode CardiacArrestPriorCPRRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestPriorAEDRelationship constraints.validation.error='CardiacArrestPriorAEDRelationshipPriorAEDUse CardiacArrestPriorAEDRelationshipTypeCode CardiacArrestPriorAEDRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestArrestRhythmRelationship constraints.validation.error='CardiacArrestArrestRhythmRelationshipObservation CardiacArrestArrestRhythmRelationshipTypeCode CardiacArrestArrestRhythmRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestSpontaneousCirculationRelationship constraints.validation.error='CardiacArrestSpontaneousCirculationRelationshipReturnOfSpontaneousCirculation CardiacArrestSpontaneousCirculationRelationshipTypeCode CardiacArrestSpontaneousCirculationRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestDestinationRhythmRelationship constraints.validation.error='CardiacArrestDestinationRhythmRelationshipDestinationRhythm CardiacArrestDestinationRhythmRelationshipTypeCode CardiacArrestDestinationRhythmRelationshipInversionInd' typeCode='SUBJ' inversionInd='TRUE'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X4FmMBpMEeSd5OoVIuDNwg" base_Class="_QFoU0HwNEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='PriorCPRProviderParticipation' constraints.validation.error='PriorCPRTemplateId PriorCPRMoodCode PriorCPRCode PriorCPRValue' templateId.root='2.16.840.1.1133883.17.3.10.1.125' moodCode='EVN' code.code='67506-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='CPR prior to EMS arrival NEMSIS'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorCPRPriorCPRProviderParticipation constraints.validation.error='PriorCPRPriorCPRProviderParticipationPriorCPRProvider PriorCPRPriorCPRProviderParticipationTypeCode' typeCode='RESP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorCPRPriorCPRProviderParticipationPriorCPRProvider code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PriorCPRPriorCPRProviderParticipationPriorCPRProviderCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X4G0UBpMEeSd5OoVIuDNwg" base_Class="_qsAEkHwPEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='PriorAEDUsePriorAEDProviderParticipation' constraints.validation.error='PriorAEDUseTemplateId PriorAEDUseMoodCode PriorAEDUseCode PriorAEDUseValue' templateId.root='2.16.840.1.1133883.17.3.10.1.126' moodCode='EVN' code.code='67508-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='AED use prior to EMS arrival NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorAEDUsePriorAEDProviderParticipation constraints.validation.error='PriorAEDUsePriorAEDProviderParticipationPriorAEDProvider PriorAEDUsePriorAEDProviderParticipationTypeCode' typeCode='RESP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorAEDUsePriorAEDProviderParticipationPriorAEDProvider code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PriorAEDUsePriorAEDProviderParticipationPriorAEDProviderCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X4NiARpMEeSd5OoVIuDNwg" base_Class="_i4C-AH9aEeGht55Sz1eBOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSAdvanceDirectivesSectionTemplateId EMSAdvanceDirectivesSectionCode EMSAdvanceDirectivesSectionTitle EMSAdvanceDirectivesSectionText EMSAdvanceDirectivesSectionAdvancedDirectiveObservation' templateId.root='2.16.840.1.113883.17.3.10.1.12' code.code='67840-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS advance directives Narrative NEMSIS' title.mixed='EMS advance directives Narrative NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X4TooBpMEeSd5OoVIuDNwg" base_Class="_nSjIgH9cEeGht55Sz1eBOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSAllergiesAndAdverseReactionsSectionTemplateId EMSAllergiesAndAdverseReactionsSectionCode EMSAllergiesAndAdverseReactionsSectionTitle EMSAllergiesAndAdverseReactionsSectionText EMSAllergiesAndAdverseReactionsSectionEnvironmentalAllergies EMSAllergiesAndAdverseReactionsSectionEMSDrugAllergyOrganizer' templateId.root='2.16.840.1.113883.17.3.10.1.13' code.code='48765-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Allergies and adverse reactions Document' title.mixed='EMS Allergies and Adverse Reactions'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X4ZvQBpMEeSd5OoVIuDNwg" base_Class="_aDO5AIcnEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSCurrentMedicationSectionTemplateId EMSCurrentMedicationSectionCode EMSCurrentMedicationSectionTitle EMSCurrentMedicationSectionText EMSCurrentMedicationSectionCurrentlyOnMedication EMSCurrentMedicationSectionPatientOnAnticoagulants EMSCurrentMedicationSectionCurrentMedication' templateId.root='2.16.840.1.113883.17.3.10.1.15' code.code='67844-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS current medications Narrative NEMSIS' title.mixed='EMS Current Medications Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X4kHUBpMEeSd5OoVIuDNwg" base_Class="_CFApcIzGEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NonDrugAllergyOrganizerExistenceOfNonDrugAllergy NonDrugAllergyOrganizerTemplateId' constraints.validation.info='NonDrugAllergyOrganizerNonDrugAllergy' templateId.root='2.16.840.1.1133883.17.3.10.1.49'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X4nxsBpMEeSd5OoVIuDNwg" base_Class="_1XH7YIziEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSSocialHistorySectionTemplateId EMSSocialHistorySectionCode EMSSocialHistorySectionCodeP EMSSocialHistorySectionTitle EMSSocialHistorySectionText EMSSocialHistorySectionExistenceOfDrugUseIndication EMSSocialHistorySectionDrugUseIndication' templateId.root='2.16.840.1.113883.17.3.10.1.22' code.code='67843-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS social history Narrative NEMSIS' title.mixed='EMS Social History'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X4w7oBpMEeSd5OoVIuDNwg" base_Class="_jCzkkIzkEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSVitalSignsSectionTemplateId EMSVitalSignsSectionCode EMSVitalSignsSectionTitle EMSVitalSignsSectionText EMSVitalSignsSectionVitalSignsOrganizer EMSVitalSignsSectionAdditionalVitalSignsOrganizer' templateId.root='2.16.840.1.113883.17.3.10.1.23' code.code='8716-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vital Signs' title.mixed='EMS Vital Signs'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X43CQBpMEeSd5OoVIuDNwg" base_Class="_RNfAcIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowComaScoreOrganizerGlasgowEye GlasgowComaScoreOrganizerGlasgowMotor GlasgowComaScoreOrganizerGlasgowVerbal GlasgowComaScoreOrganizerTemplateId' constraints.validation.info='GlasgowComaScoreOrganizerGlasgowQualifier GlasgowComaScoreOrganizerEffectiveTime' constraints.validation.warning='GlasgowComaScoreOrganizerGlasgowTotal' templateId.root='2.16.840.1.1133883.17.3.10.1.170'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X48h0BpMEeSd5OoVIuDNwg" base_Class="_6223oJohEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSPhysicalAssessmentSectionTemplateId EMSPhysicalAssessmentSectionCode EMSPhysicalAssessmentSectionCodeP EMSPhysicalAssessmentSectionTitle EMSPhysicalAssessmentSectionText EMSPhysicalAssessmentSectionPhysicalAssessmentOrganizer EMSPhysicalAssessmentSectionPatientPregnancy EMSPhysicalAssessmentSectionLastOralIntake EMSPhysicalAssessmentSectionPatientAge EMSPhysicalAssessmentSectionThrombolyticContraindications EMSPhysicalAssessmentSectionBarriersToPatientCare' templateId.root='2.16.840.1.113883.17.3.10.1.20' code.code='29545-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings Narrative' title.mixed='EMS Physical Assessment Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X5FEsRpMEeSd5OoVIuDNwg" base_Class="_c7crcJovEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSMedicationsAdministeredSectionTemplateId EMSMedicationsAdministeredSectionCode EMSMedicationsAdministeredSectionCodeP EMSMedicationsAdministeredSectionTitle EMSMedicationsAdministeredSectionText EMSMedicationsAdministeredSectionMedicationAdministered' templateId.root='2.16.840.1.113883.17.3.10.1.18' code.code='67849-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS medications administered Narrative NEMSIS' title.mixed='Medications Administered Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X5MZcBpMEeSd5OoVIuDNwg" base_Class="_5JQlAJovEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='MedicationAdministeredMedicationNotAdministeredEntryRelationship MedicationAdministeredMedicationComplicationRelationship MedicationAdministeredMedicationPerformerParticipation MedicationAdministeredMedicationAuthorizationRelationship MedicationAdministeredMedicationAdministrationDeviceParticipant MedicationAdministeredNegationInd MedicationAdministeredRouteCodeP MedicationAdministeredApproachSiteCodeP MedicationAdministeredDoseQuantity MedicationAdministeredRateQuantity' constraints.validation.error='MedicationAdministeredMedicationConsumable MedicationAdministeredResponseRelationship MedicationAdministeredMedicationPriorAdministrationRelationship MedicationAdministeredTemplateId MedicationAdministeredClassCode MedicationAdministeredEffectiveTime MedicationAdministeredRouteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.72' classCode='SBADM' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1.1' routeCode.codeSystemName='FDA Route of Administration' constraints.validation.dependOn.MedicationAdministeredRouteCode='MedicationAdministeredRouteCodeP' approachSiteCode.code='15562006' approachSiteCode.codeSystem='2.16.840.1.113883.6.96' approachSiteCode.codeSystemName='SNOMEDCT' approachSiteCode.displayName='structure of respiratory region of nose' constraints.validation.warning='MedicationAdministeredApproachSiteCode' constraints.validation.dependOn.MedicationAdministeredApproachSiteCode='MedicationAdministeredApproachSiteCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationNotAdministeredReasonEntryRelationship constraints.validation.error='MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipMedicationNotAdministeredReasonObservation MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipInversionInd MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipTypeCode MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipTypeCodeP' inversionInd='TRUE' typeCode='RSON' constraints.validation.dependOn.MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipTypeCode='MedicationAdministeredMedicationNotAdministeredReasonEntryRelationshipTypeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumable constraints.validation.error='MedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProduct'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProduct constraints.validation.error='MedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProductMedicationLabeledDrug'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProductMedicationMaterial code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='MedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProductMedicationMaterialCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredResponseRelationship constraints.validation.error='MedicationAdministeredMedicationAdministeredResponseRelationshipMedicationResponseObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationComplicationRelationship constraints.validation.error='MedicationAdministeredMedicationComplicationRelationshipMedicationComplicationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPriorAdministrationRelationship constraints.validation.error='MedicationAdministeredMedicationPriorAdministrationRelationshipMedicationPriorAdministrationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPerformerParticipation constraints.validation.error='MedicationAdministeredMedicationPerformerParticipationMedicationPerformerRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPerformerParticipationMedicationPerformerRole constraints.validation.error='MedicationAdministeredMedicationPerformerParticipationMedicationPerformerRoleId MedicationAdministeredMedicationPerformerParticipationMedicationPerformerRoleCode MedicationAdministeredMedicationPerformerParticipationMedicationPerformerRoleCodeP' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAuthorizationRelationship constraints.validation.error='MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorization classCode='INFRM' constraints.validation.error='MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationClassCode MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationClassCodeP MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationCode' constraints.validation.dependOn.MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationClassCode='MedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorizationClassCodeP' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipant constraints.validation.error='MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRole MedicationAdministeredMedicationAdministrationDeviceParticipantTypeCode' typeCode='DEV'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRole constraints.validation.error='MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDevice MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleClassCode' classCode='MANU'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDevice code.codeSystem='2.16.840.1.113883.6.96' code.codeSystemName='SNOMEDCT' constraints.validation.error='MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDeviceCode MedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDeviceCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X5Z00BpMEeSd5OoVIuDNwg" base_Class="_4QFw8JumEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSProceduresPerformedSectionTemplateId EMSProceduresPerformedSectionCode EMSProceduresPerformedSectionCodeP EMSProceduresPerformedSectionTitle EMSProceduresPerformedSectionText' templateId.root='2.16.840.1.113883.17.3.10.1.21' code.code='29554-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure Narrative' title.mixed='EMS Procedures Performed' constraints.validation.info='EMSProceduresPerformedSectionProcedureActivityProcedure1'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X5iXsBpMEeSd5OoVIuDNwg" base_Class="_K8JK8JuoEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='EMSPCRProcedureAbandonedProcedureRelationship EMSPCRProcedureProcedureNumberOfAttemptsRelationship EMSPCRProcedureAirwayConfirmationRelationship EMSPCRProcedureReasonProcedureNotAttemptedRelationship EMSPCRProcedureNegationInd EMSPCRProcedureStatusCodeP EMSPCRProcedureApproachSiteCodeP' constraints.validation.error='EMSPCRProcedureProcedurePriorRelationship EMSPCRProcedureProcedureSuccessfulRelationship EMSPCRProcedureProcedureComplicationsRelationship EMSPCRProcedureProcedurePatientResponseRelationship EMSPCRProcedureProcedurePerformer EMSPCRProcedureTemplateId EMSPCRProcedureCode EMSPCRProcedureStatusCode EMSPCRProcedureEffectiveTime EMSPCRProcedureApproachSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.181' statusCode.code='Aborted' constraints.validation.dependOn.EMSPCRProcedureStatusCode='EMSPCRProcedureStatusCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.6.1' approachSiteCode.codeSystemName='LOINC' constraints.validation.dependOn.EMSPCRProcedureApproachSiteCode='EMSPCRProcedureApproachSiteCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAbandonedProcedureRelationship constraints.validation.error='ProcedureAbandonedProcedureRelationshipAbandonedProcedureReasonObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePriorRelationship constraints.validation.error='ProcedureProcedurePriorRelationshipProcedurePriorIndicator'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureNumberOfAttemptsRelationship constraints.validation.error='ProcedureProcedureNumberOfAttemptsRelationshipProcedureNumberOfAttemptsObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureSuccessfulRelationship constraints.validation.error='ProcedureProcedureSuccessfulRelationshipProcedureSuccessfulObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureComplicationsRelationship constraints.validation.error='ProcedureProcedureComplicationsRelationshipProcedureComplicationsObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePatientResponseRelationship constraints.validation.error='ProcedureProcedurePatientResponseRelationshipProcedurePatientResponseObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePerformer constraints.validation.error='ProcedureProcedurePerformerProcedurePerformerEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePerformerProcedurePerformerEntity constraints.validation.error='ProcedureProcedurePerformerProcedurePerformerEntityId ProcedureProcedurePerformerProcedurePerformerEntityCode ProcedureProcedurePerformerProcedurePerformerEntityCodeP' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayConfirmationRelationship constraints.validation.error='ProcedureAirwayConfirmationRelationshipAirwayConfirmationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureReasonProcedureNotAttemptedRelationship constraints.validation.error='ProcedureReasonProcedureNotAttemptedRelationshipReasonProcedureNotAttemptedObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipant constraints.validation.error='ProcedureAirwayDeviceParticipantAirwayDeviceParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipantAirwayDeviceParticipantRole constraints.validation.error='ProcedureAirwayDeviceParticipantAirwayDeviceParticipantRoleAirwayDeviceParticipantType'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipantAirwayDeviceParticipantRoleAirwayDeviceParticipantType code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='ProcedureAirwayDeviceParticipantAirwayDeviceParticipantRoleAirwayDeviceParticipantTypeCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X5waIRpMEeSd5OoVIuDNwg" base_Class="_iDmQYJ9mEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSPatientCareNarrativeSectionTemplateId EMSPatientCareNarrativeSectionCode EMSPatientCareNarrativeSectionCodeP EMSPatientCareNarrativeSectionTitle EMSPatientCareNarrativeSectionText' templateId.root='2.16.840.1.113883.17.3.10.1.1' code.code='67781-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Summarization of encounter note Narrative' title.mixed='EMS Patient Care Report Narrative'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X58nYhpMEeSd5OoVIuDNwg" base_Class="_OV4TIJ9nEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSDispatchSectionTemplateId EMSDispatchSectionCode EMSDispatchSectionTitle EMSDispatchSectionText EMSDispatchSectionEmergencyMedicalDispatchObservation EMSDispatchSectionComplaintReportedByDispatch' templateId.root='2.16.840.1.113883.17.3.10.1.2' code.code='67660-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS dispatch Narrative NEMSIS' title.mixed='EMS Dispatch'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X6CG8hpMEeSd5OoVIuDNwg" base_Class="_LI7M8J99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSResponseSectionTemplateId EMSResponseSectionCode EMSResponseSectionCodeP EMSResponseSectionTitle EMSResponseSectionText EMSResponseSectionDelayOrganizer EMSResponseSectionDispatchLocationOrganizer EMSResponseSectionResponseOdometerReadingOrganizer EMSResponseSectionResponseModeToScene' templateId.root='2.16.840.1.113883.17.3.10.1.3' code.code='67664-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS response Narrative NEMSIS' title.mixed='EMS Response'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X6Kp0BpMEeSd5OoVIuDNwg" base_Class="_0padgJ99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DelayOrganizerDispatchDelayRelationship DelayOrganizerResponseDelayRelationship DelayOrganizerSceneDelayRelationship DelayOrganizerTransportDelayRelationship DelayOrganizerTurnaoundDelayRelationship DelayOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.95'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerDispatchDelayRelationship constraints.validation.error='DelayOrganizerDispatchDelayRelationshipDispatchDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerResponseDelayRelationship constraints.validation.error='DelayOrganizerResponseDelayRelationshipResponseDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerSceneDelayRelationship constraints.validation.error='DelayOrganizerSceneDelayRelationshipSceneDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerTransportDelayRelationship constraints.validation.error='DelayOrganizerTransportDelayRelationshipTransportDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerTurnaoundDelayRelationship constraints.validation.error='DelayOrganizerTurnaoundDelayRelationshipTurnaroundDelay'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X6R-kBpMEeSd5OoVIuDNwg" base_Class="_MiN-UJ-BEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='DispatchLocationOrganizerDispatchLocationNameRelationship DispatchLocationOrganizerDispatchLocationLatitudeRelationship DispatchLocationOrganizerDispatchLocationLongtudeRelationship' constraints.validation.error='DispatchLocationOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.96'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationNameRelationship constraints.validation.error='DispatchLocationOrganizerDispatchLocationNameRelationshipDispatchLocationName DispatchLocationOrganizerDispatchLocationNameRelationshipTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationLatitudeRelationship constraints.validation.error='DispatchLocationOrganizerDispatchLocationLatitudeRelationshipDispatchLocationLatitude DispatchLocationOrganizerDispatchLocationLatitudeRelationshipTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationLongitudeRelationship constraints.validation.error='DispatchLocationOrganizerDispatchLocationLongitudeRelationshipObservation DispatchLocationOrganizerDispatchLocationLongitudeRelationshipTemplateId' templateId.root='null'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X6WQABpMEeSd5OoVIuDNwg" base_Class="_yVviAJ-OEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship' constraints.validation.error='ResponseOdometerReadingOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.97'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship constraints.validation.error='ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationshipResponseBeginningOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship constraints.validation.error='ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationshipResponseOnSceneOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship constraints.validation.error='ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationshipResponseDestinationOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship constraints.validation.error='ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationshipResponseEndingOdometerReading'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X6Z6YBpMEeSd5OoVIuDNwg" base_Class="_i-lM8J-dEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSDispositionSectionTemplateId EMSDispositionSectionCode EMSDispositionSectionCodeP EMSDispositionSectionTitle EMSDispositionSectionText EMSDispositionSectionNumberOfPatientsObservation EMSDispositionSectionIncidentDispositionObservation EMSDispositionSectionTransportModeObservation EMSDispositionSectionTransportMethodObservation EMSDispositionSectionReasonForChoosingDestinationObservation EMSDispositionSectionPrearrivalActivationObservation EMSDispositionSectionPatientConditionChangeAtDestinationObservation' templateId.root='2.16.840.1.113883.17.3.10.1.4' code.code='67661-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS disposition Narrative NEMSIS' title.mixed='EMS Disposition'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X6hPIBpMEeSd5OoVIuDNwg" base_Class="_GGotEJ-kEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSPersonnelAdverseEventSectionTemplateId EMSPersonnelAdverseEventSectionCode EMSPersonnelAdverseEventSectionCodeP EMSPersonnelAdverseEventSectionTitle EMSPersonnelAdverseEventSectionText EMSPersonnelAdverseEventSectionAdverseEventIndicator EMSPersonnelAdverseEventSectionAdverseEventTypeObservation' templateId.root='2.16.840.1.113883.17.3.10.1.6' code.code='67658-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS exposures or injuries of EMS personnel Provider Narrative NEMSIS' title.mixed='Exposures or Injuries of EMS Personnel'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X6n80hpMEeSd5OoVIuDNwg" base_Class="_aK7P4J-mEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSProtocolSectionTemplateId EMSProtocolSectionCode EMSProtocolSectionTitle EMSProtocolSectionText EMSProtocolSectionProtocolObservation EMSProtocolSectionCandidatePatientRegistryType' templateId.root='2.16.840.1.113883.17.3.10.1.7' code.code='67663-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS protocol Narrative NEMSIS' title.mixed='EMS Protocol Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X6tcYRpMEeSd5OoVIuDNwg" base_Class="_h3A8IKK3EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSSceneSectionTemplateId EMSSceneSectionCode EMSSceneSectionTitle EMSSceneSectionText EMSSceneSectionFirstUnitIndicator EMSSceneSectionFirstUnitOnScene EMSSceneSectionScenePatientCount EMSSceneSectionMassCasualtyIndicator EMSSceneSectionLocationTypeObservation' templateId.root='2.16.840.1.113883.17.3.10.1.8' code.code='67665-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS scene Narrative NEMSIS' title.mixed='EMS Scene'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X60KERpMEeSd5OoVIuDNwg" base_Class="_olqMIKK8EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSSituationSectionTemplateId EMSSituationSectionCode EMSSituationSectionCodeP EMSSituationSectionTitle EMSSituationSectionText EMSSituationSectionComplaint EMSSituationSectionPossibleInjury EMSSituationSectionProviderPrimaryImpression EMSSituationSectionPrimarySymptom EMSSituationSectionOtherSymptoms EMSSituationSectionProviderSecondaryImpressions EMSSituationSectionInitialPatientAcuity' templateId.root='2.16.840.1.113883.17.3.10.1.9' code.code='67666-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS situation Narrative NEMSIS' title.mixed='EMS Situation Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X68F4BpMEeSd5OoVIuDNwg" base_Class="_KEZzkKg-EeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='ComplaintDurationRelationship ComplaintTypeRelationship ComplaintValue' constraints.validation.warning='ComplaintOrganSystemRelationship ComplaintTargetSiteCodeP' constraints.validation.error='ComplaintTemplateId ComplaintMoodCode ComplaintCode ComplaintCodeP ComplaintEffectiveTime ComplaintTargetSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.63' moodCode='EVN' code.code='10154-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Chief complaint Narrative - Reported' constraints.validation.dependOn.ComplaintCode='ComplaintCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrComplaintComplaintOrganSystemRelationship constraints.validation.error='ComplaintComplaintOrganSystemRelationshipComplaintOrganSystem'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X6_JMBpMEeSd5OoVIuDNwg" base_Class="_ClVY0KxCEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TimesSectionTemplateId TimesSectionCode TimesSectionTitle TimesSectionText TimesSectionCallTime TimesSectionUnitNotifiedTime TimesSectionUnitEnRouteTime TimesSectionUnitOnSceneTime TimesSectionUnitAtPatienttTime TimesSectionUnitLeftSceneTime TimesSectionPatientArrivedAtDestinationTime TimesSectionUnitBackInServiceTime TimesSectionDispatchNotifiedTime' templateId.root='2.16.840.1.113883.17.3.10.1.10' code.code='67667-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS times Narrative NEMSIS' title.mixed='EMS Times'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X7WVkBpMEeSd5OoVIuDNwg" base_Class="_mwn8MIcoEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentMedicationConsumable CurrentMedicationTemplateId CurrentMedicationRouteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.77' constraints.validation.info='CurrentMedicationNegationInd CurrentMedicationNullFlavor' constraints.validation.warning='CurrentMedicationDoseQuantity CurrentMedicationRouteCodeP' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1.1' routeCode.codeSystemName='FDA Route of Administration' constraints.validation.dependOn.CurrentMedicationRouteCode='CurrentMedicationRouteCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumable constraints.validation.error='CurrentMedicationCurrentMedicationConsumableManufacturedProduct'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumableCurrentMedicationProduct constraints.validation.error='CurrentMedicationCurrentMedicationConsumableCurrentMedicationProductManufacturedLabeledDrug'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrug code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='CurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrugCode CurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrugCodeP' constraints.validation.dependOn.CurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrugCode='CurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrugCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X7hUsBpMEeSd5OoVIuDNwg" base_Class="_JnfD8IzoEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='EMSPCRVitalSignsOrganizerSystolicBloodPressureComponent EMSPCRVitalSignsOrganizerDiastolicBloodPressureComponent EMSPCRVitalSignsOrganizerHeartRateComponent EMSPCRVitalSignsOrganizerRespiratoryRateComponent EMSPCRVitalSignsOrganizerBodyTemperatureComponent EMSPCRVitalSignsOrganizerOxygenSaturationComponent' constraints.validation.error='VitalSignsOrganizerTemplateId EMSPCRVitalSignsOrganizerEffectiveTime' templateId.root='2.16.840.1.1133883.17.3.10.1.28'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerSystolicBloodPressureComponent constraints.validation.error='VitalSignsOrganizerSystolicBloodPressureComponentSystolicBloodPressure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerDiastolicBloodPressureComponent constraints.validation.error='VitalSignsOrganizerDiastolicBloodPressureComponentDiastolicBloodPressure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerHeartRateComponent constraints.validation.error='VitalSignsOrganizerHeartRateComponentHeartRate'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerRespiratoryRateComponent constraints.validation.error='VitalSignsOrganizerRespiratoryRateComponentRespiratoryRate'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerBodyTemperatureComponent constraints.validation.error='VitalSignsOrganizerBodyTemperatureComponentBodyTemperature'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerOxygenSaturationComponent constraints.validation.error='VitalSignsOrganizerOxygenSaturationComponentOxygenSaturation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X7rswBpMEeSd5OoVIuDNwg" base_Class="_F-GKoLMNEeKNbt70lHd2Eg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='AdditionalVitalSignsOrganizerStrokeScoreComponent AdditionalVitalSignsOrganizerPainScoreComponent AdditionalVitalSignsOrganizerLevelOfResponsivenessComponent AdditionalVitalSignsOrganizerBloodGlucoseComponent AdditionalVitalSignsOrganizerCarbonMonoxideComponent AdditionalVitalSignsOrganizerCarbonDioxideComponent AdditionalVitalSignsOrganizerCardiacRhythmComponent AdditionalVitalSignsOrganizerEffectiveTime AdditionalVitalSignsOrganizerGlasgowComaScoreOrganizer' constraints.validation.error='AdditionalVitalSignsOrganizerTemplateId AdditionalVitalSignsOrganizerMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.30' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X7zBgBpMEeSd5OoVIuDNwg" base_Class="_zbYvIJoiEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='PhysicalAssessmentOrganizerComponent1 PhysicalAssessmentOrganizerComponent2 PhysicalAssessmentOrganizerComponent3 PhysicalAssessmentOrganizerComponent4 PhysicalAssessmentOrganizerComponent5 PhysicalAssessmentOrganizerComponent6 PhysicalAssessmentOrganizerComponent7 PhysicalAssessmentOrganizerComponent8 PhysicalAssessmentOrganizerComponent9 PhysicalAssessmentOrganizerComponent10 PhysicalAssessmentOrganizerComponent11 PhysicalAssessmentOrganizerComponent12 PhysicalAssessmentOrganizerComponent13 PhysicalAssessmentOrganizerComponent14' constraints.validation.error='PhysicalAssessmentOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.78'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerBodyWeightComponent constraints.validation.error='PhysicalAssessmentOrganizerBodyWeightComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerLengthBasedPatientBodyWeightClassComponent constraints.validation.error='PhysicalAssessmentOrganizerLengthBasedPatientBodyWeightClassComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerSkinAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerSkinAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerHeadAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerHeadAssessmentComponentObservation PhysicalAssessmentOrganizerHeadAssessmentComponentTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerFaceAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerFaceAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerNeckAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerNeckAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerChestAndLungsAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerChestAndLungsAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerHeartAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerHeartAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerAbdomenAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerAbdomenAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerPelvicAndGenitourinaryAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerPelvicAndGenitourinaryAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerBackAndSpineAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerBackAndSpineAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerExtremitiesAssessmentComponent constraints.validation.error='PhysicalAssessmentOrganizerExtremitiesAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerEyeAssessmentComponent constraints.validation.info='PhysicalAssessmentOrganizerEyeAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerMentalStatusAssessmentComponent constraints.validation.info='PhysicalAssessmentOrganizerMentalStatusAssessmentComponentObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X8K08BpMEeSd5OoVIuDNwg" base_Class="_3C3WwMWqEeK3RfDsHamIUQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EMSDrugAllergyParticipant1 EMSDrugAllergyTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.48'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrEMSDrugAllergyDrugAllergyParticipation constraints.validation.error='EMSDrugAllergyDrugAllergyParticipationDrugAllergyParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrEMSDrugAllergyDrugAllergyParticipationDrugAllergyParticipantRole constraints.validation.error='EMSDrugAllergyDrugAllergyParticipationDrugAllergyParticipantRoleDrugAllergyEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrEMSDrugAllergyDrugAllergyParticipationDrugAllergyParticipantRoleDrugAllergyEntity code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='EMSDrugAllergyDrugAllergyParticipationDrugAllergyParticipantRoleDrugAllergyEntityCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X8LcABpMEeSd5OoVIuDNwg" base_Class="_uMxJUIzpEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='CardiacRhythmParticipant1' constraints.validation.error='CardiacRhythmTemplateId CardiacRhythmMoodCode CardiacRhythmCode CardiacRhythmCodeP CardiacRhythmValue CardiacRhythmValueP CardiacRhythmMethodCode CardiacRhythmMethodCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.169' moodCode='EVN' code.code='67519-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac rhythm NEMSIS' constraints.validation.dependOn.CardiacRhythmCode='CardiacRhythmCodeP' constraints.validation.info='CardiacRhythmEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipant constraints.validation.error='CardiacRhythmECGParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipantECGParticipantRole constraints.validation.error='CardiacRhythmECGParticipantECGParticipantRolePlayingDevice'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipantECGParticipantRoleECGDevice code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='CardiacRhythmECGParticipantECGParticipantRoleECGDeviceCode CardiacRhythmECGParticipantECGParticipantRoleECGDeviceCodeP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_X8tngxpMEeSd5OoVIuDNwg" base_Generalization="_KLr9MIzoEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_X8x48BpMEeSd5OoVIuDNwg" base_Class="_Dq57UIzpEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PriorAidVitalsTemplateId PriorAidVitalsMoodCode PriorAidVitalsCode PriorAidVitalsValue' templateId.root='2.16.840.1.1133883.17.3.10.1.29' moodCode='EVN' code.code='67518-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Obtained prior to units EMS care NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X88RABpMEeSd5OoVIuDNwg" base_Class="_Dfaa4J-eEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NumberOfPatientsTransportedObservationTemplateId NumberOfPatientsTransportedObservationMoodCode NumberOfPatientsTransportedObservationCode NumberOfPatientsTransportedObservationCodeP NumberOfPatientsTransportedObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.31' moodCode='EVN' code.code='67547-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patients transported in EMS unit [#] NEMSIS' constraints.validation.dependOn.NumberOfPatientsTransportedObservationCode='NumberOfPatientsTransportedObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X9EM0RpMEeSd5OoVIuDNwg" base_Class="_j3YnxZ-eEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='IncidentDispositionObservationTemplateId IncidentDispositionObservationMoodCode IncidentDispositionObservationCode IncidentDispositionObservationCodeP IncidentDispositionObservationValue IncidentDispositionObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.32' moodCode='EVN' code.code='67548-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Incident - patient disposition NEMSIS' constraints.validation.dependOn.IncidentDispositionObservationCode='IncidentDispositionObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X9PL8BpMEeSd5OoVIuDNwg" base_Class="_nv-0gp-fEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportModeObservationTemplateId TransportModeObservationMoodCode TransportModeObservationCode TransportModeObservationCodeP TransportModeObservationValue TransportModeObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.33' moodCode='EVN' code.code='67550-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport mode from scene NEMSIS' constraints.validation.dependOn.TransportModeObservationCode='TransportModeObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X9aLEBpMEeSd5OoVIuDNwg" base_Class="_EagUtZ-fEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportMethodObservationTemplateId TransportMethodObservationMoodCode TransportMethodObservationCode TransportMethodObservationCodeP TransportMethodObservationValue TransportMethodObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.34' moodCode='EVN' code.code='67549-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport method NEMSIS' constraints.validation.dependOn.TransportMethodObservationCode='TransportMethodObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X9lKMBpMEeSd5OoVIuDNwg" base_Class="_cm1D5Z-hEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonForChoosingDestinationObservationTemplateId ReasonForChoosingDestinationObservationMoodCode ReasonForChoosingDestinationObservationCode ReasonForChoosingDestinationObservationCodeP ReasonForChoosingDestinationObservationValue ReasonForChoosingDestinationObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.35' moodCode='EVN' code.code='67552-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Reason for choosing destination NEMSIS' constraints.validation.dependOn.ReasonForChoosingDestinationObservationCode='ReasonForChoosingDestinationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X9viQhpMEeSd5OoVIuDNwg" base_Class="_083apZ-hEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PrearrivalActivationObservationTemplateId PrearrivalActivationObservationMoodCode PrearrivalActivationObservationCode PrearrivalActivationObservationCodeP PrearrivalActivationObservationEffectiveTime PrearrivalActivationObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.36' moodCode='EVN' code.code='69462-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Activation of the destination healthcare facility team NEMSIS' constraints.validation.dependOn.PrearrivalActivationObservationCode='PrearrivalActivationObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X94FIhpMEeSd5OoVIuDNwg" base_Class="_Q4zL9Z-gEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientConditionChangeAtDestinationObservationTemplateId PatientConditionChangeAtDestinationObservationMoodCode PatientConditionChangeAtDestinationObservationCode PatientConditionChangeAtDestinationObservationCodeP PatientConditionChangeAtDestinationObservationValue PatientConditionChangeAtDestinationObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.37' moodCode='EVN' code.code='67551-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Condition of patient at destination NEMSIS' constraints.validation.dependOn.PatientConditionChangeAtDestinationObservationCode='PatientConditionChangeAtDestinationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X-LnIBpMEeSd5OoVIuDNwg" base_Class="_1u74sKxCEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CallTimeTemplateId CallTimeMoodCode CallTimeCode CallTimeCodeP CallTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.38' moodCode='EVN' code.code='69469-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='911 call to public safety answering point or other designated entity requesting EMS services [Date and time] Facility NEMSIS' constraints.validation.dependOn.CallTimeCode='CallTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X-SU0BpMEeSd5OoVIuDNwg" base_Class="_JKerYKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitNotifiedTimeTemplateId UnitNotifiedTimeMoodCode UnitNotifiedTimeCode UnitNotifiedTimeCodeP UnitNotifiedTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.39' moodCode='EVN' code.code='69471-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit was notified by dispatch [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitNotifiedTimeCode='UnitNotifiedTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X-ZCgBpMEeSd5OoVIuDNwg" base_Class="_UyaX0KxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitEnRouteTimeTemplateId UnitEnRouteTimeMoodCode UnitEnRouteTimeCode UnitEnRouteTimeCodeP UnitEnRouteTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.40' moodCode='EVN' code.code='69472-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit responded [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitEnRouteTimeCode='UnitEnRouteTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X-fwMBpMEeSd5OoVIuDNwg" base_Class="_iGh5QKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitOnSceneTimeTemplateId UnitOnSceneTimeMoodCode UnitOnSceneTimeCode UnitOnSceneTimeCodeP UnitOnSceneTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.41' moodCode='EVN' code.code='69473-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit arrived on the scene [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitOnSceneTimeCode='UnitOnSceneTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X-md4BpMEeSd5OoVIuDNwg" base_Class="_yt7JUKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitAtPatientTimeTemplateId UnitAtPatientTimeMoodCode UnitAtPatientTimeCode UnitAtPatientTimeCodeP UnitAtPatientTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.42' moodCode='EVN' code.code='69474-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit arrived at the patient's side [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitAtPatientTimeCode='UnitAtPatientTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X-tLkhpMEeSd5OoVIuDNwg" base_Class="_6w124KxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitLeftSceneTimeTemplateId UnitLeftSceneTimeMoodCode UnitLeftSceneTimeCode UnitLeftSceneTimeCodeP UnitLeftSceneTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.43' moodCode='EVN' code.code='69475-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit left the scene with a patient [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitLeftSceneTimeCode='UnitLeftSceneTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X-0gUBpMEeSd5OoVIuDNwg" base_Class="_DaIA4KxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientArrivedAtDestinationTimeTemplateId PatientArrivedAtDestinationTimeMoodCode PatientArrivedAtDestinationTimeCode PatientArrivedAtDestinationTimeCodeP PatientArrivedAtDestinationTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.44' moodCode='EVN' code.code='69476-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Responding unit arrived with the patient at the destination or transfer point [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.PatientArrivedAtDestinationTimeCode='PatientArrivedAtDestinationTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X-7OAhpMEeSd5OoVIuDNwg" base_Class="_KrhK4KxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitBackInServiceTimeTemplateId UnitBackInServiceTimeMoodCode UnitBackInServiceTimeCode UnitBackInServiceTimeCodeP UnitBackInServiceTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.45' moodCode='EVN' code.code='69477-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit was back in service and available for response [Date and time] Vehicle NEMSIS' constraints.validation.dependOn.UnitBackInServiceTimeCode='UnitBackInServiceTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X_B7shpMEeSd5OoVIuDNwg" base_Class="_UFgZEKxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchNotifiedTimeTemplateId DispatchNotifiedTimeMoodCode DispatchNotifiedTimeCode DispatchNotifiedTimeCodeP DispatchNotifiedTimeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.46' moodCode='EVN' code.code='69470-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch was notified by the 911 call taker [Date and time] Facility NEMSIS' constraints.validation.dependOn.DispatchNotifiedTimeCode='DispatchNotifiedTimeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X_KekBpMEeSd5OoVIuDNwg" base_Class="_xCcE0Iy7EeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectiveObservationTemplateId AdvanceDirectiveObservationMoodCode AdvanceDirectiveObservationCode AdvanceDirectiveObservationValue AdvanceDirectiveObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.98' moodCode='EVN' code.code='67516-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Advance directive NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X_ZvIBpMEeSd5OoVIuDNwg" base_Class="_KEFo8HSVEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryCauseCategoryTemplateId InjuryCauseCategoryMoodCode InjuryCauseCategoryCode InjuryCauseCategoryValue' templateId.root='2.16.840.1.1133883.17.3.10.1.50' moodCode='EVN' code.code='69543-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cause of injury NEMSIS' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X_hD4hpMEeSd5OoVIuDNwg" base_Class="_aS16EHSWEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryMechanismTemplateId InjuryMechanismMoodCode InjuryMechanismCode InjuryMechanismValue' templateId.root='2.16.840.1.1133883.17.3.10.1.51' moodCode='EVN' code.code='67494-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='General mechanism of the forces which caused the injury NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X_o_sBpMEeSd5OoVIuDNwg" base_Class="_lTHsIIcXEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TraumaCenterCriteriaTemplateId TraumaCenterCriteriaMoodCode TraumaCenterCriteriaCode TraumaCenterCriteriaValue' templateId.root='2.16.840.1.1133883.17.3.10.1.52' moodCode='EVN' code.code='67495-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='CDC field triage criteria NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X_wUcBpMEeSd5OoVIuDNwg" base_Class="_vuraIIcZEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryRiskFactorTemplateId InjuryRiskFactorMoodCode InjuryRiskFactorCode InjuryRiskFactorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.53' moodCode='EVN' code.code='67496-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Other injury risk factors NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X_3pMhpMEeSd5OoVIuDNwg" base_Class="_nvhVwIcaEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VehicleImpactAreaTemplateId VehicleImpactAreaMoodCode VehicleImpactAreaCode VehicleImpactAreaValue' templateId.root='2.16.840.1.1133883.17.3.10.1.54' moodCode='EVN' code.code='67497-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Location of impact on the vehicle NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_X__lABpMEeSd5OoVIuDNwg" base_Class="_zMwjMIccEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientLocationInVehicleTemplateId PatientLocationInVehicleMoodCode PatientLocationInVehicleCode PatientLocationInVehicleValue' templateId.root='2.16.840.1.1133883.17.3.10.1.55' moodCode='EVN' code.code='67498-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Location of patient in vehicle NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YAG5wRpMEeSd5OoVIuDNwg" base_Class="_bsVJUIcdEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VehicleOccupantSafetyEquipmentTemplateId VehicleOccupantSafetyEquipmentMoodCode VehicleOccupantSafetyEquipmentCode VehicleOccupantSafetyEquipmentValue' templateId.root='2.16.840.1.1133883.17.3.10.1.56' moodCode='EVN' code.code='67499-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Safety equipment NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YAO1kBpMEeSd5OoVIuDNwg" base_Class="_2lRhsIcdEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AirbagDeploymentStatusTemplateId AirbagDeploymentStatusMoodCode AirbagDeploymentStatusCode AirbagDeploymentStatusValue AirbagDeploymentStatusValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.57' moodCode='EVN' code.code='67500-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Airbag deployment NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YAXYchpMEeSd5OoVIuDNwg" base_Class="_auKbcIceEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeightOfFallTemplateId HeightOfFallMoodCode HeightOfFallCode HeightOfFallValue' templateId.root='2.16.840.1.1133883.17.3.10.1.58' moodCode='EVN' code.code='67501-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Height of fall NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YAeGIBpMEeSd5OoVIuDNwg" base_Class="_wKL4IIceEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DisasterTypeTemplateId DisasterTypeMoodCode DisasterTypeCode DisasterTypeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.59' moodCode='EVN' code.code='69463-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Suspected intentional or unintentional disaster NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YAmB8hpMEeSd5OoVIuDNwg" base_Class="_W_uRYIzdEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfHistoryOfConditionTemplateId ExistenceOfHistoryOfConditionMoodCode ExistenceOfHistoryOfConditionCode ExistenceOfHistoryOfConditionValue' templateId.root='2.16.840.1.1133883.17.3.10.1.60' moodCode='EVN' code.code='67793-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Has the patient had any significant medical conditions NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YAq6chpMEeSd5OoVIuDNwg" base_Class="_5XgZ4IzdEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HistoryOfConditionTemplateId HistoryOfConditionMoodCode HistoryOfConditionCode HistoryOfConditionCodeP HistoryOfConditionValue HistoryOfConditionValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.61' moodCode='EVN' code.code='68487-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medical - surgical history - ICD-9 and 10 codes' constraints.validation.dependOn.HistoryOfConditionCode='HistoryOfConditionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YBCt4BpMEeSd5OoVIuDNwg" base_Class="_7nP0MKhCEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PossibleInjuryTemplateId PossibleInjuryMoodCode PossibleInjuryCode PossibleInjuryCodeP PossibleInjuryValue' templateId.root='2.16.840.1.1133883.17.3.10.1.64' moodCode='EVN' code.code='69467-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Possible injury NEMSIS' constraints.validation.dependOn.PossibleInjuryCode='PossibleInjuryCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YBKCoBpMEeSd5OoVIuDNwg" base_Class="_0C-8EKhDEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProviderPrimaryImpressionTemplateId ProviderPrimaryImpressionMoodCode ProviderPrimaryImpressionCode ProviderPrimaryImpressionCodeP ProviderPrimaryImpressionValue ProviderPrimaryImpressionValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.65' moodCode='EVN' code.code='67492-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Primary problem NEMSIS' constraints.validation.dependOn.ProviderPrimaryImpressionCode='ProviderPrimaryImpressionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YBTzohpMEeSd5OoVIuDNwg" base_Class="_KOxo0KhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PrimarySymptomTemplateId PrimarySymptomMoodCode PrimarySymptomCode PrimarySymptomCodeP PrimarySymptomValue PrimarySymptomValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.66' moodCode='EVN' code.code='67774-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Primary sign and symptom NEMSIS' constraints.validation.dependOn.PrimarySymptomCode='PrimarySymptomCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YBeLsRpMEeSd5OoVIuDNwg" base_Class="_g5iJgKhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OtherSymptomsTemplateId OtherSymptomsMoodCode OtherSymptomsCode OtherSymptomsCodeP OtherSymptomsValue' templateId.root='2.16.840.1.1133883.17.3.10.1.67' moodCode='EVN' code.code='67776-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Other symptoms NEMSIS' constraints.validation.dependOn.OtherSymptomsCode='OtherSymptomsCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' constraints.validation.info='OtherSymptomsValueP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YBpx4BpMEeSd5OoVIuDNwg" base_Class="_0mPksKhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProviderSecondaryImpressionsTemplateId ProviderSecondaryImpressionsMoodCode ProviderSecondaryImpressionsCode ProviderSecondaryImpressionsCodeP ProviderSecondaryImpressionsValue ProviderSecondaryImpressionsValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.68' moodCode='EVN' code.code='69542-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Secondary problem NEMSIS' constraints.validation.dependOn.ProviderSecondaryImpressionsCode='ProviderSecondaryImpressionsCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YB0J8hpMEeSd5OoVIuDNwg" base_Class="_NZgqAKhFEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InitialPatientAcuityTemplateId InitialPatientAcuityMoodCode InitialPatientAcuityCode InitialPatientAcuityCodeP InitialPatientAcuityValue InitialPatientAcuityValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.69' moodCode='EVN' code.code='67493-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Initial patient acuity NEMSIS' constraints.validation.dependOn.InitialPatientAcuityCode='InitialPatientAcuityCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YB_wIhpMEeSd5OoVIuDNwg" base_Class="_Mr964IzjEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfDrugUseIndicationTemplateId ExistenceOfDrugUseIndicationMoodCode ExistenceOfDrugUseIndicationCode ExistenceOfDrugUseIndicationCodeP ExistenceOfDrugUseIndicationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.70' moodCode='EVN' code.code='69757-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Indications of drug or alcohol use by the patient NEMSIS' constraints.validation.dependOn.ExistenceOfDrugUseIndicationCode='ExistenceOfDrugUseIndicationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YCGd0RpMEeSd5OoVIuDNwg" base_Class="_oJHzkIzjEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugUseIndicationTemplateId DrugUseIndicationMoodCode DrugUseIndicationCode DrugUseIndicationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.71' moodCode='EVN' code.code='67669-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Alcohol - drug use NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YC1doBpMEeSd5OoVIuDNwg" base_Class="_46UUAJ9nEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EmergencyMedicalDispatchObservationTemplateId EmergencyMedicalDispatchObservationMoodCode EmergencyMedicalDispatchObservationCode EmergencyMedicalDispatchObservationCodeP EmergencyMedicalDispatchObservationValue EmergencyMedicalDispatchObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.73' moodCode='EVN' code.code='67488-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Emergency medical dispatch performed NEMSIS' constraints.validation.dependOn.EmergencyMedicalDispatchObservationCode='EmergencyMedicalDispatchObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YDCR8hpMEeSd5OoVIuDNwg" base_Class="__LltsJ97EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintReportedByDispatchTemplateId ComplaintReportedByDispatchMoodCode ComplaintReportedByDispatchCode ComplaintReportedByDispatchCodeP ComplaintReportedByDispatchValue ComplaintReportedByDispatchValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.74' moodCode='EVN' code.code='67570-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Chief complaint per dispatch Reported.dispatch' constraints.validation.dependOn.ComplaintReportedByDispatchCode='ComplaintReportedByDispatchCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YDN4IBpMEeSd5OoVIuDNwg" base_Class="_sUm-oIcnEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentlyOnMedicationTemplateId CurrentlyOnMedicationMoodCode CurrentlyOnMedicationCode CurrentlyOnMedicationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.75' moodCode='EVN' code.code='67791-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Does the patient take any medications NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YDTXshpMEeSd5OoVIuDNwg" base_Class="_RZqlsIcoEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientOnAnticoagulantsTemplateId PatientOnAnticoagulantsMoodCode PatientOnAnticoagulantsCode PatientOnAnticoagulantsValue' templateId.root='2.16.840.1.1133883.17.3.10.1.76' moodCode='EVN' code.code='69749-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Is the patient on anticoagulants NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YDsZQBpMEeSd5OoVIuDNwg" base_Class="_sW8QcJosEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientPregnancyTemplateId PatientPregnancyMoodCode PatientPregnancyCode PatientPregnancyCodeP PatientPregnancyValue PatientPregnancyValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.79' moodCode='EVN' code.code='67471-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Pregnancy' constraints.validation.dependOn.PatientPregnancyCode='PatientPregnancyCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YD4mghpMEeSd5OoVIuDNwg" base_Class="_S1I0sJotEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LastOralIntakeTemplateId LastOralIntakeMoodCode LastOralIntakeCode LastOralIntakeCodeP LastOralIntakeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.80' moodCode='EVN' code.code='67517-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Last oral intake [Date and time] NEMSIS' constraints.validation.dependOn.LastOralIntakeCode='LastOralIntakeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YECXgBpMEeSd5OoVIuDNwg" base_Class="_rhjrIJotEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientAgeTemplateId PatientAgeMoodCode PatientAgeCode PatientAgeCodeP PatientAgeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.81' moodCode='EVN' code.code='30525-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Age' constraints.validation.dependOn.PatientAgeCode='PatientAgeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YEKTURpMEeSd5OoVIuDNwg" base_Class="_HuCH8JouEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ThrombolyticContraindicationsTemplateId ThrombolyticContraindicationsMoodCode ThrombolyticContraindicationsCode ThrombolyticContraindicationsCodeP ThrombolyticContraindicationsValue' templateId.root='2.16.840.1.1133883.17.3.10.1.82' moodCode='EVN' code.code='67523-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Contraindication for thrombolytic use NEMSIS' constraints.validation.dependOn.ThrombolyticContraindicationsCode='ThrombolyticContraindicationsCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YEUEUBpMEeSd5OoVIuDNwg" base_Class="_qlUP4JouEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BarriersToPatientCareTemplateId BarriersToPatientCareMoodCode BarriersToPatientCareCode BarriersToPatientCareCodeP BarriersToPatientCareValue BarriersToPatientCareValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.83' moodCode='EVN' code.code='67515-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Barriers to patient care NEMSIS' constraints.validation.dependOn.BarriersToPatientCareCode='BarriersToPatientCareCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YEfqgRpMEeSd5OoVIuDNwg" base_Class="_Ox86UKK4EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FirstUnitIndicatorTemplateId FirstUnitIndicatorMoodCode FirstUnitIndicatorCode FirstUnitIndicatorCodeP FirstUnitIndicatorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.84' moodCode='EVN' code.code='67481-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='First EMS unit on scene NEMSIS' constraints.validation.dependOn.FirstUnitIndicatorCode='FirstUnitIndicatorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YEmYMBpMEeSd5OoVIuDNwg" base_Class="_JNrkAKK5EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FirstUnitOnSceneTemplateId FirstUnitOnSceneMoodCode FirstUnitOnSceneCode FirstUnitOnSceneCodeP FirstUnitOnSceneValue' templateId.root='2.16.840.1.1133883.17.3.10.1.85' moodCode='EVN' code.code='67481-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='First EMS unit on scene NEMSIS' constraints.validation.dependOn.FirstUnitOnSceneCode='FirstUnitOnSceneCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YEu7EBpMEeSd5OoVIuDNwg" base_Class="_wPLCkKK5EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ScenePatientCountTemplateId ScenePatientCountMoodCode ScenePatientCountCode ScenePatientCountCodeP ScenePatientCountValue' templateId.root='2.16.840.1.1133883.17.3.10.1.86' moodCode='EVN' code.code='67489-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Total patients at the scene NEMSIS' constraints.validation.dependOn.ScenePatientCountCode='ScenePatientCountCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YE1owBpMEeSd5OoVIuDNwg" base_Class="_E-SEAKK8EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MassCasualtyIndicatorTemplateId MassCasualtyIndicatorMoodCode MassCasualtyIndicatorCode MassCasualtyIndicatorCodeP MassCasualtyIndicatorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.87' moodCode='EVN' code.code='67490-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Mass casualty incident NEMSIS' constraints.validation.dependOn.MassCasualtyIndicatorCode='MassCasualtyIndicatorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YE89gBpMEeSd5OoVIuDNwg" base_Class="_ayUKMMk3EeK2gbjCtOEivw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LocationTypeObservationTemplateId LocationTypeObservationCode LocationTypeObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.88' code.code='74496-1' code.codeSystemName='' code.displayName='Injury location ICD code' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YFDrMBpMEeSd5OoVIuDNwg" base_Class="_p4XEAJ-kEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdverseEventIndicatorTemplateId AdverseEventIndicatorMoodCode AdverseEventIndicatorCode AdverseEventIndicatorCodeP AdverseEventIndicatorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.89' moodCode='EVN' code.code='67554-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Work related exposure, injury, or death Provider NEMSIS' constraints.validation.dependOn.AdverseEventIndicatorCode='AdverseEventIndicatorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YFLnABpMEeSd5OoVIuDNwg" base_Class="_gU4tMJ-lEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdverseEventTypeObservationTemplateId AdverseEventTypeObservationMoodCode AdverseEventTypeObservationCode AdverseEventTypeObservationCodeP AdverseEventTypeObservationValue AdverseEventTypeObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.90' moodCode='EVN' code.code='67555-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Work related exposure, injury, or death Provider NEMSIS type' constraints.validation.dependOn.AdverseEventTypeObservationCode='AdverseEventTypeObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YFV_EhpMEeSd5OoVIuDNwg" base_Class="_rNkl4GleEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BillingConditionTemplateId BillingConditionCode BillingConditionCodeP BillingConditionValue BillingConditionValueP BillingConditionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.91' code.code='67556-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS condition code NEMSIS  (Billing condition)' constraints.validation.dependOn.BillingConditionCode='BillingConditionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YFjacBpMEeSd5OoVIuDNwg" base_Class="_To2-YGleEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LevelOfServiceObservationTemplateId LevelOfServiceObservationMoodCode LevelOfServiceObservationCode LevelOfServiceObservationCodeP LevelOfServiceObservationValue LevelOfServiceObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.92' moodCode='EVN' code.code='69464-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Centers for medicare - medicaid, CMS, service level NEMSIS' constraints.validation.dependOn.LevelOfServiceObservationCode='LevelOfServiceObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YFuZkBpMEeSd5OoVIuDNwg" base_Class="_rDpggp-mEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolObservationTemplateId ProtocolObservationMoodCode ProtocolObservationCode ProtocolObservationCodeP ProtocolObservationValue ProtocolObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.93' moodCode='EVN' code.code='67537-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Protocol used NEMSIS' constraints.validation.dependOn.ProtocolObservationCode='ProtocolObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProtocolObservationProtocolAgeCategoryRelationship constraints.validation.error='ProtocolObservationProtocolAgeCategoryRelationshipProtocolAgeCategory'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YF5YsBpMEeSd5OoVIuDNwg" base_Class="_n-zaBZ-nEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CandidatePatientRegistryTypeTemplateId CandidatePatientRegistryTypeMoodCode CandidatePatientRegistryTypeCode CandidatePatientRegistryTypeCodeP CandidatePatientRegistryTypeValue CandidatePatientRegistryTypeValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.94' moodCode='EVN' code.code='67553-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Condition indicating eligibility for illness or injury registry NEMSIS' constraints.validation.dependOn.CandidatePatientRegistryTypeCode='CandidatePatientRegistryTypeCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YGOv4BpMEeSd5OoVIuDNwg" base_Class="_l_V6IJ-bEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseModeToSceneTemplateId ResponseModeToSceneMoodCode ResponseModeToSceneCode ResponseModeToSceneCodeP ResponseModeToSceneValue ResponseModeToSceneValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.182' moodCode='EVN' code.code='67482-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response mode to scene NEMSIS' constraints.validation.dependOn.ResponseModeToSceneCode='ResponseModeToSceneCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YGufIhpMEeSd5OoVIuDNwg" base_Class="_iWVVYIy-EeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfDrugAllergyObservationTemplateId ExistenceOfDrugAllergyObservationMoodCode ExistenceOfDrugAllergyObservationCode ExistenceOfDrugAllergyObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.102' moodCode='EVN' code.code='67794-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Does the patient have any medication allergies NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YGz-sRpMEeSd5OoVIuDNwg" base_Class="_t_nG0IzYEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfNonDrugAllergyTemplateId ExistenceOfNonDrugAllergyMoodCode ExistenceOfNonDrugAllergyCode ExistenceOfNonDrugAllergyValue' templateId.root='2.16.840.1.1133883.17.3.10.1.103' moodCode='EVN' code.code='69747-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Does the patient have any environmental allergies NEMSIS'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YG5eQBpMEeSd5OoVIuDNwg" base_Class="_UleZUIzZEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NonDrugAllergyTemplateId NonDrugAllergyMoodCode NonDrugAllergyCode NonDrugAllergyValue' templateId.root='2.16.840.1.1133883.17.3.10.1.104' moodCode='EVN' code.code='69748-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Known allergies to food or environmental agents Narrative NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YHAL8BpMEeSd5OoVIuDNwg" base_Class="_E9ekgJoxEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationNotAdministeredReasonObservationTemplateId MedicationNotAdministeredReasonObservationMoodCode MedicationNotAdministeredReasonObservationCode MedicationNotAdministeredReasonObservationValue MedicationNotAdministeredReasonObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.105' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YHIHwBpMEeSd5OoVIuDNwg" base_Class="_j9MusJsmEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationResponseObservationTemplateId MedicationResponseObservationMoodCode MedicationResponseObservationCode MedicationResponseObservationCodeP MedicationResponseObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.106' moodCode='EVN' code.code='67540-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response to medication NEMSIS' constraints.validation.dependOn.MedicationResponseObservationCode='MedicationResponseObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YHQDkRpMEeSd5OoVIuDNwg" base_Class="_Qzy_cJsnEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationComplicationObservationTemplateId MedicationComplicationObservationMoodCode MedicationComplicationObservationCode MedicationComplicationObservationCodeP MedicationComplicationObservationValue MedicationComplicationObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.107' moodCode='EVN' code.code='67541-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medication complication NEMSIS' constraints.validation.dependOn.MedicationComplicationObservationCode='MedicationComplicationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YHZ0kBpMEeSd5OoVIuDNwg" base_Class="_pVW0QJsoEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationPriorAdministrationObservationTemplateId MedicationPriorAdministrationObservationMoodCode MedicationPriorAdministrationObservationCode MedicationPriorAdministrationObservationCodeP MedicationPriorAdministrationObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.108' moodCode='EVN' code.code='67539-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medication administered prior to this unit's EMS care NEMSIS' constraints.validation.dependOn.MedicationPriorAdministrationObservationCode='MedicationPriorAdministrationObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YHgiQBpMEeSd5OoVIuDNwg" base_Class="_GGe8UJojEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientBodyWeightTemplateId PatientBodyWeightMoodCode PatientBodyWeightCode PatientBodyWeightValue' templateId.root='2.16.840.1.1133883.17.3.10.1.178' moodCode='EVN' code.code='8335-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Body weight Estimated'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YHmo4RpMEeSd5OoVIuDNwg" base_Class="_whTHIJojEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LengthBasedPatientBodyWeightClassTemplateId LengthBasedPatientBodyWeightClassMoodCode LengthBasedPatientBodyWeightClassCode LengthBasedPatientBodyWeightClassCodeP LengthBasedPatientBodyWeightClassEffectiveTime LengthBasedPatientBodyWeightClassValue' templateId.root='2.16.840.1.1133883.17.3.10.1.110' moodCode='EVN' code.code='67670-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Length-based tape measure category NEMSIS' constraints.validation.dependOn.LengthBasedPatientBodyWeightClassCode='LengthBasedPatientBodyWeightClassCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YHvy0BpMEeSd5OoVIuDNwg" base_Class="_bFfQYJokEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SkinAssessmentTemplateId SkinAssessmentMoodCode SkinAssessmentCode SkinAssessmentCodeP SkinAssessmentValue SkinAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.180' moodCode='EVN' code.code='67524-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Skin NEMSIS' constraints.validation.dependOn.SkinAssessmentCode='SkinAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YH6K4RpMEeSd5OoVIuDNwg" base_Class="_QU_s0JolEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FaceAssessmentTemplateId FaceAssessmentMoodCode FaceAssessmentCode FaceAssessmentCodeP FaceAssessmentEffectiveTime FaceAssessmentValue FaceAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.112' moodCode='EVN' code.code='67526-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Face NEMSIS' constraints.validation.dependOn.FaceAssessmentCode='FaceAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YIEi8RpMEeSd5OoVIuDNwg" base_Class="_6VcsUJokEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeadAssessmentTemplateId HeadAssessmentMoodCode HeadAssessmentCode HeadAssessmentCodeP HeadAssessmentEffectiveTime HeadAssessmentValue' templateId.root='2.16.840.1.1133883.17.3.10.1.113' moodCode='EVN' code.code='67525-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Head NEMSIS' constraints.validation.dependOn.HeadAssessmentCode='HeadAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YINs4RpMEeSd5OoVIuDNwg" base_Class="_oE3bcJolEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NeckAssessmentTemplateId NeckAssessmentMoodCode NeckAssessmentCode NeckAssessmentEffectiveTime NeckAssessmentValue' templateId.root='2.16.840.1.1133883.17.3.10.1.114' moodCode='EVN' code.code='67527-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Neck NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YIVBoBpMEeSd5OoVIuDNwg" base_Class="_CiNc8JomEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ChestAndLungsAssessmentTemplateId ChestAndLungsAssessmentMoodCode ChestAndLungsAssessmentCode ChestAndLungsAssessmentEffectiveTime ChestAndLungsAssessmentValue' templateId.root='2.16.840.1.1133883.17.3.10.1.115' moodCode='EVN' code.code='67528-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Chest+Lungs NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YIbvUBpMEeSd5OoVIuDNwg" base_Class="_Zjp_UJomEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeartAssessmentTemplateId HeartAssessmentMoodCode HeartAssessmentCode HeartAssessmentCodeP HeartAssessmentEffectiveTime HeartAssessmentValue HeartAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.116' moodCode='EVN' code.code='67529-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Heart NEMSIS' constraints.validation.dependOn.HeartAssessmentCode='HeartAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YIlgUhpMEeSd5OoVIuDNwg" base_Class="_WMI_AJooEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AbdomenAssessmentTemplateId AbdomenAssessmentMoodCode AbdomenAssessmentCode AbdomenAssessmentEffectiveTime AbdomenAssessmentValue AbdomenAssessmentTargetSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.117' moodCode='EVN' code.code='67530-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Abdomen NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YIuqQBpMEeSd5OoVIuDNwg" base_Class="_O7rMoJopEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PelvicAndGenitourinaryAssessmentTemplateId PelvicAndGenitourinaryAssessmentMoodCode PelvicAndGenitourinaryAssessmentCode PelvicAndGenitourinaryAssessmentEffectiveTime PelvicAndGenitourinaryAssessmentValue PelvicAndGenitourinaryAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.118' moodCode='EVN' code.code='67531-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Pelvis+Genitourinary NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YI30MBpMEeSd5OoVIuDNwg" base_Class="_pgmc0JopEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BackAndSpineAssessmentTemplateId BackAndSpineAssessmentMoodCode BackAndSpineAssessmentCode BackAndSpineAssessmentCodeP BackAndSpineAssessmentEffectiveTime BackAndSpineAssessmentValue BackAndSpineAssessmentValueP BackAndSpineAssessmentTargetSiteCode BackAndSpineAssessmentTargetSiteCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.119' moodCode='EVN' code.code='67532-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Back+Spine NEMSIS' constraints.validation.dependOn.BackAndSpineAssessmentCode='BackAndSpineAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YJF2oBpMEeSd5OoVIuDNwg" base_Class="_NK7yUJoqEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExtremitiesAssessmentTemplateId ExtremitiesAssessmentMoodCode ExtremitiesAssessmentCode ExtremitiesAssessmentCodeP ExtremitiesAssessmentEffectiveTime ExtremitiesAssessmentValue ExtremitiesAssessmentTargetSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.120' moodCode='EVN' code.code='67533-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Extremity NEMSIS' constraints.validation.dependOn.ExtremitiesAssessmentCode='ExtremitiesAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' constraints.validation.info='ExtremitiesAssessmentTargetSiteCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YJSD4BpMEeSd5OoVIuDNwg" base_Class="_rsLuIJoqEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EyeAssessmentTemplateId EyeAssessmentMoodCode EyeAssessmentCode EyeAssessmentCodeP EyeAssessmentEffectiveTime EyeAssessmentValue EyeAssessmentValueP EyeAssessmentTargetSiteCode EyeAssessmentTargetSiteCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.121' moodCode='EVN' code.code='67534-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical findings of Eye NEMSIS' constraints.validation.dependOn.EyeAssessmentCode='EyeAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YJgGUBpMEeSd5OoVIuDNwg" base_Class="_EyfEMJorEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MentalStatusAssessmentTemplateId MentalStatusAssessmentMoodCode MentalStatusAssessmentCode MentalStatusAssessmentValue' templateId.root='2.16.840.1.1133883.17.3.10.1.122' moodCode='EVN' code.code='67535-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Mental status assessment NEMSIS' constraints.validation.info='MentalStatusAssessmentCodeP' constraints.validation.dependOn.MentalStatusAssessmentCode='MentalStatusAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YJoCIBpMEeSd5OoVIuDNwg" base_Class="_A65pUHwIEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestWithTimingTemplateId CardiacArrestWithTimingMoodCode CardiacArrestWithTimingCode CardiacArrestWithTimingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.123' moodCode='EVN' code.code='67502-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac arrest NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YJuIwBpMEeSd5OoVIuDNwg" base_Class="_tcPw4HwKEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestCauseTemplateId CardiacArrestCauseMoodCode CardiacArrestCauseCode CardiacArrestCauseValue' templateId.root='2.16.840.1.1133883.17.3.10.1.124' moodCode='EVN' code.code='67503-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac arrest cause NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YKFVIBpMEeSd5OoVIuDNwg" base_Class="_Ia0ocHwREeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ArrestRhythmTemplateId ArrestRhythmMoodCode ArrestRhythmCode ArrestRhythmValue' templateId.root='2.16.840.1.1133883.17.3.10.1.127' moodCode='EVN' code.code='67512-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='First monitored rhythm NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YKLbwBpMEeSd5OoVIuDNwg" base_Class="_gnLCQHwSEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReturnOfSpontaneousCirculationTemplateId ReturnOfSpontaneousCirculationMoodCode ReturnOfSpontaneousCirculationCode ReturnOfSpontaneousCirculationValue ReturnOfSpontaneousCirculationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.128' moodCode='EVN' code.code='67513-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Return of spontaneous circulation NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YKTXkBpMEeSd5OoVIuDNwg" base_Class="_khXxgHwTEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DestinationRhythmTemplateId DestinationRhythmMoodCode DestinationRhythmCode DestinationRhythmValue' templateId.root='2.16.840.1.1133883.17.3.10.1.129' moodCode='EVN' code.code='67519-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac rhythm NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YKZeMhpMEeSd5OoVIuDNwg" base_Class="_edpw0JuqEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AbandonedProcedureReasonObservationTemplateId AbandonedProcedureReasonObservationMoodCode AbandonedProcedureReasonObservationCode AbandonedProcedureReasonObservationCodeP AbandonedProcedureReasonObservationValue AbandonedProcedureReasonObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.130' moodCode='EVN' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.AbandonedProcedureReasonObservationCode='AbandonedProcedureReasonObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YKkdUBpMEeSd5OoVIuDNwg" base_Class="_0IBaIJ0sEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedurePriorIndicatorTemplateId ProcedurePriorIndicatorMoodCode ProcedurePriorIndicatorCode ProcedurePriorIndicatorCodeP ProcedurePriorIndicatorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.131' moodCode='EVN' code.code='67542-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure performed prior to this units EMS care NEMSIS' constraints.validation.dependOn.ProcedurePriorIndicatorCode='ProcedurePriorIndicatorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YKrLABpMEeSd5OoVIuDNwg" base_Class="_iZg7kJ0tEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureNumberOfAttemptsObservationTemplateId ProcedureNumberOfAttemptsObservationMoodCode ProcedureNumberOfAttemptsObservationCode ProcedureNumberOfAttemptsObservationCodeP ProcedureNumberOfAttemptsObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.132' moodCode='EVN' code.code='67543-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure attempts [#] NEMSIS' constraints.validation.dependOn.ProcedureNumberOfAttemptsObservationCode='ProcedureNumberOfAttemptsObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YKx4sBpMEeSd5OoVIuDNwg" base_Class="_D32TkJ0uEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureSuccessfulObservationTemplateId ProcedureSuccessfulObservationMoodCode ProcedureSuccessfulObservationCode ProcedureSuccessfulObservationCodeP ProcedureSuccessfulObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.133' moodCode='EVN' code.code='67544-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure successful NEMSIS' constraints.validation.dependOn.ProcedureSuccessfulObservationCode='ProcedureSuccessfulObservationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YK50gBpMEeSd5OoVIuDNwg" base_Class="_lVl1sJ0uEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureComplicationsObservationTemplateId ProcedureComplicationsObservationMoodCode ProcedureComplicationsObservationCode ProcedureComplicationsObservationCodeP ProcedureComplicationsObservationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.179' moodCode='EVN' code.code='67545-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure complication NEMSIS' constraints.validation.dependOn.ProcedureComplicationsObservationCode='ProcedureComplicationsObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YLDlgBpMEeSd5OoVIuDNwg" base_Class="_Z3nhEJ0vEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedurePatientResponseObservationTemplateId ProcedurePatientResponseObservationMoodCode ProcedurePatientResponseObservationCode ProcedurePatientResponseObservationCodeP ProcedurePatientResponseObservationValue ProcedurePatientResponseObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.135' moodCode='EVN' code.code='67546-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response to procedure NEMSIS' constraints.validation.dependOn.ProcedurePatientResponseObservationCode='ProcedurePatientResponseObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YLMvcBpMEeSd5OoVIuDNwg" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AirwayConfirmationObservationTemplateId AirwayConfirmationObservationMoodCode AirwayConfirmationObservationCode AirwayConfirmationObservationCodeP AirwayConfirmationObservationEffectiveTime AirwayConfirmationObservationValue AirwayConfirmationObservationMethodCode AirwayConfirmationObservationMethodCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.175' moodCode='EVN' code.code='71576-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Airway device placement confirmation NEMSIS' constraints.validation.dependOn.AirwayConfirmationObservationCode='AirwayConfirmationObservationCodeP' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YLYVoRpMEeSd5OoVIuDNwg" base_Class="_N8t6kFhWEeK-i8RB1gvLUA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonProcedureNotAttemptedObservationTemplateId ReasonProcedureNotAttemptedObservationMoodCode ReasonProcedureNotAttemptedObservationCode ReasonProcedureNotAttemptedObservationValue ReasonProcedureNotAttemptedObservationValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.137' moodCode='EVN' code.code='67504-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Reason resuscitation not attempted NEMSIS' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YLfqYhpMEeSd5OoVIuDNwg" base_Class="_4ZsacKg_EeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintTypeTemplateId ComplaintTypeMoodCode ComplaintTypeCode ComplaintTypeCodeP ComplaintTypeValue ComplaintTypeValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.138' moodCode='EVN' code.code='72114-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complaint NEMSIS' constraints.validation.dependOn.ComplaintTypeCode='ComplaintTypeCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YLpbYRpMEeSd5OoVIuDNwg" base_Class="_g93MsKhAEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintDurationTemplateId ComplaintDurationMoodCode ComplaintDurationCode ComplaintDurationCodeP ComplaintDurationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.139' moodCode='EVN' code.code='67491-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Duration of chief complaint NEMSIS' constraints.validation.dependOn.ComplaintDurationCode='ComplaintDurationCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YLviAhpMEeSd5OoVIuDNwg" base_Class="_YMy4UKhDEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintOrganSystemTemplateId ComplaintOrganSystemMoodCode ComplaintOrganSystemCode ComplaintOrganSystemCodeP ComplaintOrganSystemValue ComplaintOrganSystemValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.140' moodCode='EVN' code.code='69468-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Primary anatomic organ system of chief complaint NEMSIS' constraints.validation.dependOn.ComplaintOrganSystemCode='ComplaintOrganSystemCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YL56EBpMEeSd5OoVIuDNwg" base_Class="_gBOGYJorEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NeurologicalAssessmentTemplateId NeurologicalAssessmentMoodCode NeurologicalAssessmentCode NeurologicalAssessmentCodeP NeurologicalAssessmentValue NeurologicalAssessmentValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.141' moodCode='EVN' code.code='67536-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Neurological assessment Nervous system NEMSIS' constraints.validation.dependOn.NeurologicalAssessmentCode='NeurologicalAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_YMDEABpMEeSd5OoVIuDNwg" base_Generalization="_PIqGIIzrEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_YMESIBpMEeSd5OoVIuDNwg" base_Class="_Orea4IzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignObservationTemplateId SystolicBloodPressureMoodCode SystolicBloodPressureCode VitalSignObservationEffectiveTime SystolicBloodPressureValue' templateId.root='2.16.840.1.113883.17.3.10.1.23.1' moodCode='EVN' code.code='8480-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Systolic blood pressure'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_YMKYwBpMEeSd5OoVIuDNwg" base_Generalization="_mVKpAIzrEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_YMK_0BpMEeSd5OoVIuDNwg" base_Class="_l4xA4IzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignObservationTemplateId DiastolicBloodPressureMoodCode DiastolicBloodPressureCode DiastolicBloodPressureValue' templateId.root='2.16.840.1.1133883.17.3.10.1.144' moodCode='EVN' code.code='8462-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Diastolic blood pressure' constraints.validation.info='DiastolicBloodPressureEffectiveTime'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_YMQfYBpMEeSd5OoVIuDNwg" base_Generalization="_AA5nYIzsEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_YMRGcBpMEeSd5OoVIuDNwg" base_Class="__qJ7UIzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignObservationTemplateId HeartRateMoodCode HeartRateCode HeartRateCodeP HeartRateValue' templateId.root='2.16.840.1.1133883.17.3.10.1.145' moodCode='EVN' code.code='8867-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Heart rate' constraints.validation.dependOn.HeartRateCode='HeartRateCodeP' constraints.validation.info='HeartRateEffectiveTime'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_YMYbMBpMEeSd5OoVIuDNwg" base_Generalization="_RN10gIzsEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_YMZCQBpMEeSd5OoVIuDNwg" base_Class="_Q7VIMIzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignObservationTemplateId RespiratoryRateMoodCode RespiratoryRateCode RespiratoryRateValue' templateId.root='2.16.840.1.1133883.17.3.10.1.146' moodCode='EVN' code.code='9279-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Respiratory rate' constraints.validation.info='RespiratoryRateEffectiveTime'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_YMfI4BpMEeSd5OoVIuDNwg" base_Generalization="_k_CuIIzsEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_YMfv8BpMEeSd5OoVIuDNwg" base_Class="_koRz8IzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VitalSignObservationTemplateId BodyTemperatureMoodCode BodyTemperatureCode BodyTemperatureValue' templateId.root='2.16.840.1.1133883.17.3.10.1.176' moodCode='EVN' code.code='8310-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Body temperature' constraints.validation.info='BodyTemperatureEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YMl2kRpMEeSd5OoVIuDNwg" base_Class="_01XGkIzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OxygenSaturationTemplateId OxygenSaturationMoodCode OxygenSaturationCode OxygenSaturationValue' templateId.root='2.16.840.1.1133883.17.3.10.1.177' moodCode='EVN' code.code='2708-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Oxygen saturation in Arterial blood'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YMr9MBpMEeSd5OoVIuDNwg" base_Class="_MjD2kJ-nEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolAgeCategoryTemplateId ProtocolAgeCategoryMoodCode ProtocolAgeCategoryCode ProtocolAgeCategoryCodeP ProtocolAgeCategoryValue ProtocolAgeCategoryValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.149' moodCode='EVN' code.code='67538-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Protocol age category NEMSIS' constraints.validation.dependOn.ProtocolAgeCategoryCode='ProtocolAgeCategoryCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YM1HIRpMEeSd5OoVIuDNwg" base_Class="_lC10cJ-BEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationNameTemplateId DispatchLocationNameMoodCode DispatchLocationNameCode DispatchLocationNameValue' templateId.root='2.16.840.1.1133883.17.3.10.1.150' moodCode='EVN' code.code='69466-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vehicle location Vehicle NEMSIS --at dispatch'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YM5_ohpMEeSd5OoVIuDNwg" base_Class="_sPMP9p-NEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationLatitudeTemplateId DispatchLocationLatitudeMoodCode DispatchLocationLatitudeCode DispatchLocationLatitudeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.151' moodCode='EVN' code.code='52002-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Ambulance transport, Destination site latitude coordinate'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YM_fMBpMEeSd5OoVIuDNwg" base_Class="_UGLMFZ-OEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationLongitudeTemplateId DispatchLocationLongitudeMoodCode DispatchLocationLongitudeCode DispatchLocationLongitudeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.152' moodCode='EVN' code.code='52003-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Ambulance transport, Destination site longitude coordinate'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YNEXsBpMEeSd5OoVIuDNwg" base_Class="_9i0HIJ99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchDelayTemplateId DispatchDelayMoodCode DispatchDelayCode DispatchDelayCodeP DispatchDelayValue DispatchDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.153' moodCode='EVN' code.code='67480-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch delay NEMSIS' constraints.validation.dependOn.DispatchDelayCode='DispatchDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YNNhohpMEeSd5OoVIuDNwg" base_Class="_pCK4JZ9-EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseDelayTemplateId ResponseDelayMoodCode ResponseDelayCode ResponseDelayCodeP ResponseDelayValue ResponseDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.154' moodCode='EVN' code.code='67557-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response delay NEMSIS' constraints.validation.dependOn.ResponseDelayCode='ResponseDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YNX5sBpMEeSd5OoVIuDNwg" base_Class="_Vo79JZ9_EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SceneDelayTemplateId SceneDelayMoodCode SceneDelayCode SceneDelayCodeP SceneDelayValue SceneDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.155' moodCode='EVN' code.code='67558-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Scene delay NEMSIS' constraints.validation.dependOn.SceneDelayCode='SceneDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YNhDohpMEeSd5OoVIuDNwg" base_Class="_4qwhJZ9_EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportDelayTemplateId TransportDelayMoodCode TransportDelayCode TransportDelayCodeP TransportDelayValue TransportDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.156' moodCode='EVN' code.code='67559-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport delay NEMSIS' constraints.validation.dependOn.TransportDelayCode='TransportDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YNrbsBpMEeSd5OoVIuDNwg" base_Class="_e7LIFZ-AEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TurnaroundDelayTemplateId TurnaroundDelayMoodCode TurnaroundDelayCode TurnaroundDelayCodeP TurnaroundDelayValue TurnaroundDelayValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.157' moodCode='EVN' code.code='67560-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Turn-around delay NEMSIS' constraints.validation.dependOn.TurnaroundDelayCode='TurnaroundDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YN0lohpMEeSd5OoVIuDNwg" base_Class="_WduLAIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowTotalTemplateId GlasgowTotalMoodCode GlasgowTotalCode GlasgowTotalCodeP GlasgowTotalValue' templateId.root='2.16.840.1.1133883.17.3.10.1.158' moodCode='EVN' code.code='9269-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.total' constraints.validation.dependOn.GlasgowTotalCode='GlasgowTotalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YN76YBpMEeSd5OoVIuDNwg" base_Class="_ZLqX8IzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowQualifierTemplateId GlasgowQualifierMoodCode GlasgowQualifierCode GlasgowQualifierCodeP GlasgowQualifierValue' templateId.root='2.16.840.1.1133883.17.3.10.1.159' moodCode='EVN' code.code='55285-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score special circumstances' constraints.validation.dependOn.GlasgowQualifierCode='GlasgowQualifierCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' constraints.validation.info='GlasgowQualifierValueP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YOFEUBpMEeSd5OoVIuDNwg" base_Class="_bxS9cIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowEyeTemplateId GlasgowEyeMoodCode GlasgowEyeCode GlasgowEyeCodeP GlasgowEyeValue' templateId.root='2.16.840.1.1133883.17.3.10.1.160' moodCode='EVN' code.code='9267-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.eye opening' constraints.validation.dependOn.GlasgowEyeCode='GlasgowEyeCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YOLK8BpMEeSd5OoVIuDNwg" base_Class="_eKfCYIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowMotorTemplateId GlasgowMotorMoodCode GlasgowMotorCode GlasgowMotorCodeP GlasgowMotorValue' templateId.root='2.16.840.1.1133883.17.3.10.1.176' moodCode='EVN' code.code='9268-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.motor' constraints.validation.dependOn.GlasgowMotorCode='GlasgowMotorCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YOR4ohpMEeSd5OoVIuDNwg" base_Class="_hLJ-EIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowVerbalTemplateId GlasgowVerbalMoodCode GlasgowVerbalCode GlasgowVerbalCodeP GlasgowVerbalValue' templateId.root='2.16.840.1.1133883.17.3.10.1.162' moodCode='EVN' code.code='9270-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.verbal' constraints.validation.dependOn.GlasgowVerbalCode='GlasgowVerbalCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YOYmUBpMEeSd5OoVIuDNwg" base_Class="_9koR4IzuEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='StrokeScoreTemplateId StrokeScoreMoodCode StrokeScoreCode StrokeScoreCodeP StrokeScoreValue StrokeScoreValueP StrokeScoreMethodCode StrokeScoreMethodCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.163' moodCode='EVN' code.code='67520-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Stroke scale overall interpretation NEMSIS' constraints.validation.dependOn.StrokeScoreCode='StrokeScoreCodeP' constraints.validation.info='StrokeScoreEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YOmowhpMEeSd5OoVIuDNwg" base_Class="_lnVLQIzuEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PainScoreTemplateId PainScoreMoodCode PainScoreCode' templateId.root='2.16.840.1.1133883.17.3.10.1.164' moodCode='EVN' code.code='56840-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Pain severity verbal numeric scale' constraints.validation.info='PainScoreEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YOsIUBpMEeSd5OoVIuDNwg" base_Class="_xgaHgIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LevelOfResponsivenessTemplateId LevelOfResponsivenessMoodCode LevelOfResponsivenessCode LevelOfResponsivenessCodeP LevelOfResponsivenessValue LevelOfResponsivenessValueP' templateId.root='2.16.840.1.1133883.17.3.10.1.165' moodCode='EVN' code.code='67775-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Level of responsiveness NEMSIS' constraints.validation.dependOn.LevelOfResponsivenessCode='LevelOfResponsivenessCodeP' constraints.validation.info='LevelOfResponsivenessEffectiveTime' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YO2gYBpMEeSd5OoVIuDNwg" base_Class="_jmDsgIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BloodGlucoseTemplateId BloodGlucoseMoodCode BloodGlucoseCode BloodGlucoseCodeP BloodGlucoseValue' templateId.root='2.16.840.1.1133883.17.3.10.1.166' moodCode='EVN' code.code='2339-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glucose [Mass/???volume] in Blood' constraints.validation.dependOn.BloodGlucoseCode='BloodGlucoseCodeP' constraints.validation.info='BloodGlucoseEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YO91IhpMEeSd5OoVIuDNwg" base_Class="_WFit0IztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CarbonMonoxideTemplateId CarbonMonoxideMoodCode CarbonMonoxideCode CarbonMonoxideCodeP CarbonMonoxideValue' templateId.root='2.16.840.1.1133883.17.3.10.1.167' moodCode='EVN' code.code='20563-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Carboxyhemoglobin/???Hemoglobin.total in Blood' constraints.validation.dependOn.CarbonMonoxideCode='CarbonMonoxideCodeP' constraints.validation.info='CarbonMonoxideEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YPFw8hpMEeSd5OoVIuDNwg" base_Class="_IU2lIIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CarbonDioxideTemplateId CarbonDioxideMoodCode CarbonDioxideCode CarbonDioxideCodeP CarbonDioxideValue' templateId.root='2.16.840.1.1133883.17.3.10.1.168' moodCode='EVN' code.code='19889-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Carbon dioxide/Gas.total.at end expiration in Exhaled gas' constraints.validation.dependOn.CarbonDioxideCode='CarbonDioxideCodeP' constraints.validation.info='CarbonDioxideEffectiveTime'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YPjD8BpMEeSd5OoVIuDNwg" base_Class="_k-cIsJ-ZEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseBeginningOdometerReadingTemplateId ResponseBeginningOdometerReadingMoodCode ResponseBeginningOdometerReadingCode ResponseBeginningOdometerReadingCodeP ResponseBeginningOdometerReadingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.171' moodCode='EVN' code.code='67484-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Counter or odometer reading NEMSIS --beginning of call' constraints.validation.dependOn.ResponseBeginningOdometerReadingCode='ResponseBeginningOdometerReadingCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YPpxoBpMEeSd5OoVIuDNwg" base_Class="_ib1zpZ-aEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseOnSceneOdometerReadingTemplateId ResponseOnSceneOdometerReadingMoodCode ResponseOnSceneOdometerReadingCode ResponseOnSceneOdometerReadingCodeP ResponseOnSceneOdometerReadingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.172' moodCode='EVN' code.code='67485-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Counter or odometer reading NEMSIS --patient arrival' constraints.validation.dependOn.ResponseOnSceneOdometerReadingCode='ResponseOnSceneOdometerReadingCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YPv4QhpMEeSd5OoVIuDNwg" base_Class="_7kghNZ-aEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseDestinationOdometerReadingTemplateId ResponseDestinationOdometerReadingMoodCode ResponseDestinationOdometerReadingCode ResponseDestinationOdometerReadingCodeP ResponseDestinationOdometerReadingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.173' moodCode='EVN' code.code='67486-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Counter or odometer reading NEMSIS --patient destination' constraints.validation.dependOn.ResponseDestinationOdometerReadingCode='ResponseDestinationOdometerReadingCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YP2l8RpMEeSd5OoVIuDNwg" base_Class="_TCM6tZ-bEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseEndingOdometerReadingTemplateId ResponseEndingOdometerReadingMoodCode ResponseEndingOdometerReadingCode ResponseEndingOdometerReadingCodeP ResponseEndingOdometerReadingValue' templateId.root='2.16.840.1.1133883.17.3.10.1.174' moodCode='EVN' code.code='67487-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Counter or odometer reading NEMSIS --end of call' constraints.validation.dependOn.ResponseEndingOdometerReadingCode='ResponseEndingOdometerReadingCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YP_v4hpMEeSd5OoVIuDNwg" base_Class="_p9u6QKi8EeO8-7uoZJhFOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='NonDrugAllergyOrganizerActuallyDregEMSDrugAllergy' constraints.validation.error='NonDrugAllergyOrganizerActuallyDregExistenceOfDrugAllergyObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_YQCzMBpMEeSd5OoVIuDNwg" base_Class="_JHDCEK9UEeO6uquZyO0R2Q">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='EMSDrugAllergyOrganizerEMSDrugAllergy' constraints.validation.error='EMSDrugAllergyOrganizerExistenceOfDrugAllergyObservation'</annotation>
  </Ecore:EClass>
</xmi:XMI>
