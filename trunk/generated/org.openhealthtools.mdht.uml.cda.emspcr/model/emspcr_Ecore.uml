<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_xpUkQGeQEeGtXKebdWh3hg" name="emspcr">
    <packageImport xmi:id="_x1tacGeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2B30sBSVEeGGzu7fmW9pXw"/>
    </packageImport>
    <packageImport xmi:id="_x1tacWeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_x1tacmeQEeGtXKebdWh3hg">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.emspcr.model/model/emspcr-vocab.uml#_xpzscGeQEeGtXKebdWh3hg"/>
    </packageImport>
    <packageImport xmi:id="_alO60EU9EeKcguOHLOhl3Q">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_xs1LQWeQEeGtXKebdWh3hg" name="PatientCareReport">
      <ownedRule xmi:id="_i2I2cdOaEeKU4pFWxuU9dw" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2I2ctOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i2L5wNOaEeKU4pFWxuU9dw" name="PatientCareReportClassCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2L5wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('classCode') and self.classCode=vocab::ActClinicalDocument::DOCCLIN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i2O9ENOaEeKU4pFWxuU9dw" name="PatientCareReportMoodCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2O9EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode') and self.moodCode=vocab::ActMood::EVN</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i2YHANOaEeKU4pFWxuU9dw" name="PatientCareReportCodeP" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2YHAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i2TOgNOaEeKU4pFWxuU9dw" name="PatientCareReportCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2T1kNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67796-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i2cYcNOaEeKU4pFWxuU9dw" name="PatientCareReportTitle" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2c_gNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Patient Care Report')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i2gp4NOaEeKU4pFWxuU9dw" name="PatientCareReportVersionNumber" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2gp4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.versionNumber.oclIsUndefined() or self.versionNumber.isNullFlavorUndefined()) implies (not self.versionNumber.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i2jGINOaEeKU4pFWxuU9dw" name="PatientCareReportId" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2jtMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.id.oclIsUndefined() or self.id.isNullFlavorUndefined()) implies (not self.id.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i2rB8NOaEeKU4pFWxuU9dw" name="PatientCareReportConfidentialityCode" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i2rB8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.confidentialityCode.oclIsUndefined() or self.confidentialityCode.isNullFlavorUndefined()) implies (not self.confidentialityCode.oclIsUndefined() and self.confidentialityCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.confidentialityCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.5.25' and (value.code = 'N' or value.code = 'R' or value.code = 'V'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5FcwNOaEeKU4pFWxuU9dw" name="PatientCareReportRecordTarget" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5FcwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.recordTarget->one(recordTarget : cda::RecordTarget | not recordTarget.oclIsUndefined() and recordTarget.oclIsKindOf(cda::RecordTarget))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5u9ANOaEeKU4pFWxuU9dw" name="PatientCareReportBilling" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5u9AdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::BillingSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7cNMNOaEeKU4pFWxuU9dw" name="PatientCareReportCurrentMedication" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7cNMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::CurrentMedicationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7epcNOaEeKU4pFWxuU9dw" name="PatientCareReportCardiacArrestEvent" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7epcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::CardiacArrestEventSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7hswNOaEeKU4pFWxuU9dw" name="PatientCareReportAdvanceDirectives" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7hswdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7tS8NOaEeKU4pFWxuU9dw" name="PatientCareReportAllergiesAndAdverseReactionsSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7t6ANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::AllergiesAndAdverseReactionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7wWQNOaEeKU4pFWxuU9dw" name="PatientCareReportPastMedicalHistory" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7wWQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PastMedicalHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8GUgNOaEeKU4pFWxuU9dw" name="PatientCareReportSocialHistory" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8GUgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i88CANOaEeKU4pFWxuU9dw" name="PatientCareReportPhysicalAssessmentSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i88CAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PhysicalAssessmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9pMoNOaEeKU4pFWxuU9dw" name="PatientCareReportMedicationsAdministeredSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9pModOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::MedicationsAdministeredSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-jLkNOaEeKU4pFWxuU9dw" name="PatientCareReportProceduresPerformedSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-jLkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ProceduresPerformedSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-37sNOaEeKU4pFWxuU9dw" name="PatientCareReportPatientCareNarrative" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-37sdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PatientCareNarrativeSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBJMkNOaEeKU4pFWxuU9dw" name="PatientCareReportSceneSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBJMkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SceneSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jB1JENOaEeKU4pFWxuU9dw" name="PatientCareReportComponentOf" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jB1JEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.componentOf->one(componentOf : cda::Component1 | not componentOf.oclIsUndefined() and componentOf.oclIsKindOf(cda::Component1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCKgQNOaEeKU4pFWxuU9dw" name="PatientCareReportDispatchSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCKgQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::DispatchSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCM8gNOaEeKU4pFWxuU9dw" name="PatientCareReportDispositionSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCM8gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::DispositionSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCPYwNOaEeKU4pFWxuU9dw" name="PatientCareReportPersonnelAdverseEventSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCPYwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PersonnelAdverseEventSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCR1ANOaEeKU4pFWxuU9dw" name="PatientCareReportProtocolSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCR1AdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ProtocolSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCVfYNOaEeKU4pFWxuU9dw" name="PatientCareReportResponseSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCVfYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ResponseSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCX7oNOaEeKU4pFWxuU9dw" name="PatientCareReportSituationSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCX7odOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SituationSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCaX4NOaEeKU4pFWxuU9dw" name="PatientCareReportTimesSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCaX4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::TimesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCc0INOaEeKU4pFWxuU9dw" name="PatientCareReportVitalSignsSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCdbMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCf3cNOaEeKU4pFWxuU9dw" name="PatientCareReportAuthorParticipation" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCf3cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.author->one(author : cda::Author | not author.oclIsUndefined() and author.oclIsKindOf(cda::Author))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jChsoNOaEeKU4pFWxuU9dw" name="PatientCareReportCustodian" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jChsodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.custodian->one(custodian : cda::Custodian | not custodian.oclIsUndefined() and custodian.oclIsKindOf(cda::Custodian))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCjh0NOaEeKU4pFWxuU9dw" name="PatientCareReportDocumentationOf" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCjh0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.documentationOf->one(documentationOf : cda::DocumentationOf | not documentationOf.oclIsUndefined() and documentationOf.oclIsKindOf(cda::DocumentationOf))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jClXANOaEeKU4pFWxuU9dw" name="PatientCareReportRelatedDocument" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jClXAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.relatedDocument->one(relatedDocument : cda::RelatedDocument | not relatedDocument.oclIsUndefined() and relatedDocument.oclIsKindOf(cda::RelatedDocument))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCnMMNOaEeKU4pFWxuU9dw" name="PatientCareReportParticipant" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCnMMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant1 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant1))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3oIoNOaEeKU4pFWxuU9dw" name="PatientCareReportInjuryIncidentDescriptionSection" constrainedElement="_xs1LQWeQEeGtXKebdWh3hg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3oIodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::InjuryIncidentDescriptionSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xs3ngWeQEeGtXKebdWh3hg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2DNRcBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_i5wyMNOaEeKU4pFWxuU9dw" name="getBilling" isQuery="true" bodyCondition="_i5wyM9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i5wyM9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i5wyMNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5wyNNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::BillingSection))->asSequence()->any(true).oclAsType(emspcr::BillingSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i5wyMdOaEeKU4pFWxuU9dw" type="_S-YTcGldEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i5wyMtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i7eCYNOaEeKU4pFWxuU9dw" name="getCurrentMedication" isQuery="true" bodyCondition="_i7eCY9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i7eCY9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i7eCYNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7eCZNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::CurrentMedicationSection))->asSequence()->any(true).oclAsType(emspcr::CurrentMedicationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i7eCYdOaEeKU4pFWxuU9dw" type="_aDO5AIcnEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i7eCYtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i7geoNOaEeKU4pFWxuU9dw" name="getCardiacArrestEvent" isQuery="true" bodyCondition="_i7geo9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i7geo9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i7geoNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7gepNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::CardiacArrestEventSection))->asSequence()->any(true).oclAsType(emspcr::CardiacArrestEventSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i7geodOaEeKU4pFWxuU9dw" type="_pIikMHwDEeGW3cDolvqrTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i7geotOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i7i64NOaEeKU4pFWxuU9dw" name="getAdvanceDirectives" isQuery="true" bodyCondition="_i7i649OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i7i649OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i7i64NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7jh8NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::AdvanceDirectivesSection))->asSequence()->any(true).oclAsType(emspcr::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i7i64dOaEeKU4pFWxuU9dw" type="_i4C-AH9aEeGht55Sz1eBOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i7i64tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i7vIINOaEeKU4pFWxuU9dw" name="getAllergiesAndAdverseReactionsSection" isQuery="true" bodyCondition="_i7vII9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i7vII9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i7vIINOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7vIJNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::AllergiesAndAdverseReactionsSection))->asSequence()->any(true).oclAsType(emspcr::AllergiesAndAdverseReactionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i7vIIdOaEeKU4pFWxuU9dw" type="_nSjIgH9cEeGht55Sz1eBOw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i7vIItOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i7xkYNOaEeKU4pFWxuU9dw" name="getPastMedicalHistory" isQuery="true" bodyCondition="_i7xkY9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i7xkY9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i7xkYNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7yLcNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PastMedicalHistorySection))->asSequence()->any(true).oclAsType(emspcr::PastMedicalHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i7xkYdOaEeKU4pFWxuU9dw" type="_VtMvAIzcEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i7xkYtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i8IJsNOaEeKU4pFWxuU9dw" name="getSocialHistory" isQuery="true" bodyCondition="_i8IJs9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i8IJs9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i8IJsNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8IJtNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SocialHistorySection))->asSequence()->any(true).oclAsType(emspcr::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i8IJsdOaEeKU4pFWxuU9dw" type="_1XH7YIziEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i8IJstOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i89QINOaEeKU4pFWxuU9dw" name="getPhysicalAssessmentSection" isQuery="true" bodyCondition="_i893MdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i893MdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_i89QINOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i893MtOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PhysicalAssessmentSection))->asSequence()->any(true).oclAsType(emspcr::PhysicalAssessmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i89QIdOaEeKU4pFWxuU9dw" type="_6223oJohEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i893MNOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i9rB0NOaEeKU4pFWxuU9dw" name="getMedicationsAdministeredSection" isQuery="true" bodyCondition="_i9rB09OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i9rB09OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i9rB0NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9rB1NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::MedicationsAdministeredSection))->asSequence()->any(true).oclAsType(emspcr::MedicationsAdministeredSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i9rB0dOaEeKU4pFWxuU9dw" type="_c7crcJovEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i9rB0tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i-lAwNOaEeKU4pFWxuU9dw" name="getProceduresPerformedSection" isQuery="true" bodyCondition="_i-lAw9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i-lAw9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i-lAwNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-lAxNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ProceduresPerformedSection))->asSequence()->any(true).oclAsType(emspcr::ProceduresPerformedSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i-lAwdOaEeKU4pFWxuU9dw" type="_4QFw8JumEeGzXI65shd6Fw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i-lAwtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i-5J0NOaEeKU4pFWxuU9dw" name="getPatientCareNarrative" isQuery="true" bodyCondition="_i-5J09OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i-5J09OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i-5J0NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-5w4NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PatientCareNarrativeSection))->asSequence()->any(true).oclAsType(emspcr::PatientCareNarrativeSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i-5J0dOaEeKU4pFWxuU9dw" type="_iDmQYJ9mEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i-5J0tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jBLBwNOaEeKU4pFWxuU9dw" name="getSceneSection" isQuery="true" bodyCondition="_jBLBw9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jBLBw9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jBLBwNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBLBxNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SceneSection))->asSequence()->any(true).oclAsType(emspcr::SceneSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jBLBwdOaEeKU4pFWxuU9dw" type="_h3A8IKK3EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jBLBwtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jCLuYNOaEeKU4pFWxuU9dw" name="getDispatchSection" isQuery="true" bodyCondition="_jCLuY9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jCLuY9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jCLuYNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCMVcNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::DispatchSection))->asSequence()->any(true).oclAsType(emspcr::DispatchSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jCLuYdOaEeKU4pFWxuU9dw" type="_OV4TIJ9nEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jCLuYtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jCOKoNOaEeKU4pFWxuU9dw" name="getDispositionSection" isQuery="true" bodyCondition="_jCOxsNOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jCOxsNOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jCOKoNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCOxsdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::DispositionSection))->asSequence()->any(true).oclAsType(emspcr::DispositionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jCOKodOaEeKU4pFWxuU9dw" type="_i-lM8J-dEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jCOKotOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jCQm4NOaEeKU4pFWxuU9dw" name="getPersonnelAdverseEventSection" isQuery="true" bodyCondition="_jCRN8tOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jCRN8tOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jCQm4NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCRN89OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::PersonnelAdverseEventSection))->asSequence()->any(true).oclAsType(emspcr::PersonnelAdverseEventSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jCRN8NOaEeKU4pFWxuU9dw" type="_GGotEJ-kEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jCRN8dOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jCTqMNOaEeKU4pFWxuU9dw" name="getProtocolSection" isQuery="true" bodyCondition="_jCURQNOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jCURQNOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jCTqMNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCURQdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ProtocolSection))->asSequence()->any(true).oclAsType(emspcr::ProtocolSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jCTqMdOaEeKU4pFWxuU9dw" type="_aK7P4J-mEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jCTqMtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jCWtgNOaEeKU4pFWxuU9dw" name="getResponseSection" isQuery="true" bodyCondition="_jCXUkNOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jCXUkNOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jCWtgNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCXUkdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::ResponseSection))->asSequence()->any(true).oclAsType(emspcr::ResponseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jCWtgdOaEeKU4pFWxuU9dw" type="_LI7M8J99EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jCWtgtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jCZJwNOaEeKU4pFWxuU9dw" name="getSituationSection" isQuery="true" bodyCondition="_jCZw0dOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jCZw0dOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jCZJwNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCZw0tOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::SituationSection))->asSequence()->any(true).oclAsType(emspcr::SituationSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jCZJwdOaEeKU4pFWxuU9dw" type="_olqMIKK8EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jCZw0NOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jCcNENOaEeKU4pFWxuU9dw" name="getTimesSection" isQuery="true" bodyCondition="_jCcNE9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jCcNE9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jCcNENOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCcNFNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::TimesSection))->asSequence()->any(true).oclAsType(emspcr::TimesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jCcNEdOaEeKU4pFWxuU9dw" type="_ClVY0KxCEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jCcNEtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jCepUNOaEeKU4pFWxuU9dw" name="getVitalSignsSection" isQuery="true" bodyCondition="_jCepU9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jCepU9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jCepUNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCfQYNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::VitalSignsSection))->asSequence()->any(true).oclAsType(emspcr::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jCepUdOaEeKU4pFWxuU9dw" type="_jCzkkIzkEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jCepUtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_j3pWwNOaEeKU4pFWxuU9dw" name="getInjuryIncidentDescriptionSection" isQuery="true" bodyCondition="_j3p90tOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_j3p90tOaEeKU4pFWxuU9dw" name="body" constrainedElement="_j3pWwNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3p909OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(emspcr::InjuryIncidentDescriptionSection))->asSequence()->any(true).oclAsType(emspcr::InjuryIncidentDescriptionSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_j3p90NOaEeKU4pFWxuU9dw" type="_3dRe0HSUEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_j3p90dOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_VtMvAIzcEeGnhceUMXltng" name="PastMedicalHistorySection">
      <ownedRule xmi:id="_i5K8UNOaEeKU4pFWxuU9dw" name="PastMedicalHistorySectionTemplateId" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5K8UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.19')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5N_oNOaEeKU4pFWxuU9dw" name="PastMedicalHistorySectionCode" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5OmsNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67842-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5S4INOaEeKU4pFWxuU9dw" name="PastMedicalHistorySectionCodeP" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5S4IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5YXsNOaEeKU4pFWxuU9dw" name="PastMedicalHistorySectionTitle" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5YXsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Past Medical History')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5cCENOaEeKU4pFWxuU9dw" name="PastMedicalHistorySectionText" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5cCEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jP0hwNOaEeKU4pFWxuU9dw" name="PastMedicalHistorySectionExistenceOfHistoryOfCondition" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jP0hwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfHistoryOfCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jP3lENOaEeKU4pFWxuU9dw" name="PastMedicalHistorySectionHistoryOfCondition" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jP3lEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::HistoryOfCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQfQINOaEeKU4pFWxuU9dw" name="PastMedicalHistorySectionHistoryOfProceduresOrganizer" constrainedElement="_VtMvAIzcEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQfQIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::HistoryOfProceduresOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W3TxsIzcEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jP2W8NOaEeKU4pFWxuU9dw" name="getExistenceOfHistoryOfCondition" isQuery="true" bodyCondition="_jP2W89OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jP2W89OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jP2W8NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jP2W9NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfHistoryOfCondition))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfHistoryOfCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jP2W8dOaEeKU4pFWxuU9dw" type="_W_uRYIzdEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jP2W8tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jP5aQNOaEeKU4pFWxuU9dw" name="getHistoryOfCondition" isQuery="true" bodyCondition="_jP5aQ9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jP5aQ9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jP5aQNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jP5aRNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::HistoryOfCondition))->asSequence()->any(true).oclAsType(emspcr::HistoryOfCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jP5aQdOaEeKU4pFWxuU9dw" type="_5XgZ4IzdEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jP5aQtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jQhFUNOaEeKU4pFWxuU9dw" name="getHistoryOfProceduresOrganizer" isQuery="true" bodyCondition="_jQhFU9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jQhFU9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jQhFUNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQhFVNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::HistoryOfProceduresOrganizer))->asSequence()->any(true).oclAsType(emspcr::HistoryOfProceduresOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jQhFUdOaEeKU4pFWxuU9dw" type="_HLO9kIzgEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jQhFUtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S-YTcGldEeG4boS-IbG8Zw" name="BillingSection">
      <ownedRule xmi:id="_i5gTgNOaEeKU4pFWxuU9dw" name="BillingSectionTemplateId" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5gTgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.5')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5jW0NOaEeKU4pFWxuU9dw" name="BillingSectionCode" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5jW0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67659-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5oPUNOaEeKU4pFWxuU9dw" name="BillingSectionTitle" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5oPUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Billing Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i5rSoNOaEeKU4pFWxuU9dw" name="BillingSectionText" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5rSodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jcRpYNOaEeKU4pFWxuU9dw" name="BillingSectionBillingCondition" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcRpYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::BillingCondition) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jc0b8NOaEeKU4pFWxuU9dw" name="BillingSectionLevelOfServiceObservation" constrainedElement="_S-YTcGldEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jc0b8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LevelOfServiceObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_S-YTcWldEeG4boS-IbG8Zw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jcTekNOaEeKU4pFWxuU9dw" name="getBillingCondition" isQuery="true" bodyCondition="_jcTek9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jcTek9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jcTekNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcTelNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BillingCondition))->asSequence()->any(true).oclAsType(emspcr::BillingCondition)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jcTekdOaEeKU4pFWxuU9dw" type="_rNkl4GleEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jcTektOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jc2RINOaEeKU4pFWxuU9dw" name="getLevelOfServiceObservation" isQuery="true" bodyCondition="_jc2RI9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jc2RI9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jc2RINOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jc2RJNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LevelOfServiceObservation))->asSequence()->any(true).oclAsType(emspcr::LevelOfServiceObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jc2RIdOaEeKU4pFWxuU9dw" type="_To2-YGleEeG4boS-IbG8Zw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jc2RItOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3dRe0HSUEeGa4IXs2ghZEw" name="InjuryIncidentDescriptionSection">
      <ownedRule xmi:id="_i5xZQNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionTemplateId" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i5xZQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.17')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i50ckNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionCode" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i51DoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '11374-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i558INOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionTitle" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i558IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Injury Incident Description Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i58_cNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionText" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i58_cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jM9bANOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionInjuryCauseCategory" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jM9bAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryCauseCategory) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNPH0NOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionInjuryMechanism" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNPH0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryMechanism) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNiCwNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionTraumaCenterCriteria" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNiCwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TraumaCenterCriteria) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jN0WoNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionInjuryRiskFactor" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jN09sNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InjuryRiskFactor) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOH4oNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionVehicleImpactArea" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOH4odOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::VehicleImpactArea) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOaMgNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionPatientLocationInVehicle" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOaMgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientLocationInVehicle) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOsgYNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionVehicleOccupantSafetyEquipment" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOsgYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::VehicleOccupantSafetyEquipment) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jO_bUNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionAirbagDeploymentStatus" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jO_bUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AirbagDeploymentStatus) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPSWQNOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionHeightOfFall" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPSWQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::HeightOfFall) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPhm0NOaEeKU4pFWxuU9dw" name="InjuryIncidentDescriptionSectionDisasterType" constrainedElement="_3dRe0HSUEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPiN4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DisasterType) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_3dSF4HSUEeGa4IXs2ghZEw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jM-pINOaEeKU4pFWxuU9dw" name="getInjuryCauseCategory" isQuery="true" bodyCondition="_jM_QMNOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jM_QMNOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jM-pINOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jM_QMdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryCauseCategory))->asSequence()->any(true).oclAsType(emspcr::InjuryCauseCategory)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jM-pIdOaEeKU4pFWxuU9dw" type="_KEFo8HSVEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jM-pItOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jNQ9ANOaEeKU4pFWxuU9dw" name="getInjuryMechanism" isQuery="true" bodyCondition="_jNQ9A9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jNQ9A9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jNQ9ANOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNQ9BNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryMechanism))->asSequence()->any(true).oclAsType(emspcr::InjuryMechanism)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jNQ9AdOaEeKU4pFWxuU9dw" type="_aS16EHSWEeGa4IXs2ghZEw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jNQ9AtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jNj38NOaEeKU4pFWxuU9dw" name="getTraumaCenterCriteria" isQuery="true" bodyCondition="_jNj389OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jNj389OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jNj38NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNj39NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TraumaCenterCriteria))->asSequence()->any(true).oclAsType(emspcr::TraumaCenterCriteria)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jNj38dOaEeKU4pFWxuU9dw" type="_lTHsIIcXEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jNj38tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jN2L0NOaEeKU4pFWxuU9dw" name="getInjuryRiskFactor" isQuery="true" bodyCondition="_jN2y4NOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jN2y4NOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jN2L0NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jN2y4dOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InjuryRiskFactor))->asSequence()->any(true).oclAsType(emspcr::InjuryRiskFactor)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jN2L0dOaEeKU4pFWxuU9dw" type="_vuraIIcZEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jN2L0tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jOJGwNOaEeKU4pFWxuU9dw" name="getVehicleImpactArea" isQuery="true" bodyCondition="_jOJt0tOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jOJt0tOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jOJGwNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOJt09OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::VehicleImpactArea))->asSequence()->any(true).oclAsType(emspcr::VehicleImpactArea)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jOJt0NOaEeKU4pFWxuU9dw" type="_nvhVwIcaEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jOJt0dOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jOcBsNOaEeKU4pFWxuU9dw" name="getPatientLocationInVehicle" isQuery="true" bodyCondition="_jOcBs9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jOcBs9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jOcBsNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOcBtNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientLocationInVehicle))->asSequence()->any(true).oclAsType(emspcr::PatientLocationInVehicle)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jOcBsdOaEeKU4pFWxuU9dw" type="_zMwjMIccEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jOcBstOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jOuVkNOaEeKU4pFWxuU9dw" name="getVehicleOccupantSafetyEquipment" isQuery="true" bodyCondition="_jOu8otOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jOu8otOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jOuVkNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOu8o9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::VehicleOccupantSafetyEquipment))->asSequence()->any(true).oclAsType(emspcr::VehicleOccupantSafetyEquipment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jOu8oNOaEeKU4pFWxuU9dw" type="_bsVJUIcdEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jOu8odOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jPBQgNOaEeKU4pFWxuU9dw" name="getAirbagDeploymentStatus" isQuery="true" bodyCondition="_jPBQg9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jPBQg9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jPBQgNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPBQhNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AirbagDeploymentStatus))->asSequence()->any(true).oclAsType(emspcr::AirbagDeploymentStatus)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jPBQgdOaEeKU4pFWxuU9dw" type="_2lRhsIcdEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jPBQgtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jPULcNOaEeKU4pFWxuU9dw" name="getHeightOfFall" isQuery="true" bodyCondition="_jPULc9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jPULc9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jPULcNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPULdNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::HeightOfFall))->asSequence()->any(true).oclAsType(emspcr::HeightOfFall)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jPULcdOaEeKU4pFWxuU9dw" type="_auKbcIceEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jPULctOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jPjcANOaEeKU4pFWxuU9dw" name="getDisasterType" isQuery="true" bodyCondition="_jPkDENOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jPkDENOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jPjcANOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPkDEdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DisasterType))->asSequence()->any(true).oclAsType(emspcr::DisasterType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jPjcAdOaEeKU4pFWxuU9dw" type="_wKL4IIceEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jPjcAtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pIikMHwDEeGW3cDolvqrTA" name="CardiacArrestEventSection">
      <ownedRule xmi:id="_i6IloNOaEeKU4pFWxuU9dw" name="CardiacArrestEventSectionTemplateId" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6IlodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.14')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6MQANOaEeKU4pFWxuU9dw" name="CardiacArrestEventSectionCode" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6MQAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67799-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6RvkNOaEeKU4pFWxuU9dw" name="CardiacArrestEventSectionTitle" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6RvkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Cardiac Arrest Event')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6VZ8NOaEeKU4pFWxuU9dw" name="CardiacArrestEventSectionText" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6VZ8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jE4dENOaEeKU4pFWxuU9dw" name="CardiacArrestEventSectionCardiacArrestExistence" constrainedElement="_pIikMHwDEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jE4dEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CardiacArrestExistence) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pIlAcHwDEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jE6SQNOaEeKU4pFWxuU9dw" name="getCardiacArrestExistence" isQuery="true" bodyCondition="_jE65UNOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jE65UNOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jE6SQNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jE65UdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CardiacArrestExistence))->asSequence()->any(true).oclAsType(emspcr::CardiacArrestExistence)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jE6SQdOaEeKU4pFWxuU9dw" type="_Qlqj8HwGEeGW3cDolvqrTA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jE6SQtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i4C-AH9aEeGht55Sz1eBOw" name="AdvanceDirectivesSection">
      <ownedRule xmi:id="_i6z7ENOaEeKU4pFWxuU9dw" name="AdvanceDirectivesSectionTemplateId" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6z7EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.12')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i62-YNOaEeKU4pFWxuU9dw" name="AdvanceDirectivesSectionCode" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i63lcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67840-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i69FANOaEeKU4pFWxuU9dw" name="AdvanceDirectivesSectionTitle" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i69FAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Advance Directives Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7AIUNOaEeKU4pFWxuU9dw" name="AdvanceDirectivesSectionText" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7AvYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMXlINOaEeKU4pFWxuU9dw" name="AdvanceDirectivesSectionAdvancedDirectiveObservation" constrainedElement="_i4C-AH9aEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMXlIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdvancedDirectiveObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kG590H9aEeGht55Sz1eBOw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jMYzQNOaEeKU4pFWxuU9dw" name="getAdvancedDirectiveObservation" isQuery="true" bodyCondition="_jMZaUdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jMZaUdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jMYzQNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMZaUtOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdvancedDirectiveObservation))->asSequence()->any(true).oclAsType(emspcr::AdvancedDirectiveObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jMYzQdOaEeKU4pFWxuU9dw" type="_xCcE0Iy7EeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jMZaUNOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nSjIgH9cEeGht55Sz1eBOw" name="AllergiesAndAdverseReactionsSection">
      <ownedRule xmi:id="_i7CkkNOaEeKU4pFWxuU9dw" name="AllergiesAndAdverseReactionsSectionTemplateId" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7CkkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.13')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7Fn4NOaEeKU4pFWxuU9dw" name="AllergiesAndAdverseReactionsSectionCode" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7Fn4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '48765-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7LHcNOaEeKU4pFWxuU9dw" name="AllergiesAndAdverseReactionsSectionTitle" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7LHcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Allergies and Adverse Reactions')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7Ox0NOaEeKU4pFWxuU9dw" name="AllergiesAndAdverseReactionsSectionText" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7Ox0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jEwhQNOaEeKU4pFWxuU9dw" name="AllergiesAndAdverseReactionsSectionObservation" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEwhQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfDrugAllergyObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMv_oNOaEeKU4pFWxuU9dw" name="AllergiesAndAdverseReactionsSectionDrugAllergyProblemAct" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMv_odOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.act.oclIsUndefined() and entry.act.oclIsKindOf(emspcr::DrugAllergyProblemAct) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jM3UYNOaEeKU4pFWxuU9dw" name="AllergiesAndAdverseReactionsSectionEnvironmentalAllergies" constrainedElement="_nSjIgH9cEeGht55Sz1eBOw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jM3UYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::EnvironmentalAllergies) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_p8HLwH9cEeGht55Sz1eBOw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jExvYNOaEeKU4pFWxuU9dw" name="getObservation" isQuery="true" bodyCondition="_jEyWcdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jEyWcdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jExvYNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEyWctOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfDrugAllergyObservation))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfDrugAllergyObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jExvYdOaEeKU4pFWxuU9dw" type="_iWVVYIy-EeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jEyWcNOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jMyb4NOaEeKU4pFWxuU9dw" name="getDrugAllergyProblemAct" isQuery="true" bodyCondition="_jMyb49OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jMyb49OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jMyb4NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMyb5NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getActs()->select(act : cda::Act | not act.oclIsUndefined() and act.oclIsKindOf(emspcr::DrugAllergyProblemAct))->asSequence()->any(true).oclAsType(emspcr::DrugAllergyProblemAct)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jMyb4dOaEeKU4pFWxuU9dw" type="_3C3WwMWqEeK3RfDsHamIUQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jMyb4tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jM5JkNOaEeKU4pFWxuU9dw" name="getEnvironmentalAllergies" isQuery="true" bodyCondition="_jM5Jk9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jM5Jk9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jM5JkNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jM5JlNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::EnvironmentalAllergies))->asSequence()->any(true).oclAsType(emspcr::EnvironmentalAllergies)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jM5JkdOaEeKU4pFWxuU9dw" type="_CFApcIzGEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jM5JktOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aDO5AIcnEeGqF6qfYwLiQw" name="CurrentMedicationSection">
      <ownedRule xmi:id="_i7R1IdOaEeKU4pFWxuU9dw" name="MedicationsSectionEntriesOptionalTemplateId" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7ScMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.15')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7WGkNOaEeKU4pFWxuU9dw" name="CurrentMedicationSectionTitle" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7WGkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Current Medications Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7ZJ4NOaEeKU4pFWxuU9dw" name="CurrentMedicationSectionText" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7ZJ4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jW5aINOaEeKU4pFWxuU9dw" name="CurrentMedicationSectionCurrentlyOnMedication" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jW5aIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CurrentlyOnMedication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXJRwNOaEeKU4pFWxuU9dw" name="CurrentMedicationSectionPatientOnAnticoagulants" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXJRwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientOnAnticoagulants) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXZJYNOaEeKU4pFWxuU9dw" name="CurrentMedicationSectionCurrentMedication" constrainedElement="_aDO5AIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXZJYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(emspcr::CurrentMedication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cWgjMIcnEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2NIpgBSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_jW7PUNOaEeKU4pFWxuU9dw" name="getCurrentlyOnMedication" isQuery="true" bodyCondition="_jW7PU9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jW7PU9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jW7PUNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jW7PVNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CurrentlyOnMedication))->asSequence()->any(true).oclAsType(emspcr::CurrentlyOnMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jW7PUdOaEeKU4pFWxuU9dw" type="_sUm-oIcnEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jW7PUtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jXLG8NOaEeKU4pFWxuU9dw" name="getPatientOnAnticoagulants" isQuery="true" bodyCondition="_jXLG89OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jXLG89OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jXLG8NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXLG9NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientOnAnticoagulants))->asSequence()->any(true).oclAsType(emspcr::PatientOnAnticoagulants)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jXLG8dOaEeKU4pFWxuU9dw" type="_RZqlsIcoEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jXLG8tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jXa-kNOaEeKU4pFWxuU9dw" name="getCurrentMedication" isQuery="true" bodyCondition="_jXa-k9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jXa-k9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jXa-kNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXa-lNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(emspcr::CurrentMedication))->asSequence()->any(true).oclAsType(emspcr::CurrentMedication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jXa-kdOaEeKU4pFWxuU9dw" type="_mwn8MIcoEeGqF6qfYwLiQw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jXa-ktOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1XH7YIziEeGnhceUMXltng" name="SocialHistorySection">
      <ownedRule xmi:id="_i7yLcdOaEeKU4pFWxuU9dw" name="SocialHistorySectionTemplateId" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7yygNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.22')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7110NOaEeKU4pFWxuU9dw" name="SocialHistorySectionCode" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7110dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67843-3' and value.codeSystem = '2.16.840.1.113883.6.1'</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i76HQNOaEeKU4pFWxuU9dw" name="SocialHistorySectionCodeP" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i76uUNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.code.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7_m0NOaEeKU4pFWxuU9dw" name="SocialHistorySectionTitle" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8AN4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Social History')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8DRMNOaEeKU4pFWxuU9dw" name="SocialHistorySectionText" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8DRMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jT2tMNOaEeKU4pFWxuU9dw" name="SocialHistorySectionExistenceOfDrugUseIndication" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jT2tMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ExistenceOfDrugUseIndication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jT5wgNOaEeKU4pFWxuU9dw" name="SocialHistorySectionDrugUseIndication" constrainedElement="_1XH7YIziEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jT5wgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DrugUseIndication) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1XIicIziEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jT4iYNOaEeKU4pFWxuU9dw" name="getExistenceOfDrugUseIndication" isQuery="true" bodyCondition="_jT4iY9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jT4iY9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jT4iYNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jT4iZNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfDrugUseIndication))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfDrugUseIndication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jT4iYdOaEeKU4pFWxuU9dw" type="_Mr964IzjEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jT4iYtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jT7lsNOaEeKU4pFWxuU9dw" name="getDrugUseIndication" isQuery="true" bodyCondition="_jT7ls9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jT7ls9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jT7lsNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jT8MwNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DrugUseIndication))->asSequence()->any(true).oclAsType(emspcr::DrugUseIndication)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jT7lsdOaEeKU4pFWxuU9dw" type="_oJHzkIzjEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jT7lstOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jCzkkIzkEeGnhceUMXltng" name="VitalSignsSection">
      <ownedRule xmi:id="_i8JX0dOaEeKU4pFWxuU9dw" name="VitalSignsSectionEntriesOptionalTemplateId" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8J-4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.23')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8NCMNOaEeKU4pFWxuU9dw" name="emspcrVitalSignsSectionCode" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8NCMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '8716-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8TI0NOaEeKU4pFWxuU9dw" name="emspcrVitalSignsSectionTitle" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8TI0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Vital Signs')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8WzMNOaEeKU4pFWxuU9dw" name="emspcrVitalSignsSectionText" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8WzMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGDhwNOaEeKU4pFWxuU9dw" name="emspcrVitalSignsSectionVitalSignsOrganizer" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGDhwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::VitalSignsOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGGlENOaEeKU4pFWxuU9dw" name="emspcrVitalSignsSectionPriorAidVitals" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGHMINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PriorAidVitals) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGKPcNOaEeKU4pFWxuU9dw" name="emspcrVitalSignsSectionAdditionalVitalSignsOrganizer" constrainedElement="_jCzkkIzkEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGKPcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::AdditionalVitalSignsOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jC0LoIzkEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OfUcxSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_jGFW8NOaEeKU4pFWxuU9dw" name="getemspcrVitalSignsOrganizer" isQuery="true" bodyCondition="_jGFW89OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jGFW89OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jGFW8NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGFW9NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::VitalSignsOrganizer))->asSequence()->any(true).oclAsType(emspcr::VitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jGFW8dOaEeKU4pFWxuU9dw" type="_JnfD8IzoEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jGFW8tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jGIaQNOaEeKU4pFWxuU9dw" name="getPriorAidVitals" isQuery="true" bodyCondition="_jGIaQ9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jGIaQ9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jGIaQNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGJBUNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PriorAidVitals))->asSequence()->any(true).oclAsType(emspcr::PriorAidVitals)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jGIaQdOaEeKU4pFWxuU9dw" type="_Dq57UIzpEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jGIaQtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jGLdkNOaEeKU4pFWxuU9dw" name="getAdditionalVitalSignsOrganizer" isQuery="true" bodyCondition="_jGMEotOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jGMEotOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jGLdkNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGMEo9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::AdditionalVitalSignsOrganizer))->asSequence()->any(true).oclAsType(emspcr::AdditionalVitalSignsOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jGMEoNOaEeKU4pFWxuU9dw" type="_F-GKoLMNEeKNbt70lHd2Eg" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jGMEodOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6223oJohEeG_FLcaRgAa7g" name="PhysicalAssessmentSection">
      <ownedRule xmi:id="_i8nR4dOaEeKU4pFWxuU9dw" name="PhysicalExamSectionTemplateId" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8n48NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.20')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8vNsNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionCodeP" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8vNsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8q8QNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionCode" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8q8QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29545-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i81UUNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionTitle" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i81UUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Physical Assessment Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i84XoNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionText" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i84-sNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jX6t0NOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionPhysicalAssessmentOrganizer" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jX7U4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::PhysicalAssessmentOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYKlcNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionPatientPregnancy" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYKlcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientPregnancy) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYlcMNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionLastOralIntake" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYlcMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LastOralIntake) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jY5lQNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionPatientAge" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jY5lQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientAge) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZNHQNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionThrombolyticContraindications" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZNHQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ThrombolyticContraindications) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZjskNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentSectionBarriersToPatientCare" constrainedElement="_6223oJohEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZjskdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::BarriersToPatientCare) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_CzqWIJoiEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Pxt0hSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_jX8jANOaEeKU4pFWxuU9dw" name="getPhysicalAssessmentOrganizer" isQuery="true" bodyCondition="_jX9KEdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jX9KEdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jX8jANOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jX9KEtOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::PhysicalAssessmentOrganizer))->asSequence()->any(true).oclAsType(emspcr::PhysicalAssessmentOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jX8jAdOaEeKU4pFWxuU9dw" type="_zbYvIJoiEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jX9KENOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jYLzkNOaEeKU4pFWxuU9dw" name="getPatientPregnancy" isQuery="true" bodyCondition="_jYMaoNOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jYMaoNOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jYLzkNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYMaodOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientPregnancy))->asSequence()->any(true).oclAsType(emspcr::PatientPregnancy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jYLzkdOaEeKU4pFWxuU9dw" type="_sW8QcJosEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jYLzktOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jYnRYNOaEeKU4pFWxuU9dw" name="getLastOralIntake" isQuery="true" bodyCondition="_jYnRY9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jYnRY9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jYnRYNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYnRZNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LastOralIntake))->asSequence()->any(true).oclAsType(emspcr::LastOralIntake)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jYnRYdOaEeKU4pFWxuU9dw" type="_S1I0sJotEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jYnRYtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jY7acNOaEeKU4pFWxuU9dw" name="getPatientAge" isQuery="true" bodyCondition="_jY7ac9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jY7ac9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jY7acNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jY7adNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientAge))->asSequence()->any(true).oclAsType(emspcr::PatientAge)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jY7acdOaEeKU4pFWxuU9dw" type="_rhjrIJotEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jY7actOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jZO8cNOaEeKU4pFWxuU9dw" name="getThrombolyticContraindications" isQuery="true" bodyCondition="_jZO8c9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jZO8c9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jZO8cNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZPjgNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ThrombolyticContraindications))->asSequence()->any(true).oclAsType(emspcr::ThrombolyticContraindications)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jZO8cdOaEeKU4pFWxuU9dw" type="_HuCH8JouEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jZO8ctOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jZlhwNOaEeKU4pFWxuU9dw" name="getBarriersToPatientCare" isQuery="true" bodyCondition="_jZlhw9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jZlhw9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jZlhwNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZlhxNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BarriersToPatientCare))->asSequence()->any(true).oclAsType(emspcr::BarriersToPatientCare)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jZlhwdOaEeKU4pFWxuU9dw" type="_qlUP4JouEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jZlhwtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_c7crcJovEeG_FLcaRgAa7g" name="MedicationsAdministeredSection">
      <ownedRule xmi:id="_i8_FUNOaEeKU4pFWxuU9dw" name="MedicationsAdministeredSectionTemplateId" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8_FUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.18')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9BhkNOaEeKU4pFWxuU9dw" name="emspcrMedicationsAdministeredSectionCode" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9BhkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9FL8NOaEeKU4pFWxuU9dw" name="emspcrMedicationsAdministeredSectionTitle" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9FL8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'Medications Administered Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9I2UNOaEeKU4pFWxuU9dw" name="emspcrMedicationsAdministeredSectionText" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9JdYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUdKINOaEeKU4pFWxuU9dw" name="emspcrMedicationsAdministeredSectionMedicationAdministered" constrainedElement="_c7crcJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUdKIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.substanceAdministration.oclIsUndefined() and entry.substanceAdministration.oclIsKindOf(emspcr::MedicationAdministered) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_d57s8JovEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2Poj_BSVEeGGzu7fmW9pXw"/>
      </generalization>
      <ownedOperation xmi:id="_jUe_UNOaEeKU4pFWxuU9dw" name="getMedicationAdministered" isQuery="true" bodyCondition="_jUe_U9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jUe_U9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jUe_UNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUe_VNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getSubstanceAdministrations()->select(substanceAdministration : cda::SubstanceAdministration | not substanceAdministration.oclIsUndefined() and substanceAdministration.oclIsKindOf(emspcr::MedicationAdministered))->asSequence()->any(true).oclAsType(emspcr::MedicationAdministered)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jUe_UdOaEeKU4pFWxuU9dw" type="_5JQlAJovEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jUe_UtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4QFw8JumEeGzXI65shd6Fw" name="ProceduresPerformedSection">
      <ownedRule xmi:id="_i9sP8NOaEeKU4pFWxuU9dw" name="ProcedureDescriptionSectionTemplateId" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9sP8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.21')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9zksNOaEeKU4pFWxuU9dw" name="ProceduresPerformedSectionCodeP" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i90LwNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9vTQNOaEeKU4pFWxuU9dw" name="ProceduresPerformedSectionCode" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9vTQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '29554-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i95EQNOaEeKU4pFWxuU9dw" name="ProceduresPerformedSectionTitle" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i95rUNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (self.title.getText() = 'EMS Procedures Performed')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i98uoNOaEeKU4pFWxuU9dw" name="ProceduresPerformedSectionText" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i98uodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jErBsNOaEeKU4pFWxuU9dw" name="ProceduresPerformedSectionProcedureActivityProcedure1" constrainedElement="_4QFw8JumEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jErBsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->exists(entry : cda::Entry | not entry.procedure.oclIsUndefined() and entry.procedure.oclIsKindOf(emspcr::Procedure))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4mzn0JumEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_HNUIIDVzEeGaW4kr-GbV8Q"/>
      </generalization>
      <ownedOperation xmi:id="_jEs24NOaEeKU4pFWxuU9dw" name="getProcedureActivityProcedure1s" isQuery="true" bodyCondition="_jEs249OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jEs249OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jEs24NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEs25NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getProcedures()->select(procedure : cda::Procedure | not procedure.oclIsUndefined() and procedure.oclIsKindOf(emspcr::Procedure)).oclAsType(emspcr::Procedure)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jEs24dOaEeKU4pFWxuU9dw" type="_K8JK8JuoEeGzXI65shd6Fw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jEs24tOaEeKU4pFWxuU9dw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iDmQYJ9mEeGw9ZRnaFfEZQ" name="PatientCareNarrativeSection">
      <ownedRule xmi:id="_i-ln0NOaEeKU4pFWxuU9dw" name="PatientCareNarrativeSectionTemplateId" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-ln0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-pSMNOaEeKU4pFWxuU9dw" name="PatientCareNarrativeSectionCode" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-pSMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67781-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-tjoNOaEeKU4pFWxuU9dw" name="PatientCareNarrativeSectionCodeP" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-tjodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-x1ENOaEeKU4pFWxuU9dw" name="PatientCareNarrativeSectionTitle" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-x1EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Patient Care Report Narrative')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-1fcNOaEeKU4pFWxuU9dw" name="PatientCareNarrativeSectionText" constrainedElement="_iDmQYJ9mEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-1fcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ioK9EJ9mEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_OV4TIJ9nEeGw9ZRnaFfEZQ" name="DispatchSection">
      <ownedRule xmi:id="_i-5w4dOaEeKU4pFWxuU9dw" name="DispatchSectionTemplateId" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-6X8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.2')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-9bQNOaEeKU4pFWxuU9dw" name="DispatchSectionCode" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-9bQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67660-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_C60NOaEeKU4pFWxuU9dw" name="DispatchSectionTitle" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_C60dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Dispatch')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_F-INOaEeKU4pFWxuU9dw" name="DispatchSectionText" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_F-IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWBQYNOaEeKU4pFWxuU9dw" name="DispatchSectionEmergencyMedicalDispatchObservation" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWBQYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::EmergencyMedicalDispatchObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWdVQNOaEeKU4pFWxuU9dw" name="DispatchSectionComplaintReportedByDispatch" constrainedElement="_OV4TIJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWd8UNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ComplaintReportedByDispatch) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PS8YUJ9nEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jWDFkNOaEeKU4pFWxuU9dw" name="getEmergencyMedicalDispatchObservation" isQuery="true" bodyCondition="_jWDFk9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jWDFk9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jWDFkNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWDsoNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::EmergencyMedicalDispatchObservation))->asSequence()->any(true).oclAsType(emspcr::EmergencyMedicalDispatchObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jWDFkdOaEeKU4pFWxuU9dw" type="_46UUAJ9nEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jWDFktOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jWfKcNOaEeKU4pFWxuU9dw" name="getComplaintReportedByDispatch" isQuery="true" bodyCondition="_jWfKc9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jWfKc9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jWfKcNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWfxgNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ComplaintReportedByDispatch))->asSequence()->any(true).oclAsType(emspcr::ComplaintReportedByDispatch)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jWfKcdOaEeKU4pFWxuU9dw" type="__LltsJ97EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jWfKctOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_LI7M8J99EeGw9ZRnaFfEZQ" name="ResponseSection">
      <ownedRule xmi:id="_i_IaYNOaEeKU4pFWxuU9dw" name="ResponseSectionTemplateId" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_IaYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.3')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_MEwNOaEeKU4pFWxuU9dw" name="ResponseSectionCode" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_MEwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67664-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_QWMNOaEeKU4pFWxuU9dw" name="ResponseSectionCodeP" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_QWMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_VOsNOaEeKU4pFWxuU9dw" name="ResponseSectionTitle" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_VOsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Response')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_YSANOaEeKU4pFWxuU9dw" name="ResponseSectionText" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_YSAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeG1YNOaEeKU4pFWxuU9dw" name="ResponseSectionDelayOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeHccNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::DelayOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jePYQNOaEeKU4pFWxuU9dw" name="ResponseSectionDispatchLocationOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jePYQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::DispatchLocationOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeblgNOaEeKU4pFWxuU9dw" name="ResponseSectionResponseOdometerReadingOrganizer" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeblgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.organizer.oclIsUndefined() and entry.organizer.oclIsKindOf(emspcr::ResponseOdometerReadingOrganizer) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeiTMNOaEeKU4pFWxuU9dw" name="ResponseSectionResponseModeToScene" constrainedElement="_LI7M8J99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeiTMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ResponseModeToScene) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_M0JYoJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jeIqkNOaEeKU4pFWxuU9dw" name="getDelayOrganizer" isQuery="true" bodyCondition="_jeJRotOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jeJRotOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jeIqkNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeJRo9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::DelayOrganizer))->asSequence()->any(true).oclAsType(emspcr::DelayOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jeJRoNOaEeKU4pFWxuU9dw" type="_0padgJ99EeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jeJRodOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jeQmYNOaEeKU4pFWxuU9dw" name="getDispatchLocationOrganizer" isQuery="true" bodyCondition="_jeRNctOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jeRNctOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jeQmYNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeRNc9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::DispatchLocationOrganizer))->asSequence()->any(true).oclAsType(emspcr::DispatchLocationOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jeRNcNOaEeKU4pFWxuU9dw" type="_MiN-UJ-BEeGw9ZRnaFfEZQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jeRNcdOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jeczoNOaEeKU4pFWxuU9dw" name="getResponseOdometerReadingOrganizer" isQuery="true" bodyCondition="_jedasdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jedasdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jeczoNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jedastOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::ResponseOdometerReadingOrganizer))->asSequence()->any(true).oclAsType(emspcr::ResponseOdometerReadingOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jeczodOaEeKU4pFWxuU9dw" type="_yVviAJ-OEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jedasNOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jejhUNOaEeKU4pFWxuU9dw" name="getResponseModeToScene" isQuery="true" bodyCondition="_jekIYtOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jekIYtOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jejhUNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jekIY9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ResponseModeToScene))->asSequence()->any(true).oclAsType(emspcr::ResponseModeToScene)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jekIYNOaEeKU4pFWxuU9dw" type="_l_V6IJ-bEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jekIYdOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_i-lM8J-dEeGorI3CPDW2ww" name="DispositionSection">
      <ownedRule xmi:id="_jAGDsNOaEeKU4pFWxuU9dw" name="DispositionSectionTemplateId" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAGDsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAJuENOaEeKU4pFWxuU9dw" name="DispositionSectionCode" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAJuEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67796-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAN_gNOaEeKU4pFWxuU9dw" name="DispositionSectionCodeP" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAN_gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAS4ANOaEeKU4pFWxuU9dw" name="DispositionSectionTitle" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAS4AdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Disposition')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAV7UNOaEeKU4pFWxuU9dw" name="DispositionSectionText" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAV7UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jB8d0NOaEeKU4pFWxuU9dw" name="DispositionSectionEntry4" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jB8d0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportMethodObservation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGtCANOaEeKU4pFWxuU9dw" name="DispositionSectionNumberOfPatientsObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGtCAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::NumberOfPatientsObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHBLENOaEeKU4pFWxuU9dw" name="DispositionSectionIncidentDispositionObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHBLEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::IncidentDispositionObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHco4NOaEeKU4pFWxuU9dw" name="DispositionSectionTransportModeObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHco4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportModeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jH2RgNOaEeKU4pFWxuU9dw" name="DispositionSectionTransportMethodObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jH24kNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::TransportMethodObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jISWYNOaEeKU4pFWxuU9dw" name="DispositionSectionReasonForChoosingDestinationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jISWYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ReasonForChoosingDestinationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jItNINOaEeKU4pFWxuU9dw" name="DispositionSectionPrearrivalActivationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jItNIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PrearrivalActivationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJEZgNOaEeKU4pFWxuU9dw" name="DispositionSectionPatientConditionChangeAtDestinationObservation" constrainedElement="_i-lM8J-dEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJEZgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientConditionChangeAtDestinationObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kGvu4J-dEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jB-TANOaEeKU4pFWxuU9dw" name="getemspcrEntry4" isQuery="true" bodyCondition="_jB-TA9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jB-TA9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jB-TANOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jB-TBNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportMethodObservation))->asSequence()->any(true).oclAsType(emspcr::TransportMethodObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jB-TAdOaEeKU4pFWxuU9dw" type="_EagUtZ-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jB-TAtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jGu3MNOaEeKU4pFWxuU9dw" name="getNumberOfPatientsObservation" isQuery="true" bodyCondition="_jGu3M9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jGu3M9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jGu3MNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGu3NNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::NumberOfPatientsObservation))->asSequence()->any(true).oclAsType(emspcr::NumberOfPatientsObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jGu3MdOaEeKU4pFWxuU9dw" type="_Dfaa4J-eEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jGu3MtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jHDAQNOaEeKU4pFWxuU9dw" name="getIncidentDispositionObservation" isQuery="true" bodyCondition="_jHDAQ9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jHDAQ9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jHDAQNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHDARNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::IncidentDispositionObservation))->asSequence()->any(true).oclAsType(emspcr::IncidentDispositionObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jHDAQdOaEeKU4pFWxuU9dw" type="_j3YnxZ-eEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jHDAQtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jHeeENOaEeKU4pFWxuU9dw" name="getTransportModeObservation" isQuery="true" bodyCondition="_jHeeE9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jHeeE9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jHeeENOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHeeFNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportModeObservation))->asSequence()->any(true).oclAsType(emspcr::TransportModeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jHeeEdOaEeKU4pFWxuU9dw" type="_nv-0gp-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jHeeEtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jH4GsNOaEeKU4pFWxuU9dw" name="getTransportMethodObservation" isQuery="true" bodyCondition="_jH4twtOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jH4twtOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jH4GsNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jH4tw9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::TransportMethodObservation))->asSequence()->any(true).oclAsType(emspcr::TransportMethodObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jH4twNOaEeKU4pFWxuU9dw" type="_EagUtZ-fEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jH4twdOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jIULkNOaEeKU4pFWxuU9dw" name="getReasonForChoosingDestinationObservation" isQuery="true" bodyCondition="_jIULk9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jIULk9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jIULkNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIULlNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ReasonForChoosingDestinationObservation))->asSequence()->any(true).oclAsType(emspcr::ReasonForChoosingDestinationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jIULkdOaEeKU4pFWxuU9dw" type="_cm1D5Z-hEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jIULktOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jIvCUNOaEeKU4pFWxuU9dw" name="getPrearrivalActivationObservation" isQuery="true" bodyCondition="_jIvCU9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jIvCU9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jIvCUNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIvpYNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PrearrivalActivationObservation))->asSequence()->any(true).oclAsType(emspcr::PrearrivalActivationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jIvCUdOaEeKU4pFWxuU9dw" type="_083apZ-hEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jIvCUtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jJFnoNOaEeKU4pFWxuU9dw" name="getPatientConditionChangeAtDestinationObservation" isQuery="true" bodyCondition="_jJGOstOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJGOstOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJFnoNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJGOs9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientConditionChangeAtDestinationObservation))->asSequence()->any(true).oclAsType(emspcr::PatientConditionChangeAtDestinationObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJGOsNOaEeKU4pFWxuU9dw" type="_Q4zL9Z-gEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJGOsdOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GGotEJ-kEeGorI3CPDW2ww" name="PersonnelAdverseEventSection">
      <ownedRule xmi:id="_jAZlsNOaEeKU4pFWxuU9dw" name="PersonnelAdverseEventSectionTemplateId" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAZlsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.6')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAdQENOaEeKU4pFWxuU9dw" name="PersonnelAdverseEventSectionCode" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAdQEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67658-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAhhgNOaEeKU4pFWxuU9dw" name="PersonnelAdverseEventSectionCodeP" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAiIkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAnBENOaEeKU4pFWxuU9dw" name="PersonnelAdverseEventSectionTitle" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAnBEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'Exposures or Injuries of EMS Personnel')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAqEYNOaEeKU4pFWxuU9dw" name="PersonnelAdverseEventSectionText" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAqrcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbiCgNOaEeKU4pFWxuU9dw" name="PersonnelAdverseEventSectionAdverseEventIndicator" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbiCgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdverseEventIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jb2LkNOaEeKU4pFWxuU9dw" name="PersonnelAdverseEventSectionAdverseEventTypeObservation" constrainedElement="_GGotEJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jb2LkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::AdverseEventTypeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GrtJAJ-kEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jbj3sNOaEeKU4pFWxuU9dw" name="getAdverseEventIndicator" isQuery="true" bodyCondition="_jbkewNOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jbkewNOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jbj3sNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbkewdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdverseEventIndicator))->asSequence()->any(true).oclAsType(emspcr::AdverseEventIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jbj3sdOaEeKU4pFWxuU9dw" type="_p4XEAJ-kEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jbj3stOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jb3ZsNOaEeKU4pFWxuU9dw" name="getAdverseEventTypeObservation" isQuery="true" bodyCondition="_jb4AwtOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jb4AwtOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jb3ZsNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jb4Aw9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::AdverseEventTypeObservation))->asSequence()->any(true).oclAsType(emspcr::AdverseEventTypeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jb4AwNOaEeKU4pFWxuU9dw" type="_gU4tMJ-lEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jb4AwdOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aK7P4J-mEeGorI3CPDW2ww" name="ProtocolSection">
      <ownedRule xmi:id="_jAsgoNOaEeKU4pFWxuU9dw" name="ProtocolSectionTemplateId" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAtHsNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.7')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAwLANOaEeKU4pFWxuU9dw" name="ProtocolSectionCode" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAwLAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67537-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jA1DgNOaEeKU4pFWxuU9dw" name="ProtocolSectionTitle" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jA1DgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Protocol Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jA4G0NOaEeKU4pFWxuU9dw" name="ProtocolSectionText" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jA4G0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdOroNOaEeKU4pFWxuU9dw" name="ProtocolSectionProtocolObservation" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdOrodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProtocolObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdr-oNOaEeKU4pFWxuU9dw" name="ProtocolSectionCandidatePatientRegistryType" constrainedElement="_aK7P4J-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdr-odOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CandidatePatientRegistryType) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_a15fgJ-mEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jdQg0NOaEeKU4pFWxuU9dw" name="getProtocolObservation" isQuery="true" bodyCondition="_jdQg09OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jdQg09OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jdQg0NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdQg1NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProtocolObservation))->asSequence()->any(true).oclAsType(emspcr::ProtocolObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jdQg0dOaEeKU4pFWxuU9dw" type="_rDpggp-mEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jdQg0tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jdtz0NOaEeKU4pFWxuU9dw" name="getCandidatePatientRegistryType" isQuery="true" bodyCondition="_jdtz09OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jdtz09OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jdtz0NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdua4NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CandidatePatientRegistryType))->asSequence()->any(true).oclAsType(emspcr::CandidatePatientRegistryType)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jdtz0dOaEeKU4pFWxuU9dw" type="_n-zaBZ-nEeGorI3CPDW2ww" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jdtz0tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_h3A8IKK3EeGOxth0BgV-QA" name="SceneSection">
      <ownedRule xmi:id="_jA6jENOaEeKU4pFWxuU9dw" name="SceneSectionTemplateId" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jA6jEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.8')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jA9mYNOaEeKU4pFWxuU9dw" name="SceneSectionCode" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jA9mYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67665-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBDF8NOaEeKU4pFWxuU9dw" name="SceneSectionTitle" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBDF8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Scene')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBGJQNOaEeKU4pFWxuU9dw" name="SceneSectionText" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBGJQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZ-jUNOaEeKU4pFWxuU9dw" name="SceneSectionFirstUnitIndicator" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZ-jUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::FirstUnitIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jaA_kNOaEeKU4pFWxuU9dw" name="SceneSectionFirstUnitOnScene" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaA_kdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::FirstUnitOnScene) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jam1cNOaEeKU4pFWxuU9dw" name="SceneSectionScenePatientCount" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jam1cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ScenePatientCount) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jap4wNOaEeKU4pFWxuU9dw" name="SceneSectionMassCasualtyIndicator" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jap4wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::MassCasualtyIndicator) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbPHkNOaEeKU4pFWxuU9dw" name="SceneSectionLocationTypeObservation" constrainedElement="_h3A8IKK3EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbPHkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::LocationTypeObservation) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_in9Q4KK3EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jZ_xcNOaEeKU4pFWxuU9dw" name="getFirstUnitIndicator" isQuery="true" bodyCondition="_jaAYgNOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jaAYgNOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jZ_xcNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaAYgdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::FirstUnitIndicator))->asSequence()->any(true).oclAsType(emspcr::FirstUnitIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jZ_xcdOaEeKU4pFWxuU9dw" type="_Ox86UKK4EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jZ_xctOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jaC0wNOaEeKU4pFWxuU9dw" name="getFirstUnitOnScene" isQuery="true" bodyCondition="_jaDb0tOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jaDb0tOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jaC0wNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaDb09OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::FirstUnitOnScene))->asSequence()->any(true).oclAsType(emspcr::FirstUnitOnScene)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jaDb0NOaEeKU4pFWxuU9dw" type="_JNrkAKK5EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jaDb0dOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jaoDkNOaEeKU4pFWxuU9dw" name="getScenePatientCount" isQuery="true" bodyCondition="_jaoqotOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jaoqotOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jaoDkNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaoqo9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ScenePatientCount))->asSequence()->any(true).oclAsType(emspcr::ScenePatientCount)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jaoqoNOaEeKU4pFWxuU9dw" type="_wPLCkKK5EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jaoqodOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jart8NOaEeKU4pFWxuU9dw" name="getMassCasualtyIndicator" isQuery="true" bodyCondition="_jart89OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jart89OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jart8NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jart9NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::MassCasualtyIndicator))->asSequence()->any(true).oclAsType(emspcr::MassCasualtyIndicator)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jart8dOaEeKU4pFWxuU9dw" type="_E-SEAKK8EeGOxth0BgV-QA" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jart8tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jbQ8wNOaEeKU4pFWxuU9dw" name="getLocationTypeObservation" isQuery="true" bodyCondition="_jbQ8w9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jbQ8w9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jbQ8wNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbQ8xNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LocationTypeObservation))->asSequence()->any(true).oclAsType(emspcr::LocationTypeObservation)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jbQ8wdOaEeKU4pFWxuU9dw" type="_ayUKMMk3EeK2gbjCtOEivw" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jbQ8wtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_olqMIKK8EeGOxth0BgV-QA" name="SituationSection">
      <ownedRule xmi:id="_jBLo0NOaEeKU4pFWxuU9dw" name="SituationSectionTemplateId" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBLo0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.9')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBOsINOaEeKU4pFWxuU9dw" name="SituationSectionCode" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBPTMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67666-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBS9kNOaEeKU4pFWxuU9dw" name="SituationSectionCodeP" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBTkoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBX2ENOaEeKU4pFWxuU9dw" name="SituationSectionTitle" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBX2EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Situation Section')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBa5YNOaEeKU4pFWxuU9dw" name="SituationSectionText" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBa5YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQqPQNOaEeKU4pFWxuU9dw" name="SituationSectionComplaint" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQq2UNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::Complaint) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRLzsNOaEeKU4pFWxuU9dw" name="SituationSectionPossibleInjury" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRLzsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PossibleInjury) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRf8wNOaEeKU4pFWxuU9dw" name="SituationSectionProviderPrimaryImpression" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRf8wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProviderPrimaryImpression) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jR6McNOaEeKU4pFWxuU9dw" name="SituationSectionPrimarySymptom" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jR6McdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PrimarySymptom) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSUcINOaEeKU4pFWxuU9dw" name="SituationSectionOtherSymptoms" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSUcIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::OtherSymptoms) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTBmwNOaEeKU4pFWxuU9dw" name="SituationSectionProviderSecondaryImpressions" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTBmwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::ProviderSecondaryImpressions) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTb2cNOaEeKU4pFWxuU9dw" name="SituationSectionInitialPatientAcuity" constrainedElement="_olqMIKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTb2cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::InitialPatientAcuity) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pG54AKK8EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jQsEcNOaEeKU4pFWxuU9dw" name="getComplaint" isQuery="true" bodyCondition="_jQsrgtOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jQsrgtOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jQsEcNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQsrg9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::Complaint))->asSequence()->any(true).oclAsType(emspcr::Complaint)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jQsrgNOaEeKU4pFWxuU9dw" type="_KEZzkKg-EeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jQsrgdOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jRNo4NOaEeKU4pFWxuU9dw" name="getPossibleInjury" isQuery="true" bodyCondition="_jROP8dOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jROP8dOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jRNo4NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jROP8tOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PossibleInjury))->asSequence()->any(true).oclAsType(emspcr::PossibleInjury)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jRNo4dOaEeKU4pFWxuU9dw" type="_7nP0MKhCEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jROP8NOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jRhx8NOaEeKU4pFWxuU9dw" name="getProviderPrimaryImpression" isQuery="true" bodyCondition="_jRhx89OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jRhx89OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jRhx8NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRhx9NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProviderPrimaryImpression))->asSequence()->any(true).oclAsType(emspcr::ProviderPrimaryImpression)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jRhx8dOaEeKU4pFWxuU9dw" type="_0C-8EKhDEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jRhx8tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jR7akNOaEeKU4pFWxuU9dw" name="getPrimarySymptom" isQuery="true" bodyCondition="_jR8BotOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jR8BotOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jR7akNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jR8Bo9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PrimarySymptom))->asSequence()->any(true).oclAsType(emspcr::PrimarySymptom)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jR8BoNOaEeKU4pFWxuU9dw" type="_KOxo0KhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jR8BodOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jSWRUNOaEeKU4pFWxuU9dw" name="getOtherSymptoms" isQuery="true" bodyCondition="_jSWRU9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jSWRU9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jSWRUNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSWRVNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::OtherSymptoms))->asSequence()->any(true).oclAsType(emspcr::OtherSymptoms)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jSWRUdOaEeKU4pFWxuU9dw" type="_g5iJgKhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jSWRUtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jTDb8NOaEeKU4pFWxuU9dw" name="getProviderSecondaryImpressions" isQuery="true" bodyCondition="_jTDb89OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jTDb89OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jTDb8NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTDb9NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ProviderSecondaryImpressions))->asSequence()->any(true).oclAsType(emspcr::ProviderSecondaryImpressions)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jTDb8dOaEeKU4pFWxuU9dw" type="_0mPksKhEEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jTDb8tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jTdEkNOaEeKU4pFWxuU9dw" name="getInitialPatientAcuity" isQuery="true" bodyCondition="_jTdrotOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jTdrotOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jTdEkNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTdro9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::InitialPatientAcuity))->asSequence()->any(true).oclAsType(emspcr::InitialPatientAcuity)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jTdroNOaEeKU4pFWxuU9dw" type="_NZgqAKhFEeG79fAvHk6H4g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jTdrodOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ClVY0KxCEeGLnrdLmr5TaQ" name="TimesSection">
      <ownedRule xmi:id="_jBmfkNOaEeKU4pFWxuU9dw" name="TimesSectionTemplateId" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBnGoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.10')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBpi4NOaEeKU4pFWxuU9dw" name="TimesSectionCode" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBpi4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.code.oclAsType(datatypes::CE) in &#xD;
value.code = '67667-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBubYNOaEeKU4pFWxuU9dw" name="TimesSectionTitle" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBvCcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.title.oclIsUndefined() or self.title.isNullFlavorUndefined()) implies (not self.title.oclIsUndefined() and self.title.getText() = 'EMS Times')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jByFwNOaEeKU4pFWxuU9dw" name="TimesSectionText" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jByFwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.text.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJf3UNOaEeKU4pFWxuU9dw" name="TimesSectionCallTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJf3UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::CallTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJiTkNOaEeKU4pFWxuU9dw" name="TimesSectionUnitNotifiedTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJiTkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitNotifiedTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJlW4NOaEeKU4pFWxuU9dw" name="TimesSectionUnitEnRouteTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJlW4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitEnRouteTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJoaMNOaEeKU4pFWxuU9dw" name="TimesSectionUnitOnSceneTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJoaMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitOnSceneTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJrdgNOaEeKU4pFWxuU9dw" name="TimesSectionUnitAtPatienttTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJrdgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitAtPatienttTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJug0NOaEeKU4pFWxuU9dw" name="TimesSectionUnitLeftSceneTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJug0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitLeftSceneTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJxkINOaEeKU4pFWxuU9dw" name="TimesSectionPatientArrivedAtDestinationTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJxkIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::PatientArrivedAtDestinationTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJ0ncNOaEeKU4pFWxuU9dw" name="TimesSectionUnitBackInServiceTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJ1OgNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::UnitBackInServiceTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJ4R0NOaEeKU4pFWxuU9dw" name="TimesSectionDispatchNotifiedTime" constrainedElement="_ClVY0KxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJ4R0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entry->one(entry : cda::Entry | not entry.observation.oclIsUndefined() and entry.observation.oclIsKindOf(emspcr::DispatchNotifiedTime) and entry.typeCode = vocab::x_ActRelationshipEntry::DRIV)</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DaW8UKxCEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_qIf_wDxXEd6JwqSGecoePg"/>
      </generalization>
      <ownedOperation xmi:id="_jJhFcNOaEeKU4pFWxuU9dw" name="getCallTime" isQuery="true" bodyCondition="_jJhsgdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJhsgdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJhFcNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJhsgtOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CallTime))->asSequence()->any(true).oclAsType(emspcr::CallTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJhFcdOaEeKU4pFWxuU9dw" type="_1u74sKxCEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJhsgNOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jJkIwNOaEeKU4pFWxuU9dw" name="getUnitNotifiedTime" isQuery="true" bodyCondition="_jJkIw9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJkIw9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJkIwNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJkIxNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitNotifiedTime))->asSequence()->any(true).oclAsType(emspcr::UnitNotifiedTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJkIwdOaEeKU4pFWxuU9dw" type="_JKerYKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJkIwtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jJnMENOaEeKU4pFWxuU9dw" name="getUnitEnRouteTime" isQuery="true" bodyCondition="_jJnME9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJnME9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJnMENOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJnMFNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitEnRouteTime))->asSequence()->any(true).oclAsType(emspcr::UnitEnRouteTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJnMEdOaEeKU4pFWxuU9dw" type="_UyaX0KxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJnMEtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jJqPYNOaEeKU4pFWxuU9dw" name="getUnitOnSceneTime" isQuery="true" bodyCondition="_jJqPY9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJqPY9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJqPYNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJqPZNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitOnSceneTime))->asSequence()->any(true).oclAsType(emspcr::UnitOnSceneTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJqPYdOaEeKU4pFWxuU9dw" type="_iGh5QKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJqPYtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jJtSsNOaEeKU4pFWxuU9dw" name="getUnitAtPatienttTime" isQuery="true" bodyCondition="_jJtSs9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJtSs9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJtSsNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJtStNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitAtPatienttTime))->asSequence()->any(true).oclAsType(emspcr::UnitAtPatienttTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJtSsdOaEeKU4pFWxuU9dw" type="_yt7JUKxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJtSstOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jJwWANOaEeKU4pFWxuU9dw" name="getUnitLeftSceneTime" isQuery="true" bodyCondition="_jJwWA9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJwWA9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJwWANOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJwWBNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitLeftSceneTime))->asSequence()->any(true).oclAsType(emspcr::UnitLeftSceneTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJwWAdOaEeKU4pFWxuU9dw" type="_6w124KxDEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJwWAtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jJzZUNOaEeKU4pFWxuU9dw" name="getPatientArrivedAtDestinationTime" isQuery="true" bodyCondition="_jJ0AYdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJ0AYdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJzZUNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJ0AYtOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PatientArrivedAtDestinationTime))->asSequence()->any(true).oclAsType(emspcr::PatientArrivedAtDestinationTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJzZUdOaEeKU4pFWxuU9dw" type="_DaIA4KxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJ0AYNOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jJ2coNOaEeKU4pFWxuU9dw" name="getUnitBackInServiceTime" isQuery="true" bodyCondition="_jJ3DsNOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJ3DsNOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJ2coNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJ3DsdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::UnitBackInServiceTime))->asSequence()->any(true).oclAsType(emspcr::UnitBackInServiceTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJ2codOaEeKU4pFWxuU9dw" type="_KrhK4KxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJ2cotOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jJ5f8NOaEeKU4pFWxuU9dw" name="getDispatchNotifiedTime" isQuery="true" bodyCondition="_jJ6HAtOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jJ6HAtOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jJ5f8NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJ6HA9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::DispatchNotifiedTime))->asSequence()->any(true).oclAsType(emspcr::DispatchNotifiedTime)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jJ6HANOaEeKU4pFWxuU9dw" type="_UFgZEKxEEeGLnrdLmr5TaQ" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jJ6HAdOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Qlqj8HwGEeGW3cDolvqrTA" name="CardiacArrestExistence">
      <ownedRule xmi:id="_i6ZrYNOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceCardiacArrestCauseRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6ZrYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6bgkNOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceCardiacArrestInformantParticipation" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6bgkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.informant->one(informant : cda::Informant12 | not informant.oclIsUndefined() and informant.oclIsKindOf(cda::Informant12))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6fK8NOaEeKU4pFWxuU9dw" name="CardiacArrestExistencePriorCPRRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6fK8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6qKENOaEeKU4pFWxuU9dw" name="CardiacArrestExistencePriorAEDRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6qxINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6ubgNOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceSpontaneousCirculationRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6ubgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i6wQsNOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceDestinationRhythmRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6wQsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jC4R8NOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceArrestRhythmRelationship" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jC4R8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jE65UtOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceTemplateId" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jE7gYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.27')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jE_x0NOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceCode" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jE_x0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jFDcMNOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceEffectiveTime" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jFEDQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jFHGkNOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceValue" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jFHGkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.code = '410429000' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jFLYANOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceNegationInd" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jFLYAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jFObUNOaEeKU4pFWxuU9dw" name="CardiacArrestExistenceMoodCode" constrainedElement="_Qlqj8HwGEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jFObUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RvtVMHwGEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JnfD8IzoEeGnhceUMXltng" name="VitalSignsOrganizer">
      <ownedComment xmi:id="_WDhRYIzpEeGnhceUMXltng">
        <body>For any observation within the organizer, if the NEMSIS value is &quot;Refused,&quot; the value SHALL be &quot;NI;&quot; the string &quot;Refused&quot; MAY be recorded in Observation.text.</body>
      </ownedComment>
      <ownedRule xmi:id="_jDFtUNOaEeKU4pFWxuU9dw" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerSystolicBloodPressureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDGUYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDKl0NOaEeKU4pFWxuU9dw" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerDiastolicBloodPressureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDKl0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDNpINOaEeKU4pFWxuU9dw" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerHeartRateComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDOQMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDR6kNOaEeKU4pFWxuU9dw" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerRespiratoryRateComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDR6kdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDWMANOaEeKU4pFWxuU9dw" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerBodyTemperatureComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDWMAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDeu4NOaEeKU4pFWxuU9dw" name="emspcrVitalSignsOrganizerEmspcrVitalSignsOrganizerOxygenSaturationComponent" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDeu4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGNSwNOaEeKU4pFWxuU9dw" name="VitalSignsOrganizerTemplateId" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGNSwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.28')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGRkMNOaEeKU4pFWxuU9dw" name="emspcrVitalSignsOrganizerEffectiveTime" constrainedElement="_JnfD8IzoEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGRkMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KLr9MIzoEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OlbCRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dq57UIzpEeGnhceUMXltng" name="PriorAidVitals">
      <ownedRule xmi:id="_jGV1oNOaEeKU4pFWxuU9dw" name="PriorAidVitalsTemplateId" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGV1odOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.29')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGY48NOaEeKU4pFWxuU9dw" name="PriorAidVitalsCode" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGY48dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67518-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGdKYNOaEeKU4pFWxuU9dw" name="PriorAidVitalsValue" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGdKYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGfmoNOaEeKU4pFWxuU9dw" name="PriorAidVitalsMoodCode" constrainedElement="_Dq57UIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGfmodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EHmeYIzpEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_F-GKoLMNEeKNbt70lHd2Eg" name="AdditionalVitalSignsOrganizer">
      <ownedRule xmi:id="_jDgkENOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerStrokeScoreComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDgkEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::StrokeScore))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDjnYNOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerPainScoreComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDjnYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::PainScore))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDmqsNOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerLevelOfResponsivenessComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDmqsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::LevelOfResponsiveness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDpG8NOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerBloodGlucoseComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDpG8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::BloodGlucose))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDrjMNOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerCarbonMonoxideComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDrjMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::CarbonMonoxide))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDumgNOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerCarbonDioxideComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDumgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::CarbonDioxide))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDxCwNOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerCardiacRhythmComponent" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDxp0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::CardiacRhythm))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGiC4NOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerTemplateId" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGiC4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.30')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGltQNOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerEffectiveTime" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGltQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGoJgNOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerMoodCode" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGoJgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jf0soNOaEeKU4pFWxuU9dw" name="AdditionalVitalSignsOrganizerGlasgowComaScoreOrganizer" constrainedElement="_F-GKoLMNEeKNbt70lHd2Eg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jf0sodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.organizer.oclIsUndefined() and component.organizer.oclIsKindOf(emspcr::GlasgowComaScoreOrganizer))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_HOxvYLMNEeKNbt70lHd2Eg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_jDiZQdOaEeKU4pFWxuU9dw" name="getStrokeScoreComponent" isQuery="true" bodyCondition="_jDjAUdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jDjAUdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jDiZQdOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDjAUtOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::StrokeScore))->asSequence()->any(true).oclAsType(emspcr::StrokeScore)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jDiZQtOaEeKU4pFWxuU9dw" type="_9koR4IzuEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jDjAUNOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jDlckNOaEeKU4pFWxuU9dw" name="getPainScoreComponent" isQuery="true" bodyCondition="_jDlck9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jDlck9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jDlckNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDlclNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::PainScore))->asSequence()->any(true).oclAsType(emspcr::PainScore)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jDlckdOaEeKU4pFWxuU9dw" type="_lnVLQIzuEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jDlcktOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jDn40NOaEeKU4pFWxuU9dw" name="getLevelOfResponsivenessComponent" isQuery="true" bodyCondition="_jDof4dOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jDof4dOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jDn40NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDof4tOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::LevelOfResponsiveness))->asSequence()->any(true).oclAsType(emspcr::LevelOfResponsiveness)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jDn40dOaEeKU4pFWxuU9dw" type="_xgaHgIztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jDof4NOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jDqVENOaEeKU4pFWxuU9dw" name="getBloodGlucoseComponent" isQuery="true" bodyCondition="_jDq8ItOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jDq8ItOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jDqVENOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDq8I9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::BloodGlucose))->asSequence()->any(true).oclAsType(emspcr::BloodGlucose)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jDq8INOaEeKU4pFWxuU9dw" type="_jmDsgIztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jDq8IdOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jDtYYNOaEeKU4pFWxuU9dw" name="getCarbonMonoxideComponent" isQuery="true" bodyCondition="_jDtYY9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jDtYY9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jDtYYNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDtYZNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CarbonMonoxide))->asSequence()->any(true).oclAsType(emspcr::CarbonMonoxide)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jDtYYdOaEeKU4pFWxuU9dw" type="_WFit0IztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jDtYYtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jDwbsNOaEeKU4pFWxuU9dw" name="getCarbonDioxideComponent" isQuery="true" bodyCondition="_jDwbs9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jDwbs9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jDwbsNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDwbtNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CarbonDioxide))->asSequence()->any(true).oclAsType(emspcr::CarbonDioxide)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jDwbsdOaEeKU4pFWxuU9dw" type="_IU2lIIztEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jDwbstOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jDy38NOaEeKU4pFWxuU9dw" name="getCardiacRhythmComponent" isQuery="true" bodyCondition="_jDy389OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jDy389OaEeKU4pFWxuU9dw" name="body" constrainedElement="_jDy38NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDzfANOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::CardiacRhythm))->asSequence()->any(true).oclAsType(emspcr::CardiacRhythm)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jDy38dOaEeKU4pFWxuU9dw" type="_uMxJUIzpEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jDy38tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_jf16wNOaEeKU4pFWxuU9dw" name="getGlasgowComaScoreOrganizers" isQuery="true" bodyCondition="_jf2h0tOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jf2h0tOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jf16wNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jf2h09OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getOrganizers()->select(organizer : cda::Organizer | not organizer.oclIsUndefined() and organizer.oclIsKindOf(emspcr::GlasgowComaScoreOrganizer)).oclAsType(emspcr::GlasgowComaScoreOrganizer)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jf2h0NOaEeKU4pFWxuU9dw" type="_RNfAcIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jf2h0dOaEeKU4pFWxuU9dw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Dfaa4J-eEeGorI3CPDW2ww" name="NumberOfPatientsObservation">
      <ownedRule xmi:id="_jGveQNOaEeKU4pFWxuU9dw" name="NumberOfPatientsObservationTemplateId" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGveQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.31')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jG3aENOaEeKU4pFWxuU9dw" name="NumberOfPatientsObservationCodeP" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jG3aEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jGzIoNOaEeKU4pFWxuU9dw" name="NumberOfPatientsObservationCode" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jGzIodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67547-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jG7rgNOaEeKU4pFWxuU9dw" name="NumberOfPatientsObservationValue" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jG7rgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jG-HwNOaEeKU4pFWxuU9dw" name="NumberOfPatientsObservationMoodCode" constrainedElement="_Dfaa4J-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jG-u0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_D6EWkJ-eEeGorI3CPDW2ww">
        <ownedComment xmi:id="_p4JPUEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDisposition.11</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j3YnxZ-eEeGorI3CPDW2ww" name="IncidentDispositionObservation">
      <ownedRule xmi:id="_jHEOYNOaEeKU4pFWxuU9dw" name="IncidentDispositionObservationTemplateId" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHEOYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.32')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHMKMNOaEeKU4pFWxuU9dw" name="IncidentDispositionObservationCodeP" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHMKMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHH4wNOaEeKU4pFWxuU9dw" name="IncidentDispositionObservationCode" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHH4wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67548-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHRpwNOaEeKU4pFWxuU9dw" name="IncidentDispositionObservationValue" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHSQ0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17154-8' or value.code = 'LA17155-5' or value.code = 'LA17156-3' or value.code = 'LA17157-1' or value.code = 'LA17158-9' or value.code = 'LA17159-7' or value.code = 'LA17160-5' or value.code = 'LA17161-3' or value.code = 'LA17162-1' or value.code = 'LA17163-9' or value.code = 'LA17164-7' or value.code = 'LA17165-4' or value.code = 'LA17166-2' or value.code = 'LA17167-0' or value.code = 'LA18080-4' or value.code = 'LA18212-3' or value.code = 'LA18213-1' or value.code = 'LA18214-9' or value.code = 'LA18215-6' or value.code = 'LA18216-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHV7MNOaEeKU4pFWxuU9dw" name="IncidentDispositionObservationValueP" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHV7MdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHaMoNOaEeKU4pFWxuU9dw" name="IncidentDispositionObservationMoodCode" constrainedElement="_j3YnxZ-eEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHaModOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j3Ynx5-eEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nv-0gp-fEeGorI3CPDW2ww" name="TransportModeObservation">
      <ownedRule xmi:id="_jHfFINOaEeKU4pFWxuU9dw" name="TransportModeObservationTemplateId" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHfFIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.33')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHnA8NOaEeKU4pFWxuU9dw" name="TransportModeObservationCodeP" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHnA8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHivgNOaEeKU4pFWxuU9dw" name="TransportModeObservationCode" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHivgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67550-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHvj0NOaEeKU4pFWxuU9dw" name="TransportModeObservationValue" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHvj0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jHz1QNOaEeKU4pFWxuU9dw" name="TransportModeObservationMoodCode" constrainedElement="_nv-0gp-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jHz1QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_nv-0hJ-fEeGorI3CPDW2ww">
        <ownedComment xmi:id="_uDDJgEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDisposition.17</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EagUtZ-fEeGorI3CPDW2ww" name="TransportMethodObservation">
      <ownedRule xmi:id="_jH5U0NOaEeKU4pFWxuU9dw" name="TransportMethodObservationTemplateId" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jH5U0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.34')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jIApkNOaEeKU4pFWxuU9dw" name="TransportMethodObservationCodeP" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIBQoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jH8YINOaEeKU4pFWxuU9dw" name="TransportMethodObservationCode" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jH8YIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67549-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jIGwMNOaEeKU4pFWxuU9dw" name="TransportMethodObservationValue" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIHXQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17168-8' or value.code = 'LA17169-6' or value.code = 'LA17170-4' or value.code = 'LA17171-2' or value.code = 'LA17172-0' or value.code = 'LA17173-8' or value.code = 'LA17174-6' or value.code = 'LA17175-3' or value.code = 'LA17176-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jILBoNOaEeKU4pFWxuU9dw" name="TransportMethodObservationValueP" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jILBodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jIPTENOaEeKU4pFWxuU9dw" name="TransportMethodObservationMoodCode" constrainedElement="_EagUtZ-fEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIPTEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EagUt5-fEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_cm1D5Z-hEeGorI3CPDW2ww" name="ReasonForChoosingDestinationObservation">
      <ownedRule xmi:id="_jIUyoNOaEeKU4pFWxuU9dw" name="ReasonForChoosingDestinationObservationTemplateId" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIUyodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.35')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jIcHYNOaEeKU4pFWxuU9dw" name="ReasonForChoosingDestinationObservationCodeP" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIcHYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jIX18NOaEeKU4pFWxuU9dw" name="ReasonForChoosingDestinationObservationCode" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIX18dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67552-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jIiOANOaEeKU4pFWxuU9dw" name="ReasonForChoosingDestinationObservationValue" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIiOAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17182-9' or value.code = 'LA17184-5' or value.code = 'LA17185-2' or value.code = 'LA17186-0' or value.code = 'LA17187-8' or value.code = 'LA17188-6' or value.code = 'LA17189-4' or value.code = 'LA17190-2' or value.code = 'LA17191-0' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jImfcNOaEeKU4pFWxuU9dw" name="ReasonForChoosingDestinationObservationValueP" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jImfcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jIqJ0NOaEeKU4pFWxuU9dw" name="ReasonForChoosingDestinationObservationMoodCode" constrainedElement="_cm1D5Z-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIqJ0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cm1q8Z-hEeGorI3CPDW2ww">
        <ownedComment xmi:id="_xob70EM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDisposition.20</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_083apZ-hEeGorI3CPDW2ww" name="PrearrivalActivationObservation">
      <ownedRule xmi:id="_jIvpYdOaEeKU4pFWxuU9dw" name="PrearrivalActivationObservationTemplateId" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIwQcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.36')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jI3lMNOaEeKU4pFWxuU9dw" name="PrearrivalActivationObservationCodeP" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jI3lMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jIzTwNOaEeKU4pFWxuU9dw" name="PrearrivalActivationObservationCode" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jIzTwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69462-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jI72oNOaEeKU4pFWxuU9dw" name="PrearrivalActivationObservationValue" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jI72odOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jI-S4NOaEeKU4pFWxuU9dw" name="PrearrivalActivationObservationEffectiveTime" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jI-S4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJBWMNOaEeKU4pFWxuU9dw" name="PrearrivalActivationObservationMoodCode" constrainedElement="_083apZ-hEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJBWMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_083ap5-hEeGorI3CPDW2ww">
        <ownedComment xmi:id="_Na520J-iEeGorI3CPDW2ww">
          <body>NEMSIS Trace: EDisposition.24</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q4zL9Z-gEeGorI3CPDW2ww" name="PatientConditionChangeAtDestinationObservation">
      <ownedRule xmi:id="_jJG1wNOaEeKU4pFWxuU9dw" name="PatientConditionChangeAtDestinationObservationTemplateId" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJG1wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.37')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJOKgNOaEeKU4pFWxuU9dw" name="PatientConditionChangeAtDestinationObservationCodeP" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJOKgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJJ5ENOaEeKU4pFWxuU9dw" name="PatientConditionChangeAtDestinationObservationCode" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJJ5EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67551-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJURINOaEeKU4pFWxuU9dw" name="PatientConditionChangeAtDestinationObservationValue" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJURIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA11011-6' or value.code = 'LA17181-1' or value.code = 'LA65-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJYikNOaEeKU4pFWxuU9dw" name="PatientConditionChangeAtDestinationObservationValueP" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJYikdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJcM8NOaEeKU4pFWxuU9dw" name="PatientConditionChangeAtDestinationObservationMoodCode" constrainedElement="_Q4zL9Z-gEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJc0ANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Q4zL95-gEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_1u74sKxCEeGLnrdLmr5TaQ" name="CallTime">
      <ownedRule xmi:id="_jJ6uENOaEeKU4pFWxuU9dw" name="CallTimeTemplateId" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJ6uEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.38')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKDQ8NOaEeKU4pFWxuU9dw" name="CallTimeCodeP" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKD4ANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jJ-_gNOaEeKU4pFWxuU9dw" name="CallTimeCode" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jJ-_gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69469-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKIJcNOaEeKU4pFWxuU9dw" name="CallTimeValue" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKIJcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKKlsNOaEeKU4pFWxuU9dw" name="CallTimeMoodCode" constrainedElement="_1u74sKxCEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKLMwNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4A3fEKxCEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JKerYKxDEeGLnrdLmr5TaQ" name="UnitNotifiedTime">
      <ownedRule xmi:id="_jKNB8NOaEeKU4pFWxuU9dw" name="UnitNotifiedTimeTemplateId" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKNpANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.39')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKU9wNOaEeKU4pFWxuU9dw" name="UnitNotifiedTimeCodeP" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKU9wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKQsUNOaEeKU4pFWxuU9dw" name="UnitNotifiedTimeCode" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKQsUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69471-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKZPMNOaEeKU4pFWxuU9dw" name="UnitNotifiedTimeValue" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKZPMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKcSgNOaEeKU4pFWxuU9dw" name="UnitNotifiedTimeMoodCode" constrainedElement="_JKerYKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKcSgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_JKerYqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UyaX0KxDEeGLnrdLmr5TaQ" name="UnitEnRouteTime">
      <ownedRule xmi:id="_jKeuwNOaEeKU4pFWxuU9dw" name="UnitEnRouteTimeTemplateId" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKeuwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.40')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKmDgNOaEeKU4pFWxuU9dw" name="UnitEnRouteTimeCodeP" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKmDgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKhyENOaEeKU4pFWxuU9dw" name="UnitEnRouteTimeCode" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKhyEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69472-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKqU8NOaEeKU4pFWxuU9dw" name="UnitEnRouteTimeValue" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKqU8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKsxMNOaEeKU4pFWxuU9dw" name="UnitEnRouteTimeMoodCode" constrainedElement="_UyaX0KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKsxMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UyaX0qxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iGh5QKxDEeGLnrdLmr5TaQ" name="UnitOnSceneTime">
      <ownedRule xmi:id="_jKvNcNOaEeKU4pFWxuU9dw" name="UnitOnSceneTimeTemplateId" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKvNcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.41')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jK2iMNOaEeKU4pFWxuU9dw" name="UnitOnSceneTimeCodeP" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jK2iMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jKyQwNOaEeKU4pFWxuU9dw" name="UnitOnSceneTimeCode" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jKy30NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69473-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jK7asNOaEeKU4pFWxuU9dw" name="UnitOnSceneTimeValue" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jK7asdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jK928NOaEeKU4pFWxuU9dw" name="UnitOnSceneTimeMoodCode" constrainedElement="_iGh5QKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jK928dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iGh5QqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yt7JUKxDEeGLnrdLmr5TaQ" name="UnitAtPatienttTime">
      <ownedRule xmi:id="_jLATMNOaEeKU4pFWxuU9dw" name="UnitAtPatienttTimeTemplateId" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLA6QNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.42')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLIPANOaEeKU4pFWxuU9dw" name="UnitAtPatienttTimeCodeP" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLI2ENOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLD9kNOaEeKU4pFWxuU9dw" name="UnitAtPatienttTimeCode" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLEkoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69474-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLNHgNOaEeKU4pFWxuU9dw" name="UnitAtPatienttTimeValue" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLNHgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLPjwNOaEeKU4pFWxuU9dw" name="UnitAtPatienttTimeMoodCode" constrainedElement="_yt7JUKxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLPjwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yt7JUqxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6w124KxDEeGLnrdLmr5TaQ" name="UnitLeftSceneTime">
      <ownedRule xmi:id="_jLSAANOaEeKU4pFWxuU9dw" name="UnitLeftSceneTimeTemplateId" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLSAAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.43')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLZ70NOaEeKU4pFWxuU9dw" name="UnitLeftSceneTimeCodeP" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLZ70dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLVDUNOaEeKU4pFWxuU9dw" name="UnitLeftSceneTimeCode" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLVDUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69475-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLeNQNOaEeKU4pFWxuU9dw" name="UnitLeftSceneTimeValue" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLeNQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLhQkNOaEeKU4pFWxuU9dw" name="UnitLeftSceneTimeMoodCode" constrainedElement="_6w124KxDEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLhQkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6w124qxDEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_DaIA4KxEEeGLnrdLmr5TaQ" name="PatientArrivedAtDestinationTime">
      <ownedRule xmi:id="_jLjFwNOaEeKU4pFWxuU9dw" name="PatientArrivedAtDestinationTimeTemplateId" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLjs0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.44')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLrBkNOaEeKU4pFWxuU9dw" name="PatientArrivedAtDestinationTimeCodeP" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLrBkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLmwINOaEeKU4pFWxuU9dw" name="PatientArrivedAtDestinationTimeCode" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLmwIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69476-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLvTANOaEeKU4pFWxuU9dw" name="PatientArrivedAtDestinationTimeValue" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLvTAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jLyWUNOaEeKU4pFWxuU9dw" name="PatientArrivedAtDestinationTimeMoodCode" constrainedElement="_DaIA4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jLyWUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DaIA4qxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KrhK4KxEEeGLnrdLmr5TaQ" name="UnitBackInServiceTime">
      <ownedRule xmi:id="_jL0LgNOaEeKU4pFWxuU9dw" name="UnitBackInServiceTimeTemplateId" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jL0ykNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.45')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jL8HUNOaEeKU4pFWxuU9dw" name="UnitBackInServiceTimeCodeP" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jL8HUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jL314NOaEeKU4pFWxuU9dw" name="UnitBackInServiceTimeCode" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jL314dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69477-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMAYwNOaEeKU4pFWxuU9dw" name="UnitBackInServiceTimeValue" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMAYwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMDcENOaEeKU4pFWxuU9dw" name="UnitBackInServiceTimeMoodCode" constrainedElement="_KrhK4KxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMDcEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KrhK4qxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UFgZEKxEEeGLnrdLmr5TaQ" name="DispatchNotifiedTime">
      <ownedRule xmi:id="_jMFRQNOaEeKU4pFWxuU9dw" name="DispatchNotifiedTimeTemplateId" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMF4UNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.46')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMNNENOaEeKU4pFWxuU9dw" name="DispatchNotifiedTimeCodeP" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMNNEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMI7oNOaEeKU4pFWxuU9dw" name="DispatchNotifiedTimeCode" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMI7odOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69470-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMRegNOaEeKU4pFWxuU9dw" name="DispatchNotifiedTimeValue" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMRegdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMUh0NOaEeKU4pFWxuU9dw" name="DispatchNotifiedTimeMoodCode" constrainedElement="_UFgZEKxEEeGLnrdLmr5TaQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMUh0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UFgZEqxEEeGLnrdLmr5TaQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xCcE0Iy7EeGnhceUMXltng" name="AdvancedDirectiveObservation">
      <ownedRule xmi:id="_jMaBYNOaEeKU4pFWxuU9dw" name="AdvancedDirectiveObservationTemplateId" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMaocNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.98')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMeS0NOaEeKU4pFWxuU9dw" name="AdvancedDirectiveObservationCode" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMeS0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67516-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMlAgNOaEeKU4pFWxuU9dw" name="AdvancedDirectiveObservationValue" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMlAgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA17319-7' or value.code = 'LA17320-5' or value.code = 'LA17321-3' or value.code = 'LA17322-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMoq4NOaEeKU4pFWxuU9dw" name="AdvancedDirectiveObservationValueP" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMpR8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMs8UNOaEeKU4pFWxuU9dw" name="AdvancedDirectiveObservationMoodCode" constrainedElement="_xCcE0Iy7EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jMtjYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xhZ4wIy7EeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_3C3WwMWqEeK3RfDsHamIUQ" name="DrugAllergyProblemAct">
      <ownedRule xmi:id="_jEuFANOaEeKU4pFWxuU9dw" name="DrugAllergyProblemActParticipant1" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEuFAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jMzqAdOaEeKU4pFWxuU9dw" name="AllergyProblemActTemplateId" constrainedElement="_3C3WwMWqEeK3RfDsHamIUQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jM0RENOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.48')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4F12sMWqEeK3RfDsHamIUQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2EAisBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CFApcIzGEeGnhceUMXltng" name="EnvironmentalAllergies">
      <ownedComment xmi:id="_ZC-C4IzaEeGnhceUMXltng">
        <body>NEMSIS Trace: EHistory.07</body>
      </ownedComment>
      <ownedRule xmi:id="_i7nMUNOaEeKU4pFWxuU9dw" name="EnvironmentalAllergiesExistenceOfEnvironmentalAllergy" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7nMUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::ExistenceOfEnvironmentalAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i7q2sNOaEeKU4pFWxuU9dw" name="EnvironmentalAllergiesEnvironmentalAllergy" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7q2sdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::EnvironmentalAllergy))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jM5woNOaEeKU4pFWxuU9dw" name="EnvironmentalAllergiesTemplateId" constrainedElement="_CFApcIzGEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jM5wodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.49')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_DFRMkIzGEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_i7pokNOaEeKU4pFWxuU9dw" name="getExistenceOfEnvironmentalAllergy" isQuery="true" bodyCondition="_i7pok9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i7pok9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i7pokNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7qPoNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::ExistenceOfEnvironmentalAllergy))->asSequence()->any(true).oclAsType(emspcr::ExistenceOfEnvironmentalAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i7pokdOaEeKU4pFWxuU9dw" type="_t_nG0IzYEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i7poktOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i7sr4NOaEeKU4pFWxuU9dw" name="getEnvironmentalAllergies" isQuery="true" bodyCondition="_i7sr49OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i7sr49OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i7sr4NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i7sr5NOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::EnvironmentalAllergy)).oclAsType(emspcr::EnvironmentalAllergy)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i7sr4dOaEeKU4pFWxuU9dw" type="_UleZUIzZEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i7sr4tOaEeKU4pFWxuU9dw" value="*"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KEFo8HSVEeGa4IXs2ghZEw" name="InjuryCauseCategory">
      <ownedRule xmi:id="_jM_3QNOaEeKU4pFWxuU9dw" name="InjuryCauseCategoryTemplateId" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jM_3QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.50')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNC6kNOaEeKU4pFWxuU9dw" name="InjuryCauseCategoryCode" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNC6kdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69543-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNHzENOaEeKU4pFWxuU9dw" name="InjuryCauseCategoryValue" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNHzEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.3.1'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNMEgNOaEeKU4pFWxuU9dw" name="InjuryCauseCategoryMoodCode" constrainedElement="_KEFo8HSVEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNMEgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_N8NKAHSVEeGa4IXs2ghZEw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_aS16EHSWEeGa4IXs2ghZEw" name="InjuryMechanism">
      <ownedRule xmi:id="_jNRkENOaEeKU4pFWxuU9dw" name="InjuryMechanismTemplateId" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNRkEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.51')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNVOcNOaEeKU4pFWxuU9dw" name="InjuryMechanismCode" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNVOcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67494-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNaG8NOaEeKU4pFWxuU9dw" name="InjuryMechanismValue" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNauANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17335-3' or value.code = 'LA17336-1' or value.code = 'LA46-8' or value.code = 'LA7318-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNe_cNOaEeKU4pFWxuU9dw" name="InjuryMechanismMoodCode" constrainedElement="_aS16EHSWEeGa4IXs2ghZEw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNe_cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_dAw44HSWEeGa4IXs2ghZEw">
        <ownedComment xmi:id="_8OISsEM9EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EInjury.02</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lTHsIIcXEeGqF6qfYwLiQw" name="TraumaCenterCriteria">
      <ownedRule xmi:id="_jNkfANOaEeKU4pFWxuU9dw" name="TraumaCenterCriteriaTemplateId" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNlGENOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.52')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNniUNOaEeKU4pFWxuU9dw" name="TraumaCenterCriteriaCode" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNniUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67495-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNtB4NOaEeKU4pFWxuU9dw" name="TraumaCenterCriteriaValue" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNtB4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17337-9' or value.code = 'LA17338-7' or value.code = 'LA17339-5' or value.code = 'LA17340-3' or value.code = 'LA17341-1' or value.code = 'LA17342-9' or value.code = 'LA17343-7' or value.code = 'LA17344-5' or value.code = 'LA17345-2' or value.code = 'LA17346-0' or value.code = 'LA17347-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jNxTUNOaEeKU4pFWxuU9dw" name="TraumaCenterCriteriaMoodCode" constrainedElement="_lTHsIIcXEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jNx6YNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_orogEIcXEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_vuraIIcZEeGqF6qfYwLiQw" name="InjuryRiskFactor">
      <ownedRule xmi:id="_jN2y4tOaEeKU4pFWxuU9dw" name="InjuryRiskFactorTemplateId" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jN3Z8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.53')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jN6dQNOaEeKU4pFWxuU9dw" name="InjuryRiskFactorCode" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jN6dQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67496-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jN_80NOaEeKU4pFWxuU9dw" name="InjuryRiskFactorValue" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jN_80dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17348-6' or value.code = 'LA17349-4' or value.code = 'LA17350-2' or value.code = 'LA17352-8' or value.code = 'LA17353-6' or value.code = 'LA17357-7' or value.code = 'LA17360-1' or value.code = 'LA18124-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOE1UNOaEeKU4pFWxuU9dw" name="InjuryRiskFactorMoodCode" constrainedElement="_vuraIIcZEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOE1UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_x1Ee4IcZEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_nvhVwIcaEeGqF6qfYwLiQw" name="VehicleImpactArea">
      <ownedRule xmi:id="_jOKU4NOaEeKU4pFWxuU9dw" name="VehicleImpactAreaTemplateId" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOKU4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.54')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jONYMNOaEeKU4pFWxuU9dw" name="VehicleImpactAreaCode" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jONYMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67497-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOS3wNOaEeKU4pFWxuU9dw" name="VehicleImpactAreaValue" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOS3wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA10137-0' or value.code = 'LA10138-8' or value.code = 'LA10139-6' or value.code = 'LA10140-4' or value.code = 'LA10141-2' or value.code = 'LA13942-0' or value.code = 'LA14557-5' or value.code = 'LA14558-3' or value.code = 'LA6112-2' or value.code = 'LA6113-0' or value.code = 'LA6114-8' or value.code = 'LA6115-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOXJMNOaEeKU4pFWxuU9dw" name="VehicleImpactAreaMoodCode" constrainedElement="_nvhVwIcaEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOXJMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Kp4xcIccEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zMwjMIccEeGqF6qfYwLiQw" name="PatientLocationInVehicle">
      <ownedRule xmi:id="_jOcowNOaEeKU4pFWxuU9dw" name="PatientLocationInVehicleTemplateId" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOdP0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.55')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOfsENOaEeKU4pFWxuU9dw" name="PatientLocationInVehicleCode" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOgTINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67498-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOlLoNOaEeKU4pFWxuU9dw" name="PatientLocationInVehicleValue" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOlLodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17361-9' or value.code = 'LA17362-7' or value.code = 'LA17363-5' or value.code = 'LA17364-3' or value.code = 'LA17365-0' or value.code = 'LA17366-8' or value.code = 'LA17367-6' or value.code = 'LA17368-4' or value.code = 'LA17369-2' or value.code = 'LA17370-0' or value.code = 'LA17371-8' or value.code = 'LA17372-6' or value.code = 'LA17373-4' or value.code = 'LA17374-2' or value.code = 'LA4489-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOqEINOaEeKU4pFWxuU9dw" name="PatientLocationInVehicleMoodCode" constrainedElement="_zMwjMIccEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOqEIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1NY-MIccEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bsVJUIcdEeGqF6qfYwLiQw" name="VehicleOccupantSafetyEquipment">
      <ownedRule xmi:id="_jOvjsNOaEeKU4pFWxuU9dw" name="VehicleOccupantSafetyEquipmentTemplateId" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOvjsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.56')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jOynANOaEeKU4pFWxuU9dw" name="VehicleOccupantSafetyEquipmentCode" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jOynAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67499-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jO3fgNOaEeKU4pFWxuU9dw" name="VehicleOccupantSafetyEquipmentValue" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jO4GkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17375-9' or value.code = 'LA17376-7' or value.code = 'LA17377-5' or value.code = 'LA17378-3' or value.code = 'LA17379-1' or value.code = 'LA17380-9' or value.code = 'LA17382-5' or value.code = 'LA46-8' or value.code = 'LA9381-0' or value.code = 'LA9391-9' or value.code = 'LA9392-7' or value.code = 'LA9393-5')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jO8YANOaEeKU4pFWxuU9dw" name="VehicleOccupantSafetyEquipmentMoodCode" constrainedElement="_bsVJUIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jO8YAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gbauoIcdEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_2lRhsIcdEeGqF6qfYwLiQw" name="AirbagDeploymentStatus">
      <ownedRule xmi:id="_jPB3kNOaEeKU4pFWxuU9dw" name="AirbagDeploymentStatusTemplateId" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPB3kdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.57')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPE64NOaEeKU4pFWxuU9dw" name="AirbagDeploymentStatusCode" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPFh8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67500-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPKacNOaEeKU4pFWxuU9dw" name="AirbagDeploymentStatusValue" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPLBgNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17384-1' or value.code = 'LA17385-8' or value.code = 'LA17386-6' or value.code = 'LA17387-4' or value.code = 'LA17388-2' or value.code = 'LA46-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPPS8NOaEeKU4pFWxuU9dw" name="AirbagDeploymentStatusMoodCode" constrainedElement="_2lRhsIcdEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPPS8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4RXQEIcdEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_auKbcIceEeGqF6qfYwLiQw" name="HeightOfFall">
      <ownedRule xmi:id="_jPUygNOaEeKU4pFWxuU9dw" name="HeightOfFallTemplateId" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPUygdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.58')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPX10NOaEeKU4pFWxuU9dw" name="HeightOfFallCode" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPYc4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67501-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPcHQNOaEeKU4pFWxuU9dw" name="HeightOfFallValue" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPcuUNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPfKkNOaEeKU4pFWxuU9dw" name="HeightOfFallMoodCode" constrainedElement="_auKbcIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPfKkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cRczIIceEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wKL4IIceEeGqF6qfYwLiQw" name="DisasterType">
      <ownedRule xmi:id="_jPkDEtOaEeKU4pFWxuU9dw" name="DisasterTypeTemplateId" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPkqINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.59')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPntcNOaEeKU4pFWxuU9dw" name="DisasterTypeCode" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPntcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69463-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPsl8NOaEeKU4pFWxuU9dw" name="DisasterTypeValue" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPtNANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17594-5' or value.code = 'LA18089-5' or value.code = 'LA18090-3' or value.code = 'LA18091-1' or value.code = 'LA18092-9' or value.code = 'LA18093-7' or value.code = 'LA18094-5' or value.code = 'LA18095-2' or value.code = 'LA18096-0' or value.code = 'LA18097-8' or value.code = 'LA18098-6' or value.code = 'LA18099-4' or value.code = 'LA18100-0' or value.code = 'LA18101-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jPxecNOaEeKU4pFWxuU9dw" name="DisasterTypeMoodCode" constrainedElement="_wKL4IIceEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jPxecdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xljC4IceEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_W_uRYIzdEeGnhceUMXltng" name="ExistenceOfHistoryOfCondition">
      <ownedRule xmi:id="_jP6BUNOaEeKU4pFWxuU9dw" name="ExistenceOfHistoryOfConditionTemplateId" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jP6BUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.60')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jP9EoNOaEeKU4pFWxuU9dw" name="ExistenceOfHistoryOfConditionCode" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jP9EodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67793-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQBWENOaEeKU4pFWxuU9dw" name="ExistenceOfHistoryOfConditionValue" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQBWEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQDyUNOaEeKU4pFWxuU9dw" name="ExistenceOfHistoryOfConditionMoodCode" constrainedElement="_W_uRYIzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQEZYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_XjAkoIzdEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5XgZ4IzdEeGnhceUMXltng" name="HistoryOfCondition">
      <ownedRule xmi:id="_jQGOkNOaEeKU4pFWxuU9dw" name="HistoryOfConditionTemplateId" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQG1oNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.61')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQOKYNOaEeKU4pFWxuU9dw" name="HistoryOfConditionCodeP" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQOKYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQJ48NOaEeKU4pFWxuU9dw" name="HistoryOfConditionCode" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQJ48dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '68487-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQTp8NOaEeKU4pFWxuU9dw" name="HistoryOfConditionValue" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQTp8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQX7YNOaEeKU4pFWxuU9dw" name="HistoryOfConditionValueP" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQX7YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQcM0NOaEeKU4pFWxuU9dw" name="HistoryOfConditionMoodCode" constrainedElement="_5XgZ4IzdEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQcz4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5xr0cIzdEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HLO9kIzgEeGnhceUMXltng" name="HistoryOfProceduresOrganizer">
      <ownedRule xmi:id="_jB-6ENOaEeKU4pFWxuU9dw" name="HistoryOfProceduresOrganizerExistenceOfHistoryOfProcedureComponent" constrainedElement="_HLO9kIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jB_hINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jC78UNOaEeKU4pFWxuU9dw" name="HistoryOfProceduresOrganizerHistoryOfProceduresComponent" constrainedElement="_HLO9kIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jC78UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->exists(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQhsYNOaEeKU4pFWxuU9dw" name="HistoryOfProceduresOrganizerTemplateId" constrainedElement="_HLO9kIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQiTcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.62')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Hx2RoIzgEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KEZzkKg-EeG79fAvHk6H4g" name="Complaint">
      <ownedRule xmi:id="_jBfK0NOaEeKU4pFWxuU9dw" name="ComplaintComplaintDurationRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBfK0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBhnENOaEeKU4pFWxuU9dw" name="ComplaintComplaintTypeRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBhnEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jBlRcNOaEeKU4pFWxuU9dw" name="ComplaintComplaintOrganSystemRelationship" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jBlRcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQtSkNOaEeKU4pFWxuU9dw" name="ComplaintTemplateId" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQtSkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.63')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQ11cNOaEeKU4pFWxuU9dw" name="ComplaintCodeP" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQ11cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQxkANOaEeKU4pFWxuU9dw" name="ComplaintCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQxkAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '10154-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQ5f0NOaEeKU4pFWxuU9dw" name="ComplaintValue" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQ5f0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jQ9KMNOaEeKU4pFWxuU9dw" name="ComplaintTargetSiteCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jQ9xQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12703-7' or value.code = 'LA12705-2' or value.code = 'LA12706-0' or value.code = 'LA18111-7' or value.code = 'LA18112-5' or value.code = 'LA18113-3' or value.code = 'LA18114-1' or value.code = 'LA18115-8' or value.code = 'LA18116-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRBboNOaEeKU4pFWxuU9dw" name="ComplaintTargetSiteCodeP" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRCCsNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRFtENOaEeKU4pFWxuU9dw" name="ComplaintEffectiveTime" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRFtEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRIJUNOaEeKU4pFWxuU9dw" name="ComplaintMoodCode" constrainedElement="_KEZzkKg-EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRIwYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Ke-PsKg-EeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7nP0MKhCEeG79fAvHk6H4g" name="PossibleInjury">
      <ownedComment xmi:id="_FHsPsKhDEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.02</body>
      </ownedComment>
      <ownedRule xmi:id="_jROP89OaEeKU4pFWxuU9dw" name="PossibleInjuryTemplateId" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRO3ANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.64')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRWLwNOaEeKU4pFWxuU9dw" name="PossibleInjuryCodeP" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRWLwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRR6UNOaEeKU4pFWxuU9dw" name="PossibleInjuryCode" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRR6UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69467-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRZ2INOaEeKU4pFWxuU9dw" name="PossibleInjuryValue" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRZ2IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRc5cNOaEeKU4pFWxuU9dw" name="PossibleInjuryMoodCode" constrainedElement="_7nP0MKhCEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRdggNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_72GvkKhCEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0C-8EKhDEeG79fAvHk6H4g" name="ProviderPrimaryImpression">
      <ownedComment xmi:id="_FTlhMKhEEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.11</body>
      </ownedComment>
      <ownedRule xmi:id="_jRiZANOaEeKU4pFWxuU9dw" name="ProviderPrimaryImpressionTemplateId" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRiZAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.65')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRqU0NOaEeKU4pFWxuU9dw" name="ProviderPrimaryImpressionCodeP" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRqU0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRmDYNOaEeKU4pFWxuU9dw" name="ProviderPrimaryImpressionCode" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRmDYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67492-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRvNUNOaEeKU4pFWxuU9dw" name="ProviderPrimaryImpressionValue" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRvNUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jRzewNOaEeKU4pFWxuU9dw" name="ProviderPrimaryImpressionValueP" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jRzewdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jR3JINOaEeKU4pFWxuU9dw" name="ProviderPrimaryImpressionMoodCode" constrainedElement="_0C-8EKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jR3JIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0V7GMKhDEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KOxo0KhEEeG79fAvHk6H4g" name="PrimarySymptom">
      <ownedComment xmi:id="_TtCTAKhEEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.09</body>
      </ownedComment>
      <ownedRule xmi:id="_jR8osNOaEeKU4pFWxuU9dw" name="PrimarySymptomTemplateId" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jR8osdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.66')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSEkgNOaEeKU4pFWxuU9dw" name="PrimarySymptomCodeP" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSEkgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSATENOaEeKU4pFWxuU9dw" name="PrimarySymptomCode" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSATEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67774-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSJdANOaEeKU4pFWxuU9dw" name="PrimarySymptomValue" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSJdAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSNucNOaEeKU4pFWxuU9dw" name="PrimarySymptomValueP" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSNucdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSRY0NOaEeKU4pFWxuU9dw" name="PrimarySymptomMoodCode" constrainedElement="_KOxo0KhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSR_4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KfRi8KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g5iJgKhEEeG79fAvHk6H4g" name="OtherSymptoms">
      <ownedComment xmi:id="_s_xikKhEEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.10</body>
      </ownedComment>
      <ownedRule xmi:id="_jSW4YNOaEeKU4pFWxuU9dw" name="OtherSymptomsTemplateId" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSXfcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.67')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSe0MNOaEeKU4pFWxuU9dw" name="OtherSymptomsCodeP" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSfbQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSbJ0NOaEeKU4pFWxuU9dw" name="OtherSymptomsCode" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSbJ0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67776-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSkTwNOaEeKU4pFWxuU9dw" name="OtherSymptomsValue" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSkTwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSolMNOaEeKU4pFWxuU9dw" name="OtherSymptomsValueP" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSolMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jSs2oNOaEeKU4pFWxuU9dw" name="OtherSymptomsMoodCode" constrainedElement="_g5iJgKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jSs2odOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hM9b0KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0mPksKhEEeG79fAvHk6H4g" name="ProviderSecondaryImpressions">
      <ownedComment xmi:id="_xi9kcKhFEeG79fAvHk6H4g">
        <body>NEMSIS Trace: ESituation.12</body>
      </ownedComment>
      <ownedRule xmi:id="_jTEDANOaEeKU4pFWxuU9dw" name="ProviderSecondaryImpressionsTemplateId" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTEDAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.68')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTL-0NOaEeKU4pFWxuU9dw" name="ProviderSecondaryImpressionsCodeP" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTL-0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTHtYNOaEeKU4pFWxuU9dw" name="ProviderSecondaryImpressionsCode" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTHtYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69542-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTQ3UNOaEeKU4pFWxuU9dw" name="ProviderSecondaryImpressionsValue" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTQ3UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTVIwNOaEeKU4pFWxuU9dw" name="ProviderSecondaryImpressionsValueP" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTVIwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTYzINOaEeKU4pFWxuU9dw" name="ProviderSecondaryImpressionsMoodCode" constrainedElement="_0mPksKhEEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTYzIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_06tY0KhEEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NZgqAKhFEeG79fAvHk6H4g" name="InitialPatientAcuity">
      <ownedRule xmi:id="_jTeSsNOaEeKU4pFWxuU9dw" name="InitialPatientAcuityTemplateId" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTeSsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.69')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTmOgNOaEeKU4pFWxuU9dw" name="InitialPatientAcuityCodeP" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTmOgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTh9ENOaEeKU4pFWxuU9dw" name="InitialPatientAcuityCode" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTh9EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67493-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTruENOaEeKU4pFWxuU9dw" name="InitialPatientAcuityValue" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTruEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17694-3' or value.code = 'LA17695-0' or value.code = 'LA17696-8' or value.code = 'LA17697-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jTv_gNOaEeKU4pFWxuU9dw" name="InitialPatientAcuityValueP" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jTv_gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jT0Q8NOaEeKU4pFWxuU9dw" name="InitialPatientAcuityMoodCode" constrainedElement="_NZgqAKhFEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jT0Q8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NnQyIKhFEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Mr964IzjEeGnhceUMXltng" name="ExistenceOfDrugUseIndication">
      <ownedRule xmi:id="_jT8MwdOaEeKU4pFWxuU9dw" name="ExistenceOfDrugUseIndicationTemplateId" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jT8z0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.70')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUDhgNOaEeKU4pFWxuU9dw" name="ExistenceOfDrugUseIndicationCodeP" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUEIkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jT_3INOaEeKU4pFWxuU9dw" name="ExistenceOfDrugUseIndicationCode" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jT_3IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69757-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUIaANOaEeKU4pFWxuU9dw" name="ExistenceOfDrugUseIndicationValue" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUIaAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUK2QNOaEeKU4pFWxuU9dw" name="ExistenceOfDrugUseIndicationMoodCode" constrainedElement="_Mr964IzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUK2QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NOQvoIzjEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oJHzkIzjEeGnhceUMXltng" name="DrugUseIndication">
      <ownedRule xmi:id="_jUNSgNOaEeKU4pFWxuU9dw" name="DrugUseIndicationTemplateId" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUNSgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.71')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUQV0NOaEeKU4pFWxuU9dw" name="DrugUseIndicationCode" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUQV0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67669-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUVOUNOaEeKU4pFWxuU9dw" name="DrugUseIndicationValue" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUV1YNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17323-9' or value.code = 'LA17324-7' or value.code = 'LA17325-4' or value.code = 'LA17326-2' or value.code = 'LA17327-0' or value.code = 'LA17328-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUaG0NOaEeKU4pFWxuU9dw" name="DrugUseIndicationMoodCode" constrainedElement="_oJHzkIzjEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUaG0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oiTIkIzjEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_5JQlAJovEeG_FLcaRgAa7g" name="MedicationAdministered">
      <ownedRule xmi:id="_i9L5oNOaEeKU4pFWxuU9dw" name="MedicationAdministeredMedicationNotAdministeredEntryRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9L5odOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9QLENOaEeKU4pFWxuU9dw" name="MedicationAdministeredMedicationConsumable" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9QLEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9Z8ENOaEeKU4pFWxuU9dw" name="MedicationAdministeredMedicationAdministeredResponseRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9Z8EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9bxQNOaEeKU4pFWxuU9dw" name="MedicationAdministeredMedicationComplicationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9bxQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->exists(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9dmcNOaEeKU4pFWxuU9dw" name="MedicationAdministeredMedicationPriorAdministrationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9dmcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9jtENOaEeKU4pFWxuU9dw" name="MedicationAdministeredMedicationPerformerParticipation" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9jtEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.performer->one(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i9liQNOaEeKU4pFWxuU9dw" name="MedicationAdministeredMedicationAuthorizationRelationship" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i9liQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jDANwNOaEeKU4pFWxuU9dw" name="MedicationAdministeredMedicationAdministrationDeviceParticipant" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jDANwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUgNcdOaEeKU4pFWxuU9dw" name="MedicationActivityTemplateId" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUgNctOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.72')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUke4NOaEeKU4pFWxuU9dw" name="MedicationAdministeredClassCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUke4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('classCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUniMNOaEeKU4pFWxuU9dw" name="MedicationAdministeredDoseQuantity" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUoJQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUqlgNOaEeKU4pFWxuU9dw" name="MedicationAdministeredEffectiveTime" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUqlgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime->isEmpty() or self.effectiveTime->exists(element | element.isNullFlavorUndefined())) implies (self.effectiveTime->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUtBwNOaEeKU4pFWxuU9dw" name="MedicationAdministeredNegationInd" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUtBwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jU09kNOaEeKU4pFWxuU9dw" name="MedicationAdministeredRouteCodeP" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jU1koNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jUwsINOaEeKU4pFWxuU9dw" name="MedicationAdministeredRouteCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jUxTMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.26.1.1.1' and (value.code = 'C38208' or value.code = 'C38246' or value.code = 'C38216' or value.code = 'C38222' or value.code = 'C38284' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38253' or value.code = 'C38276' or value.code = 'C38285' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38290' or value.code = 'C38192' or value.code = 'C38295' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38304' or value.code = 'C38308' or value.code = 'C38305' or value.code = 'C38271' or value.code = 'NewCode' or value.code = 'C38250'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jU_VoNOaEeKU4pFWxuU9dw" name="MedicationAdministeredApproachSiteCodeP" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jU_8sNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jU7EMNOaEeKU4pFWxuU9dw" name="MedicationAdministeredApproachSiteCode" constrainedElement="_5JQlAJovEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jU7EMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.code = '15562006' and value.codeSystem = '2.16.840.1.113883.6.96'))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6L6U0JovEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_46UUAJ9nEeGw9ZRnaFfEZQ" name="EmergencyMedicalDispatchObservation">
      <ownedRule xmi:id="_jWETsNOaEeKU4pFWxuU9dw" name="EmergencyMedicalDispatchObservationTemplateId" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWETsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.73')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWLocNOaEeKU4pFWxuU9dw" name="EmergencyMedicalDispatchObservationCodeP" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWLocdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWHXANOaEeKU4pFWxuU9dw" name="EmergencyMedicalDispatchObservationCode" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWHXAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67488-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWRIANOaEeKU4pFWxuU9dw" name="EmergencyMedicalDispatchObservationValue" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWRvENOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17151-4' or value.code = 'LA17152-2' or value.code = 'LA17153-0' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWVZcNOaEeKU4pFWxuU9dw" name="EmergencyMedicalDispatchObservationValueP" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWWAgNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWaR8NOaEeKU4pFWxuU9dw" name="EmergencyMedicalDispatchObservationMoodCode" constrainedElement="_46UUAJ9nEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWa5ANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_5cQjcJ9nEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__LltsJ97EeGw9ZRnaFfEZQ" name="ComplaintReportedByDispatch">
      <ownedRule xmi:id="_jWfxgdOaEeKU4pFWxuU9dw" name="ComplaintReportedByDispatchTemplateId" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWgYkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.74')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWoUYNOaEeKU4pFWxuU9dw" name="ComplaintReportedByDispatchCodeP" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWoUYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWkC8NOaEeKU4pFWxuU9dw" name="ComplaintReportedByDispatchCode" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWkC8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67570-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWtM4NOaEeKU4pFWxuU9dw" name="ComplaintReportedByDispatchValue" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWtM4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15468-4' or value.code = 'LA15903-0' or value.code = 'LA17117-5' or value.code = 'LA17118-3' or value.code = 'LA17119-1' or value.code = 'LA17120-9' or value.code = 'LA17121-7' or value.code = 'LA17122-5' or value.code = 'LA17123-3' or value.code = 'LA17124-1' or value.code = 'LA17125-8' or value.code = 'LA17126-6' or value.code = 'LA17127-4' or value.code = 'LA17128-2' or value.code = 'LA17129-0' or value.code = 'LA17131-6' or value.code = 'LA17132-4' or value.code = 'LA17133-2' or value.code = 'LA17134-0' or value.code = 'LA17135-7' or value.code = 'LA17136-5' or value.code = 'LA17137-3' or value.code = 'LA17138-1' or value.code = 'LA17140-7' or value.code = 'LA17141-5' or value.code = 'LA17142-3' or value.code = 'LA17143-1' or value.code = 'LA17144-9' or value.code = 'LA17145-6' or value.code = 'LA17146-4' or value.code = 'LA17147-2' or value.code = 'LA17148-0' or value.code = 'LA17149-8' or value.code = 'LA17150-6' or value.code = 'LA18093-7' or value.code = 'LA18209-9' or value.code = 'LA18210-7' or value.code = 'LA18211-5' or value.code = 'LA9553-4' or value.code = 'LA9555-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jWw3QNOaEeKU4pFWxuU9dw" name="ComplaintReportedByDispatchValueP" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jWxeUNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jW2W0NOaEeKU4pFWxuU9dw" name="ComplaintReportedByDispatchMoodCode" constrainedElement="__LltsJ97EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jW2W0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_BD2P0J98EeGw9ZRnaFfEZQ">
        <ownedComment xmi:id="_efgjIEM8EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EDispatch.01</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sUm-oIcnEeGqF6qfYwLiQw" name="CurrentlyOnMedication">
      <ownedRule xmi:id="_jW72YNOaEeKU4pFWxuU9dw" name="CurrentlyOnMedicationTemplateId" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jW72YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.75')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jW-5sNOaEeKU4pFWxuU9dw" name="CurrentlyOnMedicationCode" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jW_gwNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67791-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXDLINOaEeKU4pFWxuU9dw" name="CurrentlyOnMedicationValue" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXDyMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXGOcNOaEeKU4pFWxuU9dw" name="CurrentlyOnMedicationMoodCode" constrainedElement="_sUm-oIcnEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXGOcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wcI0sIcnEeGqF6qfYwLiQw">
        <ownedComment xmi:id="_Hz8KIEM8EeKBoM5tGvrHVQ">
          <body>If EHistory.12 has the value &quot;None Reported,&quot; the value is &quot;False&quot;&#xD;
If EHistory.12 has the value &quot;Refused&quot; or &quot;Unable to Complete,&quot; the value is &quot;NI&quot;; the&#xD;
original value may be recorded in Observation.text.</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RZqlsIcoEeGqF6qfYwLiQw" name="PatientOnAnticoagulants">
      <ownedComment xmi:id="_hDxHEIcoEeGqF6qfYwLiQw">
        <body>NEMSIS Trace: EHistory.12 ('no anticoagulants' value)</body>
      </ownedComment>
      <ownedRule xmi:id="_jXLuANOaEeKU4pFWxuU9dw" name="PatientOnAnticoagulantsTemplateId" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXLuAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.76')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXOxUNOaEeKU4pFWxuU9dw" name="PatientOnAnticoagulantsCode" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXPYYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69749-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXTp0NOaEeKU4pFWxuU9dw" name="PatientOnAnticoagulantsValue" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXTp0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXWGENOaEeKU4pFWxuU9dw" name="PatientOnAnticoagulantsMoodCode" constrainedElement="_RZqlsIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXWGEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TXhZgIcoEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_mwn8MIcoEeGqF6qfYwLiQw" name="CurrentMedication">
      <ownedRule xmi:id="_jCpBYNOaEeKU4pFWxuU9dw" name="CurrentMedicationCurrentMedicationConsumable" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCpBYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.consumable->one(consumable : cda::Consumable | not consumable.oclIsUndefined() and consumable.oclIsKindOf(cda::Consumable))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXcMsdOaEeKU4pFWxuU9dw" name="MedicationActivityTemplateId" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXcMstOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.77')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXeo8NOaEeKU4pFWxuU9dw" name="CurrentMedicationDoseQuantity" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXfQANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.doseQuantity.oclIsUndefined() or self.doseQuantity.isNullFlavorUndefined()) implies (not self.doseQuantity.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXnL0NOaEeKU4pFWxuU9dw" name="CurrentMedicationRouteCodeP" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXnL0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXi6YNOaEeKU4pFWxuU9dw" name="CurrentMedicationRouteCode" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXi6YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.routeCode.oclIsUndefined() or self.routeCode.isNullFlavorUndefined()) implies (not self.routeCode.oclIsUndefined() and self.routeCode.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = self.routeCode.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.3.26.1.1.1' and (value.code = 'C38208' or value.code = 'C38246' or value.code = 'C38216' or value.code = 'C38222' or value.code = 'C38284' or value.code = 'C28161' or value.code = 'C38255' or value.code = 'C38253' or value.code = 'C38276' or value.code = 'C38285' or value.code = 'C38287' or value.code = 'C38288' or value.code = 'C38290' or value.code = 'C38192' or value.code = 'C38295' or value.code = 'C38299' or value.code = 'C38300' or value.code = 'C38304' or value.code = 'C38308' or value.code = 'C38305' or value.code = 'C38271' or value.code = 'NewCode' or value.code = 'C38250'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXsEUNOaEeKU4pFWxuU9dw" name="CurrentMedicationNegationInd" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXsEUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jXugkNOaEeKU4pFWxuU9dw" name="CurrentMedicationNullFlavor" constrainedElement="_mwn8MIcoEeGqF6qfYwLiQw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jXugkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('nullFlavor')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pv80EIcoEeGqF6qfYwLiQw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2GHbgBSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zbYvIJoiEeG_FLcaRgAa7g" name="PhysicalAssessmentOrganizer">
      <ownedRule xmi:id="_jD0GENOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent1" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jD0GEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jD5loNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent2" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jD5lodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jD93ENOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent3" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jD93EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::SkinAssessment))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jECvkNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent4" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jECvkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jEGZ8NOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent5" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEGZ8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jEKEUNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent6" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEKEUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jENusNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent7" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jENusdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jERZENOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent8" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jERZEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jEVqgNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent9" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEVqgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jEZU4NOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent10" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEZU4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jEdmUNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent11" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEdmUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jEhQsNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent12" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEhQsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jEk7ENOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent13" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEk7EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jEpMgNOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerComponent14" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEpMgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jX9xINOaEeKU4pFWxuU9dw" name="PhysicalAssessmentOrganizerTemplateId" constrainedElement="_zbYvIJoiEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jX9xIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.78')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0BK8wJoiEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_jD_FMNOaEeKU4pFWxuU9dw" name="getComponent3" isQuery="true" bodyCondition="_jD_sQtOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_jD_sQtOaEeKU4pFWxuU9dw" name="body" constrainedElement="_jD_FMNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_jD_sQ9OaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::SkinAssessment))->asSequence()->any(true).oclAsType(emspcr::SkinAssessment)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_jD_sQNOaEeKU4pFWxuU9dw" type="_bFfQYJokEeG_FLcaRgAa7g" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_jD_sQdOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sW8QcJosEeG_FLcaRgAa7g" name="PatientPregnancy">
      <ownedRule xmi:id="_jYNBsNOaEeKU4pFWxuU9dw" name="PatientPregnancyTemplateId" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYNBsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.79')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYU9gNOaEeKU4pFWxuU9dw" name="PatientPregnancyCodeP" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYU9gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYQsENOaEeKU4pFWxuU9dw" name="PatientPregnancyCode" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYQsEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67471-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYadENOaEeKU4pFWxuU9dw" name="PatientPregnancyValue" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYadEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17329-6' or value.code = 'LA17330-4' or value.code = 'LA17331-2' or value.code = 'LA17332-0' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYeugNOaEeKU4pFWxuU9dw" name="PatientPregnancyValueP" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYeugdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYiY4NOaEeKU4pFWxuU9dw" name="PatientPregnancyMoodCode" constrainedElement="_sW8QcJosEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYi_8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_42mPEJosEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_S1I0sJotEeG_FLcaRgAa7g" name="LastOralIntake">
      <ownedRule xmi:id="_jYn4cNOaEeKU4pFWxuU9dw" name="LastOralIntakeTemplateId" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYn4cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.80')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYv0QNOaEeKU4pFWxuU9dw" name="LastOralIntakeCodeP" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYv0QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYri0NOaEeKU4pFWxuU9dw" name="LastOralIntakeCode" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jYri0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67517-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jYzeoNOaEeKU4pFWxuU9dw" name="LastOralIntakeValue" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jY0FsNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::TS)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jY2h8NOaEeKU4pFWxuU9dw" name="LastOralIntakeMoodCode" constrainedElement="_S1I0sJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jY2h8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TS5HsJotEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rhjrIJotEeG_FLcaRgAa7g" name="PatientAge">
      <ownedRule xmi:id="_jY8BgNOaEeKU4pFWxuU9dw" name="PatientAgeTemplateId" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jY8BgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.81')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZD9UNOaEeKU4pFWxuU9dw" name="PatientAgeCodeP" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZD9UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jY_r4NOaEeKU4pFWxuU9dw" name="PatientAgeCode" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jY_r4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '30525-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZHnsNOaEeKU4pFWxuU9dw" name="PatientAgeValue" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZHnsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZKD8NOaEeKU4pFWxuU9dw" name="PatientAgeMoodCode" constrainedElement="_rhjrIJotEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZKD8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_r9YrgJotEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_HuCH8JouEeG_FLcaRgAa7g" name="ThrombolyticContraindications">
      <ownedRule xmi:id="_jZPjgdOaEeKU4pFWxuU9dw" name="ThrombolyticContraindicationsTemplateId" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZQKkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.82')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZXfUNOaEeKU4pFWxuU9dw" name="ThrombolyticContraindicationsCodeP" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZXfUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZTN4NOaEeKU4pFWxuU9dw" name="ThrombolyticContraindicationsCode" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZT08NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67523-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZcX0NOaEeKU4pFWxuU9dw" name="ThrombolyticContraindicationsValue" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZcX0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17114-2' or value.code = 'LA17115-9' or value.code = 'LA17116-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZhQUNOaEeKU4pFWxuU9dw" name="ThrombolyticContraindicationsMoodCode" constrainedElement="_HuCH8JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZhQUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_IFY4AJouEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qlUP4JouEeG_FLcaRgAa7g" name="BarriersToPatientCare">
      <ownedRule xmi:id="_jZmI0NOaEeKU4pFWxuU9dw" name="BarriersToPatientCareTemplateId" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZmI0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.83')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZuEoNOaEeKU4pFWxuU9dw" name="BarriersToPatientCareCodeP" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZuEodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZpzMNOaEeKU4pFWxuU9dw" name="BarriersToPatientCareCode" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZpzMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67523-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZzkMNOaEeKU4pFWxuU9dw" name="BarriersToPatientCareValue" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZzkMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17306-4' or value.code = 'LA17307-2' or value.code = 'LA17308-0' or value.code = 'LA17309-8' or value.code = 'LA17310-6' or value.code = 'LA17311-4' or value.code = 'LA17312-2' or value.code = 'LA17313-0' or value.code = 'LA17314-8' or value.code = 'LA17315-5' or value.code = 'LA17316-3' or value.code = 'LA17317-1' or value.code = 'LA17318-9' or value.code = 'LA17711-5' or value.code = 'LA6301-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZ3OkNOaEeKU4pFWxuU9dw" name="BarriersToPatientCareValueP" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZ31oNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jZ7gANOaEeKU4pFWxuU9dw" name="BarriersToPatientCareMoodCode" constrainedElement="_qlUP4JouEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jZ7gAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_q6vGQJouEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ox86UKK4EeGOxth0BgV-QA" name="FirstUnitIndicator">
      <ownedRule xmi:id="_jaEC4NOaEeKU4pFWxuU9dw" name="FirstUnitIndicatorTemplateId" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaEC4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.84')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jaL-sNOaEeKU4pFWxuU9dw" name="FirstUnitIndicatorCodeP" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaL-sdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jaHtQNOaEeKU4pFWxuU9dw" name="FirstUnitIndicatorCode" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaHtQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67481-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jaPpENOaEeKU4pFWxuU9dw" name="FirstUnitIndicatorValue" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaQQINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jaSsYNOaEeKU4pFWxuU9dw" name="FirstUnitIndicatorMoodCode" constrainedElement="_Ox86UKK4EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaSsYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PFao4KK4EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_JNrkAKK5EeGOxth0BgV-QA" name="FirstUnitOnScene">
      <ownedRule xmi:id="_jaVIoNOaEeKU4pFWxuU9dw" name="FirstUnitOnSceneTemplateId" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaVIodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.85')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jacdYNOaEeKU4pFWxuU9dw" name="FirstUnitOnSceneCodeP" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jadEcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jaYL8NOaEeKU4pFWxuU9dw" name="FirstUnitOnSceneCode" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jaYzANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67481-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jagu0NOaEeKU4pFWxuU9dw" name="FirstUnitOnSceneValue" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jagu0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jajyINOaEeKU4pFWxuU9dw" name="FirstUnitOnSceneMoodCode" constrainedElement="_JNrkAKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jajyIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Jj_yQKK5EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_wPLCkKK5EeGOxth0BgV-QA" name="ScenePatientCount">
      <ownedRule xmi:id="_jasVANOaEeKU4pFWxuU9dw" name="ScenePatientCountTemplateId" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jasVAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.86')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ja0Q0NOaEeKU4pFWxuU9dw" name="ScenePatientCountCodeP" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ja0Q0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jav_YNOaEeKU4pFWxuU9dw" name="ScenePatientCountCode" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jav_YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67489-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ja4iQNOaEeKU4pFWxuU9dw" name="ScenePatientCountValue" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ja4iQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ja7lkNOaEeKU4pFWxuU9dw" name="ScenePatientCountMoodCode" constrainedElement="_wPLCkKK5EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ja7lkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_wlAvsKK5EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E-SEAKK8EeGOxth0BgV-QA" name="MassCasualtyIndicator">
      <ownedRule xmi:id="_ja9awNOaEeKU4pFWxuU9dw" name="MassCasualtyIndicatorTemplateId" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ja-B0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.87')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbFWkNOaEeKU4pFWxuU9dw" name="MassCasualtyIndicatorCodeP" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbFWkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbBFINOaEeKU4pFWxuU9dw" name="MassCasualtyIndicatorCode" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbBFIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67490-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbJoANOaEeKU4pFWxuU9dw" name="MassCasualtyIndicatorValue" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbJoAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbMrUNOaEeKU4pFWxuU9dw" name="MassCasualtyIndicatorMoodCode" constrainedElement="_E-SEAKK8EeGOxth0BgV-QA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbMrUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FW5YUKK8EeGOxth0BgV-QA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ayUKMMk3EeK2gbjCtOEivw" name="LocationTypeObservation">
      <ownedRule xmi:id="_jbRj0NOaEeKU4pFWxuU9dw" name="LocationTypeObservationTemplateId" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbRj0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.88')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbVOMNOaEeKU4pFWxuU9dw" name="LocationTypeObservationCode" constrainedElement="_ayUKMMk3EeK2gbjCtOEivw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbVOMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'eScene.09')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_bblJoMk3EeK2gbjCtOEivw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_p4XEAJ-kEeGorI3CPDW2ww" name="AdverseEventIndicator">
      <ownedRule xmi:id="_jbkewtOaEeKU4pFWxuU9dw" name="AdverseEventIndicatorTemplateId" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jblF0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.89')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbsakNOaEeKU4pFWxuU9dw" name="AdverseEventIndicatorCodeP" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbsakdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jboJINOaEeKU4pFWxuU9dw" name="AdverseEventIndicatorCode" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbowMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67554-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbwE8NOaEeKU4pFWxuU9dw" name="AdverseEventIndicatorValue" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbwE8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jbzIQNOaEeKU4pFWxuU9dw" name="AdverseEventIndicatorMoodCode" constrainedElement="_p4XEAJ-kEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jbzIQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_q4E0kJ-kEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gU4tMJ-lEeGorI3CPDW2ww" name="AdverseEventTypeObservation">
      <ownedRule xmi:id="_jb4n0NOaEeKU4pFWxuU9dw" name="AdverseEventTypeObservationTemplateId" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jb4n0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.90')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jb_8kNOaEeKU4pFWxuU9dw" name="AdverseEventTypeObservationCodeP" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcAjoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jb7rINOaEeKU4pFWxuU9dw" name="AdverseEventTypeObservationCode" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jb8SMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67555-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jcGqQNOaEeKU4pFWxuU9dw" name="AdverseEventTypeObservationValue" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcGqQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA17402-1' or value.code = 'LA17403-9' or value.code = 'LA17404-7' or value.code = 'LA17405-4' or value.code = 'LA17406-2' or value.code = 'LA17407-0' or value.code = 'LA17408-8' or value.code = 'LA17409-6' or value.code = 'LA17410-4' or value.code = 'LA17411-2' or value.code = 'LA17412-0' or value.code = 'LA17413-8' or value.code = 'LA17414-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jcK7sNOaEeKU4pFWxuU9dw" name="AdverseEventTypeObservationValueP" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcK7sdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jcOmENOaEeKU4pFWxuU9dw" name="AdverseEventTypeObservationMoodCode" constrainedElement="_gU4tMJ-lEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcPNINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gwN-UJ-lEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rNkl4GleEeG4boS-IbG8Zw" name="BillingCondition">
      <ownedRule xmi:id="_jcUFoNOaEeKU4pFWxuU9dw" name="BillingConditionTemplateId" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcUssNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.91')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jcjWMNOaEeKU4pFWxuU9dw" name="BillingConditionCodeP" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcjWMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jcY-INOaEeKU4pFWxuU9dw" name="BillingConditionCode" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcZlMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67556-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jcpc0NOaEeKU4pFWxuU9dw" name="BillingConditionValue" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcpc0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.90'))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jctuQNOaEeKU4pFWxuU9dw" name="BillingConditionValueP" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jctuQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jcxYoNOaEeKU4pFWxuU9dw" name="BillingConditionMoodCode" constrainedElement="_rNkl4GleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jcxYodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rNkl4WleEeG4boS-IbG8Zw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_To2-YGleEeG4boS-IbG8Zw" name="LevelOfServiceObservation">
      <ownedRule xmi:id="_jc24MNOaEeKU4pFWxuU9dw" name="LevelOfServiceObservationTemplateId" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jc24MdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.92')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jc-M8NOaEeKU4pFWxuU9dw" name="LevelOfServiceObservationCodeP" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jc-M8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jc6ikNOaEeKU4pFWxuU9dw" name="LevelOfServiceObservationCode" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jc6ikdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69464-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdDsgNOaEeKU4pFWxuU9dw" name="LevelOfServiceObservationValue" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdDsgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18102-6' or value.code = 'LA18103-4' or value.code = 'LA18104-2' or value.code = 'LA18105-9' or value.code = 'LA18106-7' or value.code = 'LA18107-5' or value.code = 'LA18108-3' or value.code = 'LA18109-1' or value.code = 'LA18110-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdHW4NOaEeKU4pFWxuU9dw" name="LevelOfServiceObservationValueP" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdHW4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdLoUNOaEeKU4pFWxuU9dw" name="LevelOfServiceObservationMoodCode" constrainedElement="_To2-YGleEeG4boS-IbG8Zw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdLoUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W97cwGleEeG4boS-IbG8Zw">
        <ownedComment xmi:id="_ifpNMEM7EeKBoM5tGvrHVQ">
          <body>NEMSIS Trace: EPayment.50</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rDpggp-mEeGorI3CPDW2ww" name="ProtocolObservation">
      <ownedRule xmi:id="_jdRH4NOaEeKU4pFWxuU9dw" name="ProtocolObservationTemplateId" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdRu8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.93')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdZqwNOaEeKU4pFWxuU9dw" name="ProtocolObservationCodeP" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdZqwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdUyQNOaEeKU4pFWxuU9dw" name="ProtocolObservationCode" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdUyQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67537-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdfxYNOaEeKU4pFWxuU9dw" name="ProtocolObservationValue" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdgYcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17398-1' or value.code = 'LA17491-4' or value.code = 'LA17492-2' or value.code = 'LA17494-8' or value.code = 'LA17495-5' or value.code = 'LA17496-3' or value.code = 'LA17497-1' or value.code = 'LA17498-9' or value.code = 'LA17499-7' or value.code = 'LA17500-2' or value.code = 'LA17501-0' or value.code = 'LA17502-8' or value.code = 'LA17503-6' or value.code = 'LA17504-4' or value.code = 'LA17505-1' or value.code = 'LA17506-9' or value.code = 'LA17507-7' or value.code = 'LA17508-5' or value.code = 'LA17509-3' or value.code = 'LA17510-1' or value.code = 'LA17511-9' or value.code = 'LA17512-7' or value.code = 'LA17513-5' or value.code = 'LA17514-3' or value.code = 'LA17515-0' or value.code = 'LA17516-8' or value.code = 'LA17517-6' or value.code = 'LA17518-4' or value.code = 'LA17519-2' or value.code = 'LA17520-0' or value.code = 'LA17521-8' or value.code = 'LA17522-6' or value.code = 'LA17523-4' or value.code = 'LA17524-2' or value.code = 'LA17525-9' or value.code = 'LA17526-7' or value.code = 'LA17527-5' or value.code = 'LA17528-3' or value.code = 'LA17529-1' or value.code = 'LA17530-9' or value.code = 'LA17531-7' or value.code = 'LA17532-5' or value.code = 'LA17533-3' or value.code = 'LA17534-1' or value.code = 'LA17535-8' or value.code = 'LA17536-6' or value.code = 'LA17537-4' or value.code = 'LA17538-2' or value.code = 'LA17539-0' or value.code = 'LA17540-8' or value.code = 'LA17541-6' or value.code = 'LA17542-4' or value.code = 'LA17543-2' or value.code = 'LA17544-0' or value.code = 'LA17545-7' or value.code = 'LA17546-5' or value.code = 'LA17547-3' or value.code = 'LA17548-1' or value.code = 'LA17549-9' or value.code = 'LA17550-7' or value.code = 'LA17551-5' or value.code = 'LA17552-3' or value.code = 'LA17553-1' or value.code = 'LA17554-9' or value.code = 'LA17555-6' or value.code = 'LA17556-4' or value.code = 'LA17557-2' or value.code = 'LA17558-0' or value.code = 'LA17559-8' or value.code = 'LA17560-6' or value.code = 'LA17561-4' or value.code = 'LA17562-2' or value.code = 'LA17563-0' or value.code = 'LA17564-8' or value.code = 'LA17565-5' or value.code = 'LA17566-3' or value.code = 'LA17567-1' or value.code = 'LA17568-9' or value.code = 'LA17569-7' or value.code = 'LA17570-5' or value.code = 'LA18269-3' or value.code = 'LA46-8' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdkC0NOaEeKU4pFWxuU9dw" name="ProtocolObservationValueP" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdkp4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdoUQNOaEeKU4pFWxuU9dw" name="ProtocolObservationMoodCode" constrainedElement="_rDpggp-mEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdoUQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_rDpghJ-mEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_n-zaBZ-nEeGorI3CPDW2ww" name="CandidatePatientRegistryType">
      <ownedRule xmi:id="_jdua4dOaEeKU4pFWxuU9dw" name="CandidatePatientRegistryTypeTemplateId" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdvB8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.94')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jd2WsNOaEeKU4pFWxuU9dw" name="CandidatePatientRegistryTypeCodeP" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jd29wNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jdyFQNOaEeKU4pFWxuU9dw" name="CandidatePatientRegistryTypeCode" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jdysUNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67553-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jd72QNOaEeKU4pFWxuU9dw" name="CandidatePatientRegistryTypeValue" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jd72QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17057-3' or value.code = 'LA17058-1' or value.code = 'LA17059-9' or value.code = 'LA17398-1' or value.code = 'LA17399-9' or value.code = 'LA17400-5' or value.code = 'LA17401-3' or value.code = 'LA7318-4' or value.code = 'LA9535-1' or value.code = 'LA9553-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeAHsNOaEeKU4pFWxuU9dw" name="CandidatePatientRegistryTypeValueP" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeAHsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeEZINOaEeKU4pFWxuU9dw" name="CandidatePatientRegistryTypeMoodCode" constrainedElement="_n-zaBZ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeEZIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_n-zaB5-nEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0padgJ99EeGw9ZRnaFfEZQ" name="DelayOrganizer">
      <ownedRule xmi:id="_i_dxkNOaEeKU4pFWxuU9dw" name="DelayOrganizerDispatchDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_dxkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_iDANOaEeKU4pFWxuU9dw" name="DelayOrganizerResponseDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_iDAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_ltYNOaEeKU4pFWxuU9dw" name="DelayOrganizerSceneDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_ltYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_pXwNOaEeKU4pFWxuU9dw" name="DelayOrganizerTransportDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_pXwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_tCINOaEeKU4pFWxuU9dw" name="DelayOrganizerTurnaoundDelayRelationship" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_tCIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeJ4sNOaEeKU4pFWxuU9dw" name="DelayOrganizerTemplateId" constrainedElement="_0padgJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeJ4sdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.95')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_17RuAJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MiN-UJ-BEeGw9ZRnaFfEZQ" name="DispatchLocationOrganizer">
      <ownedRule xmi:id="_i_xTkNOaEeKU4pFWxuU9dw" name="DispatchLocationOrganizerDispatchLocationNameRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_xTkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_2MENOaEeKU4pFWxuU9dw" name="DispatchLocationOrganizerDispatchLocationLatitudeRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_2MEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i_4BQNOaEeKU4pFWxuU9dw" name="DispatchLocationOrganizerDispatchLocationLongtudeRelationship" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_4oUNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeR0gNOaEeKU4pFWxuU9dw" name="DispatchLocationOrganizerTemplateId" constrainedElement="_MiN-UJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeSbkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.96')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NzmtsJ-BEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_yVviAJ-OEeGorI3CPDW2ww" name="ResponseOdometerReadingOrganizer">
      <ownedRule xmi:id="_i_8SsNOaEeKU4pFWxuU9dw" name="ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i_8SsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAAkINOaEeKU4pFWxuU9dw" name="ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAAkIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jAEOgNOaEeKU4pFWxuU9dw" name="ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jAEOgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jCFnwNOaEeKU4pFWxuU9dw" name="ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jCFnwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.oclIsUndefined() and component.oclIsKindOf(cda::Component4))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jedas9OaEeKU4pFWxuU9dw" name="ResponseOdometerReadingOrganizerTemplateId" constrainedElement="_yVviAJ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeeBwNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.97')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_yynrQJ-OEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l_V6IJ-bEeGorI3CPDW2ww" name="ResponseModeToScene">
      <ownedRule xmi:id="_jekvcNOaEeKU4pFWxuU9dw" name="ResponseModeToSceneTemplateId" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jekvcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.98')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jesEMNOaEeKU4pFWxuU9dw" name="ResponseModeToSceneCodeP" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jesrQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jeoZ0NOaEeKU4pFWxuU9dw" name="ResponseModeToSceneCode" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jeoZ0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67482-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jexjwNOaEeKU4pFWxuU9dw" name="ResponseModeToSceneValue" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jexjwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17177-9' or value.code = 'LA17178-7' or value.code = 'LA17179-5' or value.code = 'LA17180-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_je11MNOaEeKU4pFWxuU9dw" name="ResponseModeToSceneValueP" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_je2cQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_je7UwNOaEeKU4pFWxuU9dw" name="ResponseModeToSceneMoodCode" constrainedElement="_l_V6IJ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_je770NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mlNAQJ-bEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_K8JK8JuoEeGzXI65shd6Fw" name="Procedure">
      <ownedRule xmi:id="_i-BAENOaEeKU4pFWxuU9dw" name="emspcrProcedureEmspcrProcedureAbandonedProcedureRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-BAEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-FRgNOaEeKU4pFWxuU9dw" name="emspcrProcedureEmspcrProcedureProcedurePriorRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-F4kNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-Ji8NOaEeKU4pFWxuU9dw" name="emspcrProcedureEmspcrProcedureProcedureNumberOfAttemptsRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-Ji8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-NNUNOaEeKU4pFWxuU9dw" name="emspcrProcedureEmspcrProcedureProcedureSuccessfulRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-NNUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-PpkNOaEeKU4pFWxuU9dw" name="emspcrProcedureEmspcrProcedureProcedureComplicationsRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-PpkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-VwMNOaEeKU4pFWxuU9dw" name="emspcrProcedureEmspcrProcedureProcedurePatientResponseRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-VwMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-ZakNOaEeKU4pFWxuU9dw" name="emspcrProcedureEmspcrProcedureProcedurePerformer" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-ZakdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.performer->exists(performer : cda::Performer2 | not performer.oclIsUndefined() and performer.oclIsKindOf(cda::Performer2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i-dsANOaEeKU4pFWxuU9dw" name="emspcrProcedureEmspcrProcedureAirwayConfirmationRelationship" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i-dsAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.entryRelationship->one(entryRelationship : cda::EntryRelationship | not entryRelationship.oclIsUndefined() and entryRelationship.oclIsKindOf(cda::EntryRelationship))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_je-_INOaEeKU4pFWxuU9dw" name="ProcedureActivityProcedureTemplateId" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_je-_IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.98')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfEesNOaEeKU4pFWxuU9dw" name="emspcrProcedureCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfEesdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfG68NOaEeKU4pFWxuU9dw" name="emspcrProcedureEffectiveTime" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfG68dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfPd0NOaEeKU4pFWxuU9dw" name="emspcrProcedureStatusCodeP" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfQE4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfLMYNOaEeKU4pFWxuU9dw" name="emspcrProcedureStatusCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfLMYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.statusCode.oclIsUndefined() or self.statusCode.isNullFlavorUndefined()) implies (not self.statusCode.oclIsUndefined() and self.statusCode.oclIsKindOf(datatypes::CS) and &#xD;
let value : datatypes::CS = self.statusCode.oclAsType(datatypes::CS) in &#xD;
value.code = 'Aborted')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfZO0NOaEeKU4pFWxuU9dw" name="emspcrProcedureApproachSiteCodeP" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfZO0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (not self.approachSiteCode->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfU9YNOaEeKU4pFWxuU9dw" name="emspcrProcedureApproachSiteCode" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfU9YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.approachSiteCode->isEmpty() or self.approachSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.approachSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18112-5' or value.code = 'LA18113-3' or value.code = 'LA18757-7' or value.code = 'LA18758-5' or value.code = 'LA18790-8' or value.code = 'LA18791-6' or value.code = 'LA18792-4' or value.code = 'LA18793-2' or value.code = 'LA18794-0' or value.code = 'LA18795-7' or value.code = 'LA18796-5' or value.code = 'LA18797-3' or value.code = 'LA18798-1' or value.code = 'LA18799-9' or value.code = 'LA18800-5' or value.code = 'LA18801-3' or value.code = 'LA18802-1' or value.code = 'LA18803-9' or value.code = 'LA18804-7' or value.code = 'LA18805-4' or value.code = 'LA18806-2' or value.code = 'LA18807-0' or value.code = 'LA18808-8' or value.code = 'LA18809-6' or value.code = 'LA18810-4' or value.code = 'LA18811-2' or value.code = 'LA18812-0' or value.code = 'LA18813-8' or value.code = 'LA18814-6' or value.code = 'LA18815-3' or value.code = 'LA18816-1' or value.code = 'LA18817-9' or value.code = 'LA18818-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jfeHUNOaEeKU4pFWxuU9dw" name="emspcrProcedureNegationInd" constrainedElement="_K8JK8JuoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jfeuYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>not self.negationInd.oclIsUndefined()</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_L0nEAJuoEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OG58RSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iWVVYIy-EeGnhceUMXltng" name="ExistenceOfDrugAllergyObservation">
      <ownedRule xmi:id="_jf3I4NOaEeKU4pFWxuU9dw" name="ExistenceOfDrugAllergyObservationTemplateId" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jf3v8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.102')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jf6zQNOaEeKU4pFWxuU9dw" name="ExistenceOfDrugAllergyObservationCode" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jf6zQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67794-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jf_EsNOaEeKU4pFWxuU9dw" name="ExistenceOfDrugAllergyObservationValue" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jf_rwNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgCIANOaEeKU4pFWxuU9dw" name="ExistenceOfDrugAllergyObservationMoodCode" constrainedElement="_iWVVYIy-EeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgCIAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_iumrcIy-EeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_t_nG0IzYEeGnhceUMXltng" name="ExistenceOfEnvironmentalAllergy">
      <ownedRule xmi:id="_jgEkQNOaEeKU4pFWxuU9dw" name="ExistenceOfEnvironmentalAllergyTemplateId" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgEkQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.103')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgHnkNOaEeKU4pFWxuU9dw" name="ExistenceOfEnvironmentalAllergyCode" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgHnkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69747-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgL5ANOaEeKU4pFWxuU9dw" name="ExistenceOfEnvironmentalAllergyValue" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgL5AdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgOVQNOaEeKU4pFWxuU9dw" name="ExistenceOfEnvironmentalAllergyMoodCode" constrainedElement="_t_nG0IzYEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgOVQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_uYpR4IzYEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UleZUIzZEeGnhceUMXltng" name="EnvironmentalAllergy">
      <ownedRule xmi:id="_jgQxgNOaEeKU4pFWxuU9dw" name="EnvironmentalAllergyTemplateId" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgQxgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.104')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgT00NOaEeKU4pFWxuU9dw" name="EnvironmentalAllergyCode" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgT00dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69748-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgZUYNOaEeKU4pFWxuU9dw" name="EnvironmentalAllergyValue" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgZUYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA17059-9' or value.code = 'LA18356-8' or value.code = 'LA18357-6' or value.code = 'LA18358-4' or value.code = 'LA18359-2' or value.code = 'LA18360-0' or value.code = 'LA18361-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgeM4NOaEeKU4pFWxuU9dw" name="EnvironmentalAllergyMoodCode" constrainedElement="_UleZUIzZEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgeM4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_VJHR4IzZEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_E9ekgJoxEeG_FLcaRgAa7g" name="MedicationNotAdministeredReasonObservation">
      <ownedRule xmi:id="_jggpINOaEeKU4pFWxuU9dw" name="MedicationNotAdministeredReasonObservationTemplateId" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jggpIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.105')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgjscNOaEeKU4pFWxuU9dw" name="MedicationNotAdministeredReasonObservationCode" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgjscdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgpMANOaEeKU4pFWxuU9dw" name="MedicationNotAdministeredReasonObservationValue" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgpzENOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15185-4' or value.code = 'LA18921-9' or value.code = 'LA18922-7' or value.code = 'LA18925-0' or value.code = 'LA4216-3' or value.code = 'LA4389-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgtdcNOaEeKU4pFWxuU9dw" name="MedicationNotAdministeredReasonObservationValueP" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgtdcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jgxu4NOaEeKU4pFWxuU9dw" name="MedicationNotAdministeredReasonObservationMoodCode" constrainedElement="_E9ekgJoxEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jgxu4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FXzwEJoxEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_j9MusJsmEeGzXI65shd6Fw" name="MedicationResponseObservation">
      <ownedRule xmi:id="_jg0LINOaEeKU4pFWxuU9dw" name="MedicationResponseObservationTemplateId" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jg0LIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.106')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jg8G8NOaEeKU4pFWxuU9dw" name="MedicationResponseObservationCodeP" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jg8G8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jg31gNOaEeKU4pFWxuU9dw" name="MedicationResponseObservationCode" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jg31gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67540-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhA_cNOaEeKU4pFWxuU9dw" name="MedicationResponseObservationValue" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhA_cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA11011-6' or value.code = 'LA17181-1' or value.code = 'LA65-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhFQ4NOaEeKU4pFWxuU9dw" name="MedicationResponseObservationMoodCode" constrainedElement="_j9MusJsmEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhF38NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_kLrPkJsmEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Qzy_cJsnEeGzXI65shd6Fw" name="MedicationComplicationObservation">
      <ownedRule xmi:id="_jhIUMNOaEeKU4pFWxuU9dw" name="MedicationComplicationObservationTemplateId" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhIUMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.107')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhQQANOaEeKU4pFWxuU9dw" name="MedicationComplicationObservationCodeP" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhQQAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhL-kNOaEeKU4pFWxuU9dw" name="MedicationComplicationObservationCode" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhL-kdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67541-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhVvkNOaEeKU4pFWxuU9dw" name="MedicationComplicationObservationValue" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhWWoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA15098-9' or value.code = 'LA15099-7' or value.code = 'LA15424-7' or value.code = 'LA17059-9' or value.code = 'LA17392-4' or value.code = 'LA17393-2' or value.code = 'LA17394-0' or value.code = 'LA17396-5' or value.code = 'LA17397-3' or value.code = 'LA17713-1' or value.code = 'LA17714-9' or value.code = 'LA18266-9' or value.code = 'LA18267-7' or value.code = 'LA7418-2' or value.code = 'LA7434-9' or value.code = 'LA7443-0' or value.code = 'LA7444-8' or value.code = 'LA9540-1' or value.code = 'LA9541-9' or value.code = 'LA9548-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhaBANOaEeKU4pFWxuU9dw" name="MedicationComplicationObservationValueP" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhaoENOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhe5gNOaEeKU4pFWxuU9dw" name="MedicationComplicationObservationMoodCode" constrainedElement="_Qzy_cJsnEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhe5gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_R0vfEJsnEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pVW0QJsoEeGzXI65shd6Fw" name="MedicationPriorAdministrationObservation">
      <ownedRule xmi:id="_jhgusNOaEeKU4pFWxuU9dw" name="MedicationPriorAdministrationObservationTemplateId" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhhVwNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.108')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhoqgNOaEeKU4pFWxuU9dw" name="MedicationPriorAdministrationObservationCodeP" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhpRkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhkZENOaEeKU4pFWxuU9dw" name="MedicationPriorAdministrationObservationCode" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhlAINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67539-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhs78NOaEeKU4pFWxuU9dw" name="MedicationPriorAdministrationObservationValue" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhs78dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jhvYMNOaEeKU4pFWxuU9dw" name="MedicationPriorAdministrationObservationMoodCode" constrainedElement="_pVW0QJsoEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhvYMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pxFG8JsoEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_GGe8UJojEeG_FLcaRgAa7g" name="PatientBodyWeight">
      <ownedComment xmi:id="_gBsM0ETXEeKEm6ZghGGtvw">
        <body>NEMSIS Trace: EExam.03</body>
      </ownedComment>
      <ownedRule xmi:id="_jhx0cNOaEeKU4pFWxuU9dw" name="PatientBodyWeightTemplateId" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jhybgNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.178')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jh2F4NOaEeKU4pFWxuU9dw" name="PatientBodyWeightCode" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jh2s8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8335-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jh6-YNOaEeKU4pFWxuU9dw" name="PatientBodyWeightValue" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jh6-YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jh-BsNOaEeKU4pFWxuU9dw" name="PatientBodyWeightMoodCode" constrainedElement="_GGe8UJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jh-BsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_GhZ9wJojEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_whTHIJojEeG_FLcaRgAa7g" name="LengthBasedPatientBodyWeightClass">
      <ownedRule xmi:id="_jiAd8NOaEeKU4pFWxuU9dw" name="LengthBasedPatientBodyWeightClassTemplateId" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiBFANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.110')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jiIZwNOaEeKU4pFWxuU9dw" name="LengthBasedPatientBodyWeightClassCodeP" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiIZwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jiEIUNOaEeKU4pFWxuU9dw" name="LengthBasedPatientBodyWeightClassCode" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiEIUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67670-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jiN5UNOaEeKU4pFWxuU9dw" name="LengthBasedPatientBodyWeightClassValue" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiN5UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15553-3' or value.code = 'LA15554-1' or value.code = 'LA15555-8' or value.code = 'LA17192-8' or value.code = 'LA17193-6' or value.code = 'LA17194-4' or value.code = 'LA17195-1' or value.code = 'LA17196-9' or value.code = 'LA4457-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jiSKwNOaEeKU4pFWxuU9dw" name="LengthBasedPatientBodyWeightClassEffectiveTime" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiSKwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jiV1INOaEeKU4pFWxuU9dw" name="LengthBasedPatientBodyWeightClassMoodCode" constrainedElement="_whTHIJojEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiV1IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_xRpmAJojEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bFfQYJokEeG_FLcaRgAa7g" name="SkinAssessment">
      <ownedRule xmi:id="_jiY4cNOaEeKU4pFWxuU9dw" name="SkinAssessmentTemplateId" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiZfgNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.180')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jiiCYNOaEeKU4pFWxuU9dw" name="SkinAssessmentCodeP" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiiCYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jidJ4NOaEeKU4pFWxuU9dw" name="SkinAssessmentCode" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jidw8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67524-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jinh8NOaEeKU4pFWxuU9dw" name="SkinAssessmentValue" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jioJANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15475-9' or value.code = 'LA17197-7' or value.code = 'LA17198-5' or value.code = 'LA17199-3' or value.code = 'LA17200-9' or value.code = 'LA17201-7' or value.code = 'LA17202-5' or value.code = 'LA17203-3' or value.code = 'LA17204-1' or value.code = 'LA17205-8' or value.code = 'LA17206-6' or value.code = 'LA17207-4' or value.code = 'LA18217-2' or value.code = 'LA18218-0' or value.code = 'LA18219-8' or value.code = 'LA6626-1' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jisacNOaEeKU4pFWxuU9dw" name="SkinAssessmentValueP" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jisacdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jiwr4NOaEeKU4pFWxuU9dw" name="SkinAssessmentMoodCode" constrainedElement="_bFfQYJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jiwr4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_baeB4JokEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QU_s0JolEeG_FLcaRgAa7g" name="FaceAssessment">
      <ownedRule xmi:id="_jizIINOaEeKU4pFWxuU9dw" name="FaceAssessmentTemplateId" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jizvMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.112')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ji7D8NOaEeKU4pFWxuU9dw" name="FaceAssessmentCodeP" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ji7D8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ji2ygNOaEeKU4pFWxuU9dw" name="FaceAssessmentCode" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ji2ygdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67526-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjAjgNOaEeKU4pFWxuU9dw" name="FaceAssessmentValue" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjAjgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17211-6' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17216-5' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjE08NOaEeKU4pFWxuU9dw" name="FaceAssessmentValueP" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjE08dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjIfUNOaEeKU4pFWxuU9dw" name="FaceAssessmentEffectiveTime" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjIfUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjLioNOaEeKU4pFWxuU9dw" name="FaceAssessmentMoodCode" constrainedElement="_QU_s0JolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjLiodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_QvxkUJolEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_6VcsUJokEeG_FLcaRgAa7g" name="HeadAssessment">
      <ownedRule xmi:id="_jjN-4NOaEeKU4pFWxuU9dw" name="HeadAssessmentTemplateId" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjN-4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.113')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjVToNOaEeKU4pFWxuU9dw" name="HeadAssessmentCodeP" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjVTodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjRCMNOaEeKU4pFWxuU9dw" name="HeadAssessmentCode" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjRCMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67525-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjaMINOaEeKU4pFWxuU9dw" name="HeadAssessmentValue" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjazMNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17211-6' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjedkNOaEeKU4pFWxuU9dw" name="HeadAssessmentEffectiveTime" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjfEoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjhg4NOaEeKU4pFWxuU9dw" name="HeadAssessmentMoodCode" constrainedElement="_6VcsUJokEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjhg4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_6p1n8JokEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_oE3bcJolEeG_FLcaRgAa7g" name="NeckAssessment">
      <ownedRule xmi:id="_jjj9INOaEeKU4pFWxuU9dw" name="NeckAssessmentTemplateId" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjj9IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.114')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjnAcNOaEeKU4pFWxuU9dw" name="NeckAssessmentCode" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjnAcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67527-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjsgANOaEeKU4pFWxuU9dw" name="NeckAssessmentValue" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjsgAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17210-8' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17217-3' or value.code = 'LA17219-9' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17612-5' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18226-3' or value.code = 'LA18227-1' or value.code = 'LA18228-9' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjwxcNOaEeKU4pFWxuU9dw" name="NeckAssessmentEffectiveTime" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjwxcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jjzNsNOaEeKU4pFWxuU9dw" name="NeckAssessmentMoodCode" constrainedElement="_oE3bcJolEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jjz0wNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_orGVAJolEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_CiNc8JomEeG_FLcaRgAa7g" name="ChestAndLungsAssessment">
      <ownedRule xmi:id="_jj1p8NOaEeKU4pFWxuU9dw" name="ChestAndLungsAssessmentTemplateId" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jj2RANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.115')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jj5UUNOaEeKU4pFWxuU9dw" name="ChestAndLungsAssessmentCode" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jj5UUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67528-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jj-M0NOaEeKU4pFWxuU9dw" name="ChestAndLungsAssessmentValue" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jj-z4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17222-3' or value.code = 'LA17223-1' or value.code = 'LA17224-9' or value.code = 'LA17225-6' or value.code = 'LA17226-4' or value.code = 'LA17227-2' or value.code = 'LA17228-0' or value.code = 'LA17229-8' or value.code = 'LA17230-6' or value.code = 'LA17231-4' or value.code = 'LA17232-2' or value.code = 'LA17233-0' or value.code = 'LA17234-8' or value.code = 'LA17236-3' or value.code = 'LA17237-1' or value.code = 'LA17238-9' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18229-7' or value.code = 'LA18230-5' or value.code = 'LA18231-3' or value.code = 'LA18232-1' or value.code = 'LA18233-9' or value.code = 'LA18234-7' or value.code = 'LA18235-4' or value.code = 'LA18236-2' or value.code = 'LA18237-0' or value.code = 'LA18238-8' or value.code = 'LA18239-6' or value.code = 'LA18240-4' or value.code = 'LA18402-0' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkDFUNOaEeKU4pFWxuU9dw" name="ChestAndLungsAssessmentEffectiveTime" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkDFUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkGIoNOaEeKU4pFWxuU9dw" name="ChestAndLungsAssessmentMoodCode" constrainedElement="_CiNc8JomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkGIodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Czwf8JomEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Zjp_UJomEeG_FLcaRgAa7g" name="HeartAssessment">
      <ownedRule xmi:id="_jkH90NOaEeKU4pFWxuU9dw" name="HeartAssessmentTemplateId" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkIk4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.116')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkQgsNOaEeKU4pFWxuU9dw" name="HeartAssessmentCodeP" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkQgsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkMPQNOaEeKU4pFWxuU9dw" name="HeartAssessmentCode" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkMPQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67529-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkWAQNOaEeKU4pFWxuU9dw" name="HeartAssessmentValue" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkWnUNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17239-7' or value.code = 'LA17240-5' or value.code = 'LA17241-3' or value.code = 'LA18241-2' or value.code = 'LA18242-0' or value.code = 'LA18243-8' or value.code = 'LA18244-6' or value.code = 'LA18245-3' or value.code = 'LA18246-1' or value.code = 'LA6626-1' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jka4wNOaEeKU4pFWxuU9dw" name="HeartAssessmentValueP" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jka4wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkejINOaEeKU4pFWxuU9dw" name="HeartAssessmentEffectiveTime" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkejIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkg_YNOaEeKU4pFWxuU9dw" name="HeartAssessmentMoodCode" constrainedElement="_Zjp_UJomEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkhmcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Z47rwJomEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WMI_AJooEeG_FLcaRgAa7g" name="AbdomenAssessment">
      <ownedRule xmi:id="_jkjboNOaEeKU4pFWxuU9dw" name="AbdomenAssessmentTemplateId" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkkCsNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.117')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jknGANOaEeKU4pFWxuU9dw" name="AbdomenAssessmentCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jknGAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67530-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkslkNOaEeKU4pFWxuU9dw" name="AbdomenAssessmentValue" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkslkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17242-1' or value.code = 'LA17243-9' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17246-2' or value.code = 'LA17247-0' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18226-3' or value.code = 'LA18247-9' or value.code = 'LA18248-7' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jkxeENOaEeKU4pFWxuU9dw" name="AbdomenAssessmentTargetSiteCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jkxeEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12698-9' or value.code = 'LA18721-3' or value.code = 'LA18722-1' or value.code = 'LA18723-9' or value.code = 'LA18724-7' or value.code = 'LA18725-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jk1vgNOaEeKU4pFWxuU9dw" name="AbdomenAssessmentEffectiveTime" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jk1vgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jk4LwNOaEeKU4pFWxuU9dw" name="AbdomenAssessmentMoodCode" constrainedElement="_WMI_AJooEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jk4y0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WiwIMJooEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O7rMoJopEeG_FLcaRgAa7g" name="PelvicAndGenitourinaryAssessment">
      <ownedRule xmi:id="_jk6oANOaEeKU4pFWxuU9dw" name="PelvicAndGenitourinaryAssessmentTemplateId" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jk6oAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.118')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jk-SYNOaEeKU4pFWxuU9dw" name="PelvicAndGenitourinaryAssessmentCode" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jk-SYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67531-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlDK4NOaEeKU4pFWxuU9dw" name="PelvicAndGenitourinaryAssessmentValue" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlDx8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA14123-6' or value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17213-2' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17248-8' or value.code = 'LA17249-6' or value.code = 'LA17250-4' or value.code = 'LA17251-2' or value.code = 'LA17252-0' or value.code = 'LA17253-8' or value.code = 'LA17254-6' or value.code = 'LA17255-3' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlHcUNOaEeKU4pFWxuU9dw" name="PelvicAndGenitourinaryAssessmentValueP" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlIDYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlMU0NOaEeKU4pFWxuU9dw" name="PelvicAndGenitourinaryAssessmentEffectiveTime" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlMU0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlPYINOaEeKU4pFWxuU9dw" name="PelvicAndGenitourinaryAssessmentMoodCode" constrainedElement="_O7rMoJopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlPYIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PRiu8JopEeG_FLcaRgAa7g">
        <ownedComment xmi:id="_UFXDQJopEeG_FLcaRgAa7g">
          <body>NEMSIS Trace: EExam.12</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pgmc0JopEeG_FLcaRgAa7g" name="BackAndSpineAssessment">
      <ownedRule xmi:id="_jlR0YNOaEeKU4pFWxuU9dw" name="BackAndSpineAssessmentTemplateId" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlR0YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.119')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlZwMNOaEeKU4pFWxuU9dw" name="BackAndSpineAssessmentCodeP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlZwMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlVewNOaEeKU4pFWxuU9dw" name="BackAndSpineAssessmentCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlVewdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67532-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlfPwNOaEeKU4pFWxuU9dw" name="BackAndSpineAssessmentTargetSiteCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlfPwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18726-2' or value.code = 'LA18727-0' or value.code = 'LA18728-8' or value.code = 'LA18729-6' or value.code = 'LA18730-4' or value.code = 'LA18731-2' or value.code = 'LA18732-0' or value.code = 'LA18733-8' or value.code = 'LA18734-6' or value.code = 'LA18735-3' or value.code = 'LA18736-1' or value.code = 'LA18737-9' or value.code = 'LA18738-7')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jljhMNOaEeKU4pFWxuU9dw" name="BackAndSpineAssessmentTargetSiteCodeP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jljhMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlpn0NOaEeKU4pFWxuU9dw" name="BackAndSpineAssessmentValue" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlpn0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17256-1' or value.code = 'LA17257-9' or value.code = 'LA17258-7' or value.code = 'LA17259-5' or value.code = 'LA18220-6' or value.code = 'LA18221-4' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlt5QNOaEeKU4pFWxuU9dw" name="BackAndSpineAssessmentValueP" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlt5QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jlyKsNOaEeKU4pFWxuU9dw" name="BackAndSpineAssessmentEffectiveTime" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jlyKsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jl0m8NOaEeKU4pFWxuU9dw" name="BackAndSpineAssessmentMoodCode" constrainedElement="_pgmc0JopEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jl0m8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_qFpDkJopEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_NK7yUJoqEeG_FLcaRgAa7g" name="ExtremitiesAssessment">
      <ownedRule xmi:id="_jl3DMNOaEeKU4pFWxuU9dw" name="ExtremitiesAssessmentTemplateId" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jl3DMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.120')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jl-X8NOaEeKU4pFWxuU9dw" name="ExtremitiesAssessmentCodeP" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jl-X8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jl6GgNOaEeKU4pFWxuU9dw" name="ExtremitiesAssessmentCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jl6tkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67533-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmD3gNOaEeKU4pFWxuU9dw" name="ExtremitiesAssessmentTargetSiteCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmD3gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18739-5' or value.code = 'LA18740-3' or value.code = 'LA18741-1' or value.code = 'LA18742-9' or value.code = 'LA18743-7' or value.code = 'LA18744-5' or value.code = 'LA18745-2' or value.code = 'LA18746-0' or value.code = 'LA18747-8' or value.code = 'LA18748-6' or value.code = 'LA18749-4' or value.code = 'LA18750-2' or value.code = 'LA18751-0' or value.code = 'LA18752-8' or value.code = 'LA18753-6' or value.code = 'LA18754-4' or value.code = 'LA18755-1' or value.code = 'LA18756-9' or value.code = 'LA18757-7' or value.code = 'LA18758-5' or value.code = 'LA18759-3' or value.code = 'LA18760-1' or value.code = 'LA18761-9' or value.code = 'LA18762-7' or value.code = 'LA18763-5' or value.code = 'LA18764-3' or value.code = 'LA18765-0' or value.code = 'LA18766-8' or value.code = 'LA18767-6' or value.code = 'LA18768-4' or value.code = 'LA18769-2' or value.code = 'LA18770-0' or value.code = 'LA18771-8' or value.code = 'LA18772-6' or value.code = 'LA18773-4' or value.code = 'LA18774-2' or value.code = 'LA18775-9' or value.code = 'LA18776-7' or value.code = 'LA18777-5' or value.code = 'LA18778-3' or value.code = 'LA18779-1' or value.code = 'LA18780-9' or value.code = 'LA18781-7' or value.code = 'LA18782-5' or value.code = 'LA18783-3' or value.code = 'LA18784-1' or value.code = 'LA18785-8' or value.code = 'LA18786-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmIwANOaEeKU4pFWxuU9dw" name="ExtremitiesAssessmentTargetSiteCodeP" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmIwAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmNogNOaEeKU4pFWxuU9dw" name="ExtremitiesAssessmentValue" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmOPkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17208-2' or value.code = 'LA17209-0' or value.code = 'LA17214-0' or value.code = 'LA17215-7' or value.code = 'LA17220-7' or value.code = 'LA17229-8' or value.code = 'LA17244-7' or value.code = 'LA17245-4' or value.code = 'LA17260-3' or value.code = 'LA17261-1' or value.code = 'LA17262-9' or value.code = 'LA17263-7' or value.code = 'LA17264-5' or value.code = 'LA17265-2' or value.code = 'LA17266-0' or value.code = 'LA17267-8' or value.code = 'LA17268-6' or value.code = 'LA17269-4' or value.code = 'LA17270-2' or value.code = 'LA17271-0' or value.code = 'LA17272-8' or value.code = 'LA17273-6' or value.code = 'LA17274-4' or value.code = 'LA17344-5' or value.code = 'LA17709-9' or value.code = 'LA18220-6' or value.code = 'LA18222-2' or value.code = 'LA18223-0' or value.code = 'LA18224-8' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18249-5' or value.code = 'LA6626-1' or value.code = 'LA6630-3' or value.code = 'LA7410-9' or value.code = 'LA7452-1' or value.code = 'LA7460-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmR58NOaEeKU4pFWxuU9dw" name="ExtremitiesAssessmentEffectiveTime" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmR58dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmU9QNOaEeKU4pFWxuU9dw" name="ExtremitiesAssessmentMoodCode" constrainedElement="_NK7yUJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmU9QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Nd-qIJoqEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_rsLuIJoqEeG_FLcaRgAa7g" name="EyeAssessment">
      <ownedRule xmi:id="_jmXZgNOaEeKU4pFWxuU9dw" name="EyeAssessmentTemplateId" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmYAkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.121')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmfVUNOaEeKU4pFWxuU9dw" name="EyeAssessmentCodeP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmfVUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmbD4NOaEeKU4pFWxuU9dw" name="EyeAssessmentCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmbD4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67534-8' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmlb8NOaEeKU4pFWxuU9dw" name="EyeAssessmentTargetSiteCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmmDANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1 and self.targetSiteCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18787-4' or value.code = 'LA18788-2' or value.code = 'LA18789-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmptYNOaEeKU4pFWxuU9dw" name="EyeAssessmentTargetSiteCodeP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmptYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.targetSiteCode->isEmpty() or self.targetSiteCode->exists(element | element.isNullFlavorUndefined())) implies (self.targetSiteCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmvM8NOaEeKU4pFWxuU9dw" name="EyeAssessmentValue" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmvM8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA14698-7' or value.code = 'LA15255-5' or value.code = 'LA15256-3' or value.code = 'LA17275-1' or value.code = 'LA17276-9' or value.code = 'LA17277-7' or value.code = 'LA17278-5' or value.code = 'LA17279-3' or value.code = 'LA17280-1' or value.code = 'LA17281-9' or value.code = 'LA17282-7' or value.code = 'LA17283-5' or value.code = 'LA17284-3' or value.code = 'LA17285-0' or value.code = 'LA17710-7' or value.code = 'LA18225-5' or value.code = 'LA18226-3' or value.code = 'LA18250-3' or value.code = 'LA18251-1' or value.code = 'LA18253-7' or value.code = 'LA18254-5' or value.code = 'LA18255-2' or value.code = 'LA18256-0' or value.code = 'LA18257-8' or value.code = 'LA18258-6' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jmzeYNOaEeKU4pFWxuU9dw" name="EyeAssessmentValueP" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jmzeYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jm3IwNOaEeKU4pFWxuU9dw" name="EyeAssessmentEffectiveTime" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jm3IwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jm6MENOaEeKU4pFWxuU9dw" name="EyeAssessmentMoodCode" constrainedElement="_rsLuIJoqEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jm6MEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_r7ptgJoqEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_EyfEMJorEeG_FLcaRgAa7g" name="MentalStatusAssessment">
      <ownedComment xmi:id="_RzIm8ETYEeKEm6ZghGGtvw">
        <body>NEMSIS Trace: EExam.03</body>
      </ownedComment>
      <ownedRule xmi:id="_jm8oUNOaEeKU4pFWxuU9dw" name="MentalStatusAssessmentTemplateId" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jm8oUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.122')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnD9ENOaEeKU4pFWxuU9dw" name="MentalStatusAssessmentCodeP" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnEkINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnASsNOaEeKU4pFWxuU9dw" name="MentalStatusAssessmentCode" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnASsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67535-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnI1kNOaEeKU4pFWxuU9dw" name="MentalStatusAssessmentValue" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnJcoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17286-8' or value.code = 'LA17287-6' or value.code = 'LA17288-4' or value.code = 'LA17289-2' or value.code = 'LA17290-0' or value.code = 'LA18259-4' or value.code = 'LA18260-2' or value.code = 'LA6560-2' or value.code = 'LA6630-3' or value.code = 'LA7438-0' or value.code = 'LA9343-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnNuENOaEeKU4pFWxuU9dw" name="MentalStatusAssessmentMoodCode" constrainedElement="_EyfEMJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnOVINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_FC2bcJorEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_A65pUHwIEeGW3cDolvqrTA" name="CardiacArrestTiming">
      <ownedRule xmi:id="_jnQKUNOaEeKU4pFWxuU9dw" name="CardiacArrestTimingTemplateId" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnQxYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.123')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnT0sNOaEeKU4pFWxuU9dw" name="CardiacArrestTimingCode" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnT0sdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67502-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnYtMNOaEeKU4pFWxuU9dw" name="CardiacArrestTimingValue" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnYtMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17054-0' or value.code = 'LA17055-7' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jndlsNOaEeKU4pFWxuU9dw" name="CardiacArrestTimingMoodCode" constrainedElement="_A65pUHwIEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jndlsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_C6NOoHwIEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_tcPw4HwKEeGW3cDolvqrTA" name="CardiacArrestCause">
      <ownedRule xmi:id="_jngB8NOaEeKU4pFWxuU9dw" name="CardiacArrestCauseTemplateId" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jngB8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.124')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnjFQNOaEeKU4pFWxuU9dw" name="CardiacArrestCauseCode" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnjFQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67503-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnok0NOaEeKU4pFWxuU9dw" name="CardiacArrestCauseValue" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnok0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17056-5' or value.code = 'LA17058-1' or value.code = 'LA17059-9' or value.code = 'LA17977-2' or value.code = 'LA17978-0' or value.code = 'LA17979-8' or value.code = 'LA17980-6' or value.code = 'LA9539-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jns2QNOaEeKU4pFWxuU9dw" name="CardiacArrestCauseMoodCode" constrainedElement="_tcPw4HwKEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jns2QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zBCPIHwKEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_QFoU0HwNEeGW3cDolvqrTA" name="PriorCPR">
      <ownedRule xmi:id="_i6i1UNOaEeKU4pFWxuU9dw" name="PriorCPRPriorCPRProviderParticipation" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6i1UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnvSgNOaEeKU4pFWxuU9dw" name="PriorCPRTemplateId" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnvSgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.125')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jnyV0NOaEeKU4pFWxuU9dw" name="PriorCPRCode" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jnyV0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67506-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jn2nQNOaEeKU4pFWxuU9dw" name="PriorCPRValue" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jn3OUNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jn5qkNOaEeKU4pFWxuU9dw" name="PriorCPRMoodCode" constrainedElement="_QFoU0HwNEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jn5qkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SI5NEHwNEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_qsAEkHwPEeGW3cDolvqrTA" name="PriorAEDUse">
      <ownedRule xmi:id="_i6mfsNOaEeKU4pFWxuU9dw" name="PriorAEDUsePriorAEDProviderParticipation" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i6mfsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(cda::Participant2))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_joECoNOaEeKU4pFWxuU9dw" name="PriorAEDUseTemplateId" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_joECodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.126')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_joHF8NOaEeKU4pFWxuU9dw" name="PriorAEDUseCode" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_joHF8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67508-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_joMlgNOaEeKU4pFWxuU9dw" name="PriorAEDUseValue" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_joMlgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17066-4' or value.code = 'LA17067-2' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_joReANOaEeKU4pFWxuU9dw" name="PriorAEDUseMoodCode" constrainedElement="_qsAEkHwPEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_joReAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_s7rBIHwPEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Ia0ocHwREeGW3cDolvqrTA" name="ArrestRhythm">
      <ownedRule xmi:id="_job2ENOaEeKU4pFWxuU9dw" name="ArrestRhythmTemplateId" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_job2EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.127')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_joe5YNOaEeKU4pFWxuU9dw" name="ArrestRhythmCode" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_joe5YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67512-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jokY8NOaEeKU4pFWxuU9dw" name="ArrestRhythmValue" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jokY8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17394-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jooqYNOaEeKU4pFWxuU9dw" name="ArrestRhythmMoodCode" constrainedElement="_Ia0ocHwREeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jooqYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_KdqC4HwREeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gnLCQHwSEeGW3cDolvqrTA" name="ReturnOfSpontaneousCirculation">
      <ownedRule xmi:id="_jorGoNOaEeKU4pFWxuU9dw" name="ReturnOfSpontaneousCirculationTemplateId" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jorGodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.128')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jouJ8NOaEeKU4pFWxuU9dw" name="ReturnOfSpontaneousCirculationCode" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jouxANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67513-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jozpgNOaEeKU4pFWxuU9dw" name="ReturnOfSpontaneousCirculationValue" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jozpgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17075-5' or value.code = 'LA17076-3' or value.code = 'LA17077-1' or value.code = 'LA32-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jo4iANOaEeKU4pFWxuU9dw" name="ReturnOfSpontaneousCirculationMoodCode" constrainedElement="_gnLCQHwSEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jo4iAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_i9zicHwSEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_khXxgHwTEeGW3cDolvqrTA" name="DestinationRhythm">
      <ownedRule xmi:id="_jo6XMNOaEeKU4pFWxuU9dw" name="DestinationRhythmTemplateId" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jo6-QNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.129')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jo-BkNOaEeKU4pFWxuU9dw" name="DestinationRhythmCode" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jo-BkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67519-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpDhINOaEeKU4pFWxuU9dw" name="DestinationRhythmValue" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpDhIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12904-1' or value.code = 'LA12904-1' or value.code = 'LA17059-9' or value.code = 'LA17059-9' or value.code = 'LA17068-0' or value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17074-8' or value.code = 'LA17083-9' or value.code = 'LA17083-9' or value.code = 'LA17084-7' or value.code = 'LA17084-7' or value.code = 'LA17085-4' or value.code = 'LA17085-4' or value.code = 'LA17086-2' or value.code = 'LA17086-2' or value.code = 'LA17087-0' or value.code = 'LA17087-0' or value.code = 'LA17088-8' or value.code = 'LA17088-8' or value.code = 'LA17089-6' or value.code = 'LA17089-6' or value.code = 'LA17090-4' or value.code = 'LA17090-4' or value.code = 'LA17091-2' or value.code = 'LA17091-2' or value.code = 'LA17093-8' or value.code = 'LA17093-8' or value.code = 'LA17094-6' or value.code = 'LA17094-6' or value.code = 'LA17095-3' or value.code = 'LA17095-3' or value.code = 'LA17096-1' or value.code = 'LA17096-1' or value.code = 'LA17097-9' or value.code = 'LA17097-9' or value.code = 'LA17098-7' or value.code = 'LA17098-7' or value.code = 'LA17099-5' or value.code = 'LA17099-5' or value.code = 'LA17100-1' or value.code = 'LA17100-1' or value.code = 'LA17101-9' or value.code = 'LA17101-9' or value.code = 'LA17703-2' or value.code = 'LA17703-2' or value.code = 'LA17704-0' or value.code = 'LA17704-0' or value.code = 'LA17705-7' or value.code = 'LA17705-7' or value.code = 'LA17706-5' or value.code = 'LA17706-5' or value.code = 'LA17708-1' or value.code = 'LA17708-1' or value.code = 'LA17718-0' or value.code = 'LA17718-0' or value.code = 'LA18205-7' or value.code = 'LA18205-7' or value.code = 'LA18206-5' or value.code = 'LA18206-5' or value.code = 'LA18207-3' or value.code = 'LA18207-3' or value.code = 'LA18208-1' or value.code = 'LA18208-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpHykNOaEeKU4pFWxuU9dw" name="DestinationRhythmMoodCode" constrainedElement="_khXxgHwTEeGW3cDolvqrTA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpIZoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mh2bgHwTEeGW3cDolvqrTA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_edpw0JuqEeGzXI65shd6Fw" name="AbandonedProcedureReasonObservation">
      <ownedRule xmi:id="_jpK14NOaEeKU4pFWxuU9dw" name="AbandonedProcedureReasonObservationTemplateId" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpK14dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.130')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpSxsNOaEeKU4pFWxuU9dw" name="AbandonedProcedureReasonObservationCodeP" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpSxsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpOgQNOaEeKU4pFWxuU9dw" name="AbandonedProcedureReasonObservationCode" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpOgQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = 'ASSERTION' and value.codeSystem = '2.16.840.1.113883.5.4')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpYRQNOaEeKU4pFWxuU9dw" name="AbandonedProcedureReasonObservationValue" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpYRQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17078-9' or value.code = 'LA17079-7' or value.code = 'LA17080-5' or value.code = 'LA17081-3' or value.code = 'LA17082-1' or value.code = 'LA18204-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpdJwNOaEeKU4pFWxuU9dw" name="AbandonedProcedureReasonObservationValueP" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpdJwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpiCQNOaEeKU4pFWxuU9dw" name="AbandonedProcedureReasonObservationMoodCode" constrainedElement="_edpw0JuqEeGzXI65shd6Fw">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpiCQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_fIxKYJuqEeGzXI65shd6Fw">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_0IBaIJ0sEeGmCMENP40rhA" name="ProcedurePriorIndicator">
      <ownedRule xmi:id="_jpkegNOaEeKU4pFWxuU9dw" name="ProcedurePriorIndicatorTemplateId" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpkegdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.131')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jprzQNOaEeKU4pFWxuU9dw" name="ProcedurePriorIndicatorCodeP" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jprzQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpoI4NOaEeKU4pFWxuU9dw" name="ProcedurePriorIndicatorCode" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpoI4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67542-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpvdoNOaEeKU4pFWxuU9dw" name="ProcedurePriorIndicatorValue" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpwEsNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jpyg8NOaEeKU4pFWxuU9dw" name="ProcedurePriorIndicatorMoodCode" constrainedElement="_0IBaIJ0sEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jpyg8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_0ln8IJ0sEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_iZg7kJ0tEeGmCMENP40rhA" name="ProcedureNumberOfAttemptsObservation">
      <ownedRule xmi:id="_jp09MNOaEeKU4pFWxuU9dw" name="ProcedureNumberOfAttemptsObservationTemplateId" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jp09MdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.132')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jp85ANOaEeKU4pFWxuU9dw" name="ProcedureNumberOfAttemptsObservationCodeP" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jp85AdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jp4nkNOaEeKU4pFWxuU9dw" name="ProcedureNumberOfAttemptsObservationCode" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jp4nkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67543-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqAjYNOaEeKU4pFWxuU9dw" name="ProcedureNumberOfAttemptsObservationValue" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqBKcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqDmsNOaEeKU4pFWxuU9dw" name="ProcedureNumberOfAttemptsObservationMoodCode" constrainedElement="_iZg7kJ0tEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqENwNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_jCIawJ0tEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_D32TkJ0uEeGmCMENP40rhA" name="ProcedureSuccessfulObservation">
      <ownedRule xmi:id="_jqGC8NOaEeKU4pFWxuU9dw" name="ProcedureSuccessfulObservationTemplateId" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqGqANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.133')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqN-wNOaEeKU4pFWxuU9dw" name="ProcedureSuccessfulObservationCodeP" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqOl0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqKUYNOaEeKU4pFWxuU9dw" name="ProcedureSuccessfulObservationCode" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqKUYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67544-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqSQMNOaEeKU4pFWxuU9dw" name="ProcedureSuccessfulObservationValue" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqSQMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqVTgNOaEeKU4pFWxuU9dw" name="ProcedureSuccessfulObservationMoodCode" constrainedElement="_D32TkJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqVTgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_EUkEwJ0uEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lVl1sJ0uEeGmCMENP40rhA" name="ProcedureComplicationsObservation">
      <ownedRule xmi:id="_jqXvwNOaEeKU4pFWxuU9dw" name="ProcedureComplicationsObservationTemplateId" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqYW0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.179')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqg5sNOaEeKU4pFWxuU9dw" name="ProcedureComplicationsObservationCodeP" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqg5sdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqcoQNOaEeKU4pFWxuU9dw" name="ProcedureComplicationsObservationCode" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqcoQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67545-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqmZQNOaEeKU4pFWxuU9dw" name="ProcedureComplicationsObservationValue" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqmZQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA137-2' or value.code = 'LA15098-9' or value.code = 'LA15099-7' or value.code = 'LA15424-7' or value.code = 'LA17059-9' or value.code = 'LA17392-4' or value.code = 'LA17393-2' or value.code = 'LA17394-0' or value.code = 'LA17396-5' or value.code = 'LA17397-3' or value.code = 'LA17489-8' or value.code = 'LA17490-6' or value.code = 'LA17713-1' or value.code = 'LA17714-9' or value.code = 'LA18267-7' or value.code = 'LA18268-5' or value.code = 'LA7418-2' or value.code = 'LA7434-9' or value.code = 'LA7443-0' or value.code = 'LA7444-8' or value.code = 'LA9540-1' or value.code = 'LA9541-9' or value.code = 'LA9548-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqrRwNOaEeKU4pFWxuU9dw" name="ProcedureComplicationsObservationMoodCode" constrainedElement="_lVl1sJ0uEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqr40NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_l6VhgJ0uEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Z3nhEJ0vEeGmCMENP40rhA" name="ProcedurePatientResponseObservation">
      <ownedRule xmi:id="_jquVENOaEeKU4pFWxuU9dw" name="ProcedurePatientResponseObservationTemplateId" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jquVEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.135')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jq2Q4NOaEeKU4pFWxuU9dw" name="ProcedurePatientResponseObservationCodeP" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jq2Q4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jqx_cNOaEeKU4pFWxuU9dw" name="ProcedurePatientResponseObservationCode" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jqx_cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67546-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jq7wcNOaEeKU4pFWxuU9dw" name="ProcedurePatientResponseObservationValue" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jq7wcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA11011-6' or value.code = 'LA17181-1' or value.code = 'LA65-8')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jq_a0NOaEeKU4pFWxuU9dw" name="ProcedurePatientResponseObservationValueP" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jq_a0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrDsQNOaEeKU4pFWxuU9dw" name="ProcedurePatientResponseObservationMoodCode" constrainedElement="_Z3nhEJ0vEeGmCMENP40rhA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrDsQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_aVz48J0vEeGmCMENP40rhA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_KR_lQJ4aEeGzbp5zEFWdWg" name="AirwayConfirmationObservation">
      <ownedRule xmi:id="_jrGIgNOaEeKU4pFWxuU9dw" name="AirwayConfirmationObservationTemplateId" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrGIgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.175')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrOrYNOaEeKU4pFWxuU9dw" name="AirwayConfirmationObservationCodeP" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrOrYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrJy4NOaEeKU4pFWxuU9dw" name="AirwayConfirmationObservationCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrJy4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '71576-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrUyANOaEeKU4pFWxuU9dw" name="AirwayConfirmationObservationMethodCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrUyAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18672-8' or value.code = 'LA18673-6' or value.code = 'LA18674-4' or value.code = 'LA18675-1' or value.code = 'LA18676-9' or value.code = 'LA18677-7' or value.code = 'LA18678-5' or value.code = 'LA18679-3' or value.code = 'LA18680-1' or value.code = 'LA18681-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrZDcNOaEeKU4pFWxuU9dw" name="AirwayConfirmationObservationMethodCodeP" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrZDcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrd78NOaEeKU4pFWxuU9dw" name="AirwayConfirmationObservationValue" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrd78dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrgYMNOaEeKU4pFWxuU9dw" name="AirwayConfirmationObservationEffectiveTime" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrgYMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrjbgNOaEeKU4pFWxuU9dw" name="AirwayConfirmationObservationMoodCode" constrainedElement="_KR_lQJ4aEeGzbp5zEFWdWg">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrjbgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Kq5NcJ4aEeGzbp5zEFWdWg">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_N8t6kFhWEeK-i8RB1gvLUA" name="ReasonProcedureNotAttemptedObservation">
      <ownedComment xmi:id="_pw5GULMSEeKNbt70lHd2Eg">
        <body>NEMSIS Trace: EProcedures.03 pertinent negatives, EArrest.03 negative values&#xD;
This is a superset of both value sets: the question is the same, even if the .90 values are appropriate only for CPR and the .95 for all other procedures.</body>
      </ownedComment>
      <ownedRule xmi:id="_jrl3wNOaEeKU4pFWxuU9dw" name="ReasonProcedureNotAttemptedObservationTemplateId" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrl3wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.137')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jro7ENOaEeKU4pFWxuU9dw" name="ReasonProcedureNotAttemptedObservationCode" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jro7EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67504-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrvBsNOaEeKU4pFWxuU9dw" name="ReasonProcedureNotAttemptedObservationValue" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrvBsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15185-4' or value.code = 'LA18925-0' or value.code = 'LA4216-3' or value.code = 'LA4389-8' or value.code = 'LA17063-1' or value.code = 'LA17064-9' or value.code = 'LA17065-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jrzTINOaEeKU4pFWxuU9dw" name="ReasonProcedureNotAttemptedObservationValueP" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jrzTIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jr3kkNOaEeKU4pFWxuU9dw" name="ReasonProcedureNotAttemptedObservationMoodCode" constrainedElement="_N8t6kFhWEeK-i8RB1gvLUA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jr3kkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_OeTksFhWEeK-i8RB1gvLUA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4ZsacKg_EeG79fAvHk6H4g" name="ComplaintType">
      <ownedRule xmi:id="_jsM7wNOaEeKU4pFWxuU9dw" name="ComplaintTypeTemplateId" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jsM7wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.138')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jsUQgNOaEeKU4pFWxuU9dw" name="ComplaintTypeCodeP" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jsUQgdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jsP_ENOaEeKU4pFWxuU9dw" name="ComplaintTypeCode" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jsP_EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '72114-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jsaXINOaEeKU4pFWxuU9dw" name="ComplaintTypeValue" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jsaXIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA18923-5' or value.code = 'LA18924-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jseBgNOaEeKU4pFWxuU9dw" name="ComplaintTypeValueP" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jseokNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jsiS8NOaEeKU4pFWxuU9dw" name="ComplaintTypeMoodCode" constrainedElement="_4ZsacKg_EeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jsiS8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4uqk4Kg_EeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_g93MsKhAEeG79fAvHk6H4g" name="ComplaintDuration">
      <ownedRule xmi:id="_jskvMNOaEeKU4pFWxuU9dw" name="ComplaintDurationTemplateId" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jskvMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.139')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jssrANOaEeKU4pFWxuU9dw" name="ComplaintDurationCodeP" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jssrAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jsoZkNOaEeKU4pFWxuU9dw" name="ComplaintDurationCode" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jsoZkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67491-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jswVYNOaEeKU4pFWxuU9dw" name="ComplaintDurationValue" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jswVYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jszYsNOaEeKU4pFWxuU9dw" name="ComplaintDurationMoodCode" constrainedElement="_g93MsKhAEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jszYsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hRO0oKhAEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_YMy4UKhDEeG79fAvHk6H4g" name="ComplaintOrganSystem">
      <ownedRule xmi:id="_js1N4NOaEeKU4pFWxuU9dw" name="ComplaintOrganSystemTemplateId" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_js108NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.140')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_js9JsNOaEeKU4pFWxuU9dw" name="ComplaintOrganSystemCodeP" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_js9JsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_js44QNOaEeKU4pFWxuU9dw" name="ComplaintOrganSystemCode" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_js44QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69468-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtCpQNOaEeKU4pFWxuU9dw" name="ComplaintOrganSystemValue" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtCpQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA16968-2' or value.code = 'LA18114-1' or value.code = 'LA18277-6' or value.code = 'LA18278-4' or value.code = 'LA18279-2' or value.code = 'LA18281-8' or value.code = 'LA18282-6' or value.code = 'LA18283-4' or value.code = 'LA18284-2' or value.code = 'LA18285-9' or value.code = 'LA9534-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtGToNOaEeKU4pFWxuU9dw" name="ComplaintOrganSystemValueP" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtG6sNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtLMINOaEeKU4pFWxuU9dw" name="ComplaintOrganSystemMoodCode" constrainedElement="_YMy4UKhDEeG79fAvHk6H4g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtLMIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_YmnGgKhDEeG79fAvHk6H4g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_gBOGYJorEeG_FLcaRgAa7g" name="NeurologicalAssessment">
      <ownedRule xmi:id="_jtNoYNOaEeKU4pFWxuU9dw" name="NeurologicalAssessmentTemplateId" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtOPcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.141')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtVkMNOaEeKU4pFWxuU9dw" name="NeurologicalAssessmentCodeP" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtVkMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtRSwNOaEeKU4pFWxuU9dw" name="NeurologicalAssessmentCode" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtRSwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67536-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtbq0NOaEeKU4pFWxuU9dw" name="NeurologicalAssessmentValue" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtbq0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA15899-0' or value.code = 'LA17286-8' or value.code = 'LA17291-8' or value.code = 'LA17292-6' or value.code = 'LA17293-4' or value.code = 'LA17294-2' or value.code = 'LA17295-9' or value.code = 'LA17296-7' or value.code = 'LA17297-5' or value.code = 'LA17298-3' or value.code = 'LA17299-1' or value.code = 'LA17300-7' or value.code = 'LA17301-5' or value.code = 'LA17302-3' or value.code = 'LA17303-1' or value.code = 'LA17304-9' or value.code = 'LA17305-6' or value.code = 'LA18261-0' or value.code = 'LA18262-8' or value.code = 'LA18263-6' or value.code = 'LA18264-4' or value.code = 'LA18265-1' or value.code = 'LA6630-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtfVMNOaEeKU4pFWxuU9dw" name="NeurologicalAssessmentValueP" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtfVMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtjmoNOaEeKU4pFWxuU9dw" name="NeurologicalAssessmentMoodCode" constrainedElement="_gBOGYJorEeG_FLcaRgAa7g">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtjmodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_gR4YkJorEeG_FLcaRgAa7g">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_n1J2EIzgEeGnhceUMXltng" name="ExistenceOfHistoryOfProcedures">
      <ownedRule xmi:id="_jtlb0NOaEeKU4pFWxuU9dw" name="ExistenceOfHistoryOfProceduresTemplateId" constrainedElement="_n1J2EIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtmC4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.142')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtpGMNOaEeKU4pFWxuU9dw" name="ExistenceOfHistoryOfProceduresCode" constrainedElement="_n1J2EIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtpGMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67792-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtswkNOaEeKU4pFWxuU9dw" name="ExistenceOfHistoryOfProceduresValue" constrainedElement="_n1J2EIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jttXoNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::BL)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jtwa8NOaEeKU4pFWxuU9dw" name="ExistenceOfHistoryOfProceduresMoodCode" constrainedElement="_n1J2EIzgEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtwa8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_oPzKsIzgEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Orea4IzrEeGnhceUMXltng" name="SystolicBloodPressure">
      <ownedComment xmi:id="_2OB_kNOXEeKU4pFWxuU9dw">
        <body>NEMSIS Trace: EVitals.01</body>
      </ownedComment>
      <ownedRule xmi:id="_jty3MdOaEeKU4pFWxuU9dw" name="VitalSignObservationTemplateId" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jtzeQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.113883.17.3.10.1.23.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jt3IoNOaEeKU4pFWxuU9dw" name="SystolicBloodPressureCode" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jt3IodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8480-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jt7aENOaEeKU4pFWxuU9dw" name="SystolicBloodPressureValue" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jt7aEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jt-dYNOaEeKU4pFWxuU9dw" name="SystolicBloodPressureMoodCode" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jt_EcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juBgsNOaEeKU4pFWxuU9dw" name="SystolicBloodPressureEffectiveTime" constrainedElement="_Orea4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juBgsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_PIqGIIzrEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_l4xA4IzrEeGnhceUMXltng" name="DiastolicBloodPressure">
      <ownedRule xmi:id="_juEkANOaEeKU4pFWxuU9dw" name="VitalSignObservationTemplateId" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juEkAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.144')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juHnUNOaEeKU4pFWxuU9dw" name="DiastolicBloodPressureCode" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juHnUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8462-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juL4wNOaEeKU4pFWxuU9dw" name="DiastolicBloodPressureValue" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juL4wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juOVANOaEeKU4pFWxuU9dw" name="DiastolicBloodPressureEffectiveTime" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juO8ENOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juR_YNOaEeKU4pFWxuU9dw" name="DiastolicBloodPressureMoodCode" constrainedElement="_l4xA4IzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juR_YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_mVKpAIzrEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="__qJ7UIzrEeGnhceUMXltng" name="HeartRate">
      <ownedRule xmi:id="_juVCsNOaEeKU4pFWxuU9dw" name="VitalSignObservationTemplateId" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juVCsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.145')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jucXcNOaEeKU4pFWxuU9dw" name="HeartRateCodeP" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jucXcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juYGANOaEeKU4pFWxuU9dw" name="HeartRateCode" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juYGAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8867-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jugo4NOaEeKU4pFWxuU9dw" name="HeartRateValue" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jugo4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jujFINOaEeKU4pFWxuU9dw" name="HeartRateEffectiveTime" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jujFIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jumIcNOaEeKU4pFWxuU9dw" name="HeartRateMoodCode" constrainedElement="__qJ7UIzrEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jumIcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_AA5nYIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Q7VIMIzsEeGnhceUMXltng" name="RespiratoryRate">
      <ownedRule xmi:id="_jupLwNOaEeKU4pFWxuU9dw" name="VitalSignObservationTemplateId" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jupLwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.146')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jus2INOaEeKU4pFWxuU9dw" name="RespiratoryRateCode" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jus2IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9279-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juxHkNOaEeKU4pFWxuU9dw" name="RespiratoryRateValue" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juxHkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_juzj0NOaEeKU4pFWxuU9dw" name="RespiratoryRateEffectiveTime" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_juzj0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ju2nINOaEeKU4pFWxuU9dw" name="RespiratoryRateMoodCode" constrainedElement="_Q7VIMIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ju2nIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_RN10gIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_koRz8IzsEeGnhceUMXltng" name="BodyTemperature">
      <ownedRule xmi:id="_ju5qcdOaEeKU4pFWxuU9dw" name="VitalSignObservationTemplateId" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ju6RgNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.176')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_ju974NOaEeKU4pFWxuU9dw" name="BodyTemperatureCode" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_ju974dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '8310-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvCNUNOaEeKU4pFWxuU9dw" name="BodyTemperatureValue" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvCNUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvFQoNOaEeKU4pFWxuU9dw" name="BodyTemperatureEffectiveTime" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvFQodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvIT8NOaEeKU4pFWxuU9dw" name="BodyTemperatureMoodCode" constrainedElement="_koRz8IzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvIT8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_k_CuIIzsEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.consol/model/consol_Ecore.uml#_2OrhsRSVEeGGzu7fmW9pXw"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_01XGkIzsEeGnhceUMXltng" name="OxygenSaturation">
      <ownedRule xmi:id="_jvKwMNOaEeKU4pFWxuU9dw" name="OxygenSaturationTemplateId" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvKwMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.177')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvPBoNOaEeKU4pFWxuU9dw" name="OxygenSaturationCode" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvPBodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '2710-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvTTENOaEeKU4pFWxuU9dw" name="OxygenSaturationValue" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvTTEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvWWYNOaEeKU4pFWxuU9dw" name="OxygenSaturationMoodCode" constrainedElement="_01XGkIzsEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvW9cNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_1HuB4IzsEeGnhceUMXltng">
        <ownedComment xmi:id="_HYL4YIjvEeKx3P4dlW9OSw">
          <body>NEMSIS Trace: EVitals.01</body>
        </ownedComment>
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_MjD2kJ-nEeGorI3CPDW2ww" name="ProtocolAgeCategory">
      <ownedRule xmi:id="_jvYyoNOaEeKU4pFWxuU9dw" name="ProtocolAgeCategoryTemplateId" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvZZsNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.149')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvgucNOaEeKU4pFWxuU9dw" name="ProtocolAgeCategoryCodeP" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvgucdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvcdANOaEeKU4pFWxuU9dw" name="ProtocolAgeCategoryCode" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvcdAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67538-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvmOANOaEeKU4pFWxuU9dw" name="ProtocolAgeCategoryValue" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvmOAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17571-3' or value.code = 'LA17572-1' or value.code = 'LA17573-9')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvqfcNOaEeKU4pFWxuU9dw" name="ProtocolAgeCategoryValueP" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvqfcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jvuw4NOaEeKU4pFWxuU9dw" name="ProtocolAgeCategoryMoodCode" constrainedElement="_MjD2kJ-nEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvuw4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NEM0wJ-nEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lC10cJ-BEeGw9ZRnaFfEZQ" name="DispatchLocationName">
      <ownedRule xmi:id="_jvxNINOaEeKU4pFWxuU9dw" name="DispatchLocationNameTemplateId" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jvxNIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.150')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jv0QcNOaEeKU4pFWxuU9dw" name="DispatchLocationNameCode" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jv0QcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '69466-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jv4h4NOaEeKU4pFWxuU9dw" name="DispatchLocationNameValue" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jv4h4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::ST)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jv6-INOaEeKU4pFWxuU9dw" name="DispatchLocationNameMoodCode" constrainedElement="_lC10cJ-BEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jv6-IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_loHrwJ-BEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_sPMP9p-NEeGorI3CPDW2ww" name="DispatchLocationLatitude">
      <ownedRule xmi:id="_jv9aYNOaEeKU4pFWxuU9dw" name="DispatchLocationLatitudeTemplateId" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jv9aYdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.151')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwAdsNOaEeKU4pFWxuU9dw" name="DispatchLocationLatitudeCode" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwAdsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '52002-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwEvINOaEeKU4pFWxuU9dw" name="DispatchLocationLatitudeValue" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwEvIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwHLYNOaEeKU4pFWxuU9dw" name="DispatchLocationLatitudeMoodCode" constrainedElement="_sPMP9p-NEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwHycNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_sPMP-J-NEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_UGLMFZ-OEeGorI3CPDW2ww" name="DispatchLocationLongitude">
      <ownedRule xmi:id="_jwJnoNOaEeKU4pFWxuU9dw" name="DispatchLocationLongitudeTemplateId" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwJnodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.152')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwMq8NOaEeKU4pFWxuU9dw" name="DispatchLocationLongitudeCode" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwNSANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '52003-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwQ8YNOaEeKU4pFWxuU9dw" name="DispatchLocationLongitudeValue" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwRjcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwT_sNOaEeKU4pFWxuU9dw" name="DispatchLocationLongitudeMoodCode" constrainedElement="_UGLMFZ-OEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwT_sdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_UGLMF5-OEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9i0HIJ99EeGw9ZRnaFfEZQ" name="DispatchDelay">
      <ownedRule xmi:id="_jwV04NOaEeKU4pFWxuU9dw" name="DispatchDelayTemplateId" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwWb8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.153')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwdwsNOaEeKU4pFWxuU9dw" name="DispatchDelayCodeP" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwdwsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwZfQNOaEeKU4pFWxuU9dw" name="DispatchDelayCode" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwZfQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67480-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwjQQNOaEeKU4pFWxuU9dw" name="DispatchDelayValue" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwj3UNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17183-7' or value.code = 'LA17579-6' or value.code = 'LA17580-4' or value.code = 'LA17581-2' or value.code = 'LA17582-0' or value.code = 'LA17584-6' or value.code = 'LA18081-2' or value.code = 'LA7540-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwoIwNOaEeKU4pFWxuU9dw" name="DispatchDelayValueP" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwoIwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwsaMNOaEeKU4pFWxuU9dw" name="DispatchDelayMoodCode" constrainedElement="_9i0HIJ99EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwsaMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-MO3kJ99EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_pCK4JZ9-EeGw9ZRnaFfEZQ" name="ResponseDelay">
      <ownedRule xmi:id="_jwu2cNOaEeKU4pFWxuU9dw" name="ResponseDelayTemplateId" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwu2cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.154')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jw2LMNOaEeKU4pFWxuU9dw" name="ResponseDelayCodeP" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jw2LMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jwx5wNOaEeKU4pFWxuU9dw" name="ResponseDelayCode" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jwx5wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67557-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jw7qwNOaEeKU4pFWxuU9dw" name="ResponseDelayValue" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jw7qwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17583-8' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jw_8MNOaEeKU4pFWxuU9dw" name="ResponseDelayValueP" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jw_8MdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxENoNOaEeKU4pFWxuU9dw" name="ResponseDelayMoodCode" constrainedElement="_pCK4JZ9-EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxE0sNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_pCK4J59-EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_Vo79JZ9_EeGw9ZRnaFfEZQ" name="SceneDelay">
      <ownedRule xmi:id="_jxGp4NOaEeKU4pFWxuU9dw" name="SceneDelayTemplateId" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxHQ8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.155')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxOlsNOaEeKU4pFWxuU9dw" name="SceneDelayCodeP" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxOlsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxKUQNOaEeKU4pFWxuU9dw" name="SceneDelayCode" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxKUQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67558-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxUFQNOaEeKU4pFWxuU9dw" name="SceneDelayValue" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxUFQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA17595-2' or value.code = 'LA17596-0' or value.code = 'LA17597-8' or value.code = 'LA18081-2' or value.code = 'LA18272-7' or value.code = 'LA18273-5' or value.code = 'LA18275-0' or value.code = 'LA18276-8' or value.code = 'LA7540-3')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxYWsNOaEeKU4pFWxuU9dw" name="SceneDelayValueP" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxYWsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxdPMNOaEeKU4pFWxuU9dw" name="SceneDelayMoodCode" constrainedElement="_Vo79JZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxdPMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_Vo79J59_EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4qwhJZ9_EeGw9ZRnaFfEZQ" name="TransportDelay">
      <ownedRule xmi:id="_jxfEYNOaEeKU4pFWxuU9dw" name="TransportDelayTemplateId" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxfrcNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.156')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxnAMNOaEeKU4pFWxuU9dw" name="TransportDelayCodeP" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxnAMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxiuwNOaEeKU4pFWxuU9dw" name="TransportDelayCode" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxiuwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67559-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxsfwNOaEeKU4pFWxuU9dw" name="TransportDelayValue" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxtG0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17585-3' or value.code = 'LA17586-1' or value.code = 'LA17587-9' or value.code = 'LA17588-7' or value.code = 'LA17589-5' or value.code = 'LA17590-3' or value.code = 'LA17591-1' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA18301-4')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jxxYQNOaEeKU4pFWxuU9dw" name="TransportDelayValueP" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jxxYQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jx2QwNOaEeKU4pFWxuU9dw" name="TransportDelayMoodCode" constrainedElement="_4qwhJZ9_EeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jx2QwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_4qwhJ59_EeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_e7LIFZ-AEeGw9ZRnaFfEZQ" name="TurnaroundDelay">
      <ownedRule xmi:id="_jx4F8NOaEeKU4pFWxuU9dw" name="TurnaroundDelayTemplateId" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jx4tANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.157')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyABwNOaEeKU4pFWxuU9dw" name="TurnaroundDelayCodeP" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyABwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jx7wUNOaEeKU4pFWxuU9dw" name="TurnaroundDelayCode" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jx7wUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67560-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyFhUNOaEeKU4pFWxuU9dw" name="TurnaroundDelayValue" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyFhUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17059-9' or value.code = 'LA17587-9' or value.code = 'LA17590-3' or value.code = 'LA17592-9' or value.code = 'LA17593-7' or value.code = 'LA17594-5' or value.code = 'LA17598-6' or value.code = 'LA17599-4' or value.code = 'LA17600-0' or value.code = 'LA17601-8' or value.code = 'LA17602-6' or value.code = 'LA17603-4' or value.code = 'LA18081-2' or value.code = 'LA18270-1' or value.code = 'LA18271-9' or value.code = 'LA7497-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyJywNOaEeKU4pFWxuU9dw" name="TurnaroundDelayValueP" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyJywdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (not self.value->isEmpty() and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyOEMNOaEeKU4pFWxuU9dw" name="TurnaroundDelayMoodCode" constrainedElement="_e7LIFZ-AEeGw9ZRnaFfEZQ">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyOEMdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_e7LIF5-AEeGw9ZRnaFfEZQ">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WduLAIzyEeGnhceUMXltng" name="GlasgowTotal">
      <ownedRule xmi:id="_jyQgcNOaEeKU4pFWxuU9dw" name="GlasgowTotalTemplateId" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyQgcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.158')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyYcQNOaEeKU4pFWxuU9dw" name="GlasgowTotalCodeP" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyYcQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyUK0NOaEeKU4pFWxuU9dw" name="GlasgowTotalCode" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyUK0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9269-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyctsNOaEeKU4pFWxuU9dw" name="GlasgowTotalValue" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyctsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyfJ8NOaEeKU4pFWxuU9dw" name="GlasgowTotalMoodCode" constrainedElement="_WduLAIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyfJ8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_W9FnkIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ZLqX8IzyEeGnhceUMXltng" name="GlasgowQualifier">
      <ownedRule xmi:id="_jyhmMNOaEeKU4pFWxuU9dw" name="GlasgowQualifierTemplateId" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyiNQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.159')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jypiANOaEeKU4pFWxuU9dw" name="GlasgowQualifierCodeP" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jypiAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jylQkNOaEeKU4pFWxuU9dw" name="GlasgowQualifierCode" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jylQkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '55285-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jytzcNOaEeKU4pFWxuU9dw" name="GlasgowQualifierValue" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jytzcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jyw2wNOaEeKU4pFWxuU9dw" name="GlasgowQualifierMoodCode" constrainedElement="_ZLqX8IzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyw2wdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ZhmywIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_bxS9cIzyEeGnhceUMXltng" name="GlasgowEye">
      <ownedRule xmi:id="_jyzTANOaEeKU4pFWxuU9dw" name="GlasgowEyeTemplateId" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jyzTAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.160')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jy6nwNOaEeKU4pFWxuU9dw" name="GlasgowEyeCodeP" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jy6nwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jy2WUNOaEeKU4pFWxuU9dw" name="GlasgowEyeCode" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jy2WUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9267-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jy_gQNOaEeKU4pFWxuU9dw" name="GlasgowEyeValue" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jy_gQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzB8gNOaEeKU4pFWxuU9dw" name="GlasgowEyeMoodCode" constrainedElement="_bxS9cIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzCjkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_cBadEIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_eKfCYIzyEeGnhceUMXltng" name="GlasgowMotor">
      <ownedRule xmi:id="_jzEYwNOaEeKU4pFWxuU9dw" name="GlasgowMotorTemplateId" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzE_0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.176')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzNisNOaEeKU4pFWxuU9dw" name="GlasgowMotorCodeP" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzNisdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzIqMNOaEeKU4pFWxuU9dw" name="GlasgowMotorCode" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzJRQNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9268-4' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzR0INOaEeKU4pFWxuU9dw" name="GlasgowMotorValue" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzR0IdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzU3cNOaEeKU4pFWxuU9dw" name="GlasgowMotorMoodCode" constrainedElement="_eKfCYIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzU3cdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ee3-AIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_hLJ-EIzyEeGnhceUMXltng" name="GlasgowVerbal">
      <ownedRule xmi:id="_jzXTsNOaEeKU4pFWxuU9dw" name="GlasgowVerbalTemplateId" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzXTsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.162')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzfPgNOaEeKU4pFWxuU9dw" name="GlasgowVerbalCodeP" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzf2kNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jza-ENOaEeKU4pFWxuU9dw" name="GlasgowVerbalCode" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jza-EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '9270-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzjg8NOaEeKU4pFWxuU9dw" name="GlasgowVerbalValue" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzjg8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::INT)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzl9MNOaEeKU4pFWxuU9dw" name="GlasgowVerbalMoodCode" constrainedElement="_hLJ-EIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzl9MdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_hhtc4IzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_9koR4IzuEeGnhceUMXltng" name="StrokeScore">
      <ownedRule xmi:id="_jzoZcNOaEeKU4pFWxuU9dw" name="StrokeScoreTemplateId" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzpAgNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.163')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzwVQNOaEeKU4pFWxuU9dw" name="StrokeScoreCodeP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzw8UNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jzsD0NOaEeKU4pFWxuU9dw" name="StrokeScoreCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jzsD0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67520-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jz100NOaEeKU4pFWxuU9dw" name="StrokeScoreValue" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jz2b4NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17109-2' or value.code = 'LA6576-8' or value.code = 'LA6577-6')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_jz6GQNOaEeKU4pFWxuU9dw" name="StrokeScoreValueP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jz6tUNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0AM4NOaEeKU4pFWxuU9dw" name="StrokeScoreMethodCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0AM4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17110-0' or value.code = 'LA17111-8' or value.code = 'LA17112-6' or value.code = 'LA17113-4' or value.code = 'LA18300-6' or value.code = 'LA3774-2')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0EeUNOaEeKU4pFWxuU9dw" name="StrokeScoreMethodCodeP" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0EeUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0IvwNOaEeKU4pFWxuU9dw" name="StrokeScoreEffectiveTime" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0IvwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0LMANOaEeKU4pFWxuU9dw" name="StrokeScoreMoodCode" constrainedElement="_9koR4IzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0LMAdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_95ZoAIzuEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_lnVLQIzuEeGnhceUMXltng" name="PainScore">
      <ownedRule xmi:id="_j0NoQNOaEeKU4pFWxuU9dw" name="PainScoreTemplateId" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0NoQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.164')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0QrkNOaEeKU4pFWxuU9dw" name="PainScoreCode" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0QrkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '56840-2' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0U9ANOaEeKU4pFWxuU9dw" name="PainScoreEffectiveTime" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0VkENOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0YAUNOaEeKU4pFWxuU9dw" name="PainScoreMoodCode" constrainedElement="_lnVLQIzuEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0YAUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_l6CE0IzuEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_xgaHgIztEeGnhceUMXltng" name="LevelOfResponsiveness">
      <ownedRule xmi:id="_j0ackNOaEeKU4pFWxuU9dw" name="LevelOfResponsivenessTemplateId" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0ackdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.165')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0hxUNOaEeKU4pFWxuU9dw" name="LevelOfResponsivenessCodeP" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0iYYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0df4NOaEeKU4pFWxuU9dw" name="LevelOfResponsivenessCode" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0eG8NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67775-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0n38NOaEeKU4pFWxuU9dw" name="LevelOfResponsivenessValue" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0n38dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA17107-6' or value.code = 'LA17108-4' or value.code = 'LA9340-6' or value.code = 'LA9343-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0riUNOaEeKU4pFWxuU9dw" name="LevelOfResponsivenessValueP" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0sJYNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0vzwNOaEeKU4pFWxuU9dw" name="LevelOfResponsivenessEffectiveTime" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0wa0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j0y3ENOaEeKU4pFWxuU9dw" name="LevelOfResponsivenessMoodCode" constrainedElement="_xgaHgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j0y3EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_x_aXsIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_jmDsgIztEeGnhceUMXltng" name="BloodGlucose">
      <ownedRule xmi:id="_j01TUNOaEeKU4pFWxuU9dw" name="BloodGlucoseTemplateId" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j01TUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.166')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j08oENOaEeKU4pFWxuU9dw" name="BloodGlucoseCodeP" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j09PINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j04WoNOaEeKU4pFWxuU9dw" name="BloodGlucoseCode" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j04WodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '2339-0' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1A5gNOaEeKU4pFWxuU9dw" name="BloodGlucoseValue" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1BgkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1D80NOaEeKU4pFWxuU9dw" name="BloodGlucoseEffectiveTime" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1D80dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1GZENOaEeKU4pFWxuU9dw" name="BloodGlucoseMoodCode" constrainedElement="_jmDsgIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1GZEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_j7fJ8IztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_WFit0IztEeGnhceUMXltng" name="CarbonMonoxide">
      <ownedRule xmi:id="_j1I1UNOaEeKU4pFWxuU9dw" name="CarbonMonoxideTemplateId" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1I1UdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.167')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1QxINOaEeKU4pFWxuU9dw" name="CarbonMonoxideCodeP" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1QxIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1MfsNOaEeKU4pFWxuU9dw" name="CarbonMonoxideCode" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1MfsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '19911-7' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1VCkNOaEeKU4pFWxuU9dw" name="CarbonMonoxideValue" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1VCkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1Xe0NOaEeKU4pFWxuU9dw" name="CarbonMonoxideEffectiveTime" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1Xe0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1Z7ENOaEeKU4pFWxuU9dw" name="CarbonMonoxideMoodCode" constrainedElement="_WFit0IztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1Z7EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_WP_qUIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_IU2lIIztEeGnhceUMXltng" name="CarbonDioxide">
      <ownedRule xmi:id="_j1cXUNOaEeKU4pFWxuU9dw" name="CarbonDioxideTemplateId" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1cXUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.168')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1jsENOaEeKU4pFWxuU9dw" name="CarbonDioxideCodeP" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1kTINOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1faoNOaEeKU4pFWxuU9dw" name="CarbonDioxideCode" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1gBsNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '19889-5' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1n9gNOaEeKU4pFWxuU9dw" name="CarbonDioxideValue" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1n9gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1qZwNOaEeKU4pFWxuU9dw" name="CarbonDioxideEffectiveTime" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1qZwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1tdENOaEeKU4pFWxuU9dw" name="CarbonDioxideMoodCode" constrainedElement="_IU2lIIztEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1tdEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_I1iQUIztEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_uMxJUIzpEeGnhceUMXltng" name="CardiacRhythm">
      <ownedRule xmi:id="_jEy9gNOaEeKU4pFWxuU9dw" name="CardiacRhythmParticipant1" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_jEy9gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.participant->one(participant : cda::Participant2 | not participant.oclIsUndefined() and participant.oclIsKindOf(rim::Participation))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1vSQNOaEeKU4pFWxuU9dw" name="CardiacRhythmTemplateId" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1v5UNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.169')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j13OENOaEeKU4pFWxuU9dw" name="CardiacRhythmCodeP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j13OEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j1yVkNOaEeKU4pFWxuU9dw" name="CardiacRhythmCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j1y8oNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67519-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j18toNOaEeKU4pFWxuU9dw" name="CardiacRhythmMethodCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j18todOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1 and self.methodCode->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CE) and &#xD;
let value : datatypes::CE = element.oclAsType(datatypes::CE) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA18682-7' or value.code = 'LA18683-5' or value.code = 'LA18684-3' or value.code = 'LA18685-0')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2A_ENOaEeKU4pFWxuU9dw" name="CardiacRhythmMethodCodeP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2A_EdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.methodCode->isEmpty() or self.methodCode->exists(element | element.isNullFlavorUndefined())) implies (self.methodCode->size() = 1)</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2GeoNOaEeKU4pFWxuU9dw" name="CardiacRhythmValue" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2GeodOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | not element.oclIsUndefined() and element.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = element.oclAsType(datatypes::CD) in &#xD;
value.codeSystem = '2.16.840.1.113883.6.1' and (value.code = 'LA12904-1' or value.code = 'LA12904-1' or value.code = 'LA17059-9' or value.code = 'LA17059-9' or value.code = 'LA17068-0' or value.code = 'LA17068-0' or value.code = 'LA17070-6' or value.code = 'LA17070-6' or value.code = 'LA17071-4' or value.code = 'LA17071-4' or value.code = 'LA17072-2' or value.code = 'LA17072-2' or value.code = 'LA17073-0' or value.code = 'LA17073-0' or value.code = 'LA17074-8' or value.code = 'LA17074-8' or value.code = 'LA17083-9' or value.code = 'LA17083-9' or value.code = 'LA17084-7' or value.code = 'LA17084-7' or value.code = 'LA17085-4' or value.code = 'LA17085-4' or value.code = 'LA17086-2' or value.code = 'LA17086-2' or value.code = 'LA17087-0' or value.code = 'LA17087-0' or value.code = 'LA17088-8' or value.code = 'LA17088-8' or value.code = 'LA17089-6' or value.code = 'LA17089-6' or value.code = 'LA17090-4' or value.code = 'LA17090-4' or value.code = 'LA17091-2' or value.code = 'LA17091-2' or value.code = 'LA17093-8' or value.code = 'LA17093-8' or value.code = 'LA17094-6' or value.code = 'LA17094-6' or value.code = 'LA17095-3' or value.code = 'LA17095-3' or value.code = 'LA17096-1' or value.code = 'LA17096-1' or value.code = 'LA17097-9' or value.code = 'LA17097-9' or value.code = 'LA17098-7' or value.code = 'LA17098-7' or value.code = 'LA17099-5' or value.code = 'LA17099-5' or value.code = 'LA17100-1' or value.code = 'LA17100-1' or value.code = 'LA17101-9' or value.code = 'LA17101-9' or value.code = 'LA17703-2' or value.code = 'LA17703-2' or value.code = 'LA17704-0' or value.code = 'LA17704-0' or value.code = 'LA17705-7' or value.code = 'LA17705-7' or value.code = 'LA17706-5' or value.code = 'LA17706-5' or value.code = 'LA17708-1' or value.code = 'LA17708-1' or value.code = 'LA17718-0' or value.code = 'LA17718-0' or value.code = 'LA18205-7' or value.code = 'LA18205-7' or value.code = 'LA18206-5' or value.code = 'LA18206-5' or value.code = 'LA18207-3' or value.code = 'LA18207-3' or value.code = 'LA18208-1' or value.code = 'LA18208-1')))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2KwENOaEeKU4pFWxuU9dw" name="CardiacRhythmValueP" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2KwEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::CD)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2OacNOaEeKU4pFWxuU9dw" name="CardiacRhythmEffectiveTime" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2OacdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2Q2sNOaEeKU4pFWxuU9dw" name="CardiacRhythmMoodCode" constrainedElement="_uMxJUIzpEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2Q2sdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_unG78IzpEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_RNfAcIzyEeGnhceUMXltng" name="GlasgowComaScoreOrganizer">
      <ownedRule xmi:id="_i8Z2gNOaEeKU4pFWxuU9dw" name="GlasgowComaScoreOrganizerGlasgowEye" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8Z2gdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowEye))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8cSwNOaEeKU4pFWxuU9dw" name="GlasgowComaScoreOrganizerGlasgowMotor" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8c50NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowMotor))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8fWENOaEeKU4pFWxuU9dw" name="GlasgowComaScoreOrganizerGlasgowQualifier" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8fWEdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowQualifier))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8hyUNOaEeKU4pFWxuU9dw" name="GlasgowComaScoreOrganizerGlasgowTotal" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8hyUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowTotal))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_i8kOkNOaEeKU4pFWxuU9dw" name="GlasgowComaScoreOrganizerGlasgowVerbal" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8k1oNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.component->one(component : cda::Component4 | not component.observation.oclIsUndefined() and component.observation.oclIsKindOf(emspcr::GlasgowVerbal))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2dD8NOaEeKU4pFWxuU9dw" name="GlasgowComaScoreOrganizerTemplateId" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2drANOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.170')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2guUNOaEeKU4pFWxuU9dw" name="GlasgowComaScoreOrganizerEffectiveTime" constrainedElement="_RNfAcIzyEeGnhceUMXltng">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2guUdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.effectiveTime.oclIsUndefined() or self.effectiveTime.isNullFlavorUndefined()) implies (not self.effectiveTime.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_SdkvUIzyEeGnhceUMXltng">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_B6aX4EbvEd6besF9iFIJkQ"/>
      </generalization>
      <ownedOperation xmi:id="_i8brsNOaEeKU4pFWxuU9dw" name="getGlasgowEye" isQuery="true" bodyCondition="_i8brs9OaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i8brs9OaEeKU4pFWxuU9dw" name="body" constrainedElement="_i8brsNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8brtNOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowEye))->asSequence()->any(true).oclAsType(emspcr::GlasgowEye)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i8brsdOaEeKU4pFWxuU9dw" type="_bxS9cIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i8brstOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i8eH8NOaEeKU4pFWxuU9dw" name="getGlasgowMotor" isQuery="true" bodyCondition="_i8evANOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i8evANOaEeKU4pFWxuU9dw" name="body" constrainedElement="_i8eH8NOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8evAdOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowMotor))->asSequence()->any(true).oclAsType(emspcr::GlasgowMotor)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i8eH8dOaEeKU4pFWxuU9dw" type="_eKfCYIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i8eH8tOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i8gkMNOaEeKU4pFWxuU9dw" name="getGlasgowQualifier" isQuery="true" bodyCondition="_i8hLQdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i8hLQdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_i8gkMNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8hLQtOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowQualifier))->asSequence()->any(true).oclAsType(emspcr::GlasgowQualifier)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i8gkMdOaEeKU4pFWxuU9dw" type="_ZLqX8IzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i8hLQNOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i8jAcNOaEeKU4pFWxuU9dw" name="getGlasgowTotal" isQuery="true" bodyCondition="_i8jngdOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i8jngdOaEeKU4pFWxuU9dw" name="body" constrainedElement="_i8jAcNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8jngtOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowTotal))->asSequence()->any(true).oclAsType(emspcr::GlasgowTotal)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i8jAcdOaEeKU4pFWxuU9dw" type="_WduLAIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i8jngNOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_i8mDwNOaEeKU4pFWxuU9dw" name="getGlasgowVerbal" isQuery="true" bodyCondition="_i8mq0NOaEeKU4pFWxuU9dw">
        <ownedRule xmi:id="_i8mq0NOaEeKU4pFWxuU9dw" name="body" constrainedElement="_i8mDwNOaEeKU4pFWxuU9dw">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_i8mq0dOaEeKU4pFWxuU9dw">
            <language>OCL</language>
            <body>self.getObservations()->select(observation : cda::Observation | not observation.oclIsUndefined() and observation.oclIsKindOf(emspcr::GlasgowVerbal))->asSequence()->any(true).oclAsType(emspcr::GlasgowVerbal)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_i8mDwdOaEeKU4pFWxuU9dw" type="_hLJ-EIzyEeGnhceUMXltng" direction="return">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_i8mDwtOaEeKU4pFWxuU9dw" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_k-cIsJ-ZEeGorI3CPDW2ww" name="ResponseBeginningOdometerReading">
      <ownedRule xmi:id="_j2kYsNOaEeKU4pFWxuU9dw" name="ResponseBeginningOdometerReadingTemplateId" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2kYsdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.171')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2rtcNOaEeKU4pFWxuU9dw" name="ResponseBeginningOdometerReadingCodeP" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2rtcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2ncANOaEeKU4pFWxuU9dw" name="ResponseBeginningOdometerReadingCode" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2oDENOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67484-6' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2vX0NOaEeKU4pFWxuU9dw" name="ResponseBeginningOdometerReadingValue" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2vX0dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2ybINOaEeKU4pFWxuU9dw" name="ResponseBeginningOdometerReadingMoodCode" constrainedElement="_k-cIsJ-ZEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j2ybIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_lfuQ0J-ZEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_ib1zpZ-aEeGorI3CPDW2ww" name="ResponseOnSceneOdometerReading">
      <ownedRule xmi:id="_j203YNOaEeKU4pFWxuU9dw" name="ResponseOnSceneOdometerReadingTemplateId" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j203YdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.172')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j28MINOaEeKU4pFWxuU9dw" name="ResponseOnSceneOdometerReadingCodeP" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j28MIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j24hwNOaEeKU4pFWxuU9dw" name="ResponseOnSceneOdometerReadingCode" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j24hwdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67485-3' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j2_2gNOaEeKU4pFWxuU9dw" name="ResponseOnSceneOdometerReadingValue" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3AdkNOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3Dg4NOaEeKU4pFWxuU9dw" name="ResponseOnSceneOdometerReadingMoodCode" constrainedElement="_ib1zpZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3Dg4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_ib1zp5-aEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_7kghNZ-aEeGorI3CPDW2ww" name="ResponseDestinationOdometerReading">
      <ownedRule xmi:id="_j3FWENOaEeKU4pFWxuU9dw" name="ResponseDestinationOdometerReadingTemplateId" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3F9INOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.173')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3NR4NOaEeKU4pFWxuU9dw" name="ResponseDestinationOdometerReadingCodeP" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3NR4dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3JAcNOaEeKU4pFWxuU9dw" name="ResponseDestinationOdometerReadingCode" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3JAcdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67486-1' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3Q8QNOaEeKU4pFWxuU9dw" name="ResponseDestinationOdometerReadingValue" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3Q8QdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3T_kNOaEeKU4pFWxuU9dw" name="ResponseDestinationOdometerReadingMoodCode" constrainedElement="_7kghNZ-aEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3T_kdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_7kghN5-aEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_TCM6tZ-bEeGorI3CPDW2ww" name="ResponseEndingOdometerReading">
      <ownedRule xmi:id="_j3V0wNOaEeKU4pFWxuU9dw" name="ResponseEndingOdometerReadingTemplateId" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3Wb0NOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '2.16.840.1.1133883.17.3.10.1.174')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3dwkNOaEeKU4pFWxuU9dw" name="ResponseEndingOdometerReadingCodeP" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3dwkdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined())</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3ZfINOaEeKU4pFWxuU9dw" name="ResponseEndingOdometerReadingCode" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3ZfIdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.code.oclIsUndefined() or self.code.isNullFlavorUndefined()) implies (not self.code.oclIsUndefined() and self.code.oclIsKindOf(datatypes::CD) and &#xD;
let value : datatypes::CD = self.code.oclAsType(datatypes::CD) in &#xD;
value.code = '67487-9' and value.codeSystem = '2.16.840.1.113883.6.1')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3ha8NOaEeKU4pFWxuU9dw" name="ResponseEndingOdometerReadingValue" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3ha8dOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>(self.value->isEmpty() or self.value->exists(element | element.isNullFlavorUndefined())) implies (self.value->size() = 1 and self.value->forAll(element | element.oclIsTypeOf(datatypes::PQ)))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_j3keQNOaEeKU4pFWxuU9dw" name="ResponseEndingOdometerReadingMoodCode" constrainedElement="_TCM6tZ-bEeGorI3CPDW2ww">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_j3keQdOaEeKU4pFWxuU9dw">
          <language>OCL</language>
          <body>isDefined('moodCode')</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_TCM6t5-bEeGorI3CPDW2ww">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_bJyIQDxYEd6JwqSGecoePg"/>
      </generalization>
    </packagedElement>
    <profileApplication xmi:id="_xpUkQWeQEeGtXKebdWh3hg">
      <eAnnotations xmi:id="_xpUkQmeQEeGtXKebdWh3hg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_xpUkQ2eQEeGtXKebdWh3hg">
      <eAnnotations xmi:id="_xpUkRGeQEeGtXKebdWh3hg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_i0f3sNOaEeKU4pFWxuU9dw">
      <eAnnotations xmi:id="_i0f3sdOaEeKU4pFWxuU9dw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_xs1LQGeQEeGtXKebdWh3hg" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="emspcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/emspcr" packageName="emspcr" prefix="emspcr" base_Namespace="_xpUkQGeQEeGtXKebdWh3hg"/>
  <CDA:CDATemplate xmi:id="_xs3ngGeQEeGtXKebdWh3hg" base_Class="_xs1LQWeQEeGtXKebdWh3hg" templateId="2.16.840.1.113883.17.3.10.2" assigningAuthorityName=""/>
  <CDA:PropertyValidation xmi:id="_0IF3U2eREeGtXKebdWh3hg">
    <ruleId>CONF:5261</ruleId>
  </CDA:PropertyValidation>
  <CDA:PropertyValidation xmi:id="_0pgRkGetEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_NkgWkGeuEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_iLBHkGeuEeGtXKebdWh3hg"/>
  <CDA:PropertyValidation xmi:id="_TAlPsGlZEeG4boS-IbG8Zw"/>
  <CDA:PropertyValidation xmi:id="_TblwsGlZEeG4boS-IbG8Zw"/>
  <CDA:PropertyValidation xmi:id="_x7o9MGlaEeG4boS-IbG8Zw"/>
  <CDA:AssociationValidation xmi:id="_j-FAsGlbEeG4boS-IbG8Zw">
    <ruleId>CONF:10078</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_QfqDsGlcEeG4boS-IbG8Zw">
    <ruleId>CONF:10079</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_WJI_QGldEeG4boS-IbG8Zw" base_Class="_S-YTcGldEeG4boS-IbG8Zw" templateId="2.16.840.1.113883.17.3.10.1.5"/>
  <CDA:ValueSetConstraint xmi:id="_-lMo8HSCEeGa4IXs2ghZEw" identifier="2.16.840.1.113883.1.11.1" name="HL7 AdministrativeGenderCode"/>
  <CDA:CDATemplate xmi:id="_EFDesHSVEeGa4IXs2ghZEw" base_Class="_3dRe0HSUEeGa4IXs2ghZEw" templateId="2.16.840.1.113883.17.3.10.1.17"/>
  <CDA:PropertyValidation xmi:id="_djjwEns9EeGs2I-Db78R9w">
    <ruleId>CONF:5372</ruleId>
  </CDA:PropertyValidation>
  <CDA:ValueSetConstraint xmi:id="_djk-MHs9EeGs2I-Db78R9w">
    <reference href="../../org.openhealthtools.mdht.uml.cda.consol.model/model/consol-vocab.uml#_2SbZNRSVEeGGzu7fmW9pXw"/>
  </CDA:ValueSetConstraint>
  <CDA:PropertyValidation xmi:id="_-DZQw3tDEeGs2I-Db78R9w">
    <ruleId>CONF:9406</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_uyNtAHwEEeGW3cDolvqrTA" base_Class="_pIikMHwDEeGW3cDolvqrTA" templateId="2.16.840.1.113883.17.3.10.1.14"/>
  <CDA:CDATemplate xmi:id="_19lEcH9aEeGht55Sz1eBOw" base_Class="_i4C-AH9aEeGht55Sz1eBOw" templateId="2.16.840.1.113883.17.3.10.1.12"/>
  <CDA:CDATemplate xmi:id="_vwwq8H9cEeGht55Sz1eBOw" base_Class="_nSjIgH9cEeGht55Sz1eBOw" templateId="2.16.840.1.113883.17.3.10.1.13"/>
  <CDA:CDATemplate xmi:id="_1HUMgIzcEeGnhceUMXltng" base_Class="_VtMvAIzcEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.19"/>
  <CDA:CDATemplate xmi:id="_9vjNoIzcEeGnhceUMXltng" base_Class="_aDO5AIcnEeGqF6qfYwLiQw" templateId="2.16.840.1.113883.17.3.10.1.15"/>
  <CDA:CDATemplate xmi:id="_4-4sQIziEeGnhceUMXltng" base_Class="_1XH7YIziEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.22"/>
  <CDA:CDATemplate xmi:id="_LBR30JoiEeG_FLcaRgAa7g" base_Class="_6223oJohEeG_FLcaRgAa7g" templateId="2.16.840.1.113883.17.3.10.1.20"/>
  <CDA:CDATemplate xmi:id="_pLL-wJovEeG_FLcaRgAa7g" base_Class="_c7crcJovEeG_FLcaRgAa7g" templateId="2.16.840.1.113883.17.3.10.1.18"/>
  <CDA:CDATemplate xmi:id="_i8pMAJunEeGzXI65shd6Fw" base_Class="_4QFw8JumEeGzXI65shd6Fw" templateId="2.16.840.1.113883.17.3.10.1.21"/>
  <CDA:CDATemplate xmi:id="_bIdNwJ9nEeGw9ZRnaFfEZQ" base_Class="_OV4TIJ9nEeGw9ZRnaFfEZQ" templateId="2.16.840.1.113883.17.3.10.1.2"/>
  <CDA:CDATemplate xmi:id="_YpfO8J99EeGw9ZRnaFfEZQ" base_Class="_LI7M8J99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.113883.17.3.10.1.3"/>
  <CDA:CDATemplate xmi:id="_uS5Z0J-dEeGorI3CPDW2ww" base_Class="_i-lM8J-dEeGorI3CPDW2ww" templateId="2.16.840.1.113883.17.3.10.1.4"/>
  <CDA:CDATemplate xmi:id="_7_pEYJ-iEeGorI3CPDW2ww" base_Class="_iDmQYJ9mEeGw9ZRnaFfEZQ" templateId="2.16.840.1.113883.17.3.10.1.1"/>
  <CDA:CDATemplate xmi:id="_BeU6oJ-jEeGorI3CPDW2ww" base_Class="_jCzkkIzkEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.23"/>
  <CDA:CDATemplate xmi:id="_UM3A4J-kEeGorI3CPDW2ww" base_Class="_GGotEJ-kEeGorI3CPDW2ww" templateId="2.16.840.1.113883.17.3.10.1.6"/>
  <CDA:CDATemplate xmi:id="_eW46AJ-mEeGorI3CPDW2ww" base_Class="_aK7P4J-mEeGorI3CPDW2ww" templateId="2.16.840.1.113883.17.3.10.1.7"/>
  <CDA:CDATemplate xmi:id="_oGeIAKK3EeGOxth0BgV-QA" base_Class="_h3A8IKK3EeGOxth0BgV-QA" templateId="2.16.840.1.113883.17.3.10.1.8"/>
  <CDA:CDATemplate xmi:id="_34FNUKK8EeGOxth0BgV-QA" base_Class="_olqMIKK8EeGOxth0BgV-QA" templateId="2.16.840.1.113883.17.3.10.1.9"/>
  <CDA:PropertyValidation xmi:id="_0bvFMKhBEeG79fAvHk6H4g" severity="WARNING"/>
  <CDA:CDATemplate xmi:id="_HtwEIKxCEeGLnrdLmr5TaQ" base_Class="_ClVY0KxCEeGLnrdLmr5TaQ" templateId="2.16.840.1.113883.17.3.10.1.10"/>
  <CDA:PropertyValidation xmi:id="_pu1gUMHtEeGOXu0EprM3pw">
    <ruleId>CONF:10869</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_yQRV4MHtEeGOXu0EprM3pw" templateId="2.16.840.1.1133883.17.3.10.1.24" assigningAuthorityName="NEMSIS"/>
  <CDA:AssociationValidation xmi:id="_ZLZtwMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10083</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ZndXoMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10089</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oEqchcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10256</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2iuzIMH5EeGOXu0EprM3pw">
    <ruleId>CONF:10833</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_GV2tpcH6EeGOXu0EprM3pw">
    <ruleId>CONF:10246</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_hEsHwMH6EeGOXu0EprM3pw">
    <ruleId>CONF:10791</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_iyCaZcH6EeGOXu0EprM3pw">
    <ruleId>CONF:10800</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_k-MI5cH6EeGOXu0EprM3pw">
    <ruleId>CONF:10815</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_p0Fg1cH6EeGOXu0EprM3pw">
    <ruleId>CONF:10795</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_sW_idcH6EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10767</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_yFAYtMH7EeGOXu0EprM3pw">
    <ruleId>CONF:10137</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LJi0NMH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10562</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MDkMdMH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10567</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_kuzXJcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10663</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_lnVhpcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10667</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_m84YRcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10672</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rkQzFcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10682</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_tSqOlcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10692</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wESotcH8EeGOXu0EprM3pw">
    <ruleId>CONF:10687</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_08REQMH8EeGOXu0EprM3pw">
    <ruleId>CONF:10677</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Tk-dhMH-EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10444</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fgB6RcH-EeGOXu0EprM3pw">
    <ruleId>CONF:10704</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_gGtfxcH-EeGOXu0EprM3pw">
    <ruleId>CONF:10708</ruleId>
  </CDA:AssociationValidation>
  <CDA:ConformsTo xmi:id="_-U6TQMF7EeGgQc6fI_Esjg" base_Generalization="_17RuAJ99EeGw9ZRnaFfEZQ">
    <ruleId>CONF:10582</ruleId>
  </CDA:ConformsTo>
  <CDA:AssociationValidation xmi:id="_cFsE5cH_EeGOXu0EprM3pw">
    <ruleId>CONF:10581</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_eZ3uBcH_EeGOXu0EprM3pw">
    <ruleId>CONF:10625</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fnFIBcH_EeGOXu0EprM3pw">
    <ruleId>CONF:10646</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Dcu8tcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10740</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Fkaa4MIAEeGOXu0EprM3pw">
    <ruleId>CONF:10748</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Q0x74MIAEeGOXu0EprM3pw">
    <ruleId>CONF:10717</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_SsZk1cIAEeGOXu0EprM3pw">
    <ruleId>CONF:10727</ruleId>
  </CDA:AssociationValidation>
  <CDA:PropertyValidation xmi:id="_3PX-IJoiEeG_FLcaRgAa7g">
    <ruleId>CONF:10347</ruleId>
  </CDA:PropertyValidation>
  <CDA:AssociationValidation xmi:id="_kFhMxcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10346</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_lAJB8MIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10417</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_mH2Q4MIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10422</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_nimXpcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10426</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oaiFNMIAEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10430</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_pZK3tcIAEeGOXu0EprM3pw">
    <ruleId>CONF:10434</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1xTAQMcJEeGjDJAyT0XW9Q">
    <ruleId>CONF:10211</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_o9Dm0McLEeGjDJAyT0XW9Q">
    <ruleId>CONF:10223</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1ws4cMcLEeGjDJAyT0XW9Q">
    <ruleId>CONF:10226</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_AzzZgMcMEeGjDJAyT0XW9Q" severity="INFO">
    <ruleId>CONF:10229</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_oGU2UMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10105</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rbYtoMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10113</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_tClU8McPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10116</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_vkEaQMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10119</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_xmj2cMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10122</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_y7-xQMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10125</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_0eLj0McPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10128</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2uXdwMcPEeGjDJAyT0XW9Q">
    <ruleId>CONF:10131</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_SD3AgMcWEeGjDJAyT0XW9Q">
    <ruleId>CONF:10805</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XSxVYMcWEeGjDJAyT0XW9Q" severity="INFO">
    <ruleId>CONF:10810</ruleId>
  </CDA:AssociationValidation>
  <CDA:CDATemplate xmi:id="_HAbYwClBEeKLlLf58wNPLQ" base_Class="_xCcE0Iy7EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.98"/>
  <CDA:AssociationValidation xmi:id="_JU580ClBEeKLlLf58wNPLQ"/>
  <CDA:AssociationValidation xmi:id="_o4WhUCpFEeK1vdrMJapHMg"/>
  <CDA:AssociationValidation xmi:id="_qbdS0CpFEeK1vdrMJapHMg"/>
  <CDA:AssociationValidation xmi:id="_blUNsDZpEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_oLbZoDZpEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_ZlnNgDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_abZmADZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_cDm58DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_dpWIsDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_eTpp8DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_e_yXMDZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_fpGZ8DZuEeKLbZOfNmD-hA"/>
  <CDA:AssociationValidation xmi:id="_gTy8wDZuEeKLbZOfNmD-hA"/>
  <CDA:CDATemplate xmi:id="_v3VFQETWEeKEm6ZghGGtvw" base_Class="_Orea4IzrEeGnhceUMXltng" templateId="2.16.840.1.113883.17.3.10.1.23.1"/>
  <CDA:AssociationValidation xmi:id="_oj1QMETbEeKEm6ZghGGtvw" severity="INFO"/>
  <CDA:AssociationValidation xmi:id="_l9si8Fg4EeK-i8RB1gvLUA" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_vXaGAMcJEeGjDJAyT0XW9Q">
    <ruleId>CONF:10205</ruleId>
  </CDA:PropertyValidation>
  <CDA:CodeSystemConstraint xmi:id="_uaz1sMcbEeGjDJAyT0XW9Q" code="67850-8" displayName="Drug allergy">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_3-cwsCWrEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:10206</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:CodeSystemConstraint xmi:id="_l3drEIzEEeGnhceUMXltng" code="106190000" displayName="allergy">
    <reference href="../../org.openhealthtools.mdht.uml.term.models/model/CodeSystems.uml#_ya6aMCWsEd-iTYfpNb4PkQ"/>
    <ruleId>CONF:10207</ruleId>
  </CDA:CodeSystemConstraint>
  <CDA:PropertyValidation xmi:id="_Hok2AFtWEeKHUos6g4FwAg" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_K5wT8IjqEeKx3P4dlW9OSw" severity="INFO">
    <ruleId>CONF:7304</ruleId>
  </CDA:PropertyValidation>
  <CDA:CDATemplate xmi:id="_Au9-IIjuEeKx3P4dlW9OSw" base_Class="_koRz8IzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.176"/>
  <CDA:CDATemplate xmi:id="_DkbvYIjuEeKx3P4dlW9OSw" base_Class="_01XGkIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.177"/>
  <CDA:ConformsTo xmi:id="_Hwu7QIjvEeKx3P4dlW9OSw" severity="INFO" base_Generalization="_1HuB4IzsEeGnhceUMXltng"/>
  <CDA:AssociationValidation xmi:id="_UXD80LMkEeKNbt70lHd2Eg"/>
  <CDA:AssociationValidation xmi:id="_Y-A50LMkEeKNbt70lHd2Eg" severity="INFO"/>
  <CDA:PropertyValidation xmi:id="_GE89K8OxEeKN86BM1f2PZA"/>
  <CDA:AssociationValidation xmi:id="_BTWusMO0EeKGkaWx5djLmw" severity="INFO"/>
  <CDA:CDATemplate xmi:id="_glO-wETXEeKEm6ZghGGtvw" base_Class="_GGe8UJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.178"/>
  <CDA:CDATemplate xmi:id="_pTz4cETXEeKEm6ZghGGtvw" base_Class="_bFfQYJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.180"/>
  <CDA:AssociationValidation xmi:id="_BlWooMWsEeK3RfDsHamIUQ"/>
  <CDA:AssociationValidation xmi:id="_c_2E0MlPEeK2gbjCtOEivw"/>
  <CDA:CDATemplate xmi:id="_IqZVstICEeKRzPZKi7WbBQ" base_Class="_Qlqj8HwGEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.27" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVtdICEeKRzPZKi7WbBQ" base_Class="_JnfD8IzoEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.28" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVuNICEeKRzPZKi7WbBQ" base_Class="_Dq57UIzpEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.29" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVu9ICEeKRzPZKi7WbBQ" base_Class="_F-GKoLMNEeKNbt70lHd2Eg" templateId="2.16.840.1.1133883.17.3.10.1.30" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVvtICEeKRzPZKi7WbBQ" base_Class="_Dfaa4J-eEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.31" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVwdICEeKRzPZKi7WbBQ" base_Class="_j3YnxZ-eEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.32" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVxNICEeKRzPZKi7WbBQ" base_Class="_nv-0gp-fEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.33" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVx9ICEeKRzPZKi7WbBQ" base_Class="_EagUtZ-fEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.34" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVytICEeKRzPZKi7WbBQ" base_Class="_cm1D5Z-hEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.35" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZVzdICEeKRzPZKi7WbBQ" base_Class="_083apZ-hEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.36" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV0NICEeKRzPZKi7WbBQ" base_Class="_Q4zL9Z-gEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.37" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV09ICEeKRzPZKi7WbBQ" base_Class="_1u74sKxCEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.38" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV1tICEeKRzPZKi7WbBQ" base_Class="_JKerYKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.39" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV2dICEeKRzPZKi7WbBQ" base_Class="_UyaX0KxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.40" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV3NICEeKRzPZKi7WbBQ" base_Class="_iGh5QKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.41" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV39ICEeKRzPZKi7WbBQ" base_Class="_yt7JUKxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.42" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV4tICEeKRzPZKi7WbBQ" base_Class="_6w124KxDEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.43" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV5dICEeKRzPZKi7WbBQ" base_Class="_DaIA4KxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.44" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV6NICEeKRzPZKi7WbBQ" base_Class="_KrhK4KxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.45" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV69ICEeKRzPZKi7WbBQ" base_Class="_UFgZEKxEEeGLnrdLmr5TaQ" templateId="2.16.840.1.1133883.17.3.10.1.46" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV7tICEeKRzPZKi7WbBQ" base_Class="_xCcE0Iy7EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.47" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV8dICEeKRzPZKi7WbBQ" base_Class="_3C3WwMWqEeK3RfDsHamIUQ" templateId="2.16.840.1.1133883.17.3.10.1.48" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV9NICEeKRzPZKi7WbBQ" base_Class="_CFApcIzGEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.49" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV99ICEeKRzPZKi7WbBQ" base_Class="_KEFo8HSVEeGa4IXs2ghZEw" templateId="2.16.840.1.1133883.17.3.10.1.50" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV-tICEeKRzPZKi7WbBQ" base_Class="_aS16EHSWEeGa4IXs2ghZEw" templateId="2.16.840.1.1133883.17.3.10.1.51" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZV_dICEeKRzPZKi7WbBQ" base_Class="_lTHsIIcXEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.52" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWANICEeKRzPZKi7WbBQ" base_Class="_vuraIIcZEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.53" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWA9ICEeKRzPZKi7WbBQ" base_Class="_nvhVwIcaEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.54" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWBtICEeKRzPZKi7WbBQ" base_Class="_zMwjMIccEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.55" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWCdICEeKRzPZKi7WbBQ" base_Class="_bsVJUIcdEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.56" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWDNICEeKRzPZKi7WbBQ" base_Class="_2lRhsIcdEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.57" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWD9ICEeKRzPZKi7WbBQ" base_Class="_auKbcIceEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.58" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWEtICEeKRzPZKi7WbBQ" base_Class="_wKL4IIceEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.59" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWFdICEeKRzPZKi7WbBQ" base_Class="_W_uRYIzdEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.60" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWGNICEeKRzPZKi7WbBQ" base_Class="_5XgZ4IzdEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.61" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWG9ICEeKRzPZKi7WbBQ" base_Class="_HLO9kIzgEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.62" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWHtICEeKRzPZKi7WbBQ" base_Class="_KEZzkKg-EeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.63" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWIdICEeKRzPZKi7WbBQ" base_Class="_7nP0MKhCEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.64" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWJNICEeKRzPZKi7WbBQ" base_Class="_0C-8EKhDEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.65" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWJ9ICEeKRzPZKi7WbBQ" base_Class="_KOxo0KhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.66" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWKtICEeKRzPZKi7WbBQ" base_Class="_g5iJgKhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.67" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWLdICEeKRzPZKi7WbBQ" base_Class="_0mPksKhEEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.68" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWMNICEeKRzPZKi7WbBQ" base_Class="_NZgqAKhFEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.69" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWM9ICEeKRzPZKi7WbBQ" base_Class="_Mr964IzjEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.70" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWNtICEeKRzPZKi7WbBQ" base_Class="_oJHzkIzjEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.71" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWOdICEeKRzPZKi7WbBQ" base_Class="_5JQlAJovEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.72" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWPNICEeKRzPZKi7WbBQ" base_Class="_46UUAJ9nEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.73" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWP9ICEeKRzPZKi7WbBQ" base_Class="__LltsJ97EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.74" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWQtICEeKRzPZKi7WbBQ" base_Class="_sUm-oIcnEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.75" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWRdICEeKRzPZKi7WbBQ" base_Class="_RZqlsIcoEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.76" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWSNICEeKRzPZKi7WbBQ" base_Class="_mwn8MIcoEeGqF6qfYwLiQw" templateId="2.16.840.1.1133883.17.3.10.1.77" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWS9ICEeKRzPZKi7WbBQ" base_Class="_zbYvIJoiEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.78" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWTtICEeKRzPZKi7WbBQ" base_Class="_sW8QcJosEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.79" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWUdICEeKRzPZKi7WbBQ" base_Class="_S1I0sJotEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.80" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWVNICEeKRzPZKi7WbBQ" base_Class="_rhjrIJotEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.81" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWV9ICEeKRzPZKi7WbBQ" base_Class="_HuCH8JouEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.82" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWWtICEeKRzPZKi7WbBQ" base_Class="_qlUP4JouEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.83" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWXdICEeKRzPZKi7WbBQ" base_Class="_Ox86UKK4EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.84" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWYNICEeKRzPZKi7WbBQ" base_Class="_JNrkAKK5EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.85" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWY9ICEeKRzPZKi7WbBQ" base_Class="_wPLCkKK5EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.86" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWZtICEeKRzPZKi7WbBQ" base_Class="_E-SEAKK8EeGOxth0BgV-QA" templateId="2.16.840.1.1133883.17.3.10.1.87" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWadICEeKRzPZKi7WbBQ" base_Class="_ayUKMMk3EeK2gbjCtOEivw" templateId="2.16.840.1.1133883.17.3.10.1.88" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWbNICEeKRzPZKi7WbBQ" base_Class="_p4XEAJ-kEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.89" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWb9ICEeKRzPZKi7WbBQ" base_Class="_gU4tMJ-lEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.90" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWctICEeKRzPZKi7WbBQ" base_Class="_rNkl4GleEeG4boS-IbG8Zw" templateId="2.16.840.1.1133883.17.3.10.1.91" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWddICEeKRzPZKi7WbBQ" base_Class="_To2-YGleEeG4boS-IbG8Zw" templateId="2.16.840.1.1133883.17.3.10.1.92" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWeNICEeKRzPZKi7WbBQ" base_Class="_rDpggp-mEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.93" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWe9ICEeKRzPZKi7WbBQ" base_Class="_n-zaBZ-nEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.94" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWftICEeKRzPZKi7WbBQ" base_Class="_0padgJ99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.95" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWgdICEeKRzPZKi7WbBQ" base_Class="_MiN-UJ-BEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.96" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWhNICEeKRzPZKi7WbBQ" base_Class="_yVviAJ-OEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.97" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_IqZWh9ICEeKRzPZKi7WbBQ" base_Class="_l_V6IJ-bEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.98" assigningAuthorityName="NEMSIS"/>
  <CDA:AssociationValidation xmi:id="_yi4e8MHkEeGspaMtPNX3NA">
    <ruleId>CONF:10081</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_VesLcMHuEeGOXu0EprM3pw">
    <ruleId>CONF:10082</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ojtiRcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10198</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_pM63VcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10199</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_p4qjBcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10136</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_q0w-5cHzEeGOXu0EprM3pw">
    <ruleId>CONF:10220</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rJl_ZcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10221</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_rgp0hcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10222</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_soEIhcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10560</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_s_kplcHzEeGOXu0EprM3pw">
    <ruleId>CONF:10561</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_uSS1tcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10656</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_u7NP1cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10657</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wIap1cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10658</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_wvi7RcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10659</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_xhO25cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10660</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_zJ-WVcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10095</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_zZTLxcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10096</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_znR9ZcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10097</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_z28KBcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10098</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_0xftxcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10099</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1F4CVcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10100</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1YBiRcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10101</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_1tSAlcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10102</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2CyWhcHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10103</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_2Xmv9cHzEeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10104</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_BqfcoMH4EeGOXu0EprM3pw">
    <ruleId>CONF:10255</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_DpAXxcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10244</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_H0NM5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10832</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LDJ1JcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10759</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_LofW1cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10761</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_L8cNlcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10762</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MLUXFcH4EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10763</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Mb04RcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10764</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_MwEC5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10765</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_NBUyBcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10766</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ODYE5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10736</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_OqDqZcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10738</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_PjoWtcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10577</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_TIJmVcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10578</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Tq0OhcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10579</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_UGxxwMH4EeGOXu0EprM3pw">
    <ruleId>CONF:10580</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_U-IQhcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10714</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Vljc5cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10716</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XbNW9cH4EeGOXu0EprM3pw">
    <ruleId>CONF:10340</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_XpMIlcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10341</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_X2SJZcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10342</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YEasBcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10343</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YUoSRcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10344</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_YlcVdcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10345</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_ZJ5GVcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10702</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_Zd-f9cH4EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10703</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_atHzpcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10062</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_a-YixcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10063</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_biripcH4EeGOXu0EprM3pw">
    <ruleId>CONF:10443</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_fpb_1cH8EeGOXu0EprM3pw" severity="INFO">
    <ruleId>CONF:10661</ruleId>
  </CDA:AssociationValidation>
  <CDA:AssociationValidation xmi:id="_gBvvkMlPEeK2gbjCtOEivw"/>
  <CDA:CDATemplate xmi:id="_X2C4wJusEeGzXI65shd6Fw" base_Class="_K8JK8JuoEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.98"/>
  <CDA:CDATemplate xmi:id="_tffVAJ0uEeGmCMENP40rhA" base_Class="_lVl1sJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.179"/>
  <CDA:CDATemplate xmi:id="_t4AbcJ4aEeGzbp5zEFWdWg" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg" templateId="2.16.840.1.1133883.17.3.10.1.175"/>
  <CDA:CDATemplate xmi:id="_5wW8wIzzEeGnhceUMXltng" base_Class="_eKfCYIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.176"/>
  <CDA:CDATemplate xmi:id="_sP30sNOUEeKU4pFWxuU9dw" base_Class="_iWVVYIy-EeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.102" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30sdOUEeKU4pFWxuU9dw" base_Class="_t_nG0IzYEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.103" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30stOUEeKU4pFWxuU9dw" base_Class="_UleZUIzZEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.104" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30s9OUEeKU4pFWxuU9dw" base_Class="_E9ekgJoxEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.105" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30tNOUEeKU4pFWxuU9dw" base_Class="_j9MusJsmEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.106" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30tdOUEeKU4pFWxuU9dw" base_Class="_Qzy_cJsnEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.107" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ttOUEeKU4pFWxuU9dw" base_Class="_pVW0QJsoEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.108" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30t9OUEeKU4pFWxuU9dw" base_Class="_GGe8UJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.109" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30uNOUEeKU4pFWxuU9dw" base_Class="_whTHIJojEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.110" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30udOUEeKU4pFWxuU9dw" base_Class="_bFfQYJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.111" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30utOUEeKU4pFWxuU9dw" base_Class="_QU_s0JolEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.112" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30u9OUEeKU4pFWxuU9dw" base_Class="_6VcsUJokEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.113" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30vNOUEeKU4pFWxuU9dw" base_Class="_oE3bcJolEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.114" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30vdOUEeKU4pFWxuU9dw" base_Class="_CiNc8JomEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.115" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30vtOUEeKU4pFWxuU9dw" base_Class="_Zjp_UJomEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.116" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30v9OUEeKU4pFWxuU9dw" base_Class="_WMI_AJooEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.117" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30wNOUEeKU4pFWxuU9dw" base_Class="_O7rMoJopEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.118" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30wdOUEeKU4pFWxuU9dw" base_Class="_pgmc0JopEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.119" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30wtOUEeKU4pFWxuU9dw" base_Class="_NK7yUJoqEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.120" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30w9OUEeKU4pFWxuU9dw" base_Class="_rsLuIJoqEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.121" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30xNOUEeKU4pFWxuU9dw" base_Class="_EyfEMJorEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.122" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30xdOUEeKU4pFWxuU9dw" base_Class="_A65pUHwIEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.123" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30xtOUEeKU4pFWxuU9dw" base_Class="_tcPw4HwKEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.124" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30x9OUEeKU4pFWxuU9dw" base_Class="_QFoU0HwNEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.125" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30yNOUEeKU4pFWxuU9dw" base_Class="_qsAEkHwPEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.126" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ydOUEeKU4pFWxuU9dw" base_Class="_Ia0ocHwREeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.127" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ytOUEeKU4pFWxuU9dw" base_Class="_gnLCQHwSEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.128" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30y9OUEeKU4pFWxuU9dw" base_Class="_khXxgHwTEeGW3cDolvqrTA" templateId="2.16.840.1.1133883.17.3.10.1.129" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30zNOUEeKU4pFWxuU9dw" base_Class="_edpw0JuqEeGzXI65shd6Fw" templateId="2.16.840.1.1133883.17.3.10.1.130" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30zdOUEeKU4pFWxuU9dw" base_Class="_0IBaIJ0sEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.131" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30ztOUEeKU4pFWxuU9dw" base_Class="_iZg7kJ0tEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.132" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30z9OUEeKU4pFWxuU9dw" base_Class="_D32TkJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.133" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP300NOUEeKU4pFWxuU9dw" base_Class="_lVl1sJ0uEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.134" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP300dOUEeKU4pFWxuU9dw" base_Class="_Z3nhEJ0vEeGmCMENP40rhA" templateId="2.16.840.1.1133883.17.3.10.1.135" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP300tOUEeKU4pFWxuU9dw" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg" templateId="2.16.840.1.1133883.17.3.10.1.136" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3009OUEeKU4pFWxuU9dw" base_Class="_N8t6kFhWEeK-i8RB1gvLUA" templateId="2.16.840.1.1133883.17.3.10.1.137" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP301NOUEeKU4pFWxuU9dw" base_Class="_4ZsacKg_EeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.138" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP301dOUEeKU4pFWxuU9dw" base_Class="_g93MsKhAEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.139" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP301tOUEeKU4pFWxuU9dw" base_Class="_YMy4UKhDEeG79fAvHk6H4g" templateId="2.16.840.1.1133883.17.3.10.1.140" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3019OUEeKU4pFWxuU9dw" base_Class="_gBOGYJorEeG_FLcaRgAa7g" templateId="2.16.840.1.1133883.17.3.10.1.141" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP302NOUEeKU4pFWxuU9dw" base_Class="_n1J2EIzgEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.142" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP302dOUEeKU4pFWxuU9dw" base_Class="_Orea4IzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.143" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP302tOUEeKU4pFWxuU9dw" base_Class="_l4xA4IzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.144" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3029OUEeKU4pFWxuU9dw" base_Class="__qJ7UIzrEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.145" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP303NOUEeKU4pFWxuU9dw" base_Class="_Q7VIMIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.146" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP303dOUEeKU4pFWxuU9dw" base_Class="_koRz8IzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.147" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP303tOUEeKU4pFWxuU9dw" base_Class="_01XGkIzsEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.148" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3039OUEeKU4pFWxuU9dw" base_Class="_MjD2kJ-nEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.149" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP304NOUEeKU4pFWxuU9dw" base_Class="_lC10cJ-BEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.150" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP304dOUEeKU4pFWxuU9dw" base_Class="_sPMP9p-NEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.151" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP304tOUEeKU4pFWxuU9dw" base_Class="_UGLMFZ-OEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.152" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3049OUEeKU4pFWxuU9dw" base_Class="_9i0HIJ99EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.153" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP305NOUEeKU4pFWxuU9dw" base_Class="_pCK4JZ9-EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.154" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP305dOUEeKU4pFWxuU9dw" base_Class="_Vo79JZ9_EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.155" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP305tOUEeKU4pFWxuU9dw" base_Class="_4qwhJZ9_EeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.156" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3059OUEeKU4pFWxuU9dw" base_Class="_e7LIFZ-AEeGw9ZRnaFfEZQ" templateId="2.16.840.1.1133883.17.3.10.1.157" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP306NOUEeKU4pFWxuU9dw" base_Class="_WduLAIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.158" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP306dOUEeKU4pFWxuU9dw" base_Class="_ZLqX8IzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.159" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP306tOUEeKU4pFWxuU9dw" base_Class="_bxS9cIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.160" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3069OUEeKU4pFWxuU9dw" base_Class="_eKfCYIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.161" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP307NOUEeKU4pFWxuU9dw" base_Class="_hLJ-EIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.162" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP307dOUEeKU4pFWxuU9dw" base_Class="_9koR4IzuEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.163" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP307tOUEeKU4pFWxuU9dw" base_Class="_lnVLQIzuEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.164" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3079OUEeKU4pFWxuU9dw" base_Class="_xgaHgIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.165" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP308NOUEeKU4pFWxuU9dw" base_Class="_jmDsgIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.166" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP308dOUEeKU4pFWxuU9dw" base_Class="_WFit0IztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.167" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP308tOUEeKU4pFWxuU9dw" base_Class="_IU2lIIztEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.168" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3089OUEeKU4pFWxuU9dw" base_Class="_uMxJUIzpEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.169" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP309NOUEeKU4pFWxuU9dw" base_Class="_RNfAcIzyEeGnhceUMXltng" templateId="2.16.840.1.1133883.17.3.10.1.170" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP309dOUEeKU4pFWxuU9dw" base_Class="_k-cIsJ-ZEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.171" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP309tOUEeKU4pFWxuU9dw" base_Class="_ib1zpZ-aEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.172" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP3099OUEeKU4pFWxuU9dw" base_Class="_7kghNZ-aEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.173" assigningAuthorityName="NEMSIS"/>
  <CDA:CDATemplate xmi:id="_sP30-NOUEeKU4pFWxuU9dw" base_Class="_TCM6tZ-bEeGorI3CPDW2ww" templateId="2.16.840.1.1133883.17.3.10.1.174" assigningAuthorityName="NEMSIS"/>
  <Ecore:EPackage xmi:id="_i2GaMNOaEeKU4pFWxuU9dw" base_Package="_xpUkQGeQEeGtXKebdWh3hg" packageName="emspcr" nsPrefix="emspcr" nsURI="http://www.openhealthtools.org/mdht/uml/cda/emspcr" basePackage="org.openhealthtools.mdht.uml.cda" prefix="emspcr">
    <annotation>http://www.openhealthtools.org/mdht/uml initializers='org.openhealthtools.mdht.uml.cda.emspcr'</annotation>
  </Ecore:EPackage>
  <CDA:ConformsTo xmi:id="_i2I2cNOaEeKU4pFWxuU9dw" base_Generalization="_xs3ngWeQEeGtXKebdWh3hg"/>
  <Ecore:EClass xmi:id="_i2KEkNOaEeKU4pFWxuU9dw" base_Class="_xs1LQWeQEeGtXKebdWh3hg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientCareReportTemplateId PatientCareReportClassCode PatientCareReportMoodCode PatientCareReportCode PatientCareReportCodeP PatientCareReportTitle PatientCareReportId PatientCareReportConfidentialityCode PatientCareReportRecordTarget PatientCareReportBilling PatientCareReportCurrentMedication PatientCareReportAllergiesAndAdverseReactionsSection PatientCareReportPastMedicalHistory PatientCareReportSocialHistory PatientCareReportPhysicalAssessmentSection PatientCareReportProceduresPerformedSection PatientCareReportPatientCareNarrative PatientCareReportSceneSection PatientCareReportComponentOf PatientCareReportDispatchSection PatientCareReportPersonnelAdverseEventSection PatientCareReportProtocolSection PatientCareReportResponseSection PatientCareReportSituationSection PatientCareReportVitalSignsSection PatientCareReportCustodian PatientCareReportDocumentationOf PatientCareReportRelatedDocument PatientCareReportParticipant PatientCareReportInjuryIncidentDescriptionSection' templateId.root='2.16.840.1.113883.17.3.10.2' classCode='DOCCLIN' moodCode='EVN' code.code='67796-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Patient Care Report' constraints.validation.dependOn.PatientCareReportCode='PatientCareReportCodeP' title.mixed='EMS Patient Care Report' constraints.validation.info='PatientCareReportVersionNumber PatientCareReportCardiacArrestEvent PatientCareReportMedicationsAdministeredSection PatientCareReportDispositionSection PatientCareReportTimesSection' confidentialityCode.codeSystem='2.16.840.1.113883.5.25' confidentialityCode.codeSystemName='ConfidentialityCode' constraints.validation.warning='PatientCareReportAdvanceDirectives PatientCareReportAuthorParticipation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTarget constraints.validation.error='RecordTargetPatientRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTargetPatientRole constraints.validation.error='PatientRoleAddr PatientRoleId PatientRolePatient'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportRecordTargetPatientRolePatient constraints.validation.warning='PatientBirthTime' constraints.validation.error='PatientName PatientAdministrativeGenderCode PatientAdministrativeGenderCodeP' administrativeGenderCode.codeSystem='2.16.840.1.113883.5.1' administrativeGenderCode.codeSystemName='AdministrativeGenderCode' constraints.validation.dependOn.PatientAdministrativeGenderCode='PatientAdministrativeGenderCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipation constraints.validation.error='AuthorParticipationAuthorRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRole constraints.validation.error='AuthorRoleId AuthorRoleAddr AuthorRoleTelecom AuthorRoleHumanAuthor AuthorRoleAuthoringDevice'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRoleHumanAuthor constraints.validation.error='HumanAuthorName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportAuthorParticipationAuthorRoleAuthoringDevice constraints.validation.error='AuthoringDeviceManufacturerModelName AuthoringDeviceSoftwareName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationship typeCode='COMP' constraints.validation.error='EncompassingEncounterRelationshipTypeCode EncompassingEncounterRelationshipEncompassingEncounter'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounter constraints.validation.error='EncompassingEncounterEffectiveTime'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocation constraints.validation.error='LocationHealthCareFacility'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacility constraints.validation.error='HealthCareFacilityId HealthCareFacilityCode HealthCareFacilityPlace' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportEncompassingEncounterRelationshipEncompassingEncounterLocationHealthCareFacilityPlace constraints.validation.info='PlaceName PlaceAddr' classCode='PLC' constraints.validation.error='PlaceClassCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipation constraints.validation.error='CustodianParticipationCustodianRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipationCustodianRole constraints.validation.error='CustodianRoleCustodian'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportCustodianParticipationCustodianRoleCustodian constraints.validation.error='CustodianAddr CustodianId CustodianName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipation constraints.validation.error='ServiceEventParticipationServiceEvent'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEvent code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='ServiceEventCode ServiceEventId ServiceEventPerformerParticipation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipation functionCode.codeSystem='2.16.840.1.113883.6.1' functionCode.codeSystemName='LOINC' constraints.validation.error='PerformerParticipationFunctionCode PerformerParticipationPerformerRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRole code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PerformerRoleCode PerformerRoleCodeP PerformerRoleId PerformerRoleAddr PerformerRoleTelecom PerformerRolePerformer'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportServiceEventParticipationServiceEventPerformerParticipationPerformerRolePerformer constraints.validation.error='PerformerName'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportParentDocumentRelationship typeCode='RPLC' constraints.validation.info='ParentDocumentRelationshipParentDocument'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportParentDocumentRelationshipParentDocument constraints.validation.error='ParentDocumentId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipation typeCode='DST' constraints.validation.error='DestinationParticipantParticipationTypeCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipationDestinationRole constraints.validation.warning='DestinationRoleAddr' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='DestinationRoleCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPatientCareReportDestinationParticipantParticipationDestinationRoleDestinationOrganization constraints.validation.error='DestinationOrganizationName'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i5MKcNOaEeKU4pFWxuU9dw" base_Class="_VtMvAIzcEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PastMedicalHistorySectionTemplateId PastMedicalHistorySectionCode PastMedicalHistorySectionCodeP PastMedicalHistorySectionTitle PastMedicalHistorySectionText PastMedicalHistorySectionExistenceOfHistoryOfCondition PastMedicalHistorySectionHistoryOfCondition PastMedicalHistorySectionHistoryOfProceduresOrganizer' templateId.root='2.16.840.1.113883.17.3.10.1.19' code.code='67842-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Past Medical History Section' title.mixed='EMS Past Medical History'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i5g6kNOaEeKU4pFWxuU9dw" base_Class="_S-YTcGldEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BillingSectionTemplateId BillingSectionCode BillingSectionTitle BillingSectionText BillingSectionBillingCondition BillingSectionLevelOfServiceObservation' templateId.root='2.16.840.1.113883.17.3.10.1.5' code.code='67659-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Billing Section' title.mixed='EMS Billing Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i5ynYNOaEeKU4pFWxuU9dw" base_Class="_3dRe0HSUEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryIncidentDescriptionSectionTemplateId InjuryIncidentDescriptionSectionCode InjuryIncidentDescriptionSectionTitle InjuryIncidentDescriptionSectionText InjuryIncidentDescriptionSectionInjuryCauseCategory InjuryIncidentDescriptionSectionInjuryMechanism InjuryIncidentDescriptionSectionTraumaCenterCriteria InjuryIncidentDescriptionSectionInjuryRiskFactor InjuryIncidentDescriptionSectionVehicleImpactArea InjuryIncidentDescriptionSectionPatientLocationInVehicle InjuryIncidentDescriptionSectionVehicleOccupantSafetyEquipment InjuryIncidentDescriptionSectionAirbagDeploymentStatus InjuryIncidentDescriptionSectionHeightOfFall InjuryIncidentDescriptionSectionDisasterType' templateId.root='2.16.840.1.113883.17.3.10.1.17' code.code='11374-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Injury Incident Description Section' title.mixed='Injury Incident Description Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i6JzwNOaEeKU4pFWxuU9dw" base_Class="_pIikMHwDEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestEventSectionTemplateId CardiacArrestEventSectionCode CardiacArrestEventSectionTitle CardiacArrestEventSectionText CardiacArrestEventSectionCardiacArrestExistence' templateId.root='2.16.840.1.113883.17.3.10.1.14' code.code='67799-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Cardiac Arrest Section' title.mixed='EMS Cardiac Arrest Event'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i6a5gNOaEeKU4pFWxuU9dw" base_Class="_Qlqj8HwGEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='CardiacArrestExistenceCardiacArrestCauseRelationship CardiacArrestExistenceCardiacArrestInformantParticipation CardiacArrestExistencePriorCPRRelationship CardiacArrestExistencePriorAEDRelationship CardiacArrestExistenceSpontaneousCirculationRelationship CardiacArrestExistenceDestinationRhythmRelationship CardiacArrestExistenceArrestRhythmRelationship' constraints.validation.error='CardiacArrestExistenceTemplateId CardiacArrestExistenceCode CardiacArrestExistenceValue CardiacArrestExistenceMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.27' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='ASSERTION' constraints.validation.warning='CardiacArrestExistenceEffectiveTime CardiacArrestExistenceNegationInd' value.code='410429000' value.codeSystem='2.16.840.1.113883.6.96' value.codeSystemName='SNOMEDCT' value.displayName='cardiac arrest' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceCardiacArrestTimingRelationship inversionInd='TRUE' constraints.validation.error='CardiacArrestTimingRelationshipInversionInd CardiacArrestTimingRelationshipTypeCode' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceCardiacArrestCauseRelationship constraints.validation.error='CardiacArrestCauseRelationshipCardiacArrestCause CardiacArrestCauseRelationshipInversionInd CardiacArrestCauseRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceCardiacArrestInformantParticipation constraints.validation.error='CardiacArrestInformantParticipationCardiacArrestInformantRole CardiacArrestInformantParticipationTypeCode' typeCode='INF'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceCardiacArrestInformantParticipationCardiacArrestInformantRole classCode='AGNT' constraints.validation.error='CardiacArrestInformantRoleClassCode CardiacArrestInformantRoleCode' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistencePriorCPRRelationship constraints.validation.error='PriorCPRRelationshipPriorCPR PriorCPRRelationshipInversionInd PriorCPRRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistencePriorAEDRelationship constraints.validation.error='PriorAEDRelationshipPriorAEDUse PriorAEDRelationshipInversionInd PriorAEDRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceArrestRhythmRelationship constraints.validation.error='ArrestRhythmRelationshipObservation ArrestRhythmRelationshipInversionInd ArrestRhythmRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceSpontaneousCirculationRelationship constraints.validation.error='SpontaneousCirculationRelationshipReturnOfSpontaneousCirculation SpontaneousCirculationRelationshipInversionInd SpontaneousCirculationRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacArrestExistenceDestinationRhythmRelationship constraints.validation.error='DestinationRhythmRelationshipDestinationRhythm DestinationRhythmRelationshipInversionInd DestinationRhythmRelationshipTypeCode' inversionInd='TRUE' typeCode='SUBJ'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i6kDcNOaEeKU4pFWxuU9dw" base_Class="_QFoU0HwNEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='PriorCPRPriorCPRProviderParticipation' constraints.validation.error='PriorCPRTemplateId PriorCPRCode PriorCPRValue PriorCPRMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.125' code.code='67506-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='CPR prior to EMS arrival' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorCPRPriorCPRProviderParticipation constraints.validation.error='PriorCPRProviderParticipationPriorCPRProvider PriorCPRProviderParticipationTypeCode' typeCode='RESP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorCPRPriorCPRProviderParticipationPriorCPRProvider code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PriorCPRProviderCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i6nt0NOaEeKU4pFWxuU9dw" base_Class="_qsAEkHwPEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PriorAEDUsePriorAEDProviderParticipation PriorAEDUseTemplateId PriorAEDUseCode PriorAEDUseValue PriorAEDUseMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.126' code.code='67508-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='AED use prior to EMS arrival' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorAEDUsePriorAEDProviderParticipation constraints.validation.error='PriorAEDProviderParticipationPriorAEDProvider PriorAEDProviderParticipationTypeCode' typeCode='RESP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPriorAEDUsePriorAEDProviderParticipationPriorAEDProvider code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='PriorAEDProviderCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i61JMNOaEeKU4pFWxuU9dw" base_Class="_i4C-AH9aEeGht55Sz1eBOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvanceDirectivesSectionTemplateId AdvanceDirectivesSectionCode AdvanceDirectivesSectionTitle AdvanceDirectivesSectionText AdvanceDirectivesSectionAdvancedDirectiveObservation' templateId.root='2.16.840.1.113883.17.3.10.1.12' code.code='67840-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Advance Directives Section' title.mixed='EMS Advance Directives Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i7DysNOaEeKU4pFWxuU9dw" base_Class="_nSjIgH9cEeGht55Sz1eBOw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AllergiesAndAdverseReactionsSectionTemplateId AllergiesAndAdverseReactionsSectionCode AllergiesAndAdverseReactionsSectionTitle AllergiesAndAdverseReactionsSectionText AllergiesAndAdverseReactionsSectionObservation AllergiesAndAdverseReactionsSectionDrugAllergyProblemAct AllergiesAndAdverseReactionsSectionEnvironmentalAllergies' templateId.root='2.16.840.1.113883.17.3.10.1.13' code.code='48765-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Allergies and Adverse Reactions  Section' title.mixed='EMS Allergies and Adverse Reactions'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_i7ROENOaEeKU4pFWxuU9dw" base_Generalization="_cWgjMIcnEeGqF6qfYwLiQw"/>
  <Ecore:EClass xmi:id="_i7TDQNOaEeKU4pFWxuU9dw" base_Class="_aDO5AIcnEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentMedicationSectionTemplateId CurrentMedicationSectionTitle CurrentMedicationSectionText CurrentMedicationSectionCurrentlyOnMedication CurrentMedicationSectionPatientOnAnticoagulants CurrentMedicationSectionCurrentMedication' templateId.root='2.16.840.1.113883.17.3.10.1.15' title.mixed='EMS Current Medications Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i7pBgNOaEeKU4pFWxuU9dw" base_Class="_CFApcIzGEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EnvironmentalAllergiesExistenceOfEnvironmentalAllergy EnvironmentalAllergiesTemplateId' constraints.validation.info='EnvironmentalAllergiesEnvironmentalAllergy' templateId.root='2.16.840.1.1133883.17.3.10.1.49'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i7zZkNOaEeKU4pFWxuU9dw" base_Class="_1XH7YIziEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SocialHistorySectionTemplateId SocialHistorySectionCode SocialHistorySectionCodeP SocialHistorySectionTitle SocialHistorySectionText SocialHistorySectionExistenceOfDrugUseIndication SocialHistorySectionDrugUseIndication' templateId.root='2.16.840.1.113883.17.3.10.1.22' code.code='67843-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Social History Section' title.mixed='EMS Social History'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_i8IwwNOaEeKU4pFWxuU9dw" base_Generalization="_jC0LoIzkEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_i8Kl8NOaEeKU4pFWxuU9dw" base_Class="_jCzkkIzkEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='emspcrVitalSignsSectionTemplateId emspcrVitalSignsSectionCode emspcrVitalSignsSectionTitle emspcrVitalSignsSectionText emspcrVitalSignsSectionVitalSignsOrganizer emspcrVitalSignsSectionPriorAidVitals emspcrVitalSignsSectionAdditionalVitalSignsOrganizer' templateId.root='2.16.840.1.113883.17.3.10.1.23' code.code='8716-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Vital Signs' title.mixed='EMS Vital Signs'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i8bEoNOaEeKU4pFWxuU9dw" base_Class="_RNfAcIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowComaScoreOrganizerGlasgowEye GlasgowComaScoreOrganizerGlasgowMotor GlasgowComaScoreOrganizerGlasgowVerbal GlasgowComaScoreOrganizerTemplateId' constraints.validation.info='GlasgowComaScoreOrganizerGlasgowQualifier GlasgowComaScoreOrganizerEffectiveTime' constraints.validation.warning='GlasgowComaScoreOrganizerGlasgowTotal' templateId.root='2.16.840.1.1133883.17.3.10.1.170'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_i8nR4NOaEeKU4pFWxuU9dw" base_Generalization="_CzqWIJoiEeG_FLcaRgAa7g"/>
  <Ecore:EClass xmi:id="_i8ogANOaEeKU4pFWxuU9dw" base_Class="_6223oJohEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PhysicalAssessmentSectionTemplateId PhysicalAssessmentSectionCode PhysicalAssessmentSectionCodeP PhysicalAssessmentSectionTitle PhysicalAssessmentSectionText PhysicalAssessmentSectionPhysicalAssessmentOrganizer PhysicalAssessmentSectionPatientPregnancy PhysicalAssessmentSectionLastOralIntake PhysicalAssessmentSectionPatientAge PhysicalAssessmentSectionThrombolyticContraindications PhysicalAssessmentSectionBarriersToPatientCare' templateId.root='2.16.840.1.113883.17.3.10.1.20' code.code='29545-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Physical Assessment Section' constraints.validation.dependOn.PhysicalAssessmentSectionCode='PhysicalAssessmentSectionCodeP' title.mixed='EMS Physical Assessment Section'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_i8-eQNOaEeKU4pFWxuU9dw" base_Generalization="_d57s8JovEeG_FLcaRgAa7g"/>
  <Ecore:EClass xmi:id="_i9ATcNOaEeKU4pFWxuU9dw" base_Class="_c7crcJovEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='emspcrMedicationsAdministeredSectionTemplateId emspcrMedicationsAdministeredSectionCode emspcrMedicationsAdministeredSectionTitle emspcrMedicationsAdministeredSectionText emspcrMedicationsAdministeredSectionMedicationAdministered' templateId.root='2.16.840.1.113883.17.3.10.1.18' title.mixed='Medications Administered Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i9NHwNOaEeKU4pFWxuU9dw" base_Class="_5JQlAJovEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='MedicationAdministeredMedicationNotAdministeredEntryRelationship MedicationAdministeredMedicationComplicationRelationship MedicationAdministeredMedicationPerformerParticipation MedicationAdministeredMedicationAuthorizationRelationship MedicationAdministeredMedicationAdministrationDeviceParticipant MedicationAdministeredNegationInd MedicationAdministeredApproachSiteCodeP' constraints.validation.error='MedicationAdministeredMedicationConsumable MedicationAdministeredMedicationAdministeredResponseRelationship MedicationAdministeredMedicationPriorAdministrationRelationship MedicationAdministeredTemplateId MedicationAdministeredClassCode MedicationAdministeredDoseQuantity MedicationAdministeredEffectiveTime MedicationAdministeredRouteCode MedicationAdministeredRouteCodeP' templateId.root='2.16.840.1.1133883.17.3.10.1.72' classCode='SBADM' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1.1' routeCode.codeSystemName='FDA Route of Administration' constraints.validation.dependOn.MedicationAdministeredRouteCode='MedicationAdministeredRouteCodeP' approachSiteCode.code='15562006' approachSiteCode.codeSystem='2.16.840.1.113883.6.96' approachSiteCode.codeSystemName='SNOMEDCT' approachSiteCode.displayName='structure of respiratory region of nose' constraints.validation.warning='MedicationAdministeredApproachSiteCode' constraints.validation.dependOn.MedicationAdministeredApproachSiteCode='MedicationAdministeredApproachSiteCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationNotAdministeredReasonEntryRelationship constraints.validation.error='MedicationNotAdministeredReasonEntryRelationshipMedicationNotAdministeredReasonObservation MedicationNotAdministeredReasonEntryRelationshipInversionInd MedicationNotAdministeredReasonEntryRelationshipTypeCode MedicationNotAdministeredReasonEntryRelationshipTypeCodeP' inversionInd='TRUE' typeCode='RSON' constraints.validation.dependOn.MedicationNotAdministeredReasonEntryRelationshipTypeCode='MedicationNotAdministeredReasonEntryRelationshipTypeCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumable constraints.validation.error='MedicationAdministeredConsumableMedicationManfacturedProduct'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProduct constraints.validation.error='MedicationManfacturedProductMedicationLabeledDrug'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredConsumableMedicationManfacturedProductMedicationMaterial code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='MedicationMaterialCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministeredResponseRelationship constraints.validation.error='MedicationAdministeredResponseRelationshipMedicationResponseObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationComplicationRelationship constraints.validation.error='MedicationComplicationRelationshipMedicationComplicationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPriorAdministrationRelationship constraints.validation.error='MedicationPriorAdministrationRelationshipMedicationPriorAdministrationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPerformerParticipation constraints.validation.error='MedicationPerformerParticipationMedicationPerformerRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationPerformerParticipationMedicationPerformerRole code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='MedicationPerformerRoleCode MedicationPerformerRoleCodeP MedicationPerformerRoleId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAuthorizationRelationship constraints.validation.error='MedicationAuthorizationRelationshipMedicationAuthorization'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAuthorizationRelationshipMedicationAuthorization classCode='INFRM' constraints.validation.error='MedicationAuthorizationClassCode MedicationAuthorizationClassCodeP MedicationAuthorizationCode' constraints.validation.dependOn.MedicationAuthorizationClassCode='MedicationAuthorizationClassCodeP' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipant constraints.validation.error='MedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRole MedicationAdministrationDeviceParticipantTypeCode' typeCode='DEV'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRole classCode='MANU' constraints.validation.error='MedicationAdministrationDeviceRoleClassCode'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrMedicationAdministeredMedicationAdministrationDeviceParticipantMedicationAdministrationDeviceRoleMedicationAdministrationDevice constraints.validation.error='MedicationAdministrationDeviceCode'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_i9ro4NOaEeKU4pFWxuU9dw" base_Generalization="_4mzn0JumEeGzXI65shd6Fw"/>
  <Ecore:EClass xmi:id="_i9teENOaEeKU4pFWxuU9dw" base_Class="_4QFw8JumEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProceduresPerformedSectionTemplateId ProceduresPerformedSectionCode ProceduresPerformedSectionCodeP ProceduresPerformedSectionTitle ProceduresPerformedSectionText' templateId.root='2.16.840.1.113883.17.3.10.1.21' code.code='29554-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Procedures Performed Section' constraints.validation.dependOn.ProceduresPerformedSectionCode='ProceduresPerformedSectionCodeP' title.mixed='EMS Procedures Performed' constraints.validation.info='ProceduresPerformedSectionProcedureActivityProcedure1'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i-C1QNOaEeKU4pFWxuU9dw" base_Class="_K8JK8JuoEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='emspcrProcedureAbandonedProcedureRelationship emspcrProcedureAirwayConfirmationRelationship emspcrProcedureStatusCodeP emspcrProcedureApproachSiteCodeP emspcrProcedureNegationInd' constraints.validation.error='emspcrProcedureProcedurePriorRelationship emspcrProcedureProcedureNumberOfAttemptsRelationship emspcrProcedureProcedureSuccessfulRelationship emspcrProcedureProcedureComplicationsRelationship emspcrProcedureProcedurePatientResponseRelationship emspcrProcedureProcedurePerformer emspcrProcedureTemplateId emspcrProcedureCode emspcrProcedureEffectiveTime emspcrProcedureStatusCode emspcrProcedureApproachSiteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.98' statusCode.code='Aborted' constraints.validation.dependOn.emspcrProcedureStatusCode='emspcrProcedureStatusCodeP' approachSiteCode.codeSystem='2.16.840.1.113883.6.1' approachSiteCode.codeSystemName='LOINC' constraints.validation.dependOn.emspcrProcedureApproachSiteCode='emspcrProcedureApproachSiteCodeP'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAbandonedProcedureRelationship constraints.validation.error='AbandonedProcedureRelationshipAbandonedProcedureReasonObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePriorRelationship constraints.validation.error='ProcedurePriorRelationshipProcedurePriorIndicator'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureNumberOfAttemptsRelationship constraints.validation.error='ProcedureNumberOfAttemptsRelationshipProcedureNumberOfAttemptsObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureSuccessfulRelationship constraints.validation.error='ProcedureSuccessfulRelationshipProcedureSuccessfulObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedureComplicationsRelationship constraints.validation.error='ProcedureComplicationsRelationshipProcedureComplicationsObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePatientResponseRelationship constraints.validation.error='ProcedurePatientResponseRelationshipProcedurePatientResponseObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePerformer constraints.validation.error='ProcedurePerformerProcedurePerformerEntity'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureProcedurePerformerProcedurePerformerEntity code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='ProcedurePerformerEntityCode ProcedurePerformerEntityCodeP ProcedurePerformerEntityId'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayConfirmationRelationship constraints.validation.error='AirwayConfirmationRelationshipAirwayConfirmationObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureReasonProcedureNotAttemptedRelationship constraints.validation.error='ReasonProcedureNotAttemptedRelationshipReasonProcedureNotAttemptedObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipant constraints.validation.error='AirwayDeviceParticipantAirwayDeviceParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipantAirwayDeviceParticipantRole constraints.validation.error='AirwayDeviceParticipantRoleAirwayDeviceParticipantType'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProcedureAirwayDeviceParticipantAirwayDeviceParticipantRoleAirwayDeviceParticipantType code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='AirwayDeviceParticipantTypeCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i-m18NOaEeKU4pFWxuU9dw" base_Class="_iDmQYJ9mEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientCareNarrativeSectionTemplateId PatientCareNarrativeSectionCode PatientCareNarrativeSectionCodeP PatientCareNarrativeSectionTitle PatientCareNarrativeSectionText' templateId.root='2.16.840.1.113883.17.3.10.1.1' code.code='67781-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Patient Care Report Narrative Section' title.mixed='EMS Patient Care Report Narrative'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i-6_ANOaEeKU4pFWxuU9dw" base_Class="_OV4TIJ9nEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchSectionTemplateId DispatchSectionCode DispatchSectionTitle DispatchSectionText DispatchSectionEmergencyMedicalDispatchObservation DispatchSectionComplaintReportedByDispatch' templateId.root='2.16.840.1.113883.17.3.10.1.2' code.code='67660-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Dispatch Section' title.mixed='EMS Dispatch'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i_JogNOaEeKU4pFWxuU9dw" base_Class="_LI7M8J99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseSectionTemplateId ResponseSectionCode ResponseSectionCodeP ResponseSectionTitle ResponseSectionText ResponseSectionDelayOrganizer ResponseSectionDispatchLocationOrganizer ResponseSectionResponseOdometerReadingOrganizer ResponseSectionResponseModeToScene' templateId.root='2.16.840.1.113883.17.3.10.1.3' code.code='67664-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response Section' title.mixed='EMS Response'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i_e_sNOaEeKU4pFWxuU9dw" base_Class="_0padgJ99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DelayOrganizerDispatchDelayRelationship DelayOrganizerResponseDelayRelationship DelayOrganizerSceneDelayRelationship DelayOrganizerTransportDelayRelationship DelayOrganizerTurnaoundDelayRelationship DelayOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.95'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerDispatchDelayRelationship constraints.validation.error='DispatchDelayRelationshipDispatchDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerResponseDelayRelationship constraints.validation.error='ResponseDelayRelationshipResponseDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerSceneDelayRelationship constraints.validation.error='SceneDelayRelationshipSceneDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerTransportDelayRelationship constraints.validation.error='TransportDelayRelationshipTransportDelay'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDelayOrganizerTurnaoundDelayRelationship constraints.validation.error='TurnaoundDelayRelationshipTurnaroundDelay'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i_zIwNOaEeKU4pFWxuU9dw" base_Class="_MiN-UJ-BEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='DispatchLocationOrganizerDispatchLocationNameRelationship DispatchLocationOrganizerDispatchLocationLatitudeRelationship DispatchLocationOrganizerDispatchLocationLongtudeRelationship' constraints.validation.error='DispatchLocationOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.96'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationNameRelationship constraints.validation.error='DispatchLocationNameRelationshipDispatchLocationName DispatchLocationNameRelationshipTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationLatitudeRelationship constraints.validation.error='DispatchLocationLatitudeRelationshipDispatchLocationLatitude DispatchLocationLatitudeRelationshipTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDispatchLocationOrganizerDispatchLocationLongitudeRelationship constraints.validation.error='DispatchLocationLongitudeRelationshipObservation DispatchLocationLongitudeRelationshipTemplateId' templateId.root='null'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_i_-H4NOaEeKU4pFWxuU9dw" base_Class="_yVviAJ-OEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='ResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship ResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship' constraints.validation.error='ResponseOdometerReadingOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.97'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseBeginningOdometerReadingRelationship constraints.validation.error='ResponseBeginningOdometerReadingRelationshipResponseBeginningOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseOnSceneOdometerReadingRelationship constraints.validation.error='ResponseOnSceneOdometerReadingRelationshipResponseOnSceneOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseDestinationOdometerReadingRelationship constraints.validation.error='ResponseDestinationOdometerReadingRelationshipResponseDestinationOdometerReading'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrResponseOdometerReadingOrganizerResponseEndingOdometerReadingRelationship constraints.validation.error='ResponseEndingOdometerReadingRelationshipResponseEndingOdometerReading'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jAGqwNOaEeKU4pFWxuU9dw" base_Class="_i-lM8J-dEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispositionSectionTemplateId DispositionSectionCode DispositionSectionCodeP DispositionSectionTitle DispositionSectionText DispositionSectionNumberOfPatientsObservation DispositionSectionIncidentDispositionObservation DispositionSectionTransportModeObservation DispositionSectionTransportMethodObservation DispositionSectionReasonForChoosingDestinationObservation DispositionSectionPrearrivalActivationObservation DispositionSectionPatientConditionChangeAtDestinationObservation' templateId.root='2.16.840.1.113883.17.3.10.1.4' code.code='67796-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Disposition Section' title.mixed='EMS Disposition' constraints.validation.info='DispositionSectionEntry4'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jAaz0NOaEeKU4pFWxuU9dw" base_Class="_GGotEJ-kEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PersonnelAdverseEventSectionTemplateId PersonnelAdverseEventSectionCode PersonnelAdverseEventSectionCodeP PersonnelAdverseEventSectionTitle PersonnelAdverseEventSectionText PersonnelAdverseEventSectionAdverseEventIndicator PersonnelAdverseEventSectionAdverseEventTypeObservation' templateId.root='2.16.840.1.113883.17.3.10.1.6' code.code='67658-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Exposures or Injuries of EMS Personnel Section' title.mixed='Exposures or Injuries of EMS Personnel'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jAtuwNOaEeKU4pFWxuU9dw" base_Class="_aK7P4J-mEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolSectionTemplateId ProtocolSectionCode ProtocolSectionTitle ProtocolSectionText ProtocolSectionProtocolObservation ProtocolSectionCandidatePatientRegistryType' templateId.root='2.16.840.1.113883.17.3.10.1.7' code.code='67537-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Protocol Section' title.mixed='EMS Protocol Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jA7xMNOaEeKU4pFWxuU9dw" base_Class="_h3A8IKK3EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SceneSectionTemplateId SceneSectionCode SceneSectionTitle SceneSectionText SceneSectionFirstUnitIndicator SceneSectionFirstUnitOnScene SceneSectionScenePatientCount SceneSectionMassCasualtyIndicator SceneSectionLocationTypeObservation' templateId.root='2.16.840.1.113883.17.3.10.1.8' code.code='67665-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Scene Section' title.mixed='EMS Scene'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jBMP4NOaEeKU4pFWxuU9dw" base_Class="_olqMIKK8EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SituationSectionTemplateId SituationSectionCode SituationSectionCodeP SituationSectionTitle SituationSectionText SituationSectionComplaint SituationSectionPossibleInjury SituationSectionProviderPrimaryImpression SituationSectionPrimarySymptom SituationSectionOtherSymptoms SituationSectionProviderSecondaryImpressions SituationSectionInitialPatientAcuity' templateId.root='2.16.840.1.113883.17.3.10.1.9' code.code='67666-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Situation Section' title.mixed='EMS Situation Section'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jBgY8NOaEeKU4pFWxuU9dw" base_Class="_KEZzkKg-EeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='ComplaintComplaintDurationRelationship ComplaintComplaintTypeRelationship ComplaintValue' constraints.validation.warning='ComplaintComplaintOrganSystemRelationship ComplaintTargetSiteCodeP' constraints.validation.error='ComplaintTemplateId ComplaintCode ComplaintCodeP ComplaintTargetSiteCode ComplaintEffectiveTime ComplaintMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.63' code.code='10154-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS complaint' constraints.validation.dependOn.ComplaintCode='ComplaintCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrComplaintComplaintOrganSystemRelationship constraints.validation.error='ComplaintOrganSystemRelationshipComplaintOrganSystem'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jBntsNOaEeKU4pFWxuU9dw" base_Class="_ClVY0KxCEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TimesSectionTemplateId TimesSectionCode TimesSectionTitle TimesSectionText TimesSectionCallTime TimesSectionUnitNotifiedTime TimesSectionUnitEnRouteTime TimesSectionUnitOnSceneTime TimesSectionUnitAtPatienttTime TimesSectionUnitLeftSceneTime TimesSectionPatientArrivedAtDestinationTime TimesSectionUnitBackInServiceTime TimesSectionDispatchNotifiedTime' templateId.root='2.16.840.1.113883.17.3.10.1.10' code.code='67667-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Times Section' title.mixed='EMS Times'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jCAvQNOaEeKU4pFWxuU9dw" base_Class="_HLO9kIzgEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HistoryOfProceduresOrganizerExistenceOfHistoryOfProcedureComponent HistoryOfProceduresOrganizerTemplateId' constraints.validation.info='HistoryOfProceduresOrganizerHistoryOfProceduresComponent' templateId.root='2.16.840.1.1133883.17.3.10.1.62'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrHistoryOfProceduresOrganizerExistenceOfHistoryOfProcedureComponent constraints.validation.error='ExistenceOfHistoryOfProcedureComponentProcedure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrHistoryOfProceduresOrganizerHistoryOfProceduresComponent constraints.validation.error='HistoryOfProceduresComponentHistoryOfProcedure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrHistoryOfProceduresOrganizerHistoryOfProceduresComponentHistoryOfProcedure code.codeSystem='2.16.840.1.113883.6.4' code.codeSystemName='ICD-10 PCS' constraints.validation.error='HistoryOfProcedureCode'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jCq2kNOaEeKU4pFWxuU9dw" base_Class="_mwn8MIcoEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentMedicationCurrentMedicationConsumable CurrentMedicationTemplateId CurrentMedicationRouteCode' templateId.root='2.16.840.1.1133883.17.3.10.1.77' constraints.validation.warning='CurrentMedicationDoseQuantity CurrentMedicationRouteCodeP' routeCode.codeSystem='2.16.840.1.113883.3.26.1.1.1' routeCode.codeSystemName='FDA Route of Administration' constraints.validation.dependOn.CurrentMedicationRouteCode='CurrentMedicationRouteCodeP' constraints.validation.info='CurrentMedicationNegationInd CurrentMedicationNullFlavor'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumable constraints.validation.error='CurrentMedicationConsumableManufacturedProduct'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumableCurrentMedicationProduct constraints.validation.error='CurrentMedicationProductManufacturedLabeledDrug'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCurrentMedicationCurrentMedicationConsumableCurrentMedicationProductCurrentMedicationDrug code.codeSystem='2.16.840.1.113883.6.88' code.codeSystemName='RxNorm' constraints.validation.error='CurrentMedicationDrugCode CurrentMedicationDrugCodeP' constraints.validation.dependOn.CurrentMedicationDrugCode='CurrentMedicationDrugCodeP'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jDHigNOaEeKU4pFWxuU9dw" base_Class="_JnfD8IzoEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='emspcrVitalSignsOrganizerSystolicBloodPressureComponent emspcrVitalSignsOrganizerDiastolicBloodPressureComponent emspcrVitalSignsOrganizerHeartRateComponent emspcrVitalSignsOrganizerRespiratoryRateComponent emspcrVitalSignsOrganizerBodyTemperatureComponent emspcrVitalSignsOrganizerOxygenSaturationComponent' constraints.validation.error='emspcrVitalSignsOrganizerTemplateId emspcrVitalSignsOrganizerEffectiveTime' templateId.root='2.16.840.1.1133883.17.3.10.1.28'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerSystolicBloodPressureComponent constraints.validation.error='SystolicBloodPressureComponentSystolicBloodPressure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerDiastolicBloodPressureComponent constraints.validation.error='DiastolicBloodPressureComponentDiastolicBloodPressure'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerHeartRateComponent constraints.validation.error='HeartRateComponentHeartRate'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerRespiratoryRateComponent constraints.validation.error='RespiratoryRateComponentRespiratoryRate'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerBodyTemperatureComponent constraints.validation.error='BodyTemperatureComponentBodyTemperature'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrVitalSignsOrganizerOxygenSaturationComponent constraints.validation.error='OxygenSaturationComponentOxygenSaturation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jDiZQNOaEeKU4pFWxuU9dw" base_Class="_F-GKoLMNEeKNbt70lHd2Eg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='AdditionalVitalSignsOrganizerStrokeScoreComponent AdditionalVitalSignsOrganizerPainScoreComponent AdditionalVitalSignsOrganizerLevelOfResponsivenessComponent AdditionalVitalSignsOrganizerBloodGlucoseComponent AdditionalVitalSignsOrganizerCarbonMonoxideComponent AdditionalVitalSignsOrganizerCarbonDioxideComponent AdditionalVitalSignsOrganizerCardiacRhythmComponent AdditionalVitalSignsOrganizerEffectiveTime' constraints.validation.error='AdditionalVitalSignsOrganizerTemplateId AdditionalVitalSignsOrganizerMoodCode AdditionalVitalSignsOrganizerGlasgowComaScoreOrganizer' templateId.root='2.16.840.1.1133883.17.3.10.1.30' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jD1UMNOaEeKU4pFWxuU9dw" base_Class="_zbYvIJoiEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.info='PhysicalAssessmentOrganizerComponent1 PhysicalAssessmentOrganizerComponent2 PhysicalAssessmentOrganizerComponent3 PhysicalAssessmentOrganizerComponent4 PhysicalAssessmentOrganizerComponent5 PhysicalAssessmentOrganizerComponent6 PhysicalAssessmentOrganizerComponent7 PhysicalAssessmentOrganizerComponent8 PhysicalAssessmentOrganizerComponent9 PhysicalAssessmentOrganizerComponent10 PhysicalAssessmentOrganizerComponent11 PhysicalAssessmentOrganizerComponent12 PhysicalAssessmentOrganizerComponent13 PhysicalAssessmentOrganizerComponent14' constraints.validation.error='PhysicalAssessmentOrganizerTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.78'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerBodyWeightComponent constraints.validation.error='BodyWeightComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerLengthBasedPatientBodyWeightClassComponent constraints.validation.error='LengthBasedPatientBodyWeightClassComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerSkinAssessmentComponent constraints.validation.error='SkinAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerHeadAssessmentComponent constraints.validation.error='HeadAssessmentComponentObservation HeadAssessmentComponentTemplateId' templateId.root='null'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerFaceAssessmentComponent constraints.validation.error='FaceAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerNeckAssessmentComponent constraints.validation.error='NeckAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerChestAndLungsAssessmentComponent constraints.validation.error='ChestAndLungsAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerHeartAssessmentComponent constraints.validation.error='HeartAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerAbdomenAssessmentComponent constraints.validation.error='AbdomenAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerPelvicAndGenitourinaryAssessmentComponent constraints.validation.error='PelvicAndGenitourinaryAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerBackAndSpineAssessmentComponent constraints.validation.error='BackAndSpineAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerExtremitiesAssessmentComponent constraints.validation.error='ExtremitiesAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerEyeAssessmentComponent constraints.validation.info='EyeAssessmentComponentObservation'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrPhysicalAssessmentOrganizerMentalStatusAssessmentComponent constraints.validation.info='MentalStatusAssessmentComponentObservation'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jEvTINOaEeKU4pFWxuU9dw" base_Class="_3C3WwMWqEeK3RfDsHamIUQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugAllergyProblemActParticipant1 DrugAllergyProblemActTemplateId' templateId.root='2.16.840.1.1133883.17.3.10.1.48'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDrugAllergyProblemActDrugAllergyParticipation constraints.validation.error='DrugAllergyParticipationDrugAllergyParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrDrugAllergyProblemActDrugAllergyParticipationDrugAllergyParticipantRole constraints.validation.error='DrugAllergyParticipantRoleDrugAllergyEntity'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jE0LoNOaEeKU4pFWxuU9dw" base_Class="_uMxJUIzpEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.warning='CardiacRhythmParticipant1' constraints.validation.error='CardiacRhythmTemplateId CardiacRhythmCode CardiacRhythmCodeP CardiacRhythmMethodCode CardiacRhythmMethodCodeP CardiacRhythmValue CardiacRhythmValueP CardiacRhythmMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.169' code.code='67519-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac rhythm' constraints.validation.dependOn.CardiacRhythmCode='CardiacRhythmCodeP' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' constraints.validation.info='CardiacRhythmEffectiveTime' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipant constraints.validation.error='ECGParticipantParticipantRole'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipantECGParticipantRole constraints.validation.error='ECGParticipantRolePlayingDevice'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrCardiacRhythmECGParticipantECGParticipantRoleECGDevice code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.error='ECGDeviceCode ECGDeviceCodeP'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_jGMrsNOaEeKU4pFWxuU9dw" base_Generalization="_KLr9MIzoEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_jGXDwNOaEeKU4pFWxuU9dw" base_Class="_Dq57UIzpEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PriorAidVitalsTemplateId PriorAidVitalsCode PriorAidVitalsValue PriorAidVitalsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.29' code.code='67518-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Obtained prior to units EMS care' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jGwsYNOaEeKU4pFWxuU9dw" base_Class="_Dfaa4J-eEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NumberOfPatientsObservationTemplateId NumberOfPatientsObservationCode NumberOfPatientsObservationCodeP NumberOfPatientsObservationValue NumberOfPatientsObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.31' code.code='67547-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Number of patients' constraints.validation.dependOn.NumberOfPatientsObservationCode='NumberOfPatientsObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jHFcgNOaEeKU4pFWxuU9dw" base_Class="_j3YnxZ-eEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='IncidentDispositionObservationTemplateId IncidentDispositionObservationCode IncidentDispositionObservationCodeP IncidentDispositionObservationValue IncidentDispositionObservationValueP IncidentDispositionObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.32' code.code='67548-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS incident disposition' constraints.validation.dependOn.IncidentDispositionObservationCode='IncidentDispositionObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jHgTQNOaEeKU4pFWxuU9dw" base_Class="_nv-0gp-fEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportModeObservationTemplateId TransportModeObservationCode TransportModeObservationCodeP TransportModeObservationValue TransportModeObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.33' code.code='67550-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS transport mode' constraints.validation.dependOn.TransportModeObservationCode='TransportModeObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jH6i8NOaEeKU4pFWxuU9dw" base_Class="_EagUtZ-fEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportMethodObservationTemplateId TransportMethodObservationCode TransportMethodObservationCodeP TransportMethodObservationValue TransportMethodObservationValueP TransportMethodObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.34' code.code='67549-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS transport method' constraints.validation.dependOn.TransportMethodObservationCode='TransportMethodObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jIWAwNOaEeKU4pFWxuU9dw" base_Class="_cm1D5Z-hEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonForChoosingDestinationObservationTemplateId ReasonForChoosingDestinationObservationCode ReasonForChoosingDestinationObservationCodeP ReasonForChoosingDestinationObservationValue ReasonForChoosingDestinationObservationValueP ReasonForChoosingDestinationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.35' code.code='67552-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS reason for choosing destination' constraints.validation.dependOn.ReasonForChoosingDestinationObservationCode='ReasonForChoosingDestinationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jIw3gNOaEeKU4pFWxuU9dw" base_Class="_083apZ-hEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PrearrivalActivationObservationTemplateId PrearrivalActivationObservationCode PrearrivalActivationObservationCodeP PrearrivalActivationObservationValue PrearrivalActivationObservationEffectiveTime PrearrivalActivationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.36' code.code='69462-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS prearrival activation performed' constraints.validation.dependOn.PrearrivalActivationObservationCode='PrearrivalActivationObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jJHc0NOaEeKU4pFWxuU9dw" base_Class="_Q4zL9Z-gEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientConditionChangeAtDestinationObservationTemplateId PatientConditionChangeAtDestinationObservationCode PatientConditionChangeAtDestinationObservationCodeP PatientConditionChangeAtDestinationObservationValue PatientConditionChangeAtDestinationObservationValueP PatientConditionChangeAtDestinationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.37' code.code='67551-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS patient condition change at destination' constraints.validation.dependOn.PatientConditionChangeAtDestinationObservationCode='PatientConditionChangeAtDestinationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jJ78MNOaEeKU4pFWxuU9dw" base_Class="_1u74sKxCEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CallTimeTemplateId CallTimeCode CallTimeCodeP CallTimeValue CallTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.38' code.code='69469-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Call time' constraints.validation.dependOn.CallTimeCode='CallTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jKOQENOaEeKU4pFWxuU9dw" base_Class="_JKerYKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitNotifiedTimeTemplateId UnitNotifiedTimeCode UnitNotifiedTimeCodeP UnitNotifiedTimeValue UnitNotifiedTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.39' code.code='69471-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit notified time' constraints.validation.dependOn.UnitNotifiedTimeCode='UnitNotifiedTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jKf84NOaEeKU4pFWxuU9dw" base_Class="_UyaX0KxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitEnRouteTimeTemplateId UnitEnRouteTimeCode UnitEnRouteTimeCodeP UnitEnRouteTimeValue UnitEnRouteTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.40' code.code='69472-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit en route time' constraints.validation.dependOn.UnitEnRouteTimeCode='UnitEnRouteTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jKwbkNOaEeKU4pFWxuU9dw" base_Class="_iGh5QKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitOnSceneTimeTemplateId UnitOnSceneTimeCode UnitOnSceneTimeCodeP UnitOnSceneTimeValue UnitOnSceneTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.41' code.code='69473-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit on scene time' constraints.validation.dependOn.UnitOnSceneTimeCode='UnitOnSceneTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jLBhUNOaEeKU4pFWxuU9dw" base_Class="_yt7JUKxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitAtPatienttTimeTemplateId UnitAtPatienttTimeCode UnitAtPatienttTimeCodeP UnitAtPatienttTimeValue UnitAtPatienttTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.42' code.code='69474-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit at patient time' constraints.validation.dependOn.UnitAtPatienttTimeCode='UnitAtPatienttTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jLTOINOaEeKU4pFWxuU9dw" base_Class="_6w124KxDEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitLeftSceneTimeTemplateId UnitLeftSceneTimeCode UnitLeftSceneTimeCodeP UnitLeftSceneTimeValue UnitLeftSceneTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.43' code.code='69475-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit left scene time' constraints.validation.dependOn.UnitLeftSceneTimeCode='UnitLeftSceneTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jLkT4NOaEeKU4pFWxuU9dw" base_Class="_DaIA4KxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientArrivedAtDestinationTimeTemplateId PatientArrivedAtDestinationTimeCode PatientArrivedAtDestinationTimeCodeP PatientArrivedAtDestinationTimeValue PatientArrivedAtDestinationTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.44' code.code='69476-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient arrived at destination time' constraints.validation.dependOn.PatientArrivedAtDestinationTimeCode='PatientArrivedAtDestinationTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jL1ZoNOaEeKU4pFWxuU9dw" base_Class="_KrhK4KxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='UnitBackInServiceTimeTemplateId UnitBackInServiceTimeCode UnitBackInServiceTimeCodeP UnitBackInServiceTimeValue UnitBackInServiceTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.45' code.code='69477-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Unit back in service time' constraints.validation.dependOn.UnitBackInServiceTimeCode='UnitBackInServiceTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jMGfYNOaEeKU4pFWxuU9dw" base_Class="_UFgZEKxEEeGLnrdLmr5TaQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchNotifiedTimeTemplateId DispatchNotifiedTimeCode DispatchNotifiedTimeCodeP DispatchNotifiedTimeValue DispatchNotifiedTimeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.46' code.code='69470-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch notified time' constraints.validation.dependOn.DispatchNotifiedTimeCode='DispatchNotifiedTimeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jMb2kNOaEeKU4pFWxuU9dw" base_Class="_xCcE0Iy7EeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdvancedDirectiveObservationTemplateId AdvancedDirectiveObservationCode AdvancedDirectiveObservationValue AdvancedDirectiveObservationValueP AdvancedDirectiveObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.98' code.code='67516-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Advanced directive' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_jMzqANOaEeKU4pFWxuU9dw" base_Generalization="_4F12sMWqEeK3RfDsHamIUQ"/>
  <Ecore:EClass xmi:id="_jNAeUNOaEeKU4pFWxuU9dw" base_Class="_KEFo8HSVEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryCauseCategoryTemplateId InjuryCauseCategoryCode InjuryCauseCategoryValue InjuryCauseCategoryMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.50' code.code='69543-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Injury Cause' value.codeSystem='2.16.840.1.113883.6.3.1' value.codeSystemName='ICD-10' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jNSyMNOaEeKU4pFWxuU9dw" base_Class="_aS16EHSWEeGa4IXs2ghZEw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryMechanismTemplateId InjuryMechanismCode InjuryMechanismValue InjuryMechanismMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.51' code.code='67494-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Injury Mechanism' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jNltINOaEeKU4pFWxuU9dw" base_Class="_lTHsIIcXEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TraumaCenterCriteriaTemplateId TraumaCenterCriteriaCode TraumaCenterCriteriaValue TraumaCenterCriteriaMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.52' code.code='67495-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Trauma Center Critieria' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jN4BANOaEeKU4pFWxuU9dw" base_Class="_vuraIIcZEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InjuryRiskFactorTemplateId InjuryRiskFactorCode InjuryRiskFactorValue InjuryRiskFactorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.53' code.code='67496-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Other injury risk factors' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jOLjANOaEeKU4pFWxuU9dw" base_Class="_nvhVwIcaEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VehicleImpactAreaTemplateId VehicleImpactAreaCode VehicleImpactAreaValue VehicleImpactAreaMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.54' code.code='67497-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Location of impact on the vehicle' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jOd24NOaEeKU4pFWxuU9dw" base_Class="_zMwjMIccEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientLocationInVehicleTemplateId PatientLocationInVehicleCode PatientLocationInVehicleValue PatientLocationInVehicleMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.55' code.code='67498-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Location of patient in vehicle' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jOwx0NOaEeKU4pFWxuU9dw" base_Class="_bsVJUIcdEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='VehicleOccupantSafetyEquipmentTemplateId VehicleOccupantSafetyEquipmentCode VehicleOccupantSafetyEquipmentValue VehicleOccupantSafetyEquipmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.56' code.code='67499-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Safety equipment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jPDFsNOaEeKU4pFWxuU9dw" base_Class="_2lRhsIcdEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AirbagDeploymentStatusTemplateId AirbagDeploymentStatusCode AirbagDeploymentStatusValue AirbagDeploymentStatusMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.57' code.code='67500-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Airbag deployment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jPWAoNOaEeKU4pFWxuU9dw" base_Class="_auKbcIceEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeightOfFallTemplateId HeightOfFallCode HeightOfFallValue HeightOfFallMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.58' code.code='67501-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Height of fall' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jPlRMNOaEeKU4pFWxuU9dw" base_Class="_wKL4IIceEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DisasterTypeTemplateId DisasterTypeCode DisasterTypeValue DisasterTypeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.59' code.code='69463-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Suspected intentional or unintentional disaster' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jP7PcNOaEeKU4pFWxuU9dw" base_Class="_W_uRYIzdEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfHistoryOfConditionTemplateId ExistenceOfHistoryOfConditionCode ExistenceOfHistoryOfConditionValue ExistenceOfHistoryOfConditionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.60' code.code='67793-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Has the patient had any significant medical conditions' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jQHcsNOaEeKU4pFWxuU9dw" base_Class="_5XgZ4IzdEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HistoryOfConditionTemplateId HistoryOfConditionCode HistoryOfConditionCodeP HistoryOfConditionValue HistoryOfConditionValueP HistoryOfConditionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.61' code.code='68487-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS History of Condition' constraints.validation.dependOn.HistoryOfConditionCode='HistoryOfConditionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jRPeENOaEeKU4pFWxuU9dw" base_Class="_7nP0MKhCEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PossibleInjuryTemplateId PossibleInjuryCode PossibleInjuryCodeP PossibleInjuryValue PossibleInjuryMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.64' code.code='69467-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Possible injury' constraints.validation.dependOn.PossibleInjuryCode='PossibleInjuryCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jRjnINOaEeKU4pFWxuU9dw" base_Class="_0C-8EKhDEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProviderPrimaryImpressionTemplateId ProviderPrimaryImpressionCode ProviderPrimaryImpressionCodeP ProviderPrimaryImpressionValue ProviderPrimaryImpressionValueP ProviderPrimaryImpressionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.65' code.code='67492-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Provider Primary Impression' constraints.validation.dependOn.ProviderPrimaryImpressionCode='ProviderPrimaryImpressionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jR920NOaEeKU4pFWxuU9dw" base_Class="_KOxo0KhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PrimarySymptomTemplateId PrimarySymptomCode PrimarySymptomCodeP PrimarySymptomValue PrimarySymptomValueP PrimarySymptomMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.66' code.code='67774-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Primary Symptom' constraints.validation.dependOn.PrimarySymptomCode='PrimarySymptomCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jSYGgNOaEeKU4pFWxuU9dw" base_Class="_g5iJgKhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OtherSymptomsTemplateId OtherSymptomsCode OtherSymptomsCodeP OtherSymptomsValue OtherSymptomsValueP OtherSymptomsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.67' code.code='67776-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Other symptoms' constraints.validation.dependOn.OtherSymptomsCode='OtherSymptomsCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jTFRINOaEeKU4pFWxuU9dw" base_Class="_0mPksKhEEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProviderSecondaryImpressionsTemplateId ProviderSecondaryImpressionsCode ProviderSecondaryImpressionsCodeP ProviderSecondaryImpressionsValue ProviderSecondaryImpressionsValueP ProviderSecondaryImpressionsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.68' code.code='69542-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Provider Secondary Impressions' constraints.validation.dependOn.ProviderSecondaryImpressionsCode='ProviderSecondaryImpressionsCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jTfg0NOaEeKU4pFWxuU9dw" base_Class="_NZgqAKhFEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='InitialPatientAcuityTemplateId InitialPatientAcuityCode InitialPatientAcuityCodeP InitialPatientAcuityValue InitialPatientAcuityValueP InitialPatientAcuityMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.69' code.code='67493-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Initial Patient Acuity' constraints.validation.dependOn.InitialPatientAcuityCode='InitialPatientAcuityCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jT9a4NOaEeKU4pFWxuU9dw" base_Class="_Mr964IzjEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfDrugUseIndicationTemplateId ExistenceOfDrugUseIndicationCode ExistenceOfDrugUseIndicationCodeP ExistenceOfDrugUseIndicationValue ExistenceOfDrugUseIndicationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.70' code.code='69757-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Indications of drug or alcohol use by the patient' constraints.validation.dependOn.ExistenceOfDrugUseIndicationCode='ExistenceOfDrugUseIndicationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jUOgoNOaEeKU4pFWxuU9dw" base_Class="_oJHzkIzjEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DrugUseIndicationTemplateId DrugUseIndicationCode DrugUseIndicationValue DrugUseIndicationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.71' code.code='67669-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Alcohol - drug use' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_jUgNcNOaEeKU4pFWxuU9dw" base_Generalization="_6L6U0JovEeG_FLcaRgAa7g"/>
  <Ecore:EClass xmi:id="_jWE6wNOaEeKU4pFWxuU9dw" base_Class="_46UUAJ9nEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EmergencyMedicalDispatchObservationTemplateId EmergencyMedicalDispatchObservationCode EmergencyMedicalDispatchObservationCodeP EmergencyMedicalDispatchObservationValue EmergencyMedicalDispatchObservationValueP EmergencyMedicalDispatchObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.73' code.code='67488-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMDPerformed' constraints.validation.dependOn.EmergencyMedicalDispatchObservationCode='EmergencyMedicalDispatchObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jWg_oNOaEeKU4pFWxuU9dw" base_Class="__LltsJ97EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintReportedByDispatchTemplateId ComplaintReportedByDispatchCode ComplaintReportedByDispatchCodeP ComplaintReportedByDispatchValue ComplaintReportedByDispatchValueP ComplaintReportedByDispatchMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.74' code.code='67570-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complaint reported by dispatch' constraints.validation.dependOn.ComplaintReportedByDispatchCode='ComplaintReportedByDispatchCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jW9EgNOaEeKU4pFWxuU9dw" base_Class="_sUm-oIcnEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CurrentlyOnMedicationTemplateId CurrentlyOnMedicationCode CurrentlyOnMedicationValue CurrentlyOnMedicationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.75' code.code='67791-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Currently on medication' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jXM8INOaEeKU4pFWxuU9dw" base_Class="_RZqlsIcoEeGqF6qfYwLiQw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientOnAnticoagulantsTemplateId PatientOnAnticoagulantsCode PatientOnAnticoagulantsValue PatientOnAnticoagulantsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.76' code.code='69749-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient on anticoagulants' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_jXcMsNOaEeKU4pFWxuU9dw" base_Generalization="_pv80EIcoEeGqF6qfYwLiQw"/>
  <Ecore:EClass xmi:id="_jYNowNOaEeKU4pFWxuU9dw" base_Class="_sW8QcJosEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientPregnancyTemplateId PatientPregnancyCode PatientPregnancyCodeP PatientPregnancyValue PatientPregnancyValueP PatientPregnancyMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.79' code.code='67471-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient Pregnancy' constraints.validation.dependOn.PatientPregnancyCode='PatientPregnancyCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jYpGkNOaEeKU4pFWxuU9dw" base_Class="_S1I0sJotEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LastOralIntakeTemplateId LastOralIntakeCode LastOralIntakeCodeP LastOralIntakeValue LastOralIntakeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.80' code.code='67517-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Last oral intake' constraints.validation.dependOn.LastOralIntakeCode='LastOralIntakeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jY9PoNOaEeKU4pFWxuU9dw" base_Class="_rhjrIJotEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientAgeTemplateId PatientAgeCode PatientAgeCodeP PatientAgeValue PatientAgeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.81' code.code='30525-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Patient age' constraints.validation.dependOn.PatientAgeCode='PatientAgeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jZQxoNOaEeKU4pFWxuU9dw" base_Class="_HuCH8JouEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ThrombolyticContraindicationsTemplateId ThrombolyticContraindicationsCode ThrombolyticContraindicationsCodeP ThrombolyticContraindicationsValue ThrombolyticContraindicationsMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.82' code.code='67523-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Contraindications to thrombolytic use' constraints.validation.dependOn.ThrombolyticContraindicationsCode='ThrombolyticContraindicationsCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jZnW8NOaEeKU4pFWxuU9dw" base_Class="_qlUP4JouEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BarriersToPatientCareTemplateId BarriersToPatientCareCode BarriersToPatientCareCodeP BarriersToPatientCareValue BarriersToPatientCareValueP BarriersToPatientCareMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.83' code.code='67523-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Barriers to patient care' constraints.validation.dependOn.BarriersToPatientCareCode='BarriersToPatientCareCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jaEp8NOaEeKU4pFWxuU9dw" base_Class="_Ox86UKK4EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FirstUnitIndicatorTemplateId FirstUnitIndicatorCode FirstUnitIndicatorCodeP FirstUnitIndicatorValue FirstUnitIndicatorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.84' code.code='67481-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS reporter is first unit on scene' constraints.validation.dependOn.FirstUnitIndicatorCode='FirstUnitIndicatorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jaWWwNOaEeKU4pFWxuU9dw" base_Class="_JNrkAKK5EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FirstUnitOnSceneTemplateId FirstUnitOnSceneCode FirstUnitOnSceneCodeP FirstUnitOnSceneValue FirstUnitOnSceneMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.85' code.code='67481-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Name of first unit on scene' constraints.validation.dependOn.FirstUnitOnSceneCode='FirstUnitOnSceneCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jatjINOaEeKU4pFWxuU9dw" base_Class="_wPLCkKK5EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ScenePatientCountTemplateId ScenePatientCountCode ScenePatientCountCodeP ScenePatientCountValue ScenePatientCountMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.86' code.code='67489-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Count of patients at scene' constraints.validation.dependOn.ScenePatientCountCode='ScenePatientCountCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ja-o4NOaEeKU4pFWxuU9dw" base_Class="_E-SEAKK8EeGOxth0BgV-QA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MassCasualtyIndicatorTemplateId MassCasualtyIndicatorCode MassCasualtyIndicatorCodeP MassCasualtyIndicatorValue MassCasualtyIndicatorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.87' code.code='67490-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Mass Casualty Incident Indicator' constraints.validation.dependOn.MassCasualtyIndicatorCode='MassCasualtyIndicatorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jbSx8NOaEeKU4pFWxuU9dw" base_Class="_ayUKMMk3EeK2gbjCtOEivw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LocationTypeObservationTemplateId LocationTypeObservationCode' templateId.root='2.16.840.1.1133883.17.3.10.1.88' code.code='eScene.09' code.codeSystemName='' code.displayName='Location type' value1.codeSystem='2.16.840.1.113883.6.90' value1.codeSystemName='ICD-10 CM'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jbls4NOaEeKU4pFWxuU9dw" base_Class="_p4XEAJ-kEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdverseEventIndicatorTemplateId AdverseEventIndicatorCode AdverseEventIndicatorCodeP AdverseEventIndicatorValue AdverseEventIndicatorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.89' code.code='67554-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS personnel exposed or injured' constraints.validation.dependOn.AdverseEventIndicatorCode='AdverseEventIndicatorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jb518NOaEeKU4pFWxuU9dw" base_Class="_gU4tMJ-lEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AdverseEventTypeObservationTemplateId AdverseEventTypeObservationCode AdverseEventTypeObservationCodeP AdverseEventTypeObservationValue AdverseEventTypeObservationValueP AdverseEventTypeObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.90' code.code='67555-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS personnel adverse event type' constraints.validation.dependOn.AdverseEventTypeObservationCode='AdverseEventTypeObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jcVTwNOaEeKU4pFWxuU9dw" base_Class="_rNkl4GleEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BillingConditionTemplateId BillingConditionCode BillingConditionCodeP BillingConditionValue BillingConditionValueP BillingConditionMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.91' code.code='67556-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Billing condition' constraints.validation.dependOn.BillingConditionCode='BillingConditionCodeP' value.codeSystem='2.16.840.1.113883.6.90' value.codeSystemName='ICD-10 CM' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jc3fQNOaEeKU4pFWxuU9dw" base_Class="_To2-YGleEeG4boS-IbG8Zw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LevelOfServiceObservationTemplateId LevelOfServiceObservationCode LevelOfServiceObservationCodeP LevelOfServiceObservationValue LevelOfServiceObservationValueP LevelOfServiceObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.92' code.code='69464-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS level of service' constraints.validation.dependOn.LevelOfServiceObservationCode='LevelOfServiceObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jdSWANOaEeKU4pFWxuU9dw" base_Class="_rDpggp-mEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolObservationTemplateId ProtocolObservationCode ProtocolObservationCodeP ProtocolObservationValue ProtocolObservationValueP ProtocolObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.93' code.code='67537-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS protocol' constraints.validation.dependOn.ProtocolObservationCode='ProtocolObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation/emspcrProtocolObservationProtocolAgeCategoryRelationship constraints.validation.error='ProtocolAgeCategoryRelationshipProtocolAgeCategory'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jdvpANOaEeKU4pFWxuU9dw" base_Class="_n-zaBZ-nEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CandidatePatientRegistryTypeTemplateId CandidatePatientRegistryTypeCode CandidatePatientRegistryTypeCodeP CandidatePatientRegistryTypeValue CandidatePatientRegistryTypeValueP CandidatePatientRegistryTypeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.94' code.code='67553-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS candidate patient registry' constraints.validation.dependOn.CandidatePatientRegistryTypeCode='CandidatePatientRegistryTypeCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jel9kNOaEeKU4pFWxuU9dw" base_Class="_l_V6IJ-bEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseModeToSceneTemplateId ResponseModeToSceneCode ResponseModeToSceneCodeP ResponseModeToSceneValue ResponseModeToSceneValueP ResponseModeToSceneMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.98' code.code='67482-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response mode to scene' constraints.validation.dependOn.ResponseModeToSceneCode='ResponseModeToSceneCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_je-YENOaEeKU4pFWxuU9dw" base_Generalization="_L0nEAJuoEeGzXI65shd6Fw"/>
  <Ecore:EClass xmi:id="_jf4XANOaEeKU4pFWxuU9dw" base_Class="_iWVVYIy-EeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfDrugAllergyObservationTemplateId ExistenceOfDrugAllergyObservationCode ExistenceOfDrugAllergyObservationValue ExistenceOfDrugAllergyObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.102' code.code='67794-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Existence of drug allergy' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jgFLUNOaEeKU4pFWxuU9dw" base_Class="_t_nG0IzYEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfEnvironmentalAllergyTemplateId ExistenceOfEnvironmentalAllergyCode ExistenceOfEnvironmentalAllergyValue ExistenceOfEnvironmentalAllergyMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.103' code.code='69747-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Existence of environmental allergy' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jgR_oNOaEeKU4pFWxuU9dw" base_Class="_UleZUIzZEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EnvironmentalAllergyTemplateId EnvironmentalAllergyCode EnvironmentalAllergyValue EnvironmentalAllergyMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.104' code.code='69748-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Known allergies to food or environmental agents' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jghQMNOaEeKU4pFWxuU9dw" base_Class="_E9ekgJoxEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationNotAdministeredReasonObservationTemplateId MedicationNotAdministeredReasonObservationCode MedicationNotAdministeredReasonObservationValue MedicationNotAdministeredReasonObservationValueP MedicationNotAdministeredReasonObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.105' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jg1ZQNOaEeKU4pFWxuU9dw" base_Class="_j9MusJsmEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationResponseObservationTemplateId MedicationResponseObservationCode MedicationResponseObservationCodeP MedicationResponseObservationValue MedicationResponseObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.106' code.code='67540-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response to medication' constraints.validation.dependOn.MedicationResponseObservationCode='MedicationResponseObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jhI7QNOaEeKU4pFWxuU9dw" base_Class="_Qzy_cJsnEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationComplicationObservationTemplateId MedicationComplicationObservationCode MedicationComplicationObservationCodeP MedicationComplicationObservationValue MedicationComplicationObservationValueP MedicationComplicationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.107' code.code='67541-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Medication complication' constraints.validation.dependOn.MedicationComplicationObservationCode='MedicationComplicationObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jhh80NOaEeKU4pFWxuU9dw" base_Class="_pVW0QJsoEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MedicationPriorAdministrationObservationTemplateId MedicationPriorAdministrationObservationCode MedicationPriorAdministrationObservationCodeP MedicationPriorAdministrationObservationValue MedicationPriorAdministrationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.108' code.code='67539-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Prior administration' constraints.validation.dependOn.MedicationPriorAdministrationObservationCode='MedicationPriorAdministrationObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jhzpoNOaEeKU4pFWxuU9dw" base_Class="_GGe8UJojEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PatientBodyWeightTemplateId PatientBodyWeightCode PatientBodyWeightValue PatientBodyWeightMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.178' code.code='8335-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jiBsENOaEeKU4pFWxuU9dw" base_Class="_whTHIJojEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LengthBasedPatientBodyWeightClassTemplateId LengthBasedPatientBodyWeightClassCode LengthBasedPatientBodyWeightClassCodeP LengthBasedPatientBodyWeightClassValue LengthBasedPatientBodyWeightClassEffectiveTime LengthBasedPatientBodyWeightClassMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.110' code.code='67670-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.LengthBasedPatientBodyWeightClassCode='LengthBasedPatientBodyWeightClassCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jiatoNOaEeKU4pFWxuU9dw" base_Class="_bFfQYJokEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SkinAssessmentTemplateId SkinAssessmentCode SkinAssessmentCodeP SkinAssessmentValue SkinAssessmentValueP SkinAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.180' code.code='67524-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.SkinAssessmentCode='SkinAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_ji0WQNOaEeKU4pFWxuU9dw" base_Class="_QU_s0JolEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='FaceAssessmentTemplateId FaceAssessmentCode FaceAssessmentCodeP FaceAssessmentValue FaceAssessmentValueP FaceAssessmentEffectiveTime FaceAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.112' code.code='67526-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.FaceAssessmentCode='FaceAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jjOl8NOaEeKU4pFWxuU9dw" base_Class="_6VcsUJokEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeadAssessmentTemplateId HeadAssessmentCode HeadAssessmentCodeP HeadAssessmentValue HeadAssessmentEffectiveTime HeadAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.113' code.code='67525-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.HeadAssessmentCode='HeadAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jjlLQNOaEeKU4pFWxuU9dw" base_Class="_oE3bcJolEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NeckAssessmentTemplateId NeckAssessmentCode NeckAssessmentValue NeckAssessmentEffectiveTime NeckAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.114' code.code='67527-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Neck assessment finding' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jj24ENOaEeKU4pFWxuU9dw" base_Class="_CiNc8JomEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ChestAndLungsAssessmentTemplateId ChestAndLungsAssessmentCode ChestAndLungsAssessmentValue ChestAndLungsAssessmentEffectiveTime ChestAndLungsAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.115' code.code='67528-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Chest and lungs assessment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jkJzANOaEeKU4pFWxuU9dw" base_Class="_Zjp_UJomEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeartAssessmentTemplateId HeartAssessmentCode HeartAssessmentCodeP HeartAssessmentValue HeartAssessmentValueP HeartAssessmentEffectiveTime HeartAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.116' code.code='67529-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Heart assessment finding' constraints.validation.dependOn.HeartAssessmentCode='HeartAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jkkpwNOaEeKU4pFWxuU9dw" base_Class="_WMI_AJooEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AbdomenAssessmentTemplateId AbdomenAssessmentCode AbdomenAssessmentValue AbdomenAssessmentTargetSiteCode AbdomenAssessmentEffectiveTime AbdomenAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.117' code.code='67530-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Abdomen assessment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jk72INOaEeKU4pFWxuU9dw" base_Class="_O7rMoJopEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PelvicAndGenitourinaryAssessmentTemplateId PelvicAndGenitourinaryAssessmentCode PelvicAndGenitourinaryAssessmentValue PelvicAndGenitourinaryAssessmentValueP PelvicAndGenitourinaryAssessmentEffectiveTime PelvicAndGenitourinaryAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.118' code.code='67531-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Pelvic and genitourinary assessment' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jlTCgNOaEeKU4pFWxuU9dw" base_Class="_pgmc0JopEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BackAndSpineAssessmentTemplateId BackAndSpineAssessmentCode BackAndSpineAssessmentCodeP BackAndSpineAssessmentTargetSiteCode BackAndSpineAssessmentTargetSiteCodeP BackAndSpineAssessmentValue BackAndSpineAssessmentValueP BackAndSpineAssessmentEffectiveTime BackAndSpineAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.119' code.code='67532-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Back and spine assessment' constraints.validation.dependOn.BackAndSpineAssessmentCode='BackAndSpineAssessmentCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jl3qQNOaEeKU4pFWxuU9dw" base_Class="_NK7yUJoqEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExtremitiesAssessmentTemplateId ExtremitiesAssessmentCode ExtremitiesAssessmentCodeP ExtremitiesAssessmentTargetSiteCode ExtremitiesAssessmentValue ExtremitiesAssessmentEffectiveTime ExtremitiesAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.120' code.code='67533-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Extremities assessment' constraints.validation.dependOn.ExtremitiesAssessmentCode='ExtremitiesAssessmentCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' constraints.validation.info='ExtremitiesAssessmentTargetSiteCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jmYnoNOaEeKU4pFWxuU9dw" base_Class="_rsLuIJoqEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='EyeAssessmentTemplateId EyeAssessmentCode EyeAssessmentCodeP EyeAssessmentTargetSiteCode EyeAssessmentTargetSiteCodeP EyeAssessmentValue EyeAssessmentValueP EyeAssessmentEffectiveTime EyeAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.121' code.code='67534-8' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Eye assessment' constraints.validation.dependOn.EyeAssessmentCode='EyeAssessmentCodeP' targetSiteCode.codeSystem='2.16.840.1.113883.6.1' targetSiteCode.codeSystemName='LOINC' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jm92cNOaEeKU4pFWxuU9dw" base_Class="_EyfEMJorEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='MentalStatusAssessmentTemplateId MentalStatusAssessmentCode MentalStatusAssessmentValue MentalStatusAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.122' code.code='67535-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Mental status assessment' constraints.validation.info='MentalStatusAssessmentCodeP' constraints.validation.dependOn.MentalStatusAssessmentCode='MentalStatusAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jnRYcNOaEeKU4pFWxuU9dw" base_Class="_A65pUHwIEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestTimingTemplateId CardiacArrestTimingCode CardiacArrestTimingValue CardiacArrestTimingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.123' code.code='67502-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac arrest occurrence' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jnhQENOaEeKU4pFWxuU9dw" base_Class="_tcPw4HwKEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CardiacArrestCauseTemplateId CardiacArrestCauseCode CardiacArrestCauseValue CardiacArrestCauseMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.124' code.code='67503-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac arrest cause' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jodEMNOaEeKU4pFWxuU9dw" base_Class="_Ia0ocHwREeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ArrestRhythmTemplateId ArrestRhythmCode ArrestRhythmValue ArrestRhythmMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.127' code.code='67512-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='First monitored rhythm' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_josUwNOaEeKU4pFWxuU9dw" base_Class="_gnLCQHwSEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReturnOfSpontaneousCirculationTemplateId ReturnOfSpontaneousCirculationCode ReturnOfSpontaneousCirculationValue ReturnOfSpontaneousCirculationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.128' code.code='67513-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Return of spontaneous circulation' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jo7lUNOaEeKU4pFWxuU9dw" base_Class="_khXxgHwTEeGW3cDolvqrTA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DestinationRhythmTemplateId DestinationRhythmCode DestinationRhythmValue DestinationRhythmMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.129' code.code='67519-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Cardiac rhythm' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jpMEANOaEeKU4pFWxuU9dw" base_Class="_edpw0JuqEeGzXI65shd6Fw">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AbandonedProcedureReasonObservationTemplateId AbandonedProcedureReasonObservationCode AbandonedProcedureReasonObservationCodeP AbandonedProcedureReasonObservationValue AbandonedProcedureReasonObservationValueP AbandonedProcedureReasonObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.130' code.code='ASSERTION' code.codeSystem='2.16.840.1.113883.5.4' code.codeSystemName='HL7ActCode' code.displayName='Assertion' constraints.validation.dependOn.AbandonedProcedureReasonObservationCode='AbandonedProcedureReasonObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jplsoNOaEeKU4pFWxuU9dw" base_Class="_0IBaIJ0sEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedurePriorIndicatorTemplateId ProcedurePriorIndicatorCode ProcedurePriorIndicatorCodeP ProcedurePriorIndicatorValue ProcedurePriorIndicatorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.131' code.code='67542-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure performed prior to EMS arrival' constraints.validation.dependOn.ProcedurePriorIndicatorCode='ProcedurePriorIndicatorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jp2LUNOaEeKU4pFWxuU9dw" base_Class="_iZg7kJ0tEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureNumberOfAttemptsObservationTemplateId ProcedureNumberOfAttemptsObservationCode ProcedureNumberOfAttemptsObservationCodeP ProcedureNumberOfAttemptsObservationValue ProcedureNumberOfAttemptsObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.132' code.code='67543-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Number of procedure attempts' constraints.validation.dependOn.ProcedureNumberOfAttemptsObservationCode='ProcedureNumberOfAttemptsObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jqH4INOaEeKU4pFWxuU9dw" base_Class="_D32TkJ0uEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureSuccessfulObservationTemplateId ProcedureSuccessfulObservationCode ProcedureSuccessfulObservationCodeP ProcedureSuccessfulObservationValue ProcedureSuccessfulObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.133' code.code='67544-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure successful indicator' constraints.validation.dependOn.ProcedureSuccessfulObservationCode='ProcedureSuccessfulObservationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jqZk8NOaEeKU4pFWxuU9dw" base_Class="_lVl1sJ0uEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedureComplicationsObservationTemplateId ProcedureComplicationsObservationCode ProcedureComplicationsObservationCodeP ProcedureComplicationsObservationValue ProcedureComplicationsObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.179' code.code='67545-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure complication' constraints.validation.dependOn.ProcedureComplicationsObservationCode='ProcedureComplicationsObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jqvjMNOaEeKU4pFWxuU9dw" base_Class="_Z3nhEJ0vEeGmCMENP40rhA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProcedurePatientResponseObservationTemplateId ProcedurePatientResponseObservationCode ProcedurePatientResponseObservationCodeP ProcedurePatientResponseObservationValue ProcedurePatientResponseObservationValueP ProcedurePatientResponseObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.135' code.code='67546-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Procedure patient response' constraints.validation.dependOn.ProcedurePatientResponseObservationCode='ProcedurePatientResponseObservationCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jrHWoNOaEeKU4pFWxuU9dw" base_Class="_KR_lQJ4aEeGzbp5zEFWdWg">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='AirwayConfirmationObservationTemplateId AirwayConfirmationObservationCode AirwayConfirmationObservationCodeP AirwayConfirmationObservationMethodCode AirwayConfirmationObservationMethodCodeP AirwayConfirmationObservationValue AirwayConfirmationObservationEffectiveTime AirwayConfirmationObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.175' code.code='71576-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' constraints.validation.dependOn.AirwayConfirmationObservationCode='AirwayConfirmationObservationCodeP' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jrnF4NOaEeKU4pFWxuU9dw" base_Class="_N8t6kFhWEeK-i8RB1gvLUA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ReasonProcedureNotAttemptedObservationTemplateId ReasonProcedureNotAttemptedObservationCode ReasonProcedureNotAttemptedObservationValue ReasonProcedureNotAttemptedObservationValueP ReasonProcedureNotAttemptedObservationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.137' code.code='67504-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Reason Not Attempted' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jsOJ4NOaEeKU4pFWxuU9dw" base_Class="_4ZsacKg_EeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintTypeTemplateId ComplaintTypeCode ComplaintTypeCodeP ComplaintTypeValue ComplaintTypeValueP ComplaintTypeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.138' code.code='72114-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complaint type' constraints.validation.dependOn.ComplaintTypeCode='ComplaintTypeCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jsl9UNOaEeKU4pFWxuU9dw" base_Class="_g93MsKhAEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintDurationTemplateId ComplaintDurationCode ComplaintDurationCodeP ComplaintDurationValue ComplaintDurationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.139' code.code='67491-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Complaint duration' constraints.validation.dependOn.ComplaintDurationCode='ComplaintDurationCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_js2cANOaEeKU4pFWxuU9dw" base_Class="_YMy4UKhDEeG79fAvHk6H4g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ComplaintOrganSystemTemplateId ComplaintOrganSystemCode ComplaintOrganSystemCodeP ComplaintOrganSystemValue ComplaintOrganSystemValueP ComplaintOrganSystemMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.140' code.code='69468-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Organ system' constraints.validation.dependOn.ComplaintOrganSystemCode='ComplaintOrganSystemCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jtO2gNOaEeKU4pFWxuU9dw" base_Class="_gBOGYJorEeG_FLcaRgAa7g">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='NeurologicalAssessmentTemplateId NeurologicalAssessmentCode NeurologicalAssessmentCodeP NeurologicalAssessmentValue NeurologicalAssessmentValueP NeurologicalAssessmentMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.141' code.code='67536-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Neurological status assessment' constraints.validation.dependOn.NeurologicalAssessmentCode='NeurologicalAssessmentCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jtmp8NOaEeKU4pFWxuU9dw" base_Class="_n1J2EIzgEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ExistenceOfHistoryOfProceduresTemplateId ExistenceOfHistoryOfProceduresCode ExistenceOfHistoryOfProceduresValue ExistenceOfHistoryOfProceduresMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.142' code.code='67792-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS existence of history of procedures' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_jty3MNOaEeKU4pFWxuU9dw" base_Generalization="_PIqGIIzrEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_jt0FUNOaEeKU4pFWxuU9dw" base_Class="_Orea4IzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SystolicBloodPressureTemplateId SystolicBloodPressureCode SystolicBloodPressureValue SystolicBloodPressureMoodCode SystolicBloodPressureEffectiveTime' templateId.root='2.16.840.1.113883.17.3.10.1.23.1' code.code='8480-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Intravascular systolic' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_juD88NOaEeKU4pFWxuU9dw" base_Generalization="_mVKpAIzrEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_juFyINOaEeKU4pFWxuU9dw" base_Class="_l4xA4IzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DiastolicBloodPressureTemplateId DiastolicBloodPressureCode DiastolicBloodPressureValue DiastolicBloodPressureMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.144' code.code='8462-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Intravascular diastolic' constraints.validation.info='DiastolicBloodPressureEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_juUboNOaEeKU4pFWxuU9dw" base_Generalization="_AA5nYIzsEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_juVpwNOaEeKU4pFWxuU9dw" base_Class="__qJ7UIzrEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='HeartRateTemplateId HeartRateCode HeartRateCodeP HeartRateValue HeartRateMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.145' code.code='8867-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Heart rate' constraints.validation.dependOn.HeartRateCode='HeartRateCodeP' constraints.validation.info='HeartRateEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_juoksNOaEeKU4pFWxuU9dw" base_Generalization="_RN10gIzsEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_juqZ4NOaEeKU4pFWxuU9dw" base_Class="_Q7VIMIzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='RespiratoryRateTemplateId RespiratoryRateCode RespiratoryRateValue RespiratoryRateMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.146' code.code='9279-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Breaths' constraints.validation.info='RespiratoryRateEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_ju5qcNOaEeKU4pFWxuU9dw" base_Generalization="_k_CuIIzsEeGnhceUMXltng"/>
  <Ecore:EClass xmi:id="_ju64kNOaEeKU4pFWxuU9dw" base_Class="_koRz8IzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BodyTemperatureTemplateId BodyTemperatureCode BodyTemperatureValue BodyTemperatureMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.176' code.code='8310-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Body temperature' constraints.validation.info='BodyTemperatureEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jvL-UNOaEeKU4pFWxuU9dw" base_Class="_01XGkIzsEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='OxygenSaturationTemplateId OxygenSaturationCode OxygenSaturationValue OxygenSaturationMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.177' code.code='2710-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Oxygen saturation' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jvaAwNOaEeKU4pFWxuU9dw" base_Class="_MjD2kJ-nEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ProtocolAgeCategoryTemplateId ProtocolAgeCategoryCode ProtocolAgeCategoryCodeP ProtocolAgeCategoryValue ProtocolAgeCategoryValueP ProtocolAgeCategoryMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.149' code.code='67538-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Protocol age category' constraints.validation.dependOn.ProtocolAgeCategoryCode='ProtocolAgeCategoryCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jvx0MNOaEeKU4pFWxuU9dw" base_Class="_lC10cJ-BEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationNameTemplateId DispatchLocationNameCode DispatchLocationNameValue DispatchLocationNameMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.150' code.code='69466-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch Location Name' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jv-ogNOaEeKU4pFWxuU9dw" base_Class="_sPMP9p-NEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationLatitudeTemplateId DispatchLocationLatitudeCode DispatchLocationLatitudeValue DispatchLocationLatitudeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.151' code.code='52002-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch Location Latitude' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jwK1wNOaEeKU4pFWxuU9dw" base_Class="_UGLMFZ-OEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchLocationLongitudeTemplateId DispatchLocationLongitudeCode DispatchLocationLongitudeValue DispatchLocationLongitudeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.152' code.code='52003-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch Location Longitude' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jwXDANOaEeKU4pFWxuU9dw" base_Class="_9i0HIJ99EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='DispatchDelayTemplateId DispatchDelayCode DispatchDelayCodeP DispatchDelayValue DispatchDelayValueP DispatchDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.153' code.code='67480-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Dispatch delay' constraints.validation.dependOn.DispatchDelayCode='DispatchDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jwwEkNOaEeKU4pFWxuU9dw" base_Class="_pCK4JZ9-EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseDelayTemplateId ResponseDelayCode ResponseDelayCodeP ResponseDelayValue ResponseDelayValueP ResponseDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.154' code.code='67557-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Response delay' constraints.validation.dependOn.ResponseDelayCode='ResponseDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jxH4ANOaEeKU4pFWxuU9dw" base_Class="_Vo79JZ9_EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='SceneDelayTemplateId SceneDelayCode SceneDelayCodeP SceneDelayValue SceneDelayValueP SceneDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.155' code.code='67558-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Scene delay' constraints.validation.dependOn.SceneDelayCode='SceneDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jxgSgNOaEeKU4pFWxuU9dw" base_Class="_4qwhJZ9_EeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TransportDelayTemplateId TransportDelayCode TransportDelayCodeP TransportDelayValue TransportDelayValueP TransportDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.156' code.code='67559-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Transport delay' constraints.validation.dependOn.TransportDelayCode='TransportDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jx5UENOaEeKU4pFWxuU9dw" base_Class="_e7LIFZ-AEeGw9ZRnaFfEZQ">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='TurnaroundDelayTemplateId TurnaroundDelayCode TurnaroundDelayCodeP TurnaroundDelayValue TurnaroundDelayValueP TurnaroundDelayMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.157' code.code='67560-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Turnaround delay' constraints.validation.dependOn.TurnaroundDelayCode='TurnaroundDelayCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jyRukNOaEeKU4pFWxuU9dw" base_Class="_WduLAIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowTotalTemplateId GlasgowTotalCode GlasgowTotalCodeP GlasgowTotalValue GlasgowTotalMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.158' code.code='9269-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.total' constraints.validation.dependOn.GlasgowTotalCode='GlasgowTotalCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jyi0UNOaEeKU4pFWxuU9dw" base_Class="_ZLqX8IzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowQualifierTemplateId GlasgowQualifierCode GlasgowQualifierCodeP GlasgowQualifierMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.159' code.code='55285-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score special circumstances' constraints.validation.dependOn.GlasgowQualifierCode='GlasgowQualifierCodeP' constraints.validation.info='GlasgowQualifierValue' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jyz6ENOaEeKU4pFWxuU9dw" base_Class="_bxS9cIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowEyeTemplateId GlasgowEyeCode GlasgowEyeCodeP GlasgowEyeValue GlasgowEyeMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.160' code.code='9267-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.eye opening' constraints.validation.dependOn.GlasgowEyeCode='GlasgowEyeCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jzFm4NOaEeKU4pFWxuU9dw" base_Class="_eKfCYIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowMotorTemplateId GlasgowMotorCode GlasgowMotorCodeP GlasgowMotorValue GlasgowMotorMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.176' code.code='9268-4' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.motor' constraints.validation.dependOn.GlasgowMotorCode='GlasgowMotorCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jzYh0NOaEeKU4pFWxuU9dw" base_Class="_hLJ-EIzyEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='GlasgowVerbalTemplateId GlasgowVerbalCode GlasgowVerbalCodeP GlasgowVerbalValue GlasgowVerbalMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.162' code.code='9270-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glasgow coma score.verbal' constraints.validation.dependOn.GlasgowVerbalCode='GlasgowVerbalCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_jzqOoNOaEeKU4pFWxuU9dw" base_Class="_9koR4IzuEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='StrokeScoreTemplateId StrokeScoreCode StrokeScoreCodeP StrokeScoreValue StrokeScoreValueP StrokeScoreMethodCode StrokeScoreMethodCodeP StrokeScoreMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.163' code.code='67520-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Stroke scale overall interpretation' constraints.validation.dependOn.StrokeScoreCode='StrokeScoreCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' methodCode.codeSystem='2.16.840.1.113883.6.1' methodCode.codeSystemName='LOINC' constraints.validation.info='StrokeScoreEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j0O2YNOaEeKU4pFWxuU9dw" base_Class="_lnVLQIzuEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='PainScoreTemplateId PainScoreCode PainScoreMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.164' code.code='56840-2' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Pain severity verbal numeric scale' constraints.validation.info='PainScoreEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j0bqsNOaEeKU4pFWxuU9dw" base_Class="_xgaHgIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='LevelOfResponsivenessTemplateId LevelOfResponsivenessCode LevelOfResponsivenessCodeP LevelOfResponsivenessValue LevelOfResponsivenessValueP LevelOfResponsivenessMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.165' code.code='67775-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Level of responsiveness' constraints.validation.dependOn.LevelOfResponsivenessCode='LevelOfResponsivenessCodeP' value.codeSystem='2.16.840.1.113883.6.1' value.codeSystemName='LOINC' constraints.validation.info='LevelOfResponsivenessEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j016YNOaEeKU4pFWxuU9dw" base_Class="_jmDsgIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='BloodGlucoseTemplateId BloodGlucoseCode BloodGlucoseCodeP BloodGlucoseValue BloodGlucoseMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.166' code.code='2339-0' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Glucose' constraints.validation.dependOn.BloodGlucoseCode='BloodGlucoseCodeP' constraints.validation.info='BloodGlucoseEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j1KDcNOaEeKU4pFWxuU9dw" base_Class="_WFit0IztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CarbonMonoxideTemplateId CarbonMonoxideCode CarbonMonoxideCodeP CarbonMonoxideValue CarbonMonoxideMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.167' code.code='19911-7' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Diffusion capacity.carbon monoxide' constraints.validation.dependOn.CarbonMonoxideCode='CarbonMonoxideCodeP' constraints.validation.info='CarbonMonoxideEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j1dlcNOaEeKU4pFWxuU9dw" base_Class="_IU2lIIztEeGnhceUMXltng">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='CarbonDioxideTemplateId CarbonDioxideCode CarbonDioxideCodeP CarbonDioxideValue CarbonDioxideMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.168' code.code='19889-5' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='Carbon dioxide/Gas.total.at end expiration' constraints.validation.dependOn.CarbonDioxideCode='CarbonDioxideCodeP' constraints.validation.info='CarbonDioxideEffectiveTime' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j2k_wNOaEeKU4pFWxuU9dw" base_Class="_k-cIsJ-ZEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseBeginningOdometerReadingTemplateId ResponseBeginningOdometerReadingCode ResponseBeginningOdometerReadingCodeP ResponseBeginningOdometerReadingValue ResponseBeginningOdometerReadingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.171' code.code='67484-6' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response odometer beginning reading' constraints.validation.dependOn.ResponseBeginningOdometerReadingCode='ResponseBeginningOdometerReadingCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j22FgNOaEeKU4pFWxuU9dw" base_Class="_ib1zpZ-aEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseOnSceneOdometerReadingTemplateId ResponseOnSceneOdometerReadingCode ResponseOnSceneOdometerReadingCodeP ResponseOnSceneOdometerReadingValue ResponseOnSceneOdometerReadingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.172' code.code='67485-3' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response odometer on-scene reading' constraints.validation.dependOn.ResponseOnSceneOdometerReadingCode='ResponseOnSceneOdometerReadingCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j3GkMNOaEeKU4pFWxuU9dw" base_Class="_7kghNZ-aEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseDestinationOdometerReadingTemplateId ResponseDestinationOdometerReadingCode ResponseDestinationOdometerReadingCodeP ResponseDestinationOdometerReadingValue ResponseDestinationOdometerReadingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.173' code.code='67486-1' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response odometer destination reading' constraints.validation.dependOn.ResponseDestinationOdometerReadingCode='ResponseDestinationOdometerReadingCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
  <Ecore:EClass xmi:id="_j3XC4NOaEeKU4pFWxuU9dw" base_Class="_TCM6tZ-bEeGorI3CPDW2ww">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation constraints.validation.error='ResponseEndingOdometerReadingTemplateId ResponseEndingOdometerReadingCode ResponseEndingOdometerReadingCodeP ResponseEndingOdometerReadingValue ResponseEndingOdometerReadingMoodCode' templateId.root='2.16.840.1.1133883.17.3.10.1.174' code.code='67487-9' code.codeSystem='2.16.840.1.113883.6.1' code.codeSystemName='LOINC' code.displayName='EMS Response odometer ending reading' constraints.validation.dependOn.ResponseEndingOdometerReadingCode='ResponseEndingOdometerReadingCodeP' moodCode='EVN'</annotation>
  </Ecore:EClass>
</xmi:XMI>
