<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.1" xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:CDA="http://www.openhealthtools.org/mdht/schemas/cda/4" xmlns:Ecore="http://www.eclipse.org/uml2/schemas/Ecore/5" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/3.0.0/UML" xsi:schemaLocation="http://www.eclipse.org/uml2/schemas/Ecore/5 pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA">
  <uml:Package xmi:id="_NtY7BcqHEeC8XvPcqnB3eA" name="toc">
    <packageImport xmi:id="_NwqRMMqHEeC8XvPcqnB3eA">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda/model/cda.uml#_ii81kjxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_NwqRMcqHEeC8XvPcqnB3eA">
      <importedPackage href="../../org.openhealthtools.mdht.uml.hl7.datatypes/model/datatypes.uml#_XgMSwzxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_N_7fAM_nEeCsgagmvl1sKA">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_qQyD8jxVEd6JwqSGecoePg"/>
    </packageImport>
    <packageImport xmi:id="_4V3w4M_nEeCsgagmvl1sKA">
      <importedPackage href="../../org.openhealthtools.mdht.uml.cda.cdt/model/cdt_Ecore.uml#_qQyD8jxVEd6JwqSGecoePg"/>
    </packageImport>
    <packagedElement xmi:type="uml:Class" xmi:id="_NvnvYcqHEeC8XvPcqnB3eA" name="DischargeSummary">
      <ownedRule xmi:id="_g0OKodmOEeC3YOOr9CXJoQ" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g0OxsNmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.2.3.4.5.100')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g3s8cNmOEeC3YOOr9CXJoQ" name="DischargeSummaryAllergiesReactionsSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3s8cdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AllergiesReactionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g3v_wNmOEeC3YOOr9CXJoQ" name="DischargeSummaryProblemListSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3v_wdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ProblemListSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g3zDENmOEeC3YOOr9CXJoQ" name="DischargeSummaryHospitalCourseSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3zDEdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HospitalCourseSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g31fUtmOEeC3YOOr9CXJoQ" name="DischargeSummaryHospitalDischargeMedicationsSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g32GYNmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HospitalDischargeMedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g34iodmOEeC3YOOr9CXJoQ" name="DischargeSummaryDischargeDiagnosisSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g34iotmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::DischargeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g37l8NmOEeC3YOOr9CXJoQ" name="DischargeSummaryPlanOfCareSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g37l8dmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g3-pQNmOEeC3YOOr9CXJoQ" name="DischargeSummaryChiefComplaintSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3-pQdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4BskNmOEeC3YOOr9CXJoQ" name="DischargeSummaryDischargeDiet" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4BskdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ihe::DischargeDiet))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4Ev4NmOEeC3YOOr9CXJoQ" name="DischargeSummaryFamilyHistorySection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4Ev4dmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4HzMNmOEeC3YOOr9CXJoQ" name="DischargeSummaryFunctionalStatusSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4HzMdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4K2gNmOEeC3YOOr9CXJoQ" name="DischargeSummaryHistoryOfPresentIllness" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4K2gdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HistoryOfPresentIllness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4N50NmOEeC3YOOr9CXJoQ" name="DischargeSummaryHospitalDischargePhysical" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4N50dmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ihe::HospitalDischargePhysical))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4Q9INmOEeC3YOOr9CXJoQ" name="DischargeSummaryHospitalDischargeStudiesSummarySection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4Q9IdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cdt::HospitalDischargeStudiesSummarySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4TZYdmOEeC3YOOr9CXJoQ" name="DischargeSummaryImmunizationsSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4UAcNmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4WcsdmOEeC3YOOr9CXJoQ" name="DischargeSummarySurgeriesSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4WcstmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SurgeriesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4ZgANmOEeC3YOOr9CXJoQ" name="DischargeSummaryReviewOfSystemsSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4ZgAdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ReviewOfSystemsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4cjUdmOEeC3YOOr9CXJoQ" name="DischargeSummarySocialHistorySection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4cjUtmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4fmodmOEeC3YOOr9CXJoQ" name="DischargeSummaryVitalSignsSection" constrainedElement="_NvnvYcqHEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4fmotmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_NvnvY8qHEeC8XvPcqnB3eA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.cdt/model/cdt_Ecore.uml#_MwGRIGeLEd-ilOLYnIx0jA"/>
      </generalization>
      <ownedOperation xmi:id="_g3vYsNmOEeC3YOOr9CXJoQ" name="getAllergiesReactionsSection" isQuery="true" bodyCondition="_g3vYs9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g3vYs9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g3vYsNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3vYtNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AllergiesReactionsSection))->asSequence()->first().oclAsType(hitsp::AllergiesReactionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g3vYsdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_VGnj8MfZEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g3vYstmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g3ycANmOEeC3YOOr9CXJoQ" name="getProblemListSection" isQuery="true" bodyCondition="_g3ycA9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g3ycA9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g3ycANmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3ycBNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ProblemListSection))->asSequence()->first().oclAsType(hitsp::ProblemListSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g3ycAdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_cPtREMfaEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g3ycAtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g304QNmOEeC3YOOr9CXJoQ" name="getHospitalCourseSection" isQuery="true" bodyCondition="_g31fUNmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g31fUNmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g304QNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g31fUdmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HospitalCourseSection))->asSequence()->first().oclAsType(hitsp::HospitalCourseSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g304QdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_J1pl8MidEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g304QtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g337kNmOEeC3YOOr9CXJoQ" name="getHospitalDischargeMedicationsSection" isQuery="true" bodyCondition="_g337k9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g337k9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g337kNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g34ioNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HospitalDischargeMedicationsSection))->asSequence()->first().oclAsType(hitsp::HospitalDischargeMedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g337kdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_OORpwMfyEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g337ktmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g36-4NmOEeC3YOOr9CXJoQ" name="getDischargeDiagnosisSection" isQuery="true" bodyCondition="_g36-49mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g36-49mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g36-4NmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g36-5NmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::DischargeDiagnosisSection))->asSequence()->first().oclAsType(hitsp::DischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g36-4dmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_CEsTsMfwEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g36-4tmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g3-CMNmOEeC3YOOr9CXJoQ" name="getPlanOfCareSection" isQuery="true" bodyCondition="_g3-CM9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g3-CM9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g3-CMNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3-CNNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PlanOfCareSection))->asSequence()->first().oclAsType(hitsp::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g3-CMdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_SydBgMigEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g3-CMtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4AecNmOEeC3YOOr9CXJoQ" name="getChiefComplaintSection" isQuery="true" bodyCondition="_g4BFgtmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4BFgtmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4AecNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4BFg9mOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ChiefComplaintSection))->asSequence()->first().oclAsType(hitsp::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4BFgNmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_9ugRMMfcEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4BFgdmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4DhwNmOEeC3YOOr9CXJoQ" name="getDischargeDiet" isQuery="true" bodyCondition="_g4EI0dmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4EI0dmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4DhwNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4EI0tmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ihe::DischargeDiet))->asSequence()->first().oclAsType(ihe::DischargeDiet)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4DhwdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe/model/ihe_Ecore.uml#_nwrzcL4kEeCPGaGuS9U6tg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4EI0NmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4GlENmOEeC3YOOr9CXJoQ" name="getFamilyHistorySection" isQuery="true" bodyCondition="_g4HMINmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4HMINmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4GlENmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4HMIdmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FamilyHistorySection))->asSequence()->first().oclAsType(hitsp::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4GlEdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_4Mh2UMigEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4GlEtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4JoYNmOEeC3YOOr9CXJoQ" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_g4KPcNmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4KPcNmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4JoYNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4KPcdmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FunctionalStatusSection))->asSequence()->first().oclAsType(hitsp::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4JoYdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_m5tlkMfuEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4JoYtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4MrsNmOEeC3YOOr9CXJoQ" name="getHistoryOfPresentIllness" isQuery="true" bodyCondition="_g4NSwdmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4NSwdmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4MrsNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4NSwtmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HistoryOfPresentIllness))->asSequence()->first().oclAsType(hitsp::HistoryOfPresentIllness)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4MrsdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_w51SkMfhEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4NSwNmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4PvANmOEeC3YOOr9CXJoQ" name="getHospitalDischargePhysical" isQuery="true" bodyCondition="_g4QWEdmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4QWEdmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4PvANmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4QWEtmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(ihe::HospitalDischargePhysical))->asSequence()->first().oclAsType(ihe::HospitalDischargePhysical)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4PvAdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.ihe/model/ihe_Ecore.uml#_dw0bkL4lEeCPGaGuS9U6tg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4QWENmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4SyUNmOEeC3YOOr9CXJoQ" name="getHospitalDischargeStudiesSummarySection" isQuery="true" bodyCondition="_g4SyU9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4SyU9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4SyUNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4TZYNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cdt::HospitalDischargeStudiesSummarySection))->asSequence()->first().oclAsType(cdt::HospitalDischargeStudiesSummarySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4SyUdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.cdt/model/cdt_Ecore.uml#_Kp2O0M_5EeCiuL16epi04A"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4SyUtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4V1oNmOEeC3YOOr9CXJoQ" name="getImmunizationsSection" isQuery="true" bodyCondition="_g4V1o9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4V1o9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4V1oNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4WcsNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ImmunizationsSection))->asSequence()->first().oclAsType(hitsp::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4V1odmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_gHDXQMf0Ed6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4V1otmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4Y48NmOEeC3YOOr9CXJoQ" name="getSurgeriesSection" isQuery="true" bodyCondition="_g4Y489mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4Y489mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4Y48NmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4Y49NmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SurgeriesSection))->asSequence()->first().oclAsType(hitsp::SurgeriesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4Y48dmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_OCM5cMfuEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4Y48tmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4b8QNmOEeC3YOOr9CXJoQ" name="getReviewOfSystemsSection" isQuery="true" bodyCondition="_g4b8Q9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4b8Q9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4b8QNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4cjUNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ReviewOfSystemsSection))->asSequence()->first().oclAsType(hitsp::ReviewOfSystemsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4b8QdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_GuZI0MiXEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4b8QtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4e_kNmOEeC3YOOr9CXJoQ" name="getSocialHistorySection" isQuery="true" bodyCondition="_g4e_k9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4e_k9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4e_kNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4fmoNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SocialHistorySection))->asSequence()->first().oclAsType(hitsp::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4e_kdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_-ujjcMihEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4e_ktmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4iC4NmOEeC3YOOr9CXJoQ" name="getVitalSignsSection" isQuery="true" bodyCondition="_g4iC49mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4iC49mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4iC4NmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4iC5NmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::VitalSignsSection))->asSequence()->first().oclAsType(hitsp::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4iC4dmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_L9yGgK7HEd6_ioDelDcPPg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4iC4tmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_zYJIgMqKEeC8XvPcqnB3eA" name="DischargeInstructions">
      <ownedRule xmi:id="_g1CC8NmOEeC3YOOr9CXJoQ" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_zYJIgMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g1CC8dmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.2.3.4.5.101')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4ip8NmOEeC3YOOr9CXJoQ" name="DischargeInstructionsPlanOfCareSection" constrainedElement="_zYJIgMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4ip8dmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4ltQNmOEeC3YOOr9CXJoQ" name="DischargeInstructionsAllergiesReactionsSection" constrainedElement="_zYJIgMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4ltQdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AllergiesReactionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4owkNmOEeC3YOOr9CXJoQ" name="DischargeInstructionsProblemListSection" constrainedElement="_zYJIgMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4owkdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ProblemListSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4rM0tmOEeC3YOOr9CXJoQ" name="DischargeInstructionsDischargeDiagnosisSection" constrainedElement="_zYJIgMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4rz4NmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::DischargeDiagnosisSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4uQINmOEeC3YOOr9CXJoQ" name="DischargeInstructionsAdvanceDirectivesSection" constrainedElement="_zYJIgMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4uQIdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4xTcNmOEeC3YOOr9CXJoQ" name="DischargeInstructionsImmunizationsSection" constrainedElement="_zYJIgMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4xTcdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g40WwNmOEeC3YOOr9CXJoQ" name="DischargeInstructionsMedicalEquipmentSection" constrainedElement="_zYJIgMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g40WwdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicalEquipmentSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_zYJIgcqKEeC8XvPcqnB3eA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.cdt/model/cdt_Ecore.uml#_MwGRIGeLEd-ilOLYnIx0jA"/>
      </generalization>
      <ownedOperation xmi:id="_g4lGMNmOEeC3YOOr9CXJoQ" name="getPlanOfCareSection" isQuery="true" bodyCondition="_g4lGM9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4lGM9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4lGMNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4lGNNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PlanOfCareSection))->asSequence()->first().oclAsType(hitsp::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4lGMdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_SydBgMigEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4lGMtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4oJgNmOEeC3YOOr9CXJoQ" name="getAllergiesReactionsSection" isQuery="true" bodyCondition="_g4oJg9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4oJg9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4oJgNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4oJhNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AllergiesReactionsSection))->asSequence()->first().oclAsType(hitsp::AllergiesReactionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4oJgdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_VGnj8MfZEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4oJgtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4qlwNmOEeC3YOOr9CXJoQ" name="getProblemListSection" isQuery="true" bodyCondition="_g4rM0NmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4rM0NmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4qlwNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4rM0dmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ProblemListSection))->asSequence()->first().oclAsType(hitsp::ProblemListSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4qlwdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_cPtREMfaEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4qlwtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4tpENmOEeC3YOOr9CXJoQ" name="getDischargeDiagnosisSection" isQuery="true" bodyCondition="_g4tpE9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4tpE9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4tpENmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4tpFNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::DischargeDiagnosisSection))->asSequence()->first().oclAsType(hitsp::DischargeDiagnosisSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4tpEdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_CEsTsMfwEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4tpEtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4wsYNmOEeC3YOOr9CXJoQ" name="getAdvanceDirectivesSection" isQuery="true" bodyCondition="_g4wsY9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4wsY9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4wsYNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4wsZNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AdvanceDirectivesSection))->asSequence()->first().oclAsType(hitsp::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4wsYdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_uIr7cMfzEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4wsYtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4zIoNmOEeC3YOOr9CXJoQ" name="getImmunizationsSection" isQuery="true" bodyCondition="_g4zvstmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4zvstmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4zIoNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4zvs9mOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ImmunizationsSection))->asSequence()->first().oclAsType(hitsp::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4zvsNmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_gHDXQMf0Ed6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4zvsdmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g42zANmOEeC3YOOr9CXJoQ" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_g42zA9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g42zA9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g42zANmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g42zBNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicalEquipmentSection))->asSequence()->first().oclAsType(hitsp::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g42zAdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_d9cy8MijEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g42zAtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_-FsQUMqKEeC8XvPcqnB3eA" name="ConsultationSummary">
      <ownedRule xmi:id="_g2L5gdmOEeC3YOOr9CXJoQ" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g2L5gtmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.2.3.4.5.102')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g43aENmOEeC3YOOr9CXJoQ" name="ConsultationSummaryAllergiesReactionsSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g43aEdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AllergiesReactionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g46dYNmOEeC3YOOr9CXJoQ" name="ConsultationSummaryMedicationsSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g46dYdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g485oNmOEeC3YOOr9CXJoQ" name="ConsultationSummaryProblemListSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g485odmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ProblemListSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g4_88NmOEeC3YOOr9CXJoQ" name="ConsultationSummarySurgeriesSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4_88dmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SurgeriesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5DAQNmOEeC3YOOr9CXJoQ" name="ConsultationSummaryDiagnosticResultsSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5DAQdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::DiagnosticResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5GDkNmOEeC3YOOr9CXJoQ" name="ConsultationSummaryAdvanceDirectivesSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5GDkdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5JG4NmOEeC3YOOr9CXJoQ" name="ConsultationSummaryEncountersSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5JG4dmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::EncountersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5MKMNmOEeC3YOOr9CXJoQ" name="ConsultationSummaryFamilyHistorySection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5MKMdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5OmcdmOEeC3YOOr9CXJoQ" name="ConsultationSummaryFunctionalStatusSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5PNgNmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5RpwdmOEeC3YOOr9CXJoQ" name="ConsultationSummaryImmunizationsSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5RpwtmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5UtENmOEeC3YOOr9CXJoQ" name="ConsultationSummaryMedicalEquipmentSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5UtEdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicalEquipmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5XwYNmOEeC3YOOr9CXJoQ" name="ConsultationSummaryPayersSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5XwYdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PayersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5azsNmOEeC3YOOr9CXJoQ" name="ConsultationSummaryPlanOfCareSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5azsdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5d3ANmOEeC3YOOr9CXJoQ" name="ConsultationSummarySocialHistorySection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5d3AdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5g6UNmOEeC3YOOr9CXJoQ" name="ConsultationSummaryVitalSignsSection" constrainedElement="_-FsQUMqKEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5g6UdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_-FsQUcqKEeC8XvPcqnB3eA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.cdt/model/cdt_Ecore.uml#_MwGRIGeLEd-ilOLYnIx0jA"/>
      </generalization>
      <ownedOperation xmi:id="_g45PQNmOEeC3YOOr9CXJoQ" name="getAllergiesReactionsSection" isQuery="true" bodyCondition="_g452UNmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g452UNmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g45PQNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g452UdmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AllergiesReactionsSection))->asSequence()->first().oclAsType(hitsp::AllergiesReactionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g45PQdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_VGnj8MfZEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g45PQtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g48SkNmOEeC3YOOr9CXJoQ" name="getMedicationsSection" isQuery="true" bodyCondition="_g48Sk9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g48Sk9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g48SkNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g48SlNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicationsSection))->asSequence()->first().oclAsType(hitsp::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g48SkdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_WI3zsMfwEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g48SktmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g4_V4NmOEeC3YOOr9CXJoQ" name="getProblemListSection" isQuery="true" bodyCondition="_g4_V49mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g4_V49mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g4_V4NmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g4_V5NmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ProblemListSection))->asSequence()->first().oclAsType(hitsp::ProblemListSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g4_V4dmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_cPtREMfaEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g4_V4tmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5CZMNmOEeC3YOOr9CXJoQ" name="getSurgeriesSection" isQuery="true" bodyCondition="_g5CZM9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5CZM9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5CZMNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5CZNNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SurgeriesSection))->asSequence()->first().oclAsType(hitsp::SurgeriesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5CZMdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_OCM5cMfuEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5CZMtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5E1cNmOEeC3YOOr9CXJoQ" name="getDiagnosticResultsSection" isQuery="true" bodyCondition="_g5FcgdmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5FcgdmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5E1cNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5FcgtmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::DiagnosticResultsSection))->asSequence()->first().oclAsType(hitsp::DiagnosticResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5E1cdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_P3GVkMieEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5FcgNmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5H4wNmOEeC3YOOr9CXJoQ" name="getAdvanceDirectivesSection" isQuery="true" bodyCondition="_g5If0NmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5If0NmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5H4wNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5If0dmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AdvanceDirectivesSection))->asSequence()->first().oclAsType(hitsp::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5H4wdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_uIr7cMfzEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5H4wtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5K8ENmOEeC3YOOr9CXJoQ" name="getEncountersSection" isQuery="true" bodyCondition="_g5K8E9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5K8E9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5K8ENmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5LjINmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::EncountersSection))->asSequence()->first().oclAsType(hitsp::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5K8EdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_F4b6wMijEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5K8EtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5N_YNmOEeC3YOOr9CXJoQ" name="getFamilyHistorySection" isQuery="true" bodyCondition="_g5N_Y9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5N_Y9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5N_YNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5OmcNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FamilyHistorySection))->asSequence()->first().oclAsType(hitsp::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5N_YdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_4Mh2UMigEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5N_YtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5RCsNmOEeC3YOOr9CXJoQ" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_g5RCs9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5RCs9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5RCsNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5RpwNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FunctionalStatusSection))->asSequence()->first().oclAsType(hitsp::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5RCsdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_m5tlkMfuEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5RCstmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5UGANmOEeC3YOOr9CXJoQ" name="getImmunizationsSection" isQuery="true" bodyCondition="_g5UGA9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5UGA9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5UGANmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5UGBNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ImmunizationsSection))->asSequence()->first().oclAsType(hitsp::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5UGAdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_gHDXQMf0Ed6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5UGAtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5XJUNmOEeC3YOOr9CXJoQ" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_g5XJU9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5XJU9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5XJUNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5XJVNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicalEquipmentSection))->asSequence()->first().oclAsType(hitsp::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5XJUdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_d9cy8MijEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5XJUtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5aMoNmOEeC3YOOr9CXJoQ" name="getPayersSection" isQuery="true" bodyCondition="_g5aMo9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5aMo9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5aMoNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5aMpNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PayersSection))->asSequence()->first().oclAsType(hitsp::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5aModmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_DH404MfWEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5aMotmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5dP8NmOEeC3YOOr9CXJoQ" name="getPlanOfCareSection" isQuery="true" bodyCondition="_g5dP89mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5dP89mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5dP8NmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5dP9NmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PlanOfCareSection))->asSequence()->first().oclAsType(hitsp::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5dP8dmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_SydBgMigEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5dP8tmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5gTQNmOEeC3YOOr9CXJoQ" name="getSocialHistorySection" isQuery="true" bodyCondition="_g5gTQ9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5gTQ9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5gTQNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5gTRNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SocialHistorySection))->asSequence()->first().oclAsType(hitsp::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5gTQdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_-ujjcMihEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5gTQtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5jWkNmOEeC3YOOr9CXJoQ" name="getVitalSignsSection" isQuery="true" bodyCondition="_g5jWk9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5jWk9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5jWkNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5jWlNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::VitalSignsSection))->asSequence()->first().oclAsType(hitsp::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5jWkdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_L9yGgK7HEd6_ioDelDcPPg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5jWktmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_BF55AMqLEeC8XvPcqnB3eA" name="ConsultationRequest">
      <ownedRule xmi:id="_g3orAdmOEeC3YOOr9CXJoQ" name="GeneralHeaderConstraintsTemplateId" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g3pSENmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.templateId->exists(id : datatypes::II | id.root = '1.2.3.4.5.103')</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5j9oNmOEeC3YOOr9CXJoQ" name="ConsultationRequestAllergiesReactionsSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5j9odmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AllergiesReactionsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5mZ4dmOEeC3YOOr9CXJoQ" name="ConsultationRequestMedicationsSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5nA8NmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5pdMNmOEeC3YOOr9CXJoQ" name="ConsultationRequestProblemListSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5pdMdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ProblemListSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5sggNmOEeC3YOOr9CXJoQ" name="ConsultationRequestSurgeriesSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5sggdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SurgeriesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5vj0NmOEeC3YOOr9CXJoQ" name="ConsultationRequestDiagnosticResultsSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5vj0dmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::DiagnosticResultsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5yAEdmOEeC3YOOr9CXJoQ" name="ConsultationRequestAdvanceDirectivesSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5yAEtmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AdvanceDirectivesSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g51DYNmOEeC3YOOr9CXJoQ" name="ConsultationRequestAssessmentAndPlanSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g51DYdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AssessmentAndPlanSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g54GsNmOEeC3YOOr9CXJoQ" name="ConsultationRequestHistoryOfPresentIllness" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g54GsdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HistoryOfPresentIllness))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g57KANmOEeC3YOOr9CXJoQ" name="ConsultationRequestPhysicalExamSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g57KAdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PhysicalExamSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g5-NUNmOEeC3YOOr9CXJoQ" name="ConsultationRequestReasonForReferralSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5-NUdmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ReasonForReferralSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6ApkdmOEeC3YOOr9CXJoQ" name="ConsultationRequestEncountersSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6ApktmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::EncountersSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6Ds4NmOEeC3YOOr9CXJoQ" name="ConsultationRequestFamilyHistorySection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6Ds4dmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FamilyHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6GwMNmOEeC3YOOr9CXJoQ" name="ConsultationRequestFunctionalStatusSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6HXQNmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FunctionalStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6ntldmOEeC3YOOr9CXJoQ" name="ConsultationRequestImmunizationsSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6ntltmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ImmunizationsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6ntnNmOEeC3YOOr9CXJoQ" name="ConsultationRequestMedicalEquipmentSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6ntndmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicalEquipmentSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6nto9mOEeC3YOOr9CXJoQ" name="ConsultationRequestPlanOfCareSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6ntpNmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PlanOfCareSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6xeldmOEeC3YOOr9CXJoQ" name="ConsultationRequestSocialHistorySection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6xeltmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SocialHistorySection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6xenNmOEeC3YOOr9CXJoQ" name="ConsultationRequestVitalSignsSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6xendmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::VitalSignsSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g6xeo9mOEeC3YOOr9CXJoQ" name="ConsultationRequestChiefComplaintSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6xepNmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ChiefComplaintSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g67Pk9mOEeC3YOOr9CXJoQ" name="ConsultationRequestGeneralStatusSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g67PlNmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cdt::GeneralStatusSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g67PmtmOEeC3YOOr9CXJoQ" name="ConsultationRequestHistoryOfPastIllnessSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g67Pm9mOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HistoryOfPastIllnessSection))</body>
        </specification>
      </ownedRule>
      <ownedRule xmi:id="_g67PodmOEeC3YOOr9CXJoQ" name="ConsultationRequestPayersSection" constrainedElement="_BF55AMqLEeC8XvPcqnB3eA">
        <specification xmi:type="uml:OpaqueExpression" xmi:id="_g67PotmOEeC3YOOr9CXJoQ">
          <language>OCL</language>
          <body>self.getAllSections()->one(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PayersSection))</body>
        </specification>
      </ownedRule>
      <generalization xmi:id="_BF55AcqLEeC8XvPcqnB3eA">
        <general xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.cdt/model/cdt_Ecore.uml#_MwGRIGeLEd-ilOLYnIx0jA"/>
      </generalization>
      <ownedOperation xmi:id="_g5ly0NmOEeC3YOOr9CXJoQ" name="getAllergiesReactionsSection" isQuery="true" bodyCondition="_g5ly09mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5ly09mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5ly0NmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5mZ4NmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AllergiesReactionsSection))->asSequence()->first().oclAsType(hitsp::AllergiesReactionsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5ly0dmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_VGnj8MfZEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5ly0tmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5o2INmOEeC3YOOr9CXJoQ" name="getMedicationsSection" isQuery="true" bodyCondition="_g5o2I9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5o2I9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5o2INmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5o2JNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicationsSection))->asSequence()->first().oclAsType(hitsp::MedicationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5o2IdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_WI3zsMfwEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5o2ItmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5r5cNmOEeC3YOOr9CXJoQ" name="getProblemListSection" isQuery="true" bodyCondition="_g5r5c9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5r5c9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5r5cNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5r5dNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ProblemListSection))->asSequence()->first().oclAsType(hitsp::ProblemListSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5r5cdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_cPtREMfaEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5r5ctmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5uVsNmOEeC3YOOr9CXJoQ" name="getSurgeriesSection" isQuery="true" bodyCondition="_g5u8wtmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5u8wtmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5uVsNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5u8w9mOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SurgeriesSection))->asSequence()->first().oclAsType(hitsp::SurgeriesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5u8wNmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_OCM5cMfuEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5u8wdmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5xZANmOEeC3YOOr9CXJoQ" name="getDiagnosticResultsSection" isQuery="true" bodyCondition="_g5xZA9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g5xZA9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5xZANmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g5yAENmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::DiagnosticResultsSection))->asSequence()->first().oclAsType(hitsp::DiagnosticResultsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g5xZAdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_P3GVkMieEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g5xZAtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g50cUNmOEeC3YOOr9CXJoQ" name="getAdvanceDirectivesSection" isQuery="true" bodyCondition="_g50cU9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g50cU9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g50cUNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g50cVNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AdvanceDirectivesSection))->asSequence()->first().oclAsType(hitsp::AdvanceDirectivesSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g50cUdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_uIr7cMfzEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g50cUtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g53foNmOEeC3YOOr9CXJoQ" name="getAssessmentAndPlanSection" isQuery="true" bodyCondition="_g53fo9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g53fo9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g53foNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g53fpNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::AssessmentAndPlanSection))->asSequence()->first().oclAsType(hitsp::AssessmentAndPlanSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g53fodmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_ml82oMifEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g53fotmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g5574NmOEeC3YOOr9CXJoQ" name="getHistoryOfPresentIllness" isQuery="true" bodyCondition="_g56i8tmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g56i8tmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g5574NmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g56i89mOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HistoryOfPresentIllness))->asSequence()->first().oclAsType(hitsp::HistoryOfPresentIllness)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g56i8NmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_w51SkMfhEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g56i8dmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g58_MNmOEeC3YOOr9CXJoQ" name="getPhysicalExamSection" isQuery="true" bodyCondition="_g59mQNmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g59mQNmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g58_MNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g59mQdmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PhysicalExamSection))->asSequence()->first().oclAsType(hitsp::PhysicalExamSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g58_MdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_XaZ6wMf1Ed6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g58_MtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6ACgNmOEeC3YOOr9CXJoQ" name="getReasonForReferralSection" isQuery="true" bodyCondition="_g6ACg9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g6ACg9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6ACgNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6ApkNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ReasonForReferralSection))->asSequence()->first().oclAsType(hitsp::ReasonForReferralSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6ACgdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_bX2UoMfdEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g6ACgtmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6DF0NmOEeC3YOOr9CXJoQ" name="getEncountersSection" isQuery="true" bodyCondition="_g6DF09mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g6DF09mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6DF0NmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6DF1NmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::EncountersSection))->asSequence()->first().oclAsType(hitsp::EncountersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6DF0dmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_F4b6wMijEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g6DF0tmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6GJINmOEeC3YOOr9CXJoQ" name="getFamilyHistorySection" isQuery="true" bodyCondition="_g6GJI9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g6GJI9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6GJINmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6GJJNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FamilyHistorySection))->asSequence()->first().oclAsType(hitsp::FamilyHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6GJIdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_4Mh2UMigEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g6GJItmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6ntkNmOEeC3YOOr9CXJoQ" name="getFunctionalStatusSection" isQuery="true" bodyCondition="_g6ntk9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g6ntk9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6ntkNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6ntlNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::FunctionalStatusSection))->asSequence()->first().oclAsType(hitsp::FunctionalStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6ntkdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_m5tlkMfuEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g6ntktmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6ntl9mOEeC3YOOr9CXJoQ" name="getImmunizationsSection" isQuery="true" bodyCondition="_g6ntmtmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g6ntmtmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6ntl9mOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6ntm9mOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ImmunizationsSection))->asSequence()->first().oclAsType(hitsp::ImmunizationsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6ntmNmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_gHDXQMf0Ed6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g6ntmdmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6ntntmOEeC3YOOr9CXJoQ" name="getMedicalEquipmentSection" isQuery="true" bodyCondition="_g6ntodmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g6ntodmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6ntntmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6ntotmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::MedicalEquipmentSection))->asSequence()->first().oclAsType(hitsp::MedicalEquipmentSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6ntn9mOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_d9cy8MijEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g6ntoNmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6xekNmOEeC3YOOr9CXJoQ" name="getPlanOfCareSection" isQuery="true" bodyCondition="_g6xek9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g6xek9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6xekNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6xelNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PlanOfCareSection))->asSequence()->first().oclAsType(hitsp::PlanOfCareSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6xekdmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_SydBgMigEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g6xektmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6xel9mOEeC3YOOr9CXJoQ" name="getSocialHistorySection" isQuery="true" bodyCondition="_g6xemtmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g6xemtmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6xel9mOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6xem9mOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::SocialHistorySection))->asSequence()->first().oclAsType(hitsp::SocialHistorySection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6xemNmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_-ujjcMihEd6mWrHPmrIIfQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g6xemdmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6xentmOEeC3YOOr9CXJoQ" name="getVitalSignsSection" isQuery="true" bodyCondition="_g6xeodmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g6xeodmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6xentmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g6xeotmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::VitalSignsSection))->asSequence()->first().oclAsType(hitsp::VitalSignsSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6xen9mOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_L9yGgK7HEd6_ioDelDcPPg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g6xeoNmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g6xepdmOEeC3YOOr9CXJoQ" name="getChiefComplaintSection" isQuery="true" bodyCondition="_g67PkdmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g67PkdmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g6xepdmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g67PktmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::ChiefComplaintSection))->asSequence()->first().oclAsType(hitsp::ChiefComplaintSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g6xeptmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_9ugRMMfcEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g67PkNmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g67PldmOEeC3YOOr9CXJoQ" name="getGeneralStatusSection" isQuery="true" bodyCondition="_g67PmNmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g67PmNmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g67PldmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g67PmdmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(cdt::GeneralStatusSection))->asSequence()->first().oclAsType(cdt::GeneralStatusSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g67PltmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.cdt/model/cdt_Ecore.uml#_Y_l8QGjdEd-tUpkWYQgJlQ"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g67Pl9mOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g67PnNmOEeC3YOOr9CXJoQ" name="getHistoryOfPastIllnessSection" isQuery="true" bodyCondition="_g67Pn9mOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g67Pn9mOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g67PnNmOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g67PoNmOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::HistoryOfPastIllnessSection))->asSequence()->first().oclAsType(hitsp::HistoryOfPastIllnessSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g67PndmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_lSC-0MfbEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g67PntmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
      <ownedOperation xmi:id="_g67Po9mOEeC3YOOr9CXJoQ" name="getPayersSection" isQuery="true" bodyCondition="_g67PptmOEeC3YOOr9CXJoQ">
        <ownedRule xmi:id="_g67PptmOEeC3YOOr9CXJoQ" name="body" constrainedElement="_g67Po9mOEeC3YOOr9CXJoQ">
          <specification xmi:type="uml:OpaqueExpression" xmi:id="_g67Pp9mOEeC3YOOr9CXJoQ">
            <language>OCL</language>
            <body>self.getAllSections()->select(section : cda::Section | not section.oclIsUndefined() and section.oclIsKindOf(hitsp::PayersSection))->asSequence()->first().oclAsType(hitsp::PayersSection)</body>
          </specification>
        </ownedRule>
        <ownedParameter xmi:id="_g67PpNmOEeC3YOOr9CXJoQ" direction="return">
          <type xmi:type="uml:Class" href="../../org.openhealthtools.mdht.uml.cda.hitsp/model/hitsp_Ecore.uml#_DH404MfWEd6VjLXh4DcWSg"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_g67PpdmOEeC3YOOr9CXJoQ" value="1"/>
        </ownedParameter>
      </ownedOperation>
    </packagedElement>
    <profileApplication xmi:id="_NtY7DsqHEeC8XvPcqnB3eA">
      <eAnnotations xmi:id="_NtY7D8qHEeC8XvPcqnB3eA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Standard.profile.uml#_yzU58YinEdqtvbnfB2L_5w"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
    <profileApplication xmi:id="_NtY7EMqHEeC8XvPcqnB3eA">
      <eAnnotations xmi:id="_NtY7EcqHEeC8XvPcqnB3eA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.openhealthtools.org/mdht/schemas/cda/4#/"/>
      </eAnnotations>
      <appliedProfile href="pathmap://CDA_PROFILES/CDA.profile.uml#_cxOJEIEVEd6H8o-hO3-B4Q"/>
    </profileApplication>
    <profileApplication xmi:id="_gy24sNmOEeC3YOOr9CXJoQ">
      <eAnnotations xmi:id="_gy24sdmOEeC3YOOr9CXJoQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UML_PROFILES/Ecore.profile.uml#_z1OFcHjqEdy8S4Cr8Rc_NA"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UML_PROFILES/Ecore.profile.uml#_0"/>
    </profileApplication>
  </uml:Package>
  <CDA:CodegenSupport xmi:id="_NvnvYMqHEeC8XvPcqnB3eA" basePackage="org.openhealthtools.mdht.uml.cda" nsPrefix="toc" nsURI="http://www.openhealthtools.org/mdht/uml/cda/toc" packageName="toc" prefix="ToC" base_Namespace="_NtY7BcqHEeC8XvPcqnB3eA"/>
  <CDA:CDATemplate xmi:id="_NvnvYsqHEeC8XvPcqnB3eA" base_Class="_NvnvYcqHEeC8XvPcqnB3eA" templateId="1.2.3.4.5.100" assigningAuthorityName=""/>
  <CDA:CDATemplate xmi:id="_QWTg8MqLEeC8XvPcqnB3eA" base_Class="_zYJIgMqKEeC8XvPcqnB3eA" templateId="1.2.3.4.5.101"/>
  <CDA:CDATemplate xmi:id="_Rwm7wMqLEeC8XvPcqnB3eA" base_Class="_-FsQUMqKEeC8XvPcqnB3eA" templateId="1.2.3.4.5.102"/>
  <CDA:CDATemplate xmi:id="_Td9OYMqLEeC8XvPcqnB3eA" base_Class="_BF55AMqLEeC8XvPcqnB3eA" templateId="1.2.3.4.5.103"/>
  <Ecore:EPackage xmi:id="_gy7xMNmOEeC3YOOr9CXJoQ" base_Package="_NtY7BcqHEeC8XvPcqnB3eA" packageName="toc" nsPrefix="toc" nsURI="http://www.openhealthtools.org/mdht/uml/cda/toc" basePackage="org.openhealthtools.mdht.uml.cda" prefix="ToC"/>
  <CDA:ConformsTo xmi:id="_g0OKoNmOEeC3YOOr9CXJoQ" base_Generalization="_NvnvY8qHEeC8XvPcqnB3eA"/>
  <Ecore:EClass xmi:id="_g0PYwNmOEeC3YOOr9CXJoQ" base_Class="_NvnvYcqHEeC8XvPcqnB3eA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='1.2.3.4.5.100' constraints.validation.error='DischargeSummaryTemplateId DischargeSummaryAllergiesReactionsSection DischargeSummaryProblemListSection DischargeSummaryHospitalCourseSection DischargeSummaryHospitalDischargeMedicationsSection DischargeSummaryDischargeDiagnosisSection DischargeSummaryPlanOfCareSection' constraints.validation.warning='DischargeSummaryChiefComplaintSection DischargeSummaryDischargeDiet DischargeSummaryFamilyHistorySection DischargeSummaryFunctionalStatusSection DischargeSummaryHistoryOfPresentIllness DischargeSummaryHospitalDischargePhysical DischargeSummaryHospitalDischargeStudiesSummarySection DischargeSummaryImmunizationsSection DischargeSummarySurgeriesSection DischargeSummaryReviewOfSystemsSection DischargeSummarySocialHistorySection DischargeSummaryVitalSignsSection'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_g1Bb4tmOEeC3YOOr9CXJoQ" base_Generalization="_zYJIgcqKEeC8XvPcqnB3eA"/>
  <Ecore:EClass xmi:id="_g1DRENmOEeC3YOOr9CXJoQ" base_Class="_zYJIgMqKEeC8XvPcqnB3eA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='1.2.3.4.5.101' constraints.validation.error='DischargeInstructionsTemplateId DischargeInstructionsPlanOfCareSection DischargeInstructionsAllergiesReactionsSection DischargeInstructionsProblemListSection DischargeInstructionsDischargeDiagnosisSection DischargeInstructionsAdvanceDirectivesSection DischargeInstructionsImmunizationsSection DischargeInstructionsMedicalEquipmentSection'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_g2L5gNmOEeC3YOOr9CXJoQ" base_Generalization="_-FsQUcqKEeC8XvPcqnB3eA"/>
  <Ecore:EClass xmi:id="_g2NHoNmOEeC3YOOr9CXJoQ" base_Class="_-FsQUMqKEeC8XvPcqnB3eA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='1.2.3.4.5.102' constraints.validation.error='ConsultationSummaryTemplateId ConsultationSummaryAllergiesReactionsSection ConsultationSummaryMedicationsSection ConsultationSummaryProblemListSection ConsultationSummarySurgeriesSection ConsultationSummaryDiagnosticResultsSection' constraints.validation.warning='ConsultationSummaryAdvanceDirectivesSection ConsultationSummaryEncountersSection ConsultationSummaryFamilyHistorySection ConsultationSummaryFunctionalStatusSection ConsultationSummaryImmunizationsSection ConsultationSummaryMedicalEquipmentSection ConsultationSummaryPayersSection ConsultationSummaryPlanOfCareSection ConsultationSummarySocialHistorySection ConsultationSummaryVitalSignsSection'</annotation>
  </Ecore:EClass>
  <CDA:ConformsTo xmi:id="_g3orANmOEeC3YOOr9CXJoQ" base_Generalization="_BF55AcqLEeC8XvPcqnB3eA"/>
  <Ecore:EClass xmi:id="_g3p5INmOEeC3YOOr9CXJoQ" base_Class="_BF55AMqLEeC8XvPcqnB3eA">
    <annotation>http://www.openhealthtools.org/mdht/uml/cda/annotation templateId.root='1.2.3.4.5.103' constraints.validation.error='ConsultationRequestTemplateId ConsultationRequestAllergiesReactionsSection ConsultationRequestMedicationsSection ConsultationRequestProblemListSection ConsultationRequestSurgeriesSection ConsultationRequestDiagnosticResultsSection ConsultationRequestAdvanceDirectivesSection' constraints.validation.warning='ConsultationRequestAssessmentAndPlanSection ConsultationRequestHistoryOfPresentIllness ConsultationRequestPhysicalExamSection ConsultationRequestReasonForReferralSection ConsultationRequestEncountersSection ConsultationRequestFamilyHistorySection ConsultationRequestFunctionalStatusSection ConsultationRequestImmunizationsSection ConsultationRequestMedicalEquipmentSection ConsultationRequestPlanOfCareSection ConsultationRequestSocialHistorySection ConsultationRequestVitalSignsSection ConsultationRequestChiefComplaintSection ConsultationRequestGeneralStatusSection ConsultationRequestHistoryOfPastIllnessSection ConsultationRequestPayersSection'</annotation>
  </Ecore:EClass>
</xmi:XMI>
